{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2013-10-21-tinkerer-md-189dabc3da61765b709c.js","mappings":"+JAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,WAAY,eACXC,EAAAA,EAAAA,MAAsBN,EAAMO,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,iFAAkF,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,iCAAkC,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,6BAA8B,KAAMI,EAAAA,cAAoBP,EAAYI,WAAY,KAAM,KAAMG,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,yDAA0D,MAAO,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,SAAU,KAAMI,EAAAA,cAAoBP,EAAYI,WAAY,KAAM,KAAMG,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,yEAA0E,MAAO,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,+CAAkD,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,sIAAuI,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,uCAAwC,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,kDAAmD,KAAMI,EAAAA,cAAoBP,EAAYI,WAAY,KAAM,KAAMG,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,8NAAiO,MAAO,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,mDAAoD,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,kMAAmM,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,iKAAkK,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,kGAAmG,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,wfAC3uE,CAKA,MAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOS,QAASC,GAAaR,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWV,EAAOQ,EAAAA,cAAoBT,EAAmBC,IAAUD,EAAkBC,EAC9H,E,oBCPA,MAAMO,EAAa,CACjBI,KAAMC,IAA2B,IAA1B,SAACC,EAAQ,UAAEC,GAAUF,EAC1B,OAAOE,EAAYN,EAAAA,cAAoBO,EAAAA,EAAsB,CAC3DD,UAAWA,GACVD,GAAYL,EAAAA,cAAoB,OAAQ,KAAMK,EAAS,GAG9D,SAASG,EAAYC,GAAmB,IAAlB,KAACC,EAAI,SAAEL,GAASI,EACpC,OAAOT,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoB,KAAM,KAAMU,EAAKC,IAAIC,YAAYC,OAAQb,EAAAA,cAAoBc,EAAAA,GAAa,CAC7If,WAAYA,GACXM,GACL,CACe,SAASU,EAAiBvB,GACvC,OAAOQ,EAAAA,cAAoBQ,EAAchB,EAAOQ,EAAAA,cAAoBgB,EAAqBxB,GAC3F,C","sources":["webpack:///./content/posts/2013/10/21/tinkerer.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    blockquote: \"blockquote\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Tinkererに引越し\\nOctpressが手に負えなくなってきたので手軽に使えそうな\\ntinkererに引越しというかシステムを変更することにした。\"), \"\\n\", React.createElement(_components.p, null, \"http://tinkerer.me/index.html\"), \"\\n\", React.createElement(_components.p, null, \"以下作業手順メモ。\\ntinkererインストール\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"python --version\\nPython 3.3.0\\neasy_install tinkerer\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"サイト生成\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"mkdir pages_src\\npages_src> tinkerer --setup\\npages_src> gvim conf.py\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"記事生成\\npages_src> tinkerer --post \\\"tinkerer\\\"\"), \"\\n\", React.createElement(_components.p, null, \"2013/10/21/tinkerer.rstが生成されるとともにmaster.rstのtoctreeに記事が追加される。\\ncategoriesとtagsの違いが良くわからん。\\npages_src> gvim 2013/10/21/tinkerer.rst\"), \"\\n\", React.createElement(_components.p, null, \"html生成\\npages_src> tinkerer --build\"), \"\\n\", React.createElement(_components.p, null, \"github転送\\n既存のgithub-pages(user)があるのでそこれに送ってみる。\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"mkdir pages_dst\\ncd pages_dst\\npages_dst> git init\\npages_dst> git remote add origin url\\npages_dst> cp -r ../pages_src/blog/html/* .\\npages_dst> echo \\\"\\\" > .nogekyll\\npages_dst> git add .\\npages_dst> git commit -m init\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"上書き。\\npages_dst> git push origin master --force\"), \"\\n\", React.createElement(_components.p, null, \"_ではじまるパスが見えない件\\n最初sphinxtogithubというので修正したのだけど、\\nよく見たらtinkerのサイトに書いてあった。\\nhttp://tinkerer.me/exts/withgithub.html\\nextensions = [\\n'tinkerer.ext.blog', 'tinkerer.ext.disqus', 'withgithub',\\n]\"), \"\\n\", React.createElement(_components.p, null, \"しかし404になるな・・・\\nhttps://help.github.com/articles/files-that-start-with-an-underscore-are-missing\\n.nogekyllがtypoしとった。-> .nojekyll\\n生成したファイルをローカルで開くとやたら時間がかかる件\"), \"\\n\", React.createElement(_components.p, null, \"C:/Python33/Lib/site-packages/tinkerer-1.2.1-py3.3.egg/tinkerer/themes/boilerplate/layout.html\"), \"\\n\", React.createElement(_components.p, null, \"の\\n”//ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js” を\\n“http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js“\\nに変えた。\\nsmb://ajax.googleapis.comとかにアクセスしてるような気がするw\\nOctpressの記事を移植する\\npythonでpandocを呼び出して*.markdownから*.rstに変換した。\\n完了\\nとりあえず移行作業完了。\\nなんだかんだでoctopressはブラックボックスだったので、\\nsphinxベースのtinkererの方がわかる(sphinxの方が慣れている)。\\noctopressではjekyllを良く知らずに使っていたのと、pushするときのタスクがgitをごにょごにょやっているのがよくわからんかった。\\nいずれにしろ、hatenaの時が日記を一番よく書いていたので自前システムはメンテナンスコストが馬鹿にならんと思った。\\n中身に入る前にシステムのメンテナンスで力尽きる。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2013/10/21/tinkerer.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","blockquote","_provideComponents","components","React","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}