{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2022-0918-w-3-m-mod-md-c7be9d8bcd68367b5565.js","mappings":"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","sources":["webpack:///./content/posts/2022/0918-w3m-mod.md","webpack:///./src/templates/post-template.js","webpack:///./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    code: \"code\",\n    pre: \"pre\",\n    ul: \"ul\",\n    li: \"li\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"w3m改造に再突入\"), \"\\n\", React.createElement(_components.p, null, \"なんとなく最初からやり直し。\"), \"\\n\", React.createElement(_components.h2, null, \"マクロカッター\"), \"\\n\", React.createElement(_components.p, null, \"今回は、 \", React.createElement(_components.code, null, \"python\"), \" でマクロカッターを作って前処理してみた。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"#ifdef USE_UNICODE\\n// hogehoge\\n#endif\\n\")), \"\\n\", React.createElement(_components.p, null, \"みたいな \", React.createElement(_components.code, null, \"#ifdef\"), \" 事前に解決しえカットしていくツールである。\\nめんどくさいので \", React.createElement(_components.code, null, \"if defined(HOGE)\"), \" などは実装していない。\\n\", React.createElement(_components.code, null, \"true\"), \", \", React.createElement(_components.code, null, \"false\"), \", \", React.createElement(_components.code, null, \"none\"), \" の3値で判断。\\ntrue であれば \", React.createElement(_components.code, null, \"#if\"), \" を削除。\\nfalse であれば \", React.createElement(_components.code, null, \"#if\"), \" ブロックをコードごと削除し。\\n\", React.createElement(_components.code, null, \"none\"), \" であれば保持するというロジック。\\nわりとうまくいって、コードがかなり簡単になった。\"), \"\\n\", React.createElement(_components.h2, null, \"いつも通り C++ 化\"), \"\\n\", React.createElement(_components.p, null, \"C++ 化しないとCの暗黙の型変換が緩すぎてコンパイルエラー追うのが難しくなるので、\\n次の一手はこれ。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"c++\"), \" できたら、 \", React.createElement(_components.code, null, \"typdef struct Some {} Some;\"), \" を \", React.createElement(_components.code, null, \"struct Some;\"), \" に書き換える。\\nこれでストレスをかなり低減できる。\"), \"\\n\", React.createElement(_components.p, null, \"局所性の高い関数をメンバー関数にする。\\nなるべくメンバーを private にして、名前も \", React.createElement(_components.code, null, \"_\"), \" などの prefix を付ける。\\n大きい struct は分割する。\\nコンストラクタ、デストラクタ、コピーコンストラクタは避ける。\", React.createElement(_components.code, null, \"GC\"), \" や \", React.createElement(_components.code, null, \"setmem(0)\"), \" で死ぬ。\\n同様に、 std::vector, std::string は慎重に導入する。\"), \"\\n\", React.createElement(_components.h2, null, \"macro 減らす\"), \"\\n\", React.createElement(_components.p, null, \"macro 関数を\", React.createElement(_components.code, null, \"inline 関数\"), \" に置き換えたり、\\nmacro 定数を \", React.createElement(_components.code, null, \"enum\"), \" に置き換える。int, char などを enum に置き換える。\\n使えれば \", React.createElement(_components.code, null, \"bitfield\"), \" とかも駆使。\"), \"\\n\", React.createElement(_components.h2, null, \"fm.h, proto.h, file.c の分配\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \".c\"), \" と \", React.createElement(_components.code, null, \".h\"), \" をペアにして関数を一致させる\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"struct\"), \" 毎にヘッダを分ける。\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"global\"), \" 変数を散らす\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"const char*\"), \" との戦い。順次\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"膨大な global 変数があるので、使わないもの思い切って削除する。\"), \"\\n\", React.createElement(_components.h3, null, \"file.c\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"file.c\"), \" が 7000 行とかあってすごい。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"html のロードが 4500 くらい。 \", React.createElement(_components.code, null, \"table.c\"), \", \", React.createElement(_components.code, null, \"frame.c\"), \" も関連？\"), \"\\n\", React.createElement(_components.li, null, \"http を操作が 500 くらい\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"http アクセスや、html パース、ローカルCGI とか Buffer 操作が色々入っている。\"), \"\\n\", React.createElement(_components.h2, null, \"libuv\"), \"\\n\", React.createElement(_components.h3, null, \"mainloop\"), \"\\n\", React.createElement(_components.p, null, \"あっさりできてしまった。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"tty input\"), \", \", React.createElement(_components.code, null, \"resize signal\"), \" で \", React.createElement(_components.code, null, \"idle\"), \" のときに描画などという方針でよさそう。\\nraw モード切り替えなども \", React.createElement(_components.code, null, \"libuv\"), \" 移行できそう。\"), \"\\n\", React.createElement(_components.h3, null, \"入力ストリーム\"), \"\\n\", React.createElement(_components.p, null, \"tcp, fd, FILE*, Str と圧縮 decoder のランタイム polymorphism.\\nc++ の継承に置き換えて、 \", React.createElement(_components.code, null, \"void*\"), \" の cast より、型チェックの聞く状態にできる。\"), \"\\n\", React.createElement(_components.p, null, \"TODO: libuv を使う\"), \"\\n\", React.createElement(_components.h3, null, \"linein / readline\"), \"\\n\", React.createElement(_components.h3, null, \"出力\"), \"\\n\", React.createElement(_components.h3, null, \"signal\"), \"\\n\", React.createElement(_components.p, null, \"読み込みを \", React.createElement(_components.code, null, \"ctrl-c\"), \" で中断するなど。\"), \"\\n\", React.createElement(_components.h2, null, \"使わない機能を削る\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"backend, dump など\"), \"\\n\", React.createElement(_components.li, null, \"pager 系の機能\"), \"\\n\", React.createElement(_components.li, null, \"news, gopher など使わないプロトコル\"), \"\\n\", React.createElement(_components.li, null, \"mouse 系の機能\"), \"\\n\", React.createElement(_components.li, null, \"search_header 系の機能\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"wtf-8 とは？\"), \"\\n\", React.createElement(_components.p, null, \"謎の文字コード \", React.createElement(_components.code, null, \"wtf-8\"), \" について、再調査。\"), \"\\n\", React.createElement(_components.p, null, \"https://badsector.pullup.net/?p=70\"), \"\\n\", React.createElement(_components.p, null, \"👇\"), \"\\n\", React.createElement(_components.p, null, \"https://simonsapin.github.io/wtf-8/\"), \"\\n\", React.createElement(_components.h2, null, \"vt100 分離\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"Buffer = Screen => tty_out\"), \" という流れに統一する。\\n各所からローレベルの描画機能を呼ばない。\"), \"\\n\", React.createElement(_components.p, null, \"メッセージ表示も抽象化して、text を push するだけに。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"カーソル移動\"), \"\\n\", React.createElement(_components.li, null, \"out\"), \"\\n\", React.createElement(_components.li, null, \"flush\"), \"\\n\", React.createElement(_components.li, null, \"カーソル復帰\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"とかしない。\"), \"\\n\", React.createElement(_components.h2, null, \"TODO: logger 導入\"), \"\\n\", React.createElement(_components.h2, null, \"UIとデータ構造の分離\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"+----+\\n|DATA| TabBuffer, Buffer, Anchor, Form, Image...\\n+----+\\n  A\\n  |\\n+----+\\n| UI | mainloop... tty, key dispatch\\n+----+\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"TabBuffer, Buffer, Anchor, FormList\"), \" と \", React.createElement(_components.code, null, \"mainloop keydispatch\"), \" あたりを分離する。\\n片方向の参照。\"), \"\\n\", React.createElement(_components.p, null, \"バッファーローダーからグローバル変数を除去して、再入可能にする。\\ntab を平行動作可能にする。\"), \"\\n\", React.createElement(_components.h3, null, \"TODO: lua 導入\"), \"\\n\", React.createElement(_components.p, null, \"DEFUN を lua で記述したい。\\nrc も？\"), \"\\n\", React.createElement(_components.h2, null, \"TODO: libgc 減らす。止める\"), \"\\n\", React.createElement(_components.h2, null, \"TODO: zig に移植\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"zig cc\"), \" でビルドはできた。\\nじゃなくて、ソースを \", React.createElement(_components.code, null, \"zig\"), \" にしたい。\"), \"\\n\", React.createElement(_components.h2, null, \"TODO\"), \"\\n\", React.createElement(_components.p, null, \"Windows ネイティブで動くようにしたい。\\n\", React.createElement(_components.code, null, \"libuv\"), \" + \", React.createElement(_components.code, null, \"conpty\"), \" できそうな気がするのだけど、まだまだ。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2022/0918-w3m-mod.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nfunction PostTempalte({data, children}) {\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, null, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","h2","code","pre","ul","li","h3","_provideComponents","components","React","wrapper","MDXLayout","PostTempalte","_ref","data","children","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}