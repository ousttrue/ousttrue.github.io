{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2019-workspacefolder-md-609cfc46e17f9632f982.js","mappings":"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","sources":["webpack:///./content/posts/2019/workspacefolder.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\",\n    span: \"span\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/ousttrue/WorkspaceFolder\"\n  }, \"https://github.com/ousttrue/WorkspaceFolder\")), \"\\n\", React.createElement(_components.p, null, \"要件は、\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"WindowsとLinuxで共用にできる\"), \"\\n\", React.createElement(_components.li, null, \"実行時に、親フォルダを遡って設定(プロジェクトルートに \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Duck.toml</code>\"\n    }\n  }), \" を配置する約束`)を探しに行く能力がある\"), \"\\n\", React.createElement(_components.li, null, \"Task間の依存関係が記述できる\"), \"\\n\", React.createElement(_components.li, null, \"コマンド呼び出し時のパスを調整できる\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"こんなもん。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"vim\\\"><pre class=\\\"language-vim\\\"><code class=\\\"language-vim\\\">augroup MyAutoCmd\\n    <span class=\\\"token builtin\\\">autocmd</span> BufWritePost <span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">.</span>md <span class=\\\"token punctuation\\\">:</span><span class=\\\"token operator\\\">!</span>duck build\\naugroup END</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"としておいて保存時に呼ぶようにしてみた。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"toml\\\"><pre class=\\\"language-toml\\\"><code class=\\\"language-toml\\\"><span class=\\\"token comment\\\"># Duck.toml</span>\\n<span class=\\\"token punctuation\\\">[</span><span class=\\\"token table class-name\\\">generate</span><span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token key property\\\">cwd</span> <span class=\\\"token punctuation\\\">=</span> <span class=\\\"token string\\\">'build'</span>\\n<span class=\\\"token key property\\\">command</span> <span class=\\\"token punctuation\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'cmake'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'..'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'-G'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'Unix Makefiles'</span><span class=\\\"token punctuation\\\">]</span>\\n\\n<span class=\\\"token punctuation\\\">[</span><span class=\\\"token table class-name\\\">build</span><span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token key property\\\">depends</span> <span class=\\\"token punctuation\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'generate'</span><span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token key property\\\">cwd</span> <span class=\\\"token punctuation\\\">=</span> <span class=\\\"token string\\\">'build'</span>\\n<span class=\\\"token key property\\\">command</span> <span class=\\\"token punctuation\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'make'</span><span class=\\\"token punctuation\\\">]</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">duck build</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.p, null, \"のように呼ぶ。\"), \"\\n\", React.createElement(_components.h2, null, \"vimのカレントフォルダ問題\"), \"\\n\", React.createElement(_components.p, null, \"親フォルダを遡って設定を探しに行くというのが重要です。例えば \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">vim</code>\"\n    }\n  }), \" でサブフォルダのファイルを編集しているときに、親フォルダの \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Makefile</code>\"\n    }\n  }), \" でビルドしたい場合がある。このときに、\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">vim</code>\"\n    }\n  }), \" のカレントフォルダを考慮するのが無理なのです。\\nそういうわけで \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">vim</code>\"\n    }\n  }), \" では単純に \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">autocd</code>\"\n    }\n  }), \" して、カレントフォルダを意識しないことにしました。\\n代わりにツール側で親フォルダに遡れるようにして、そのツールがプロジェクトのルートから指定のコマンドを呼び出すのです。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"make を呼ぶ\"), \"\\n\", React.createElement(_components.li, null, \"cmake を呼ぶ\"), \"\\n\", React.createElement(_components.li, null, \"dub を呼ぶ\"), \"\\n\", React.createElement(_components.li, null, \"setup.py を呼ぶ\"), \"\\n\", React.createElement(_components.li, null, \"MSBuild を呼ぶ\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"などのように、言語毎に専門のツールを呼ぶ補助的なツールです。\"), \"\\n\", React.createElement(_components.p, null, \"特定の \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">LSP</code>\"\n    }\n  }), \" (D言語向けの \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">dls</code>\"\n    }\n  }), \" ) がカレントフォルダをプロジェクトルートに移動してから起動しないといけないなどの癖があるようなので、その辺を吸収させるのも狙っている。\"), \"\\n\", React.createElement(_components.h2, null, \"WindowsでCMakeをどうやって見つけるのか\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">unix</code>\"\n    }\n  }), \" 的なシステムでは、\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">/usr/bin/cmake</code>\"\n    }\n  }), \" であろうことが期待できるのだけど、\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Windows</code>\"\n    }\n  }), \" ではそうはいかない。でも最近の \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">VisualStudio</code>\"\n    }\n  }), \" がインストールされていれば、その中に \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">cmake</code>\"\n    }\n  }), \" が入っている。だから \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Program Files</code>\"\n    }\n  }), \" から決め打ちで探してくるという方法があるのだけど、もう一歩進めて \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">VisualStudio</code>\"\n    }\n  }), \" のインストールパスを \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">registry</code>\"\n    }\n  }), \" から取ってくるという手法がある。しかし、たくさんのバージョンとエディションで少しずつ違うのでやってられない。で、これに対応するツールとして \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">vswhere</code>\"\n    }\n  }), \" というツールがある。たぶん、\", React.createElement(_components.a, {\n    href: \"https://github.com/Microsoft/vcpkg\"\n  }, \"vcpkg\"), \"のために作られたのだと思うのだけど、これでインストールされている \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">VisualStudio</code>\"\n    }\n  }), \" の情報を得ることができる。まだ、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">vswhere</code>\"\n    }\n  }), \" をどうやって得るのか問題があるのだが、小さいので自分のプロジェクトに入れておくとか、ダウンロードするとか、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">VisualStudio</code>\"\n    }\n  }), \" に入っているので決め打ちでパスを探すといったことになろうと思う。\"), \"\\n\", React.createElement(_components.p, null, \"要するに \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">vc</code>\"\n    }\n  }), \" が入っている環境では、9割くらいの確率で \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">cmake</code>\"\n    }\n  }), \" を発見できます。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">duck</code>\"\n    }\n  }), \" にもこの機能を入れようとしている。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/ChaosinaCan/pyvswhere\"\n  }, \"https://github.com/ChaosinaCan/pyvswhere\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2019/workspacefolder.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  const frontmatter = data.mdx.frontmatter;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"div\", {\n    className: \"tags-index\"\n  }, frontmatter.tags && frontmatter.tags.length > 0 && frontmatter.tags.map(tag => {\n    return React.createElement(Link, {\n      to: `/tags/${tag}/`,\n      itemProp: \"url\"\n    }, React.createElement(\"button\", null, tag));\n  })), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        tags\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","ul","li","span","h2","_provideComponents","components","React","href","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","frontmatter","mdx","Layout","title","tags","length","map","tag","Link","to","itemProp","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}