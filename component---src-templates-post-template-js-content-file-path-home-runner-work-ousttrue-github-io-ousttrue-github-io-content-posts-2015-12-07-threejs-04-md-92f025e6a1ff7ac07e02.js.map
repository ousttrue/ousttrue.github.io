{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2015-12-07-threejs-04-md-92f025e6a1ff7ac07e02.js","mappings":"8JAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,KAAM,OACNC,EAAG,MACFC,EAAAA,EAAAA,MAAsBN,EAAMO,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBP,EAAYG,KAAM,CACrFK,wBAAyB,CACvBC,OAAQ,k+EAER,KAAMF,EAAAA,cAAoBP,EAAYI,EAAG,KAAM,sEACrD,CAKA,MAJA,SAAoBL,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOW,QAASC,GAAaV,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOK,EAAYJ,EAAAA,cAAoBI,EAAWZ,EAAOQ,EAAAA,cAAoBT,EAAmBC,IAAUD,EAAkBC,EAC9H,E,8BCVA,MAAMO,EAAa,CACjBM,KAAMC,IAA2B,IAA1B,SAACC,EAAQ,UAAEC,GAAUF,EAC1B,OAAOE,EAAYR,EAAAA,cAAoBS,EAAAA,EAAsB,CAC3DD,UAAWA,GACVD,GAAYP,EAAAA,cAAoB,OAAQ,KAAMO,EAAS,GAG9D,SAASG,EAAYC,GAAmB,IAAlB,KAACC,EAAI,SAAEL,GAASI,EACpC,MAAME,EAAcD,EAAKE,IAAID,YAC7B,OAAOb,EAAAA,cAAoBe,EAAAA,EAAQ,KAAMf,EAAAA,cAAoB,KAAM,KAAMa,EAAYG,OAAQhB,EAAAA,cAAoB,MAAO,CACtHQ,UAAW,cACVK,EAAYI,MAAQJ,EAAYI,KAAKC,OAAS,GAAKL,EAAYI,KAAKE,KAAIC,GAClEpB,EAAAA,cAAoBqB,EAAAA,GAAM,CAC/BC,GAAI,SAASF,EAAG,IAChBG,SAAU,OACTvB,EAAAA,cAAoB,SAAU,KAAMoB,OACpCpB,EAAAA,cAAoBwB,EAAAA,GAAa,CACpCzB,WAAYA,GACXQ,GACL,CACe,SAASkB,EAAiBjC,GACvC,OAAOQ,EAAAA,cAAoBU,EAAclB,EAAOQ,EAAAA,cAAoB0B,EAAqBlC,GAC3F,C","sources":["webpack:///./content/posts/2015/12/07/threejs_04.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    span: \"span\",\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">source\\n外部のJSONに記述されたモデルを読み込む機能がある。\\nExternal models in Three.js\\nを見てやってみた。\\nOnLoad(geometry: THREE.Geometry, materials: THREE.Material[]) {\\n    // create a mesh with models geometry and material\\n    var material = new THREE.MeshPhongMaterial(materials[0]);\\n    var mesh = new THREE.Mesh(\\n        geometry,\\n        material\\n    );\\n\\n    mesh.rotation.y = -Math.PI / 5;\\n\\n    this.scene.add(mesh);\\n    this.Render();\\n}\\n\\nOnProgress(event: any) {\\n    console.log('OnProgress: ', event);\\n}\\n\\nOnError(event: any) {\\n    console.log('OnError: ', event);\\n}\\n\\nAddModelFromJson(path: string) {\\n    var loader = new THREE.JSONLoader(); // init the loader util\\n\\n    // init loading\\n    loader.load(path, this.OnLoad.bind(this)\\n        , this.OnProgress.bind(this)\\n        , this.OnError.bind(this));\\n}\\n\\nJSONLoaderクラスを初期化してloadをコール、loadは非同期に完了してOnLoadコールバックでMeshを組み立ててシーンに追加するという流れ。\\nOnLoadにMeshが返ってくればいいと思うのだが・・・\\nモデルはサンプルファイルを探したのだが見つからなかったので、\\nThree.js の JSONLoader のメモ\\nを見てBlenderのThree.js exporterでお猿さんを作ってみました。\\n一応、茶色いマテリアルをつけたのだけどうまくいかず。\\nフォーマットはどうなっているのか？\\ncubeもエクスポートしてみた。\\ncube.json\\n{\\n    \\\"faces\\\": [35,2,0,1,3,0,0,1,2,3,35,3,7,6,2,0,3,4,5,0,35,7,5,4,6,0,4,6,7,5,35,0,4,5,1,0,1,7,6,2,35,0,2,6,4,0,1,0,5,7,35,5,7,3,1,0,6,4,3,2],\\n    \\\"name\\\": \\\"CubeGeometry.1\\\",\\n    \\\"metadata\\\": {\\n        \\\"generator\\\": \\\"io_three\\\",\\n        \\\"vertices\\\": 8,\\n        \\\"type\\\": \\\"Geometry\\\",\\n        \\\"uvs\\\": 0,\\n        \\\"version\\\": 3,\\n        \\\"faces\\\": 6,\\n        \\\"materials\\\": 1,\\n        \\\"normals\\\": 8\\n    },\\n    \\\"vertices\\\": [-1,-1,1,-1,1,1,-1,-1,-1,-1,1,-1,1,-1,1,1,1,1,1,-1,-1,1,1,-1],\\n    \\\"materials\\\": [{\\n        \\\"depthWrite\\\": true,\\n        \\\"colorDiffuse\\\": [0,0.64,0.040691],\\n        \\\"depthTest\\\": true,\\n        \\\"specularCoef\\\": 50,\\n        \\\"blending\\\": \\\"NormalBlending\\\",\\n        \\\"shading\\\": \\\"phong\\\",\\n        \\\"colorEmissive\\\": [0,0,0],\\n        \\\"opacity\\\": 1,\\n        \\\"transparent\\\": false,\\n        \\\"DbgIndex\\\": 0,\\n        \\\"visible\\\": true,\\n        \\\"wireframe\\\": false,\\n        \\\"colorSpecular\\\": [0.5,0.5,0.5],\\n        \\\"colorAmbient\\\": [0,0.64,0.040691],\\n        \\\"DbgName\\\": \\\"Material\\\",\\n        \\\"DbgColor\\\": 15658734\\n    }],\\n    \\\"uvs\\\": [],\\n    \\\"normals\\\": [-0.577349,-0.577349,-0.577349,-0.577349,-0.577349,0.577349,-0.577349,0.577349,0.577349,-0.577349,0.577349,-0.577349,0.577349,0.577349,-0.577349,0.577349,-0.577349,-0.577349,0.577349,0.577349,0.577349,0.577349,-0.577349,0.577349]\\n}</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"JSON Model format 3 (Soon to be deprecated)\\nこれっぽいですな。\\nなるほど。なるほど。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2015/12/07/threejs_04.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  const frontmatter = data.mdx.frontmatter;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"div\", {\n    className: \"tags-index\"\n  }, frontmatter.tags && frontmatter.tags.length > 0 && frontmatter.tags.map(tag => {\n    return React.createElement(Link, {\n      to: `/tags/${tag}/`,\n      itemProp: \"url\"\n    }, React.createElement(\"button\", null, tag));\n  })), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        tags\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","span","p","_provideComponents","components","React","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","frontmatter","mdx","Layout","title","tags","length","map","tag","Link","to","itemProp","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}