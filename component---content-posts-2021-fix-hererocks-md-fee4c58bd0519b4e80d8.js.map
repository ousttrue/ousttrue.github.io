{"version":3,"file":"component---content-posts-2021-fix-hererocks-md-fee4c58bd0519b4e80d8.js","mappings":"yHAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,IAAK,MACLC,KAAM,OACNC,GAAI,OACHC,EAAAA,EAAAA,MAAsBR,EAAMS,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,oDAAqD,KAAMM,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,iDAAkD,KAAMM,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,oGAAqG,KAAMM,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,WAAY,KAAMM,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,wDAAyD,KAAMM,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,+EAAgF,KAAMM,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,oBAAqB,KAAMM,EAAAA,cAAoBT,EAAYI,IAAK,KAAMK,EAAAA,cAAoBT,EAAYK,KAAM,KAAM,iHAAkH,KAAMI,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,QAAS,KAAMM,EAAAA,cAAoBT,EAAYI,IAAK,KAAMK,EAAAA,cAAoBT,EAAYK,KAAM,KAAM,gZAAiZ,KAAMI,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,8KAA+KM,EAAAA,cAAoBT,EAAYK,KAAM,KAAM,cAAe,QAAS,KAAMI,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,wJAAyJM,EAAAA,cAAoBT,EAAYK,KAAM,KAAM,aAAc,eAAgB,KAAMI,EAAAA,cAAoBT,EAAYM,GAAI,KAAM,cAAe,KAAMG,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,wCAAyC,KAAMM,EAAAA,cAAoBT,EAAYG,EAAG,KAAMM,EAAAA,cAAoBT,EAAYK,KAAM,KAAM,UAAW,KAAMI,EAAAA,cAAoBT,EAAYK,KAAM,KAAM,eAAgB,eAAgBI,EAAAA,cAAoBT,EAAYK,KAAM,KAAM,uBAAwB,iBAAkB,KAAMI,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,aAAc,KAAMM,EAAAA,cAAoBT,EAAYI,IAAK,KAAMK,EAAAA,cAAoBT,EAAYK,KAAM,KAAM,qhEAAshE,KAAMI,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,qDAAsD,KAAMM,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,eAAgB,KAAMM,EAAAA,cAAoBT,EAAYI,IAAK,KAAMK,EAAAA,cAAoBT,EAAYK,KAAM,KAAM,+LAAgM,KAAMI,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,0BAA2BM,EAAAA,cAAoBT,EAAYK,KAAM,KAAM,gBAAiB,aAClrK,CAKA,UAJA,SAAoBN,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOW,QAASC,GAAaV,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,MAAsBR,EAAMS,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWZ,EAAOU,EAAAA,cAAoBX,EAAmBC,IAAUD,EAAkBC,EAC9H,C,sECkBO,MAAMa,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBL,GAC/B,MAAMM,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAfJ,EACFA,EAAWM,GAGb,IAAIA,KAAsBN,IAChC,CAACM,EAAmBN,GACzB,C","sources":["webpack:///./content/posts/2021/fix_hererocks.md","webpack:///./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"hererocks が VS2019BuildTools を検知して動作するように改造してみた。\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/luarocks/hererocks/pull/15\"), \"\\n\", React.createElement(_components.p, null, \"通るかどうかは微妙。\\n内容的に、通りづらそう。\\n古い vc を使っていたり MinGW 使っていたりすると実験できないしね。\\nとりあえず、既存の動いている部分が壊れないようには配慮した。\"), \"\\n\", React.createElement(_components.p, null, \"採用されれば、\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/wbthomason/packer.nvim/issues/302\"), \"\\n\", React.createElement(_components.p, null, \"も進展する。\\nWindows 版の luarocks 呼び出しに改造が必要なのだが、\\n先に hererocks が動いている必要があるという順番。\"), \"\\n\", React.createElement(_components.p, null, \"とりあえず単体で試すことができて\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"# C:/Python38/Scripts/pip.exe\\n$ pip install https://github.com/ousttrue/hererocks/archive/add_vswhere.zip\\n\")), \"\\n\", React.createElement(_components.p, null, \"とする。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"# C:/Python38/Scripts/hererocks.exe\\n$ hererocks.exe --target vs -j 2.1.0-beta3 -r latest build_dir\\nUsing cl.exe found in PATH.\\nFetching LuaJIT 2.1.0-beta3 (target: vs) (cached)\\nVerifying SHA256 checksum\\nBuilding LuaJIT 2.1.0-beta3 (target: vs)\\nInstalling LuaJIT 2.1.0-beta3 (target: vs)\\nFetching LuaRocks 3.7.0 (cached)\\nVerifying SHA256 checksum\\nBuilding and installing LuaRocks 3.7.0\\n\")), \"\\n\", React.createElement(_components.p, null, \"lua はシステムにインストールして全体でライブラリを共有するというよりは、\\nプロジェクト単位でインストールしてローカルに必要なライブラリだけを追加するという運用になりそう。\\nなので、 hererocks でプロジェクトローカルに lua をサクッとビルドできるのはなかなかよい。\\npython の venv 的な運用。\\n展開先は、 \", React.createElement(_components.code, null, \".gitignore\"), \" する。\"), \"\\n\", React.createElement(_components.p, null, \"ただ、外部ライブラリのラッパーがさくっと動くかというと Windows だと厳しいものがありますな・・・。\\nvcpkg と連携させるとか、更なる頑張りが必要かもしれない。\\nなので、 luajit の ffi が面白いかもしれない。\\nstandalone の lua インタプリタを使う場合は \", React.createElement(_components.code, null, \"hererocks\"), \" がいいのではないか。\"), \"\\n\", React.createElement(_components.h2, null, \"vswhere メモ\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/Microsoft/vswhere\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"cl.exe\"), \", \", React.createElement(_components.code, null, \"msbuild.exe\"), \" などの探索に使う。\\n\", React.createElement(_components.code, null, \"vs2017 version 15.2\"), \" 以降に入っているらしい。\"), \"\\n\", React.createElement(_components.p, null, \"こんな感じに使う。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"# %ProgramFiles(x86)%\\\\Microsoft Visual Studio\\\\Installer\\\\vswhere.exe\\n> vswhere -nologo -products *\\ninstanceId: 6762dfe1\\ninstallDate: 2020/07/21 9:26:34\\ninstallationName: VisualStudio/16.7.3+30503.244\\ninstallationPath: C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\2019\\\\BuildTools\\ninstallationVersion: 16.7.30503.244\\nproductId: Microsoft.VisualStudio.Product.BuildTools\\nproductPath: C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\2019\\\\BuildTools\\\\Common7\\\\Tools\\\\LaunchDevCmd.bat\\nstate: 4294967295\\nisComplete: 1\\nisLaunchable: 1\\nisPrerelease: 0\\nisRebootRequired: 0\\ndisplayName: Visual Studio Build Tools 2019\\ndescription: Visual Studio Build Tools では、Visual Studio IDE を必要とせずに、MSBuild ベースのネイティブ マネージド アプリケーションをビルドできます。また、Visual C++ のコンパイラやライブラリ、MFC、ATL、および C++/CLI サポートをインストールするオプションも用意されています。\\nchannelId: VisualStudio.16.Release\\nchannelUri: https://aka.ms/vs/16/release/channel\\nenginePath: C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\Installer\\\\resources\\\\app\\\\ServiceHub\\\\Services\\\\Microsoft.VisualStudio.Setup.Service\\nreleaseNotes: https://go.microsoft.com/fwlink/?LinkId=660893#16.7.3\\nthirdPartyNotices: https://go.microsoft.com/fwlink/?LinkId=660909\\nupdateDate: 2020-09-13T06:19:26.0508205Z\\ncatalog_buildBranch: d16.7\\ncatalog_buildVersion: 16.7.30503.244\\ncatalog_id: VisualStudio/16.7.3+30503.244\\ncatalog_localBuild: build-lab\\ncatalog_manifestName: VisualStudio\\ncatalog_manifestType: installer\\ncatalog_productDisplayVersion: 16.7.3\\ncatalog_productLine: Dev16\\ncatalog_productLineVersion: 2019\\ncatalog_productMilestone: RTW\\ncatalog_productMilestoneIsPreRelease: False\\ncatalog_productName: Visual Studio\\ncatalog_productPatchVersion: 3\\ncatalog_productPreReleaseMilestoneSuffix: 1.0\\ncatalog_productSemanticVersion: 16.7.3+30503.244\\ncatalog_requiredEngineVersion: 2.7.3132.26759\\nproperties_campaignId:\\nproperties_channelManifestId: VisualStudio.16.Release/16.7.3+30503.244\\nproperties_nickname:\\nproperties_setupEngineFilePath: C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\Installer\\\\vs_installershell.exe\\n\")), \"\\n\", React.createElement(_components.p, null, \"https://github.com/microsoft/vswhere/wiki/Find-VC\"), \"\\n\", React.createElement(_components.p, null, \"フィルタをかけられる。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"> vswhere -latest -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -property installationPath\\nC:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\2019\\\\BuildTools\\n\")), \"\\n\", React.createElement(_components.p, null, \"見つかったパスから先は固定であるとみなして、 \", React.createElement(_components.code, null, \"vcvars64.bat\"), \" などを見つける。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","pre","code","h2","_provideComponents","components","React","wrapper","MDXLayout","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}