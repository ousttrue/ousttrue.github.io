{"version":3,"file":"component---src-templates-post-template-js-content-file-path-content-posts-2019-vim-autoformat-md-ca3bfe0d4d2ef150e1b8.js","mappings":"8JAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,KAAM,OACNC,GAAI,KACJC,KAAM,SACLC,EAAAA,EAAAA,MAAsBR,EAAMS,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,MAAOM,EAAAA,cAAoBT,EAAYI,KAAM,KAAM,UAAW,QAASK,EAAAA,cAAoBT,EAAYI,KAAM,KAAM,wBAAyB,qBAAsBK,EAAAA,cAAoBT,EAAYI,KAAM,KAAM,yBAA0B,aAAc,KAAMK,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,6CAA8C,KAAMM,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,8CAA+C,KAAMM,EAAAA,cAAoBT,EAAYG,EAAG,KAAMM,EAAAA,cAAoBT,EAAYI,KAAM,KAAM,QAAS,KAAMK,EAAAA,cAAoBT,EAAYI,KAAM,KAAM,gBAAiB,aAAc,KAAMK,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,OAAQ,KAAMM,EAAAA,cAAoBT,EAAYK,GAAI,KAAM,yBAA0B,KAAMI,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,gCAAiC,KAAMM,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,yCAA0C,KAAMM,EAAAA,cAAoBT,EAAYM,KAAM,CACphCI,wBAAyB,CACvBC,OAAQ,sVAER,KAAMF,EAAAA,cAAoBT,EAAYK,GAAI,KAAM,eAAgB,KAAMI,EAAAA,cAAoBT,EAAYM,KAAM,CAC9GI,wBAAyB,CACvBC,OAAQ,+kBAGd,CAKA,MAJA,SAAoBZ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOa,QAASC,GAAaZ,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,MAAsBR,EAAMS,YAC3E,OAAOK,EAAYJ,EAAAA,cAAoBI,EAAWd,EAAOU,EAAAA,cAAoBX,EAAmBC,IAAUD,EAAkBC,EAC9H,E,8BChBA,MAAMS,EAAa,CACjBJ,KAAMU,IAA2B,IAA1B,SAACC,EAAQ,UAAEC,GAAUF,EAC1B,OAAOE,EAAYP,EAAAA,cAAoBQ,EAAAA,EAAsB,CAC3DD,UAAWA,GACVD,GAAYN,EAAAA,cAAoB,OAAQ,KAAMM,EAAS,GAG9D,SAASG,EAAYC,GAAmB,IAAlB,KAACC,EAAI,SAAEL,GAASI,EACpC,MAAME,EAAcD,EAAKE,IAAID,YAC7B,OAAOZ,EAAAA,cAAoBc,EAAAA,EAAQ,KAAMd,EAAAA,cAAoB,KAAM,KAAMY,EAAYG,OAAQf,EAAAA,cAAoB,MAAO,CACtHO,UAAW,cACVK,EAAYI,MAAQJ,EAAYI,KAAKC,OAAS,GAAKL,EAAYI,KAAKE,KAAIC,GAClEnB,EAAAA,cAAoBoB,EAAAA,GAAM,CAC/BC,GAAI,SAASF,EAAG,IAChBG,SAAU,OACTtB,EAAAA,cAAoB,SAAU,KAAMmB,OACpCnB,EAAAA,cAAoBuB,EAAAA,GAAa,CACpCxB,WAAYA,GACXO,GACL,CACe,SAASkB,EAAiBlC,GACvC,OAAOU,EAAAA,cAAoBS,EAAcnB,EAAOU,EAAAA,cAAoByB,EAAqBnC,GAC3F,C","sources":["webpack:///./content/posts/2019/vim-autoformat.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\",\n    h2: \"h2\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"当初 \", React.createElement(_components.code, null, \"python\"), \" 向けに \", React.createElement(_components.code, null, \"mindriot101/vim-yapf\"), \" を使っていたが、\\n全部まとめて \", React.createElement(_components.code, null, \"hiel92/vim-autoformat\"), \" で設定してみる。\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/Chiel92/vim-autoformat\"), \"\\n\", React.createElement(_components.p, null, \"プラグインを設定したら特に個別に設定することなく、\\nシステムにインストール済みの、\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"yapf\"), \", \", React.createElement(_components.code, null, \"clang-format\"), \" が有効になった？\"), \"\\n\", React.createElement(_components.p, null, \"便利。\"), \"\\n\", React.createElement(_components.h2, null, \"Tomlのフォーマットがよろしくなかったり\"), \"\\n\", React.createElement(_components.p, null, \"dein.tomlのindentが悪くなってしまった😑\"), \"\\n\", React.createElement(_components.p, null, \"自動実行は、時期尚早。\\n大丈夫そうなやつから拡張子指定した方がよさそう。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"vim\\\"><pre class=\\\"language-vim\\\"><code class=\\\"language-vim\\\"><span class=\\\"token builtin\\\">autocmd</span> BufWrite <span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">.</span><span class=\\\"token keyword\\\">py</span> <span class=\\\"token punctuation\\\">:</span>Autoformat</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"dのフォーマッターとか\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"vim\\\"><pre class=\\\"language-vim\\\"><code class=\\\"language-vim\\\"><span class=\\\"token keyword\\\">let</span> g<span class=\\\"token punctuation\\\">:</span>formatdef_my_custom_d <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'\\\"dub run -q dfmt -- -i\\\"'</span>\\n<span class=\\\"token keyword\\\">let</span> g<span class=\\\"token punctuation\\\">:</span>formatters_d <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'my_custom_d'</span><span class=\\\"token punctuation\\\">]</span></code></pre></div>\"\n    }\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2019/vim-autoformat.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  const frontmatter = data.mdx.frontmatter;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"div\", {\n    className: \"tags-index\"\n  }, frontmatter.tags && frontmatter.tags.length > 0 && frontmatter.tags.map(tag => {\n    return React.createElement(Link, {\n      to: `/tags/${tag}/`,\n      itemProp: \"url\"\n    }, React.createElement(\"button\", null, tag));\n  })), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        tags\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","code","h2","span","_provideComponents","components","React","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","frontmatter","mdx","Layout","title","tags","length","map","tag","Link","to","itemProp","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}