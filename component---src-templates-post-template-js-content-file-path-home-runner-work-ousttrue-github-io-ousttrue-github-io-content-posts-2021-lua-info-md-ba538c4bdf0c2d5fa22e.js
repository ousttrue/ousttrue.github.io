"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9750],{4866:function(e,n,t){t.r(n),t.d(n,{default:function(){return p}});var a=t(1151),l=t(7294);function s(e){const n=Object.assign({p:"p",h1:"h1",span:"span",a:"a",h2:"h2",ul:"ul",li:"li"},(0,a.ah)(),e.components);return l.createElement(l.Fragment,null,l.createElement(n.p,null,"https://www.lua.org/docs.html"),"\n",l.createElement(n.h1,null,"Interpreter"),"\n",l.createElement(n.p,null,"とりあえず ",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">luajit-2.1.0-beta3</code>'}})," 推し。"),"\n",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">+---+    +---+    +---+    +---+\n|5.1| -> |5.2| -> |5.3| -> |5.4|\n+---+    +---+    +---+    +---+\n  |        |        |\n  |        |        +- ravi\n  |        |\n  |        +- moonsharp\n  |\n  +- luajit(5.1 base)\n  |   +- moonjit\n  +- luau(5.1 base)</code></pre></div>'}}),"\n",l.createElement(n.p,null,l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">lua-5.1</code>'}})," をベースに分岐したものが多い？"),"\n",l.createElement(n.p,null,"https://www.lua.org/versions.html"),"\n",l.createElement(n.p,null,"|        | url                                                                | memo                                                                    |\n|--------|--------------------------------------------------------------------|-------------------------------------------------------------------------|\n| Lua5.1 |                                                                    | 2012。これより古いものを使う理由は無さそう。                            |\n| Lu15.2 | ",l.createElement(n.a,{href:"https://www.lua.org/manual/5.2/readme.html#changes"},"since Lua5.1")," | 2015。finalizer. 関数の ",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">_ENV</code>'}})," 仕様変更                                 |\n| Lua5.3 | ",l.createElement(n.a,{href:"https://www.lua.org/manual/5.3/readme.html#changes"},"since Lua5.2")," | 2020。integers                                                          |\n| Lua5.4 | ",l.createElement(n.a,{href:"https://www.lua.org/manual/5.4/readme.html#changes"},"since Lua5.3")," | 2021。const, to-be-closed                                               |\n| LuaJIT | https://luajit.org/                                              | Lua5.1base。最終版は ",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">2.1.0-beta3</code>'}}),"。neovimもこれ。",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">FFI</code>'}})," も強力。        |\n| Luau   | https://luau-lang.org/                                           | Lua5.1 の superset。Roblox専用。オープンソースではない。                |\n| Ravi   | http://ravilang.github.io/                                       | Lua5.3base？。limited optional static typing and MIR based JIT compiler |"),"\n",l.createElement(n.h2,null,"変わり種"),"\n",l.createElement(n.p,null,l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">headeronly</code>'}}),". include するだけで使える。"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"https://github.com/edubart/minilua"),"\n"),"\n",l.createElement(n.p,null,"LUA に更に埋め込む"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"https://terralang.org/"),"\n"),"\n",l.createElement(n.h1,null,"Translator"),"\n",l.createElement(n.h2,null,l.createElement(n.a,{href:"https://moonscript.org/"},"MoonScript")),"\n",l.createElement(n.h2,null,l.createElement(n.a,{href:"https://typescripttolua.github.io/"},"TypescriptToLua")),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"後で出てくる、",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">local-lua-debugger</code>'}})," はこれで実装されているぽい。"),"\n"),"\n",l.createElement(n.h2,null,l.createElement(n.a,{href:"https://ifritjp.github.io/documents/lunescript/"},"LuneScript/")),"\n",l.createElement(n.h2,null,l.createElement(n.a,{href:"https://github.com/teal-language/tl"},"Teal")),"\n",l.createElement(n.h1,null,"Language server"),"\n",l.createElement(n.h2,null,l.createElement(n.a,{href:"https://github.com/EmmyLua/EmmyLua-LanguageServer"},"EmmyLua")),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"Java製"),"\n",l.createElement(n.li,null,l.createElement(n.a,{href:"https://emmylua.github.io/annotation.html"},"EmmyLua Annotation")," に対応。これにより、組み込み型のインテリセンスを動作させることができて使い勝手が向上する"),"\n"),"\n",l.createElement(n.h2,null,l.createElement(n.a,{href:"https://github.com/sumneko/lua-language-server"},"lua-language-server")),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"⭐ ",l.createElement(n.a,{href:"https://emmylua.github.io/annotation.html"},"EmmyLua Annotation")," に対応。これにより、組み込み型のインテリセンスを動作させることができて使い勝手が向上する"),"\n"),"\n",l.createElement(n.p,null,"設定例"),"\n",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="json"><pre class="language-json"><code class="language-json">    <span class="token property">"Lua.runtime.version"</span><span class="token operator">:</span> <span class="token string">"LuaJIT"</span><span class="token punctuation">,</span>\n    <span class="token property">"Lua.workspace.preloadFileSize"</span><span class="token operator">:</span> <span class="token number">10000</span><span class="token punctuation">,</span>\n    <span class="token property">"Lua.runtime.path"</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n        <span class="token string">"?.lua"</span><span class="token punctuation">,</span>\n        <span class="token string">"?/init.lua"</span><span class="token punctuation">,</span>\n        <span class="token string">"?/?.lua"</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span></code></pre></div>'}}),"\n",l.createElement(n.h2,null,l.createElement(n.a,{href:"https://github.com/Alloyed/lua-lsp"},"lua-lsp")),"\n",l.createElement(n.h1,null,"Debug adapter"),"\n",l.createElement(n.h2,null,l.createElement(n.a,{href:"https://github.com/tomblind/local-lua-debugger-vscode"},"local-lua-debugger-vscode")),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"Debugされるスクリプト側に仕込み不要"),"\n",l.createElement(n.li,null,"⭐ luajit 対応"),"\n",l.createElement(n.li,null,"__tostring でエラーが発生すると固まるので、__tostring の実装で例外が起きないように注意"),"\n",l.createElement(n.li,null,"起動時の引数に ",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">\\\\</code>'}})," が含まれているとエラーになる => ",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">0.2.2</code>'}})," で修正"),"\n"),"\n",l.createElement(n.h2,null,l.createElement(n.a,{href:"https://github.com/actboy168/lua-debug"},"lua-debug")),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"Debugされるスクリプト側に仕込み不要"),"\n",l.createElement(n.li,null,"hook が拡張してある。途中で止めたりとかできるぽい"),"\n",l.createElement(n.li,null,"残念ながら luajit では動作しない"),"\n"),"\n",l.createElement(n.h1,null,"Formatter"),"\n",l.createElement(n.h2,null,l.createElement(n.a,{href:"https://github.com/johnnymorganz/stylua"},"stylua")),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"⭐ rust 製でインストールしやすい"),"\n"),"\n",l.createElement(n.p,null,"stylua.toml"),"\n",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="toml"><pre class="language-toml"><code class="language-toml"><span class="token key property">column_width</span> <span class="token punctuation">=</span> <span class="token number">120</span>\n<span class="token key property">line_endings</span> <span class="token punctuation">=</span> <span class="token string">"Unix"</span>\n<span class="token key property">indent_type</span> <span class="token punctuation">=</span> <span class="token string">"Spaces"</span>\n<span class="token key property">indent_width</span> <span class="token punctuation">=</span> <span class="token number">4</span>\n<span class="token key property">quote_style</span> <span class="token punctuation">=</span> <span class="token string">"AutoPreferDouble"</span>\n<span class="token key property">no_call_parentheses</span> <span class="token punctuation">=</span> <span class="token boolean">true</span></code></pre></div>'}}),"\n",l.createElement(n.h1,null,"ソース読み"),"\n",l.createElement(n.p,null,"https://ousttrue.github.io/lua/"))}var r=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?l.createElement(n,e,l.createElement(s,e)):s(e)},u=(t(8678),t(8838));const c={code:e=>{let{children:n,className:t}=e;return t?l.createElement(u.Z,{className:t},n):l.createElement("code",null,n)}};function o(e){let{data:n,children:t}=e;return l.createElement(l.Fragment,null,l.createElement("h1",null,n.mdx.frontmatter.title),l.createElement(a.Zo,{components:c},t))}function p(e){return l.createElement(o,e,l.createElement(r,e))}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2021-lua-info-md-ba538c4bdf0c2d5fa22e.js.map