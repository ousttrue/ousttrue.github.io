{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2019-wyam-start-md-d3bbae9458876562d512.js","mappings":"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","sources":["webpack:///./content/posts/2019/wyam-start.md","webpack:///./src/templates/post-template.js","webpack:///./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"ソースの方のリポジトリがハードディスククラッシュで失われて\\n更新できなくなっていたので、サイトを作りなおし。\\n\", React.createElement(_components.a, {\n    href: \"https://wyam.io/\"\n  }, \"wyam\"), \"を使ってみる。\"), \"\\n\", React.createElement(_components.h2, null, \"インストール\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"$ dotnet tool install -g Wyam.Tool\\n\")), \"\\n\", React.createElement(_components.h2, null, \"初期化する\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"$ mkdir site\\n$ cd site\\n$ wyam new --recipe blog\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"config.wyam(siteの設定)\"), \"\\n\", React.createElement(_components.li, null, \"input(記事置き場)\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"about.md\"), \"\\n\", React.createElement(_components.li, null, \"posts\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"first-post.md\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"設定ファイル\"), \"\\n\", React.createElement(_components.p, null, \"config.wyam がそれで、C# を Roslyn で処理するらしい。\\nおもしろい。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"// config.wyam\\n#recipe Blog\\n#theme Phantom\\n\\n// Customize your settings and add new ones here\\nSettings[Keys.Host] = \\\"ousttrue.github.io\\\";\\nSettings[BlogKeys.Title] = \\\"三次元日誌\\\";\\nSettings[BlogKeys.Description] = \\\"programming とか\\\";\\n\\n// Add any pipeline customizations here\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"#recipe Blog\"), \" がパイプライン設定で、 input フォルダの構成と処理を設定している。\\n設定ファイルに展開したものを記述することもできるみたい。\"), \"\\n\", React.createElement(_components.h3, null, \"gitignore\"), \"\\n\", React.createElement(_components.p, null, \"https://wyam.io/docs/advanced/what_to_exclude_from_source_control\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"#.gitignore\\n.vs/\\noutput/\\nconfig.wyam.hash\\nconfig.wyam.dll\\nconfig.wyam.packages.xml\\n\")), \"\\n\", React.createElement(_components.h2, null, \"生成する\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"$ wyam\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"output\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"index.html\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"$ wyam --watch --preview\"), \" で更新を監視して livereload できる。\"), \"\\n\", React.createElement(_components.h3, null, \"動作\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"input/posts/ 配下の markdown が /posts/ 下にhtml化される\"), \"\\n\", React.createElement(_components.li, null, \"input/posts/**/hoge.md が /posts/hoge.html のように階層は無くなる\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"テーマを変えてみる\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://wyam.io/recipes/blog/themes/\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"コマンドラインに、 \", React.createElement(_components.code, null, \"--theme THEME_NAME\"), \" とするか config.wyam に\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"// config.wyam\\n#theme THEME_NAME\\n\")), \"\\n\", React.createElement(_components.p, null, \"とすれば OK。\"), \"\\n\", React.createElement(_components.h2, null, \"appveyor で GitHub-Pages に展開\"), \"\\n\", React.createElement(_components.p, null, \"https://wyam.io/docs/deployment/appveyor\"), \"\\n\", React.createElement(_components.p, null, \"CIよくわかってないので難航したが動くようになった。\"), \"\\n\", React.createElement(_components.p, null, \"GitHub-pages のユーザー頁を使ったので、\\nソースのリポジトリと、html置き場のリポジトリを分けた。\"), \"\\n\", React.createElement(_components.p, null, \"ソースのリポジトリに AppVeyor を仕掛けて、\\npush したときにビルドして、html置き場に push する。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-yaml\"\n  }, \"branches:\\n  only:\\n    - master\\n    \\nenvironment:\\n  access_token:\\n    # EDIT the encrypted version of your GitHub access token\\n    # https://www.appveyor.com/docs/deployment/github/\\n    secure: E+wmFkBHvRVLnVcg9mIBXP7iTXKIqJyi/DewA+0SEtkpWmtiNFKKhYzD4bs0nw2L\\n\\ninstall:\\n  - mkdir ..\\\\Wyam\\n  - mkdir ..\\\\output\\n  # Fetch the latest version of Wyam \\n  - \\\"curl -s https://raw.githubusercontent.com/Wyamio/Wyam/master/RELEASE -o ..\\\\\\\\Wyam\\\\\\\\wyamversion.txt\\\"\\n  - set /P WYAMVERSION=< ..\\\\Wyam\\\\wyamversion.txt\\n  - echo %WYAMVERSION%\\n  # Get and unzip the latest version of Wyam\\n  - ps: Start-FileDownload \\\"https://github.com/Wyamio/Wyam/releases/download/$env:WYAMVERSION/Wyam-$env:WYAMVERSION.zip\\\" -FileName \\\"..\\\\Wyam\\\\Wyam.zip\\\"\\n  - 7z x ..\\\\Wyam\\\\Wyam.zip -o..\\\\Wyam -r\\n\\nbuild_script:\\n  - dotnet ..\\\\Wyam\\\\Wyam.dll --output ..\\\\output\\n\\non_success:\\n  # Switch branches to gh-pages, clean the folder, copy everything in from the Wyam output, and commit/push\\n  # See http://www.appveyor.com/docs/how-to/git-push for more info\\n  - git config --global credential.helper store\\n  # EDIT your Git email and name\\n  - git config --global user.email ousttrue@gmail.com\\n  - git config --global user.name ousttrue\\n  - ps: Add-Content \\\"$env:USERPROFILE\\\\.git-credentials\\\" \\\"https://$($env:access_token):x-oauth-basic@github.com`n\\\"\\n  - git checkout gh-pages\\n  - git rm -rf .\\n  - xcopy ..\\\\output . /E\\n  # EDIT your domain name or remove if not using a custom domain\\n  # - echo wyam.io > CNAME\\n  # EDIT the origin of your repository - have to reset it here because AppVeyor pulls from SSH, but GitHub won't accept SSH pushes\\n\\n  # 送り先(push できるように environment access token をセットしている)\\n  - git remote set-url origin https://github.com/ousttrue/ousttrue.github.io.git\\n  # 空の gh-pages ブランチに変更を追加\\n  - git add -A\\n  - git commit -a -m \\\"Commit from AppVeyor\\\"\\n  # gh-pages ブランチから origin の master に送る(use の GitHubPages を使っているので master ブランチ運用)\\n  - git push -f origin gh-pages:master\\n\")), \"\\n\", React.createElement(_components.h2, null, \"vscode で編集する\"), \"\\n\", React.createElement(_components.p, null, \"watch タスクを作成してバックグランドで \", React.createElement(_components.code, null, \"input\"), \" の変更を監視。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-tasks.json\"\n  }, \"{\\n    // See https://go.microsoft.com/fwlink/?LinkId=733558\\n    // for the documentation about the tasks.json format\\n    \\\"version\\\": \\\"2.0.0\\\",\\n    \\\"tasks\\\": [\\n        {\\n            \\\"label\\\": \\\"watch\\\",\\n            \\\"type\\\": \\\"shell\\\",\\n            \\\"command\\\": \\\"wyam\\\",\\n            \\\"args\\\": [\\n                \\\"--watch\\\", \\\"--preview\\\",\\n            ],\\n            \\\"problemMatcher\\\": [\\n            ],\\n            \\\"isBackground\\\": true\\n        },\\n    ]\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"launch.json を作成して F5 でブラウザを開く。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-launch.json\"\n  }, \"{\\n    // IntelliSense を使用して利用可能な属性を学べます。\\n    // 既存の属性の説明をホバーして表示します。\\n    // 詳細情報は次を確認してください: https://go.microsoft.com/fwlink/?linkid=830387\\n    \\\"version\\\": \\\"0.2.0\\\",\\n    \\\"configurations\\\": [\\n        {\\n            \\\"type\\\": \\\"chrome\\\",\\n            \\\"request\\\": \\\"launch\\\",\\n            \\\"name\\\": \\\"Launch Chrome against localhost\\\",\\n            \\\"url\\\": \\\"http://localhost:5080\\\",\\n            \\\"webRoot\\\": \\\"${workspaceFolder}\\\"\\n        }\\n    ]\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"自動でリロードがかかるので快適。\"), \"\\n\", React.createElement(_components.h2, null, \"参考\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"https://www.staticgen.com/wyam\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://wyam.io/docs/resources/built-with-wyam\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://qiita.com/MeilCli/items/425a5436aced08ba7062\"\n  }, \"静的サイトジェネレーターでC#を使いたかったからWyamを試したら最高だった\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"日本語で wyam に言及しているサイトはこれしかなかった。\\nマイナーでござる。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2019/wyam-start.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nfunction PostTempalte({data, children}) {\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, null, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","h2","pre","code","ul","li","h3","_provideComponents","components","React","href","className","wrapper","MDXLayout","PostTempalte","_ref","data","children","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}