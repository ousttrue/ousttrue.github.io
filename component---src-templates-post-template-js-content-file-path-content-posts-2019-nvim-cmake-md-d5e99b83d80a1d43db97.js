"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9920],{636:function(n,e,a){a.r(e),a.d(e,{default:function(){return m}});var t=a(1151),s=a(7294);function l(n){const e=Object.assign({ul:"ul",li:"li",a:"a",p:"p",h2:"h2",span:"span",code:"code",blockquote:"blockquote"},(0,t.ah)(),n.components);return s.createElement(s.Fragment,null,s.createElement(e.ul,null,"\n",s.createElement(e.li,null,s.createElement(e.a,{href:"https://hogehuga.net/c/289/"},"vimからC++プロジェクトに対してCMakeでビルドツリー生成＋コンパイル")),"\n"),"\n",s.createElement(e.p,null,"なるほど。"),"\n",s.createElement(e.ul,null,"\n",s.createElement(e.li,null,"プロジェクト生成"),"\n",s.createElement(e.li,null,"Build"),"\n",s.createElement(e.li,null,"実行(debbugerのアタッチ)"),"\n"),"\n",s.createElement(e.p,null,"の3ステップを自分好みにスクリプト化するのがよさそうだ。\nあと、"),"\n",s.createElement(e.ul,null,"\n",s.createElement(e.li,null,"clang-formatter"),"\n"),"\n",s.createElement(e.h2,null,"sample"),"\n",s.createElement(e.p,null,"実験用に小さいプロジェクト作る。"),"\n",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="cmake"><pre class="language-cmake"><code class="language-cmake"><span class="token comment"># CMakeLists.txt</span>\n<span class="token variable">CMAKE_MINIMUM_REQUIRED</span><span class="token punctuation">(</span><span class="token property">VERSION</span> <span class="token number">3.0.0</span><span class="token punctuation">)</span>\n<span class="token function">PROJECT</span><span class="token punctuation">(</span>hello <span class="token property">VERSION</span> <span class="token number">0.1.0</span><span class="token punctuation">)</span>\n\n<span class="token function">FILE</span><span class="token punctuation">(</span>GLOB SRC\n    *.cpp\n    *.h\n    <span class="token punctuation">)</span> \n\n<span class="token function">ADD_EXECUTABLE</span><span class="token punctuation">(</span><span class="token punctuation">${</span><span class="token variable">PROJECT_NAME</span><span class="token punctuation">}</span> <span class="token punctuation">${</span>SRC<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="cpp"><pre class="language-cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iosteram></span></span>\n\n<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"hello"</span> <span class="token operator">&lt;&lt;</span>std<span class="token double-colon punctuation">::</span>endl<span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",s.createElement(e.h2,null,"cmake.vim"),"\n",s.createElement(e.p,null,"自作する前によさげな ",s.createElement(e.code,null,"plugin")," を探索"),"\n",s.createElement(e.ul,null,"\n",s.createElement(e.li,null,"https://github.com/jalcine/cmake.vim"),"\n"),"\n",s.createElement(e.blockquote,null,"\n",s.createElement(e.p,null,"🔨 CMake functionality within Vim."),"\n"),"\n",s.createElement(e.p,null,"使い方がよくわからん・・・"),"\n",s.createElement(e.h2,null,"vim-cmake-project"),"\n",s.createElement(e.ul,null,"\n",s.createElement(e.li,null,"https://github.com/sigidagi/vim-cmake-project"),"\n"))}var c=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,t.ah)(),n.components);return e?s.createElement(e,n,s.createElement(l,n)):l(n)},p=a(8678),o=a(4160),u=a(8736);const r={code:n=>{let{children:e,className:a}=n;return a?s.createElement(u.Z,{className:a},e):s.createElement("code",null,e)}};function i(n){let{data:e,children:a}=n;const l=e.mdx.frontmatter;return s.createElement(p.Z,null,s.createElement("h1",null,l.title),s.createElement("div",{className:"tags-index"},l.tags&&l.tags.length>0&&l.tags.map((n=>s.createElement(o.rU,{to:"/tags/"+n+"/",itemProp:"url"},s.createElement("button",null,n))))),s.createElement(t.Zo,{components:r},a))}function m(n){return s.createElement(i,n,s.createElement(c,n))}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-content-posts-2019-nvim-cmake-md-d5e99b83d80a1d43db97.js.map