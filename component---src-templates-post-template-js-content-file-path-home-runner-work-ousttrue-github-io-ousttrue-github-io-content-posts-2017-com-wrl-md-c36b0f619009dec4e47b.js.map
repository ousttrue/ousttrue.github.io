{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2017-com-wrl-md-c36b0f619009dec4e47b.js","mappings":"+JAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,GAAI,KACJC,KAAM,SACLC,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,iCAAkC,KAAMK,EAAAA,cAAoBR,EAAYI,GAAI,KAAM,4CAA6C,KAAMI,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,uCAAwC,KAAMK,EAAAA,cAAoBR,EAAYK,KAAM,CAC1VI,wBAAyB,CACvBC,OAAQ,sjJAER,KAAMF,EAAAA,cAAoBR,EAAYI,GAAI,KAAM,oBAAqB,KAAMI,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,yFAA0F,KAAMK,EAAAA,cAAoBR,EAAYK,KAAM,CAC5PI,wBAAyB,CACvBC,OAAQ,4oIAER,KAAMF,EAAAA,cAAoBR,EAAYI,GAAI,KAAM,wBAAyB,KAAMI,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,gFAAiF,KAAMK,EAAAA,cAAoBR,EAAYK,KAAM,CACvPI,wBAAyB,CACvBC,OAAQ,w9QAER,KAAMF,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,yDAA0D,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,2GAA4G,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,iBAAkB,KAAMK,EAAAA,cAAoBR,EAAYK,KAAM,CACnXI,wBAAyB,CACvBC,OAAQ,ihCAER,KAAMF,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,QAAS,KAAMK,EAAAA,cAAoBR,EAAYK,KAAM,CACtGI,wBAAyB,CACvBC,OAAQ,8/BAER,KAAMF,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,kDAAmD,KAAMK,EAAAA,cAAoBR,EAAYK,KAAM,CAChJI,wBAAyB,CACvBC,OAAQ,skEAER,KAAMF,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,6FAA8F,KAAMK,EAAAA,cAAoBR,EAAYK,KAAM,CAC3LI,wBAAyB,CACvBC,OAAQ,oSAER,KAAMF,EAAAA,cAAoBR,EAAYK,KAAM,CAC9CI,wBAAyB,CACvBC,OAAQ,20BAER,KAAMF,EAAAA,cAAoBR,EAAYI,GAAI,KAAM,6BAA8B,KAAMI,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,gFAAiF,KAAMK,EAAAA,cAAoBR,EAAYK,KAAM,CAC5PI,wBAAyB,CACvBC,OAAQ,m4FAER,KAAMF,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,2CAA4C,KAAMK,EAAAA,cAAoBR,EAAYK,KAAM,CACzII,wBAAyB,CACvBC,OAAQ,q6DAGd,CAKA,MAJA,SAAoBX,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGI,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC3E,OAAOK,EAAYJ,EAAAA,cAAoBI,EAAWb,EAAOS,EAAAA,cAAoBV,EAAmBC,IAAUD,EAAkBC,EAC9H,E,8BC/CA,MAAMQ,EAAa,CACjBM,KAAMC,IAA2B,IAA1B,SAACC,EAAQ,UAAEC,GAAUF,EAC1B,OAAOE,EAAYR,EAAAA,cAAoBS,EAAAA,EAAsB,CAC3DD,UAAWA,GACVD,GAAYP,EAAAA,cAAoB,OAAQ,KAAMO,EAAS,GAG9D,SAASG,EAAYC,GAAmB,IAAlB,KAACC,EAAI,SAAEL,GAASI,EACpC,MAAME,EAAcD,EAAKE,IAAID,YAC7B,OAAOb,EAAAA,cAAoBe,EAAAA,EAAQ,KAAMf,EAAAA,cAAoB,KAAM,KAAMa,EAAYG,OAAQhB,EAAAA,cAAoB,MAAO,CACtHQ,UAAW,cACVK,EAAYI,MAAQJ,EAAYI,KAAKC,OAAS,GAAKL,EAAYI,KAAKE,KAAIC,GAClEpB,EAAAA,cAAoBqB,EAAAA,GAAM,CAC/BC,GAAI,SAASF,EAAG,IAChBG,SAAU,OACTvB,EAAAA,cAAoB,SAAU,KAAMoB,OACpCpB,EAAAA,cAAoBwB,EAAAA,GAAa,CACpCzB,WAAYA,GACXQ,GACL,CACe,SAASkB,EAAiBlC,GACvC,OAAOS,EAAAA,cAAoBU,EAAcnB,EAAOS,EAAAA,cAAoB0B,EAAqBnC,GAC3F,C","sources":["webpack:///./content/posts/2017/com_wrl.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"古のATLのWindows8以降？版のWRLを使ってみる。\"), \"\\n\", React.createElement(_components.h2, null, \"IXMLHTTPRequest2を使うサンプルコードをベースにWRL化してみる。\"), \"\\n\", React.createElement(_components.p, null, \"ComPtr\\n何はともあれComPtrを取り入れる。\\nBefore\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"cpp\\\"><pre class=\\\"language-cpp\\\"><code class=\\\"language-cpp\\\"><span class=\\\"token macro property\\\"><span class=\\\"token directive-hash\\\">#</span><span class=\\\"token directive keyword\\\">include</span> <span class=\\\"token string\\\">&lt;Msxml6.h></span></span>\\n<span class=\\\"token macro property\\\"><span class=\\\"token directive-hash\\\">#</span><span class=\\\"token directive keyword\\\">pragma</span> <span class=\\\"token expression\\\"><span class=\\\"token function\\\">comment</span><span class=\\\"token punctuation\\\">(</span>lib<span class=\\\"token punctuation\\\">,</span> </span><span class=\\\"token string\\\">\\\"msxml6.lib\\\"</span><span class=\\\"token expression\\\"><span class=\\\"token punctuation\\\">)</span></span></span>\\n\\n<span class=\\\"token macro property\\\"><span class=\\\"token directive-hash\\\">#</span><span class=\\\"token directive keyword\\\">define</span> <span class=\\\"token macro-name function\\\">SAFERELEASE</span><span class=\\\"token expression\\\"><span class=\\\"token punctuation\\\">(</span>p<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>p<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">{</span>p<span class=\\\"token operator\\\">-></span><span class=\\\"token function\\\">Release</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> p<span class=\\\"token operator\\\">=</span><span class=\\\"token keyword\\\">nullptr</span><span class=\\\"token punctuation\\\">;</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span></span></span>\\n\\n<span class=\\\"token keyword\\\">int</span> <span class=\\\"token function\\\">main</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">char</span> <span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token function\\\">CoInitializeEx</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token constant\\\">NULL</span><span class=\\\"token punctuation\\\">,</span> COINITBASE_MULTITHREADED<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    IXMLHTTPRequest2 <span class=\\\"token operator\\\">*</span>pXHR<span class=\\\"token operator\\\">=</span><span class=\\\"token keyword\\\">nullptr</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">auto</span> hr <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">CoCreateInstance</span><span class=\\\"token punctuation\\\">(</span>CLSID_FreeThreadedXMLHTTP60<span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token constant\\\">NULL</span><span class=\\\"token punctuation\\\">,</span>\\n            CLSCTX_INPROC_SERVER<span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token function\\\">IID_PPV_ARGS</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">&amp;</span>pXHR<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">FAILED</span><span class=\\\"token punctuation\\\">(</span>hr<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">goto</span> EXIT<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\nEXIT<span class=\\\"token operator\\\">:</span>\\n    <span class=\\\"token function\\\">SAFERELEASE</span><span class=\\\"token punctuation\\\">(</span>pXHR<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">CoUninitialize</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">FAILED</span><span class=\\\"token punctuation\\\">(</span>hr<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"SAFERELEASEとgoto\"), \"\\n\", React.createElement(_components.p, null, \"ComPtrを取り入れてSAFERELEASEとgotoを除去しよう。\\nAfter\\nRAIIを取り入れて積極的にEarly Outできる(後始末が自動になったので)。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"cpp\\\"><pre class=\\\"language-cpp\\\"><code class=\\\"language-cpp\\\"><span class=\\\"token macro property\\\"><span class=\\\"token directive-hash\\\">#</span><span class=\\\"token directive keyword\\\">include</span> <span class=\\\"token string\\\">&lt;Msxml6.h></span></span>\\n<span class=\\\"token macro property\\\"><span class=\\\"token directive-hash\\\">#</span><span class=\\\"token directive keyword\\\">pragma</span> <span class=\\\"token expression\\\"><span class=\\\"token function\\\">comment</span><span class=\\\"token punctuation\\\">(</span>lib<span class=\\\"token punctuation\\\">,</span> </span><span class=\\\"token string\\\">\\\"msxml6.lib\\\"</span><span class=\\\"token expression\\\"><span class=\\\"token punctuation\\\">)</span></span></span>\\n<span class=\\\"token macro property\\\"><span class=\\\"token directive-hash\\\">#</span><span class=\\\"token directive keyword\\\">include</span> <span class=\\\"token string\\\">&lt;wrl/client.h></span></span>\\n\\n\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">ComInitializer</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"token keyword\\\">public</span><span class=\\\"token operator\\\">:</span>\\n    <span class=\\\"token function\\\">ComInitializer</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token function\\\">CoInitializeEx</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token constant\\\">NULL</span><span class=\\\"token punctuation\\\">,</span> COINITBASE_MULTITHREADED<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token operator\\\">~</span><span class=\\\"token function\\\">ComInitializer</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token function\\\">CoUninitialize</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">int</span> <span class=\\\"token function\\\">main</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">int</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">char</span> <span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n    ComInitializer co<span class=\\\"token punctuation\\\">;</span>\\n\\n    Microsoft<span class=\\\"token double-colon punctuation\\\">::</span>WRL<span class=\\\"token double-colon punctuation\\\">::</span>ComPtr<span class=\\\"token operator\\\">&lt;</span>IXMLHTTPRequest2<span class=\\\"token operator\\\">></span> pXHR<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">auto</span> hr <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">CoCreateInstance</span><span class=\\\"token punctuation\\\">(</span>CLSID_FreeThreadedXMLHTTP60<span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token constant\\\">NULL</span><span class=\\\"token punctuation\\\">,</span>\\n            CLSCTX_INPROC_SERVER<span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token function\\\">IID_PPV_ARGS</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">&amp;</span>pXHR<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">FAILED</span><span class=\\\"token punctuation\\\">(</span>hr<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"IUnknown実装とComPtr初期化\"), \"\\n\", React.createElement(_components.p, null, \"Callbackの定義等で自らComオブジェクトを定義する場合がある。\\nIXMLHTTPRequest2Callbackを実装する例。\\nBefore\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"cpp\\\"><pre class=\\\"language-cpp\\\"><code class=\\\"language-cpp\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">CCallback</span> <span class=\\\"token operator\\\">:</span><span class=\\\"token base-clause\\\"><span class=\\\"token keyword\\\">public</span> <span class=\\\"token class-name\\\">IXMLHTTPRequest2Callback</span></span>\\n<span class=\\\"token punctuation\\\">{</span>\\n    ULONG m_cRef<span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">public</span><span class=\\\"token operator\\\">:</span>\\n    <span class=\\\"token function\\\">CCallback</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token operator\\\">~</span><span class=\\\"token function\\\">CCallback</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token comment\\\">// IUnknown</span>\\n    <span class=\\\"token function\\\">STDMETHODIMP_</span><span class=\\\"token punctuation\\\">(</span>ULONG<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token function\\\">AddRef</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token keyword\\\">override</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token function\\\">InterlockedIncrement</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">&amp;</span>m_cRef<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">return</span> m_cRef<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token function\\\">STDMETHODIMP_</span><span class=\\\"token punctuation\\\">(</span>ULONG<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token function\\\">Release</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token keyword\\\">override</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n        ULONG ulRefCount <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">InterlockedDecrement</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">&amp;</span>m_cRef<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0</span> <span class=\\\"token operator\\\">==</span> m_cRef<span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token keyword\\\">delete</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token keyword\\\">return</span> ulRefCount<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    STDMETHODIMP <span class=\\\"token function\\\">QueryInterface</span> <span class=\\\"token punctuation\\\">(</span>REFIID riid<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">void</span> <span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span>ppvObj<span class=\\\"token punctuation\\\">)</span><span class=\\\"token keyword\\\">override</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token comment\\\">// Always set out parameter to NULL, validating it first.</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">!</span>ppvObj<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">return</span> E_INVALIDARG<span class=\\\"token punctuation\\\">;</span>\\n\\n        <span class=\\\"token operator\\\">*</span>ppvObj <span class=\\\"token operator\\\">=</span> <span class=\\\"token constant\\\">NULL</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>riid <span class=\\\"token operator\\\">==</span> IID_IUnknown \\n                <span class=\\\"token operator\\\">||</span> riid <span class=\\\"token operator\\\">==</span> IID_IXMLHTTPRequest2Callback \\n           <span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token comment\\\">// Increment the reference count and return the pointer.</span>\\n            <span class=\\\"token operator\\\">*</span>ppvObj <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>LPVOID<span class=\\\"token punctuation\\\">)</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token function\\\">AddRef</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token keyword\\\">return</span> NOERROR<span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n\\n        <span class=\\\"token keyword\\\">return</span> E_NOINTERFACE<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token comment\\\">// IXMLHTTPRequest2Callback</span>\\n    STDMETHODIMP <span class=\\\"token function\\\">OnRedirect</span><span class=\\\"token punctuation\\\">(</span>\\n        __RPC__in_opt IXMLHTTPRequest2 <span class=\\\"token operator\\\">*</span>pXHR<span class=\\\"token punctuation\\\">,</span>\\n        __RPC__in_string <span class=\\\"token keyword\\\">const</span> WCHAR <span class=\\\"token operator\\\">*</span>pwszRedirectUrl<span class=\\\"token punctuation\\\">)</span><span class=\\\"token keyword\\\">override</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> E_NOTIMPL<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    STDMETHODIMP\\n        <span class=\\\"token function\\\">OnHeadersAvailable</span><span class=\\\"token punctuation\\\">(</span>\\n            __RPC__in_opt IXMLHTTPRequest2 <span class=\\\"token operator\\\">*</span>pXHR<span class=\\\"token punctuation\\\">,</span>\\n            DWORD dwStatus<span class=\\\"token punctuation\\\">,</span>\\n            __RPC__in_string <span class=\\\"token keyword\\\">const</span> WCHAR <span class=\\\"token operator\\\">*</span>pwszStatus\\n        <span class=\\\"token punctuation\\\">)</span><span class=\\\"token keyword\\\">override</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> E_NOTIMPL<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    STDMETHODIMP\\n        <span class=\\\"token function\\\">OnDataAvailable</span><span class=\\\"token punctuation\\\">(</span>\\n            __RPC__in_opt IXMLHTTPRequest2 <span class=\\\"token operator\\\">*</span>pXHR<span class=\\\"token punctuation\\\">,</span>\\n            __RPC__in_opt ISequentialStream <span class=\\\"token operator\\\">*</span>pResponseStream\\n        <span class=\\\"token punctuation\\\">)</span><span class=\\\"token keyword\\\">override</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> E_NOTIMPL<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    STDMETHODIMP\\n        <span class=\\\"token function\\\">OnResponseReceived</span><span class=\\\"token punctuation\\\">(</span>\\n            __RPC__in_opt IXMLHTTPRequest2 <span class=\\\"token operator\\\">*</span>pXHR<span class=\\\"token punctuation\\\">,</span>\\n            __RPC__in_opt ISequentialStream <span class=\\\"token operator\\\">*</span>pResponseStream\\n        <span class=\\\"token punctuation\\\">)</span><span class=\\\"token keyword\\\">override</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> E_NOTIMPL<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    STDMETHODIMP\\n        <span class=\\\"token function\\\">OnError</span><span class=\\\"token punctuation\\\">(</span>\\n            __RPC__in_opt IXMLHTTPRequest2 <span class=\\\"token operator\\\">*</span>pXHR<span class=\\\"token punctuation\\\">,</span>\\n            HRESULT hrError\\n        <span class=\\\"token punctuation\\\">)</span><span class=\\\"token keyword\\\">override</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> E_NOTIMPL<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"IUnknownの実装(AddRef, Release, QueryInterface)が定型コードである\"), \"\\n\", React.createElement(_components.p, null, \"newしたときにリファレンスカウントが1であること、AddRef, Releaseを正しく実装する\\nQueryInterfaceを正しく実装する(あとでインタフェースを増減させたときに更新を忘れたりする)\"), \"\\n\", React.createElement(_components.p, null, \"ComPtrの初期化が不穏\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"cpp\\\"><pre class=\\\"language-cpp\\\"><code class=\\\"language-cpp\\\">Microsoft<span class=\\\"token double-colon punctuation\\\">::</span>WRL<span class=\\\"token double-colon punctuation\\\">::</span>ComPtr<span class=\\\"token operator\\\">&lt;</span>CCallback<span class=\\\"token operator\\\">></span> pCallback<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// RefCount=1のインスタンスを内部ポインタ(&amp;演算子)に渡す</span>\\n<span class=\\\"token operator\\\">*</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span>CCallback<span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">*</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">&amp;</span>pCallback<span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">=</span><span class=\\\"token keyword\\\">new</span> <span class=\\\"token function\\\">CCallback</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> </code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"または、\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"cpp\\\"><pre class=\\\"language-cpp\\\"><code class=\\\"language-cpp\\\">Microsoft<span class=\\\"token double-colon punctuation\\\">::</span>WRL<span class=\\\"token double-colon punctuation\\\">::</span>ComPtr<span class=\\\"token operator\\\">&lt;</span>CCallback<span class=\\\"token operator\\\">></span> <span class=\\\"token function\\\">pCallback</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">new</span> CCallback<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 1+1はRefCount=2</span>\\npCallback<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">Get</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">-></span><span class=\\\"token function\\\">Release</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// 1に減らす</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"のようなあからさまに不穏なコードを書かなければならない。\\n間違いの元である。\\nAfter\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"cpp\\\"><pre class=\\\"language-cpp\\\"><code class=\\\"language-cpp\\\"><span class=\\\"token macro property\\\"><span class=\\\"token directive-hash\\\">#</span><span class=\\\"token directive keyword\\\">include</span> <span class=\\\"token string\\\">&lt;wrl/implements.h></span></span>\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">CCallback</span> <span class=\\\"token operator\\\">:</span>\\n    <span class=\\\"token base-clause\\\"><span class=\\\"token keyword\\\">public</span> Microsoft<span class=\\\"token double-colon punctuation\\\">::</span>WRL<span class=\\\"token double-colon punctuation\\\">::</span><span class=\\\"token class-name\\\">RuntimeClass</span><span class=\\\"token operator\\\">&lt;</span>\\n    Microsoft<span class=\\\"token double-colon punctuation\\\">::</span>WRL<span class=\\\"token double-colon punctuation\\\">::</span><span class=\\\"token class-name\\\">RuntimeClassFlags</span><span class=\\\"token operator\\\">&lt;</span>Microsoft<span class=\\\"token double-colon punctuation\\\">::</span>WRL<span class=\\\"token double-colon punctuation\\\">::</span><span class=\\\"token class-name\\\">ClassicCom</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token class-name\\\">IXMLHTTPRequest2Callback</span><span class=\\\"token operator\\\">></span></span>\\n<span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"token keyword\\\">public</span><span class=\\\"token operator\\\">:</span> \\n    <span class=\\\"token function\\\">CCallback</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token operator\\\">~</span><span class=\\\"token function\\\">CCallback</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token comment\\\">// IXMLHTTPRequest2Callback</span>\\n    <span class=\\\"token comment\\\">// 省略</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"とすることでIUnknownの実装をWRL::RuntimeClassに任せることができる。\\nまた、newによる初期化を禁止されるので、newではなくWRL::Makeを使う。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">error C2248: 'Microsoft::WRL::Details::DontUseNewUseMake::operator new': private メンバー (クラス 'Microsoft::WRL::Details::DontUseNewUseMake' で宣言されている) にアクセスできません。</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"cpp\\\"><pre class=\\\"language-cpp\\\"><code class=\\\"language-cpp\\\">Microsoft<span class=\\\"token double-colon punctuation\\\">::</span>WRL<span class=\\\"token double-colon punctuation\\\">::</span>ComPtr<span class=\\\"token operator\\\">&lt;</span>CCallback<span class=\\\"token operator\\\">></span> pCallback<span class=\\\"token operator\\\">=</span>Microsoft<span class=\\\"token double-colon punctuation\\\">::</span>WRL<span class=\\\"token double-colon punctuation\\\">::</span><span class=\\\"token generic-function\\\"><span class=\\\"token function\\\">Make</span><span class=\\\"token generic class-name\\\"><span class=\\\"token operator\\\">&lt;</span>CCallback<span class=\\\"token operator\\\">></span></span></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"MakeAndInitialize 初期化メソッド\"), \"\\n\", React.createElement(_components.p, null, \"Makeよりこっちの方がCom風。\\nRuntimeClassInitializeという名前のメンバ関数で初期化する。失敗した場合はS_OK以外を返す。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"cpp\\\"><pre class=\\\"language-cpp\\\"><code class=\\\"language-cpp\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">CCallback</span> <span class=\\\"token operator\\\">:</span>\\n    <span class=\\\"token base-clause\\\"><span class=\\\"token keyword\\\">public</span> Microsoft<span class=\\\"token double-colon punctuation\\\">::</span>WRL<span class=\\\"token double-colon punctuation\\\">::</span><span class=\\\"token class-name\\\">RuntimeClass</span><span class=\\\"token operator\\\">&lt;</span>\\n    Microsoft<span class=\\\"token double-colon punctuation\\\">::</span>WRL<span class=\\\"token double-colon punctuation\\\">::</span><span class=\\\"token class-name\\\">RuntimeClassFlags</span><span class=\\\"token operator\\\">&lt;</span>Microsoft<span class=\\\"token double-colon punctuation\\\">::</span>WRL<span class=\\\"token double-colon punctuation\\\">::</span><span class=\\\"token class-name\\\">ClassicCom</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token class-name\\\">IXMLHTTPRequest2Callback</span><span class=\\\"token operator\\\">></span></span>\\n<span class=\\\"token punctuation\\\">{</span>\\n<span class=\\\"token keyword\\\">public</span><span class=\\\"token operator\\\">:</span> \\n\\n    STDMETHODIMP <span class=\\\"token function\\\">RuntimeClassInitialize</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> S_OK<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\nMicrosoft<span class=\\\"token double-colon punctuation\\\">::</span>WRL<span class=\\\"token double-colon punctuation\\\">::</span>ComPtr<span class=\\\"token operator\\\">&lt;</span>CCallback<span class=\\\"token operator\\\">></span> pCallback<span class=\\\"token punctuation\\\">;</span>\\nhr<span class=\\\"token operator\\\">=</span>Microsoft<span class=\\\"token double-colon punctuation\\\">::</span>WRL<span class=\\\"token double-colon punctuation\\\">::</span><span class=\\\"token generic-function\\\"><span class=\\\"token function\\\">MakeAndInitialize</span><span class=\\\"token generic class-name\\\"><span class=\\\"token operator\\\">&lt;</span>CCallback<span class=\\\"token operator\\\">></span></span></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">&amp;</span>pCallback<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">FAILED</span><span class=\\\"token punctuation\\\">(</span>hr<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"MakeAndInitialize 初期化メソッド(引数)\\n9つまでいける。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"cpp\\\"><pre class=\\\"language-cpp\\\"><code class=\\\"language-cpp\\\">    STDMETHODIMP <span class=\\\"token function\\\">RuntimeClassInitialize</span><span class=\\\"token punctuation\\\">(</span>DWORD value<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> S_OK<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    DWORD value <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">255</span><span class=\\\"token punctuation\\\">;</span>\\n    Microsoft<span class=\\\"token double-colon punctuation\\\">::</span>WRL<span class=\\\"token double-colon punctuation\\\">::</span>ComPtr<span class=\\\"token operator\\\">&lt;</span>CCallback<span class=\\\"token operator\\\">></span> pCallback<span class=\\\"token punctuation\\\">;</span>\\n    hr<span class=\\\"token operator\\\">=</span>Microsoft<span class=\\\"token double-colon punctuation\\\">::</span>WRL<span class=\\\"token double-colon punctuation\\\">::</span><span class=\\\"token generic-function\\\"><span class=\\\"token function\\\">MakeAndInitialize</span><span class=\\\"token generic class-name\\\"><span class=\\\"token operator\\\">&lt;</span>CCallback<span class=\\\"token operator\\\">></span></span></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">&amp;</span>pCallback<span class=\\\"token punctuation\\\">,</span> value<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">FAILED</span><span class=\\\"token punctuation\\\">(</span>hr<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2017/com_wrl.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  const frontmatter = data.mdx.frontmatter;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"div\", {\n    className: \"tags-index\"\n  }, frontmatter.tags && frontmatter.tags.length > 0 && frontmatter.tags.map(tag => {\n    return React.createElement(Link, {\n      to: `/tags/${tag}/`,\n      itemProp: \"url\"\n    }, React.createElement(\"button\", null, tag));\n  })), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        tags\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h2","span","_provideComponents","components","React","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","frontmatter","mdx","Layout","title","tags","length","map","tag","Link","to","itemProp","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}