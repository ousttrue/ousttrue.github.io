{"version":3,"file":"component---src-templates-post-template-js-content-file-path-content-posts-2023-1001-md-2601d6d30980707c5163.js","mappings":"+JAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,GAAI,KACJC,KAAM,OACNC,EAAG,IACHC,KAAM,OACNC,GAAI,KACJC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBZ,EAAMa,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,yDAA0D,KAAMU,EAAAA,cAAoBb,EAAYI,GAAI,KAAM,WAAY,KAAMS,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,mBAAoBU,EAAAA,cAAoBb,EAAYK,KAAM,KAAM,WAAY,KAAM,KAAMQ,EAAAA,cAAoBb,EAAYG,EAAG,KAAMU,EAAAA,cAAoBb,EAAYM,EAAG,CACjaQ,KAAM,wDACL,yDAA0D,KAAMD,EAAAA,cAAoBb,EAAYG,EAAG,KAAMU,EAAAA,cAAoBb,EAAYM,EAAG,CAC7IQ,KAAM,oCACL,aAAc,+BAAgCD,EAAAA,cAAoBb,EAAYM,EAAG,CAClFQ,KAAM,qCACL,cAAe,kDAAmDD,EAAAA,cAAoBb,EAAYK,KAAM,KAAM,aAAc,gBAAiBQ,EAAAA,cAAoBb,EAAYK,KAAM,KAAM,cAAe,+BAAgC,KAAMQ,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,qEAAsE,KAAMU,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,qEAAsEU,EAAAA,cAAoBb,EAAYK,KAAM,KAAM,kBAAmB,uCAAwC,KAAMQ,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,uBAAwB,KAAMU,EAAAA,cAAoBb,EAAYO,KAAM,CAC7qBQ,wBAAyB,CACvBC,OAAQ,6jCAER,KAAMH,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,QAASU,EAAAA,cAAoBb,EAAYK,KAAM,KAAM,WAAY,yBAA0B,KAAMQ,EAAAA,cAAoBb,EAAYO,KAAM,CACxLQ,wBAAyB,CACvBC,OAAQ,qJAER,KAAMH,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,iLAAkL,KAAMU,EAAAA,cAAoBb,EAAYI,GAAI,KAAM,aAAc,KAAMS,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,yCAA0CU,EAAAA,cAAoBb,EAAYK,KAAM,KAAM,UAAW,0DAA2D,KAAMQ,EAAAA,cAAoBb,EAAYG,EAAG,KAAMU,EAAAA,cAAoBb,EAAYM,EAAG,CAC9jBQ,KAAM,6FACL,8FAA+F,KAAMD,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,oEAAqEU,EAAAA,cAAoBb,EAAYK,KAAM,KAAM,sBAAuB,uBAAwBQ,EAAAA,cAAoBb,EAAYK,KAAM,KAAM,KAAM,OAAQQ,EAAAA,cAAoBb,EAAYK,KAAM,KAAM,OAAQ,UAAWQ,EAAAA,cAAoBb,EAAYK,KAAM,KAAM,KAAM,UAAWQ,EAAAA,cAAoBb,EAAYK,KAAM,KAAM,OAAQ,sEAAuE,KAAMQ,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,iCAAkC,KAAMU,EAAAA,cAAoBb,EAAYQ,GAAI,KAAM,yBAA0B,KAAMK,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,iEAAkEU,EAAAA,cAAoBb,EAAYK,KAAM,KAAM,OAAQ,KAAMQ,EAAAA,cAAoBb,EAAYK,KAAM,KAAM,WAAY,gEAAiE,KAAMQ,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,UAAWU,EAAAA,cAAoBb,EAAYK,KAAM,KAAM,2BAA4B,2EAA4E,KAAMQ,EAAAA,cAAoBb,EAAYI,GAAI,KAAM,SAAU,KAAMS,EAAAA,cAAoBb,EAAYG,EAAG,KAAMU,EAAAA,cAAoBb,EAAYM,EAAG,CACz3CQ,KAAM,yCACL,0CAA2C,KAAMD,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,8CAA+C,KAAMU,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,kFAAmF,KAAMU,EAAAA,cAAoBb,EAAYI,GAAI,KAAM,aAAc,KAAMS,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,gPAAiP,KAAMU,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,0GAA2G,KAAMU,EAAAA,cAAoBb,EAAYI,GAAI,KAAM,aAAc,KAAMS,EAAAA,cAAoBb,EAAYG,EAAG,KAAMU,EAAAA,cAAoBb,EAAYM,EAAG,CACp5BQ,KAAM,sCACL,uCAAwC,KAAMD,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,+EAAgF,KAAMU,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,4HAA6H,KAAMU,EAAAA,cAAoBb,EAAYI,GAAI,KAAM,MAAO,KAAMS,EAAAA,cAAoBb,EAAYS,GAAI,KAAM,KAAMI,EAAAA,cAAoBb,EAAYU,GAAI,KAAMG,EAAAA,cAAoBb,EAAYM,EAAG,CAC9gBQ,KAAM,4DACL,6DAA8D,MACnE,CAKA,MAJA,SAAoBf,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOkB,QAASC,GAAajB,OAAOC,OAAO,CAAC,GAAGS,EAAAA,EAAAA,MAAsBZ,EAAMa,YAC3E,OAAOM,EAAYL,EAAAA,cAAoBK,EAAWnB,EAAOc,EAAAA,cAAoBf,EAAmBC,IAAUD,EAAkBC,EAC9H,E,8BClCA,MAAMa,EAAa,CACjBP,KAAMc,IAA2B,IAA1B,SAACC,EAAQ,UAAEC,GAAUF,EAC1B,OAAOE,EAAYR,EAAAA,cAAoBS,EAAAA,EAAsB,CAC3DD,UAAWA,GACVD,GAAYP,EAAAA,cAAoB,OAAQ,KAAMO,EAAS,GAG9D,SAASG,EAAYC,GAAmB,IAAlB,KAACC,EAAI,SAAEL,GAASI,EACpC,MAAME,EAAcD,EAAKE,IAAID,YAC7B,OAAOb,EAAAA,cAAoBe,EAAAA,EAAQ,KAAMf,EAAAA,cAAoB,KAAM,KAAMa,EAAYG,OAAQhB,EAAAA,cAAoB,MAAO,CACtHQ,UAAW,cACVK,EAAYI,MAAQJ,EAAYI,KAAKC,OAAS,GAAKL,EAAYI,KAAKE,KAAIC,GAClEpB,EAAAA,cAAoBqB,EAAAA,GAAM,CAC/BC,GAAI,SAASF,EAAG,IAChBG,SAAU,OACTvB,EAAAA,cAAoB,SAAU,KAAMoB,OACpCpB,EAAAA,cAAoBwB,EAAAA,GAAa,CACpCzB,WAAYA,GACXQ,GACL,CACe,SAASkB,EAAiBvC,GACvC,OAAOc,EAAAA,cAAoBU,EAAcxB,EAAOc,EAAAA,cAAoB0B,EAAqBxC,GAC3F,C","sources":["webpack:///./content/posts/2023/1001.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    code: \"code\",\n    a: \"a\",\n    span: \"span\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"なんとなくtuiでskkを使いたくなった。\\nできればソースを見て改造したりできるような小さい実装を探索。\"), \"\\n\", React.createElement(_components.h2, null, \"uim-fep\"), \"\\n\", React.createElement(_components.p, null, \"uim のソースに含まれている \", React.createElement(_components.code, null, \"uim-fep\"), \"。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/uim/uim/blob/master/fep/README.ja\"\n  }, \"https://github.com/uim/uim/blob/master/fep/README.ja\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/uim/sigscheme\"\n  }, \"sigscheme\"), \" という scheme 実装に依存して、\\n更にこれが \", React.createElement(_components.a, {\n    href: \"https://github.com/uim/libgcroots\"\n  }, \"libgcroots\"), \" というガーベッジコレクターに依存している。\\nビルド面で取りまわしが悪かった。\\nすなおに \", React.createElement(_components.code, null, \"configure\"), \" してもうまくいかなくて、\", React.createElement(_components.code, null, \"make-wc.sh\"), \" 経由ならばビルドできる。\\n(どこかに書いてある。)\"), \"\\n\", React.createElement(_components.p, null, \"scheme できないのもあって uim-fep の採用は見送ったのだけど、\\ntui frontend のソースは勉強になった。\"), \"\\n\", React.createElement(_components.p, null, \"上流の term に対しては、 escape sequence でスクロール領域を設定し、\\n下流の pty に対しては1行小さく \", React.createElement(_components.code, null, \"struct winsize\"), \" を指定するという技で\\n一番下をステータスラインとして使用していた。\"), \"\\n\", React.createElement(_components.p, null, \"TERMINFO で以下のような感じ。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c\\\"><pre class=\\\"language-c\\\"><code class=\\\"language-c\\\"><span class=\\\"token keyword\\\">const</span> <span class=\\\"token keyword\\\">char</span> <span class=\\\"token operator\\\">*</span>tmp <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">tparm</span><span class=\\\"token punctuation\\\">(</span>change_scroll_region<span class=\\\"token punctuation\\\">,</span> start<span class=\\\"token punctuation\\\">,</span> end<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"これは、 \", React.createElement(_components.code, null, \"DECSTBM\"), \" というエスケープシーケンスになるようだ。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">ESC[&lt;t>;&lt;b>r</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"ただ、pty の出力のあいまにステータスライン描画とPreEdito描画を挿入する必要があるのだけど、\\n変なタイミングで出力すると描画が乱れる。\\n特にスクリーンエディタタイプのアプリでは不規則に画面全体が更新される可能性があるので、\\n共存できないものがありそう。\\nuim-fep はptyの出力内容をパースして状態を判定していそうだった。\"), \"\\n\", React.createElement(_components.h2, null, \"skkfep 発掘\"), \"\\n\", React.createElement(_components.p, null, \"検索すると Windows 版の別の skk がヒットするのだけど、 古の \", React.createElement(_components.code, null, \"skkfep\"), \" がある。\\nソースコードを探索していたのだが、 gentoo の ebuild から発見することができた。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"http://ftp.nara.wide.ad.jp/pub/Linux/gentoo-portage/app-i18n/skkfep/skkfep-0.87-r1.ebuild\"\n  }, \"http://ftp.nara.wide.ad.jp/pub/Linux/gentoo-portage/app-i18n/skkfep/skkfep-0.87-r1.ebuild\")), \"\\n\", React.createElement(_components.p, null, \"skkfep のホームページは無くなっているのだけど、ソースコードは元の url にひっそりと生きている。\\nただ、ビルドしても \", React.createElement(_components.code, null, \"segmentation fault\"), \" で動かなかった。\\nこれは、拡張子を \", React.createElement(_components.code, null, \"c\"), \" から \", React.createElement(_components.code, null, \"cpp\"), \" に変えて、 \", React.createElement(_components.code, null, \"c\"), \" がなんでも \", React.createElement(_components.code, null, \"int\"), \" に解釈するのを\\nやめることで、なんとなく動くようになった。\\nどこかでメモリー破壊が起きていたのだろうけど、どこかはわからない。\"), \"\\n\", React.createElement(_components.p, null, \"ソース規模的に手に負えそうだったのでやってみることにした。\"), \"\\n\", React.createElement(_components.h3, null, \"skkfep のステータスラインの実装など\"), \"\\n\", React.createElement(_components.p, null, \"ステータスラインに関しては、 uim-fep と同じ手法ぽい(こっちの方が古い？)。\\nTERMCAP で実装されていて、 \", React.createElement(_components.code, null, \"AIX\"), \", \", React.createElement(_components.code, null, \"SOLARIS\"), \" 等のUNIXで動くようになっている。\\nあと、ハードウェア的にステータスラインを持った機種向けと思われる分岐があった。\"), \"\\n\", React.createElement(_components.p, null, \"特徴的なのは \", React.createElement(_components.code, null, \"euc-jp|sjis|iso-2022-jp\"), \" を前提としていて、\\n入出力で文字コードの変換をしているところ。\\nterm と pty で違う文字コードが使われることも想定しているぽい。\"), \"\\n\", React.createElement(_components.h2, null, \"yaskk\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/uobikiemukot/yaskk\"\n  }, \"https://github.com/uobikiemukot/yaskk\")), \"\\n\", React.createElement(_components.p, null, \"もっと小さい実装としてこちらも参考になる。\\nREADMEの状態遷移図も参考になる。\"), \"\\n\", React.createElement(_components.p, null, \"skkfep のキーマップがいっぱい(9つ？)あって変だなぁと思っていたのだが、\\n入力モード(4つ)と変換モード(3つ)の2つがあることを途中で理解した。\"), \"\\n\", React.createElement(_components.h2, null, \"理想的には仮想画面\"), \"\\n\", React.createElement(_components.p, null, \"pty の出力を libvterm で受けて仮想画面に反映。\\nステータスラインとPreEditの描画も仮想画面に合成。\\n合成済みの仮想画面を term に描画というのがよさそう。\\nこの方法なら変換候補のメニュー表示など、元画面の上書きができる。\\n仮想画面を escape sequence 出力する機能については ftxui を使う構想。\\n全体の実装量が増えるのだが、pty 出力の自前解析は不要になる。\\nいちおう Windows でも動くを念頭に追いている。\"), \"\\n\", React.createElement(_components.p, null, \"しかし、良く考えると preedito の描画位置を決める情報が無さそうである。\\nカーソル位置に暗黙的に出力するしか無い。\\ncli ではうまくいく可能性が高いが、tui ではアプリによるんではないか。\"), \"\\n\", React.createElement(_components.h2, null, \"まだちゃんと動かず\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/ousttrue/skkfep\"\n  }, \"https://github.com/ousttrue/skkfep\")), \"\\n\", React.createElement(_components.p, null, \"改造しすぎて動かなくなってしまった。\\n(もともと utf-8 では一度もちゃんと動いていないので気にしていない w)\\n再構成するべく改造を継続中。\"), \"\\n\", React.createElement(_components.p, null, \"なおこの記事は、nvim + skkeleton で書いております。\\ntui で editor 以外で日本語を入力したいことはあまり無いので、全部 skkeleton でいいのでは？\\nと思わなくもないが、 強いて言えばw3mを使うとき？\"), \"\\n\", React.createElement(_components.h2, null, \"参考\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"http://quruli.ivory.ne.jp/document/ddskk_14.2/skk_3.html\"\n  }, \"http://quruli.ivory.ne.jp/document/ddskk_14.2/skk_3.html\")), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2023/1001.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  const frontmatter = data.mdx.frontmatter;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"div\", {\n    className: \"tags-index\"\n  }, frontmatter.tags && frontmatter.tags.length > 0 && frontmatter.tags.map(tag => {\n    return React.createElement(Link, {\n      to: `/tags/${tag}/`,\n      itemProp: \"url\"\n    }, React.createElement(\"button\", null, tag));\n  })), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        tags\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h2","code","a","span","h3","ul","li","_provideComponents","components","React","href","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","frontmatter","mdx","Layout","title","tags","length","map","tag","Link","to","itemProp","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}