"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7041],{6922:function(n,a,s){s.r(a),s.d(a,{default:function(){return u}});var e=s(1151),p=s(7294);function t(n){const a=Object.assign({p:"p",span:"span"},(0,e.ah)(),n.components);return p.createElement(p.Fragment,null,p.createElement(a.p,null,"CEDEC2017のセッションを聞いてUSDビルドする気が戻ってきた。部品のひとつ、OpenSubdivのvcpkg版ビルドに取り組んでみる。"),"\n",p.createElement(a.p,null,"packageを作る\nPOWERSHELLを開いてvcpkgディレクトリに移動。"),"\n",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">PS<span class="token operator">></span> .<span class="token punctuation">\\</span>vcpkg.exe create opensubdiv https://github.com/PixarAnimationStudios/OpenSubdiv/archive/v3_3_0.tar.gz\n-- Generated portfile: vcpkg<span class="token punctuation">\\</span>ports<span class="token punctuation">\\</span>opensubdiv<span class="token punctuation">\\</span>portfile.cmake\n-- Generated CONTROL: vcpkg<span class="token punctuation">\\</span>ports<span class="token punctuation">\\</span>opensubdiv<span class="token punctuation">\\</span>CONTROL\n-- To launch an editor <span class="token keyword">for</span> these new files, run\n--     .<span class="token punctuation">\\</span>vcpkg edit opensubdiv\n\nports/opensubdiv/CONTROL\nSource: opensubdiv\nVersion: <span class="token number">3.3</span>.0\nDescription: An Open-Source subdivision surface library.\nBuild-Depends: tbb, glew, ptex</code></pre></div>'}}),"\n",p.createElement(a.p,null,p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">ports/opensubdiv/portfile.cmake</code>'}})),"\n",p.createElement(a.p,null,"最低限、展開するアーカイブのパスを指定。"),"\n",p.createElement(a.p,null,p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">set(SOURCE_PATH ${CURRENT_BUILDTREES_DIR}/src/OpenSubdiv-3_3_0)</code>'}})),"\n",p.createElement(a.p,null,"ビルドしてみる\nさすがにエラーになる。vcpkg の ",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">buildtree/opensubdiv</code>'}})," に潜ってビルド手順を調べてみる。\n手動ビルド\nOpenSubdivのビルドシステムはCMakeだった。\n早速、CmakeGUIでやってみる。\n",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">CMAKE_INSTALL_PREFIX=VCPKG_DIR/installed/x64-windows</code>'}})," だけ設定して様子を見る。"),"\n",p.createElement(a.p,null,"CUDAとかOpenCLとかそっち方面の依存がある様子。\nNO_CUDAとNO_OPENCLにチェックを入れてみる。\nあとNO_DOCも。\nSolutionをGenerateしてビルドしてみる。\nDebug版だけtbb_debug.libが見つからないエラーが出た。\nDEBUG版のFIND_PACKAGEの修正"),"\n",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="cmake"><pre class="language-cmake"><code class="language-cmake">OpenSubdiv-3_3_0/cmake/FindTBB.cmake\n    <span class="token keyword">find_library</span><span class="token punctuation">(</span>TBB_<span class="token punctuation">${</span>TBB_LIB<span class="token punctuation">}</span>_LIBRARY\n        NAMES\n            <span class="token punctuation">${</span>TBB_LIB<span class="token punctuation">}</span>\n        HINTS\n            <span class="token string">"<span class="token interpolation"><span class="token punctuation">${</span><span class="token variable">TBB_LOCATION</span><span class="token punctuation">}</span></span>/lib"</span>\n            <span class="token string">"<span class="token interpolation"><span class="token punctuation">${</span><span class="token variable">TBB_LOCATION</span><span class="token punctuation">}</span></span>/bin"</span>\n            <span class="token string">"$ENV{TBB_LOCATION}/lib"</span>\n            <span class="token string">"$ENV{TBB_LOCATION}/bin"</span>\n            <span class="token string">"$ENV{PROGRAMFILES}/TBB/lib"</span>\n            /usr/lib\n            /usr/lib/w32api\n            /usr/local/lib\n            /usr/X11R6/lib\n        PATH_SUFFIXES\n            <span class="token string">"<span class="token interpolation"><span class="token punctuation">${</span><span class="token variable">TBB_LIB_ARCH</span><span class="token punctuation">}</span></span>"</span>\n            <span class="token string">"<span class="token interpolation"><span class="token punctuation">${</span><span class="token variable">TBB_LIB_ARCH</span><span class="token punctuation">}</span></span>/<span class="token interpolation"><span class="token punctuation">${</span><span class="token variable">TBB_COMPILER</span><span class="token punctuation">}</span></span>"</span>\n            <span class="token string">"<span class="token interpolation"><span class="token punctuation">${</span><span class="token variable">TBB_LIB_ARCH</span><span class="token punctuation">}</span></span>/gcc4.4"</span>\n            <span class="token string">"<span class="token interpolation"><span class="token punctuation">${</span><span class="token variable">TBB_LIB_ARCH</span><span class="token punctuation">}</span></span>/gcc4.1"</span>\n        DOC <span class="token string">"Intel\'s Threading Building Blocks library"</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",p.createElement(a.p,null,"vcpkgでは、",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">VCPKG_DIR/installed/x64-windows/debug/lib/tbb_debug.lib</code>'}})," にあるので見つかりませんね。\n",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">TBB_LOCATION=VCPKG_DIR/installed/x64-windows/debug</code>'}})," を指定したらうまくいった。"),"\n",p.createElement(a.p,null,"portfile.cmakeに反映\nports/opensubdiv/portfile.cmake\nこうなった。"),"\n",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="cmake"><pre class="language-cmake"><code class="language-cmake"><span class="token function">vcpkg_configure_cmake</span><span class="token punctuation">(</span>\n    SOURCE_PATH <span class="token punctuation">${</span>SOURCE_PATH<span class="token punctuation">}</span>\n    <span class="token comment">#PREFER_NINJA # Disable this option if project cannot be built with Ninja</span>\n    OPTIONS\n        <span class="token comment">#-DNO_LIB=1</span>\n        -DNO_CUDA=<span class="token number">1</span>\n        -DNO_DOC=<span class="token number">1</span>\n        -DNO_OPENCL=<span class="token number">1</span>\n        -DNO_OPENGL=<span class="token number">1</span>\n        -DNO_METAL=<span class="token number">1</span>\n        -DNO_DX=<span class="token number">1</span>\n        <span class="token comment">#-DNO_OMP=1</span>\n        -DNO_TESTS=<span class="token number">1</span>\n        -DNO_EXAMPLES=<span class="token number">1</span>\n        -DNO_TUTORIALS=<span class="token number">1</span>\n        -DNO_REGRESSION=<span class="token number">1</span>\n        -DNO_GLTESTS=<span class="token number">1</span>\n        <span class="token comment"># for tbb_debug.lib</span>\n        -DTBB_LOCATION=<span class="token punctuation">${</span>CURRENT_INSTALLED_DIR<span class="token punctuation">}</span>/debug\n    <span class="token comment"># OPTIONS_RELEASE -DOPTIMIZE=1</span>\n    <span class="token comment"># OPTIONS_DEBUG -DDEBUGGABLE=1</span>\n<span class="token punctuation">)</span></code></pre></div>'}}),"\n",p.createElement(a.p,null,"package\nVCPKG_DIR/packages/opensubdiv_x86-windows\npackageの調整\nエラーメッセージの指示に従って。"),"\n",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="ports/opensubdiv/portfile.cmake"><pre class="language-ports/opensubdiv/portfile.cmake"><code class="language-ports/opensubdiv/portfile.cmake">vcpkg_install_cmake()\nvcpkg_copy_pdbs()\n\nfile(REMOVE_RECURSE ${CURRENT_PACKAGES_DIR}/debug/include)\n\n# Handle copyright\nfile(COPY ${CURRENT_BUILDTREES_DIR}/src/OpenSubdiv-3_3_0/LICENSE.txt DESTINATION ${CURRENT_PACKAGES_DIR}/share/opensubdiv)\nfile(RENAME ${CURRENT_PACKAGES_DIR}/share/opensubdiv/LICENSE.txt ${CURRENT_PACKAGES_DIR}/share/opensubdiv/copyright)</code></pre></div>'}}),"\n",p.createElement(a.p,null,"以下のようになった。"),"\n",p.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="shell"><pre class="language-shell"><code class="language-shell">+---debug\n<span class="token operator">|</span>   <span class="token punctuation">\\</span>---lib\n<span class="token operator">|</span>           osdCPU.lib\n<span class="token operator">|</span>\n+---include\n<span class="token operator">|</span>   <span class="token punctuation">\\</span>---opensubdiv\n<span class="token operator">|</span>       <span class="token operator">|</span>   version.h\n<span class="token operator">|</span>       <span class="token operator">|</span>\n<span class="token operator">|</span>       +---far\n<span class="token operator">|</span>       <span class="token operator">|</span>       error.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       patchDescriptor.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       patchMap.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       patchParam.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       patchTable.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       patchTableFactory.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       primvarRefiner.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       ptexIndices.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       stencilTable.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       stencilTableFactory.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       topologyDescriptor.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       topologyLevel.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       topologyRefiner.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       topologyRefinerFactory.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       types.h\n<span class="token operator">|</span>       <span class="token operator">|</span>\n<span class="token operator">|</span>       +---hbr\n<span class="token operator">|</span>       <span class="token operator">|</span>       allocator.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       bilinear.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       catmark.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       cornerEdit.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       creaseEdit.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       face.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       faceEdit.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       fvarData.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       fvarEdit.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       halfedge.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       hierarchicalEdit.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       holeEdit.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       loop.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       mesh.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       subdivision.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       vertex.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       vertexEdit.h\n<span class="token operator">|</span>       <span class="token operator">|</span>\n<span class="token operator">|</span>       +---osd\n<span class="token operator">|</span>       <span class="token operator">|</span>       bufferDescriptor.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       cpuEvaluator.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       cpuPatchTable.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       cpuVertexBuffer.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       mesh.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       nonCopyable.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       ompEvaluator.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       ompKernel.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       opengl.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       tbbEvaluator.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       tbbKernel.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       types.h\n<span class="token operator">|</span>       <span class="token operator">|</span>\n<span class="token operator">|</span>       +---sdc\n<span class="token operator">|</span>       <span class="token operator">|</span>       bilinearScheme.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       catmarkScheme.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       crease.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       loopScheme.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       options.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       scheme.h\n<span class="token operator">|</span>       <span class="token operator">|</span>       types.h\n<span class="token operator">|</span>       <span class="token operator">|</span>\n<span class="token operator">|</span>       <span class="token punctuation">\\</span>---vtr\n<span class="token operator">|</span>               array.h\n<span class="token operator">|</span>               componentInterfaces.h\n<span class="token operator">|</span>               fvarLevel.h\n<span class="token operator">|</span>               fvarRefinement.h\n<span class="token operator">|</span>               level.h\n<span class="token operator">|</span>               refinement.h\n<span class="token operator">|</span>               sparseSelector.h\n<span class="token operator">|</span>               stackBuffer.h\n<span class="token operator">|</span>               types.h\n<span class="token operator">|</span>\n+---lib\n<span class="token operator">|</span>       osdCPU.lib\n<span class="token operator">|</span>\n<span class="token punctuation">\\</span>---share\n    <span class="token punctuation">\\</span>---opensubdiv\n            copyright</code></pre></div>'}}),"\n",p.createElement(a.p,null,"OpenSubdivにはdllのビルドは無いみたい。ライブラリ構成もtemplate classを主体とするもののようだ。"))}var o=function(n){void 0===n&&(n={});const{wrapper:a}=Object.assign({},(0,e.ah)(),n.components);return a?p.createElement(a,n,p.createElement(t,n)):t(n)},r=s(8678),l=s(1883),c=s(8838);const k={code:n=>{let{children:a,className:s}=n;return s?p.createElement(c.Z,{className:s},a):p.createElement("code",null,a)}};function i(n){let{data:a,children:s}=n;const t=a.mdx.frontmatter;return p.createElement(r.Z,null,p.createElement("h1",null,t.title),p.createElement("div",{className:"tags-index"},t.tags&&t.tags.length>0&&t.tags.map((n=>p.createElement(l.rU,{to:"/tags/"+n+"/",itemProp:"url"},p.createElement("button",null,n))))),p.createElement(e.Zo,{components:k},s))}function u(n){return p.createElement(i,n,p.createElement(o,n))}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2017-08-vcpkg-opensubdiv-md-734c26ab6bce44172373.js.map