"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2114],{9617:function(e,n,t){t.r(n),t.d(n,{default:function(){return m}});var l=t(1151),r=t(7294);function a(e){const n=Object.assign({h1:"h1",ul:"ul",li:"li",code:"code",p:"p",h2:"h2",pre:"pre"},(0,l.ah)(),e.components);return r.createElement(r.Fragment,null,r.createElement(n.h1,null,"なんとなく gatsby やってみる"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,r.createElement(n.code,null,"mdx")," はおもしろそう。カスタマイズはの記法は ",r.createElement(n.code,null,"hugo")," や ",r.createElement(n.code,null,"jinja")," よりも素直で簡単そうに見えた"),"\n",r.createElement(n.li,null,"GraphQL もわりと素直で簡単そうに見える"),"\n"),"\n",r.createElement(n.p,null,"が、既存の markdown がわりとエラーになる。"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"frontmatter が yaml 必要。toml 食えない。"),"\n",r.createElement(n.li,null,r.createElement(n.code,null,"<url> 記法")," とか。エラーがあると全部失敗になる。"),"\n"),"\n",r.createElement(n.p,null,"ということで、 python のスクリプトで既存の markdown を改変して様式を合わせることにした。"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"frontmatter の yaml 変換"),"\n",r.createElement(n.li,null,"正規表現で ",r.createElement(n.code,null,"<url> 記法")," 除去"),"\n",r.createElement(n.li,null,"frontmatter.title が無い場合に先頭の見出しを title に付け替える(sphinx の myst 向けの記事？)"),"\n"),"\n",r.createElement(n.h2,null,"MDXRenderer 無くなっているぽい"),"\n",r.createElement(n.p,null,"breaking change w"),"\n",r.createElement(n.p,null,"gatsby-plugin-mdx が 3 から 4 になるときに変更があって、\nMDXRenderer が無くなって\nMDXprovider を使う方式に変わったぽい？"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"https://www.gatsbyjs.com/plugins/gatsby-plugin-mdx"),"\n",r.createElement(n.li,null,"https://www.gatsbyjs.com/docs/how-to/routing/mdx/"),"\n"),"\n",r.createElement(n.p,null,"見よう見まねでセットアップしてなんとなく動いたのだが、\nちょっと変えたら動かなくなって、\n調べていくとどうも最近のバージョンで ",r.createElement(n.code,null,"MDXRenderer")," が無くなったぽい。"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"https://stackoverflow.com/questions/74309351/how-to-render-mdx-with-gatsby-plugin-mdx-from-allmdx-query"),"\n"),"\n",r.createElement(n.pre,null,r.createElement(n.code,null,"Element type is invalid: expected a string\n")),"\n",r.createElement(n.p,null,"というエラーメッセージが出て全然意味がわからなかったのだが、\n",r.createElement(n.code,null,"MDXRenderer")," が無くなっていて、import 失敗の結果出たエラーだったぽい。\nわからねー。"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-jsx"},'import { MDXRenderer } from "gatsby-plugin-mdx";\n')),"\n",r.createElement(n.p,null,"いまバージョンはどうも Rendering 済みの ",r.createElement(n.code,null,"children")," を引数で受ける作法になっているぽい。"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-jsx"},"// post template\nfunction PostTemplate({ data: { mdx }, children }) {}\n")),"\n",r.createElement(n.p,null,"chidren を受けるには ",r.createElement(n.code,null,"createPages")," を以下のようにする。"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-jsx"},"// gatsby-node.js\ndata.allMdx.nodes.forEach((node) => {\n  actions.createPage({\n    path: node.frontmatter.slug,\n    // 👇 この記述により template に children を供給できるぽい\n    component: `${postTemplate}?__contentFilePath=${node.internal.contentFilePath}`,\n    context: {\n      id: node.id,\n    },\n  });\n});\n")),"\n",r.createElement(n.p,null,"要するにドキュメントに書いてあるとおりにする必要があるのだが、\n内容を理解していないのと、古い情報との混在で難航したのであった。"),"\n",r.createElement(n.h2,null,"かくして、白いサイトに戻った。"),"\n",r.createElement(n.p,null,"はまったおかげで gatsby のデータの流れがわかってきた。\n適当に組み立てて行こう。"))}var c=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,l.ah)(),e.components);return n?r.createElement(n,e,r.createElement(a,e)):a(e)};t(8678);function u(e){let{data:n,children:t}=e;return r.createElement(r.Fragment,null,r.createElement("h1",null,n.mdx.frontmatter.title),r.createElement(l.Zo,null,t))}function m(e){return r.createElement(u,e,r.createElement(c,e))}},8678:function(e,n,t){t(7294)},1151:function(e,n,t){t.d(n,{Zo:function(){return u},ah:function(){return a}});var l=t(7294);const r=l.createContext({});function a(e){const n=l.useContext(r);return l.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const c={};function u({components:e,children:n,disableParentContext:t}){let u;return u=t?"function"==typeof e?e({}):e||c:a(e),l.createElement(r.Provider,{value:u},n)}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2023-0313-gatsby-md-1211f24ea12d6429eeba.js.map