{"version":3,"file":"component---src-templates-post-template-js-content-file-path-content-posts-2013-02-28-sphinx-md-6377bf62cb9605974038.js","mappings":"+JAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,KAAM,SACLC,EAAAA,EAAAA,MAAsBN,EAAMO,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,iEAAkE,KAAMI,EAAAA,cAAoBP,EAAYI,KAAM,CACtMI,wBAAyB,CACvBC,OAAQ,y+CAER,KAAMF,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,WACrD,CAKA,MAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOW,QAASC,GAAaV,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOK,EAAYJ,EAAAA,cAAoBI,EAAWZ,EAAOQ,EAAAA,cAAoBT,EAAmBC,IAAUD,EAAkBC,EAC9H,E,8BCVA,MAAMO,EAAa,CACjBM,KAAMC,IAA2B,IAA1B,SAACC,EAAQ,UAAEC,GAAUF,EAC1B,OAAOE,EAAYR,EAAAA,cAAoBS,EAAAA,EAAsB,CAC3DD,UAAWA,GACVD,GAAYP,EAAAA,cAAoB,OAAQ,KAAMO,EAAS,GAG9D,SAASG,EAAYC,GAAmB,IAAlB,KAACC,EAAI,SAAEL,GAASI,EACpC,MAAME,EAAcD,EAAKE,IAAID,YAC7B,OAAOb,EAAAA,cAAoBe,EAAAA,EAAQ,KAAMf,EAAAA,cAAoB,KAAM,KAAMa,EAAYG,OAAQhB,EAAAA,cAAoB,MAAO,CACtHQ,UAAW,cACVK,EAAYI,MAAQJ,EAAYI,KAAKC,OAAS,GAAKL,EAAYI,KAAKE,KAAIC,GAClEpB,EAAAA,cAAoBqB,EAAAA,GAAM,CAC/BC,GAAI,SAASF,EAAG,IAChBG,SAAU,OACTvB,EAAAA,cAAoB,SAAU,KAAMoB,OACpCpB,EAAAA,cAAoBwB,EAAAA,GAAa,CACpCzB,WAAYA,GACXQ,GACL,CACe,SAASkB,EAAiBjC,GACvC,OAAOQ,EAAAA,cAAoBU,EAAclB,EAAOQ,EAAAA,cAAoB0B,EAAqBlC,GAC3F,C","sources":["webpack:///./content/posts/2013/02/28/sphinx.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"sphinx も入れてみる\\nOctopress のサブディレクトリに Sphinx を入れた。\\n今回のディレクトリ配置\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">work\\n  + octopress\\n    + Rakefile\\n    + _deploy\\n  + sphinx\\n    + Makefile\\n    + source\\n      + conf.py\\n    + build\\n  + sphihnx-to-github\\n    + setup.py\\n    + sphinxtogithub\\n      + __init__.py\\n\\noctopressをメインにサブディレクトリにsphinxを導入してみる。\\noctopressの外のディレクトリで、\\n$ mkdir sphinx\\n$ cd sphinx\\n$ sphinx-quickstart\\n\\nとした。 Makefileに\\noctopress: html\\n    rm -rf ../octopress/_deploy/sphinx\\n    cp -rp build/html ../octopress/_deploy/sphinx\\n\\nと追記。 さらにoctopress/Rakefileを改造。\\n{% codeblock lang:ruby %} multitask :push do puts “## Deploying branch\\nto Github Pages “ (Dir[“#{deploy_dir}/*“]).each { |f| case f when\\n%r|.*/sphinx\\\\$| # donothing puts “skip #{f}” else rm_rf(f) end } {%\\nendcodeblock %}\\nとしてsphinxディレクトリをpush前にクリアしないようにした。\\nこれでoctopressと共存できた。\\n次はsphinxの見た目の問題。\\noctopressと共存するので.nojekyllは使えないのでsphinx-to-githubを使う。\\n$ pip install -e git+git://github.com/michaeljones/sphinx-to-github.git#egg=sphinx-to-github\\n\\nエラー\\nerror import name setup\\n\\nとかそんな感じのエラー(うろ覚え)。\\nいったんローカルにcloneして調べてみる。\\n$ git clone https://github.com/michaeljones/sphinx-to-github.git\\n$ cd sphinx-to-github\\n$ sudo python setup.py install\\n\\nしばらく調べた結果、\\npython3でモジュールimportの仕様が変わったのが原因と理解。直した。\\n$ cd sphinx-to-github/sphinxtogithub\\n$ mv sphinxtogithub.py __init__.py\\n$ cd ..\\n$ sudo python setup.py install\\n\\nsphinx/source/conf.pyに\\nextensions = ['sphinxtogithub']\\n\\nと書いて\\n$ Make octopress</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"でできあがり。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2013/02/28/sphinx.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  const frontmatter = data.mdx.frontmatter;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"div\", {\n    className: \"tags-index\"\n  }, frontmatter.tags && frontmatter.tags.length > 0 && frontmatter.tags.map(tag => {\n    return React.createElement(Link, {\n      to: `/tags/${tag}/`,\n      itemProp: \"url\"\n    }, React.createElement(\"button\", null, tag));\n  })), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        tags\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","span","_provideComponents","components","React","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","frontmatter","mdx","Layout","title","tags","length","map","tag","Link","to","itemProp","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}