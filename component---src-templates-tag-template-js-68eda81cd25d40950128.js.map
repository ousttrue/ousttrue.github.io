{"version":3,"file":"component---src-templates-tag-template-js-68eda81cd25d40950128.js","mappings":"kHAIA,MAAMA,EAASA,IACbC,EAAAA,cAAA,cACEA,EAAAA,cAACC,EAAAA,GAAI,CAACC,GAAG,KAAI,oBACbF,EAAAA,cAACC,EAAAA,GAAI,CAACC,GAAG,WAAU,SACnBF,EAAAA,cAACC,EAAAA,GAAI,CAACC,GAAG,UAAS,QAClBF,EAAAA,cAACC,EAAAA,GAAI,CAACC,GAAG,WAAU,UAIjBC,EAASA,IAAMH,EAAAA,cAAA,cAAQ,OAAI,IAAII,MAAOC,cAAc,aAc1D,IAZeC,IAAA,IAAC,SAAEC,GAAUD,EAAA,OAC1BN,EAAAA,cAAA,WACEA,EAAAA,cAACD,EAAM,MAEPC,EAAAA,cAAA,OAAKQ,UAAU,UACbR,EAAAA,cAAA,YAAOO,IAGTP,EAAAA,cAACG,EAAM,MACH,C,gEC+DR,UAhFaG,IAA4B,IAA3B,YAAEG,EAAW,KAAEC,GAAMJ,EAC/B,MAAM,IAAEK,GAAQF,GACV,MAAEG,EAAK,WAAEC,GAAeH,EAAKI,OAC7BC,EAAUL,EAAKM,OAAOC,MACtBV,EAAWG,EAAKH,SAASU,MACzBC,EAAeL,EAAU,SAAuB,IAAfA,EAAmB,GAAK,KAAG,iBAC7CF,EAAG,IAExB,OACIX,EAAAA,cAACmB,EAAAA,EAAM,KACHnB,EAAAA,cAAA,WACIA,EAAAA,cAAA,UAAKkB,GACLlB,EAAAA,cAAA,UACKY,EAAMQ,KAAIC,IAAe,IAAd,KAAEC,GAAMD,EAChB,MAAM,KAAEE,GAASD,EAAKE,QAChB,MAAEC,GAAUH,EAAKI,YACvB,OACI1B,EAAAA,cAAA,MAAI2B,IAAKJ,GACLvB,EAAAA,cAACC,EAAAA,GAAI,CAACC,GAAIqB,GAAOE,GAChB,KAQjBzB,EAAAA,cAAA,UACKe,EAAQK,KAAKE,GAENtB,EAAAA,cAAA,UACIA,EAAAA,cAACC,EAAAA,GAAI,CAACC,GAAE,SAAWoB,EAAKM,KAAI,KAAMN,EAAKM,UAKvD5B,EAAAA,cAAA,UACKO,EAASa,KAAKE,GAEPtB,EAAAA,cAAA,UACKsB,EAAKO,KAAKT,KAAKU,GAER9B,EAAAA,cAAA,UACIA,EAAAA,cAACC,EAAAA,GAAI,CAACC,GAAE,SAAW4B,EAAS,KAAMA,UAQ9D9B,EAAAA,cAACC,EAAAA,GAAI,CAACC,GAAG,SAAQ,aAEhB,C","sources":["webpack:///./src/components/layout.js","webpack:///./src/templates/tag-template.js"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport \"../styles/layout.css\";\n\nconst Header = () => (\n  <header>\n    <Link to=\"/\">三次元日誌(gatsby v5)</Link>\n    <Link to=\"/about/\">about</Link>\n    <Link to=\"/tags/\">tags</Link>\n    <Link to=\"/books/\">books</Link>\n  </header>\n);\n\nconst Footer = () => <footer> © {new Date().getFullYear()} ousttrue</footer>;\n\nconst Layout = ({ children }) => (\n  <div>\n    <Header />\n\n    <div className=\"layout\">\n      <main>{children}</main>\n    </div>\n\n    <Footer />\n  </div>\n);\n\nexport default Layout;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Components\nimport { Link, graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\n\nconst Tags = ({ pageContext, data }) => {\n    const { tag } = pageContext;\n    const { edges, totalCount } = data.allMdx;\n    const parents = data.parent.nodes;\n    const children = data.children.nodes;\n    const tagHeader = `${totalCount} post${totalCount === 1 ? \"\" : \"s\"\n        } tagged with \"${tag}\"`;\n\n    return (\n        <Layout>\n            <div>\n                <h1>{tagHeader}</h1>\n                <ul>\n                    {edges.map(({ node }) => {\n                        const { slug } = node.fields;\n                        const { title } = node.frontmatter;\n                        return (\n                            <li key={slug}>\n                                <Link to={slug}>{title}</Link>\n                            </li>\n                        );\n                    })}\n                </ul>\n                {/*\n              This links to a page that does not yet exist.\n              You'll come back to it!\n            */}\n                <ul>\n                    {parents.map((node) => {\n                        return (\n                            <li>\n                                <Link to={`/tags/${node.name}/`}>{node.name}</Link>\n                            </li>\n                        );\n                    })}\n                </ul>\n                <ul>\n                    {children.map((node) => {\n                        return (\n                            <ul>\n                                {node.tags.map((child_tag) => {\n                                    return (\n                                        <li>\n                                            <Link to={`/tags/${child_tag}/`}>{child_tag}</Link>\n                                        </li>\n                                    );\n                                })}\n                            </ul>\n                        );\n                    })}\n                </ul>\n                <Link to=\"/tags\">All tags</Link>\n            </div>\n        </Layout>\n    );\n};\n\nTags.propTypes = {\n    pageContext: PropTypes.shape({\n        tag: PropTypes.string.isRequired,\n    }),\n    data: PropTypes.shape({\n        allMdx: PropTypes.shape({\n            totalCount: PropTypes.number.isRequired,\n            edges: PropTypes.arrayOf(\n                PropTypes.shape({\n                    node: PropTypes.shape({\n                        frontmatter: PropTypes.shape({\n                            title: PropTypes.string.isRequired,\n                        }),\n                        fields: PropTypes.shape({\n                            slug: PropTypes.string.isRequired,\n                        }),\n                    }),\n                }).isRequired\n            ),\n        }),\n    }),\n};\n\nexport default Tags;\n\nexport const pageQuery = graphql`\n  query ($tag: String) {\n    allMdx(\n      limit: 2000\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n    parent: allCategoriesJson(filter: { tags: { in: [$tag] } }) {\n      nodes {\n        name\n        tags\n      }\n    }\n    children: allCategoriesJson(filter: { name: { eq: $tag } }) {\n      nodes {\n        name\n        tags\n      }\n    }\n  }\n`;\n"],"names":["Header","React","Link","to","Footer","Date","getFullYear","_ref","children","className","pageContext","data","tag","edges","totalCount","allMdx","parents","parent","nodes","tagHeader","Layout","map","_ref2","node","slug","fields","title","frontmatter","key","name","tags","child_tag"],"sourceRoot":""}