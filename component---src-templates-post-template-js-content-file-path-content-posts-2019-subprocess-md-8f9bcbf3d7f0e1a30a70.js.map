{"version":3,"file":"component---src-templates-post-template-js-content-file-path-content-posts-2019-subprocess-md-8f9bcbf3d7f0e1a30a70.js","mappings":"8JAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,KAAM,OACNC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,KAAM,OACNC,GAAI,OACHC,EAAAA,EAAAA,MAAsBZ,EAAMa,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,qDAAsD,KAAMU,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,UAAW,KAAMU,EAAAA,cAAoBb,EAAYI,KAAM,CACpPU,wBAAyB,CACvBC,OAAQ,qTAER,KAAMF,EAAAA,cAAoBb,EAAYK,GAAI,KAAM,oBAAqB,KAAMQ,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,iBAAkB,KAAMU,EAAAA,cAAoBb,EAAYI,KAAM,CACpLU,wBAAyB,CACvBC,OAAQ,uJAER,KAAMF,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,UAAW,KAAMU,EAAAA,cAAoBb,EAAYM,GAAI,KAAM,kBAAmB,KAAMO,EAAAA,cAAoBb,EAAYO,GAAI,KAAM,KAAMM,EAAAA,cAAoBb,EAAYQ,GAAI,KAAM,oEAAqE,MAAO,KAAMK,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,mBAAoBU,EAAAA,cAAoBb,EAAYS,KAAM,KAAM,oBAAqB,WAAY,KAAMI,EAAAA,cAAoBb,EAAYI,KAAM,CACveU,wBAAyB,CACvBC,OAAQ,gnDAER,KAAMF,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,mCAAoCU,EAAAA,cAAoBb,EAAYS,KAAM,KAAM,aAAc,eAAgB,KAAMI,EAAAA,cAAoBb,EAAYM,GAAI,KAAM,oBAAqB,KAAMO,EAAAA,cAAoBb,EAAYO,GAAI,KAAM,KAAMM,EAAAA,cAAoBb,EAAYQ,GAAI,KAAM,uEAAwE,MAAO,KAAMK,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,wBAAyB,KAAMU,EAAAA,cAAoBb,EAAYI,KAAM,CACvgBU,wBAAyB,CACvBC,OAAQ,k9CAER,KAAMF,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,gCAAiC,KAAMU,EAAAA,cAAoBb,EAAYK,GAAI,KAAM,UAAW,KAAMQ,EAAAA,cAAoBb,EAAYI,KAAM,CACzLU,wBAAyB,CACvBC,OAAQ,2ZAER,KAAMF,EAAAA,cAAoBb,EAAYO,GAAI,KAAM,KAAMM,EAAAA,cAAoBb,EAAYQ,GAAI,KAAM,gCAAiC,KAAMK,EAAAA,cAAoBb,EAAYQ,GAAI,KAAM,iCAAkC,MAAO,KAAMK,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,UAAW,KAAMU,EAAAA,cAAoBb,EAAYK,GAAI,KAAM,WAAY,KAAMQ,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,+BAAgC,KAAMU,EAAAA,cAAoBb,EAAYM,GAAI,KAAM,eAAgB,KAAMO,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,gBAAiB,KAAMU,EAAAA,cAAoBb,EAAYI,KAAM,CAC7kBU,wBAAyB,CACvBC,OAAQ,yIAER,KAAMF,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,0CAA2C,KAAMU,EAAAA,cAAoBb,EAAYI,KAAM,CACxIU,wBAAyB,CACvBC,OAAQ,yIAER,KAAMF,EAAAA,cAAoBb,EAAYU,GAAI,KAAM,qCAAsC,KAAMG,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,gCAAiC,KAAMU,EAAAA,cAAoBb,EAAYU,GAAI,KAAM,+CAAgD,KAAMG,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,0BAA2B,KAAMU,EAAAA,cAAoBb,EAAYM,GAAI,KAAM,0BAA2B,KAAMO,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,uBAAwB,KAAMU,EAAAA,cAAoBb,EAAYO,GAAI,KAAM,KAAMM,EAAAA,cAAoBb,EAAYQ,GAAI,KAAM,KAAMK,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,WAAY,MAAO,KAAMU,EAAAA,cAAoBb,EAAYQ,GAAI,KAAM,KAAMK,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,UAAW,MAAO,KAAMU,EAAAA,cAAoBb,EAAYQ,GAAI,KAAM,KAAMK,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,aAAc,MAAO,KAAMU,EAAAA,cAAoBb,EAAYQ,GAAI,KAAM,KAAMK,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,4DAA6D,MAAO,MAAO,KAAMU,EAAAA,cAAoBb,EAAYU,GAAI,KAAM,eAAgBG,EAAAA,cAAoBb,EAAYS,KAAM,KAAM,6BAA8B,SAAU,KAAMI,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,4BAA6B,KAAMU,EAAAA,cAAoBb,EAAYO,GAAI,KAAM,KAAMM,EAAAA,cAAoBb,EAAYQ,GAAI,KAAM,6DAA8D,MAAO,KAAMK,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,WAAYU,EAAAA,cAAoBb,EAAYS,KAAM,KAAM,oBAAqB,sDAAuD,KAAMI,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,sBAAuBU,EAAAA,cAAoBb,EAAYS,KAAM,KAAM,gBAAiB,MAAOI,EAAAA,cAAoBb,EAAYS,KAAM,KAAM,gBAAiB,eAAgB,KAAMI,EAAAA,cAAoBb,EAAYU,GAAI,KAAM,+CAAgD,KAAMG,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,SAAU,KAAMU,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,6BAA8B,KAAMU,EAAAA,cAAoBb,EAAYG,EAAG,KAAM,+BAC7jE,CAKA,MAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOiB,QAASC,GAAahB,OAAOC,OAAO,CAAC,GAAGS,EAAAA,EAAAA,MAAsBZ,EAAMa,YAC3E,OAAOK,EAAYJ,EAAAA,cAAoBI,EAAWlB,EAAOc,EAAAA,cAAoBf,EAAmBC,IAAUD,EAAkBC,EAC9H,E,8BCxCA,MAAMa,EAAa,CACjBH,KAAMS,IAA2B,IAA1B,SAACC,EAAQ,UAAEC,GAAUF,EAC1B,OAAOE,EAAYP,EAAAA,cAAoBQ,EAAAA,EAAsB,CAC3DD,UAAWA,GACVD,GAAYN,EAAAA,cAAoB,OAAQ,KAAMM,EAAS,GAG9D,SAASG,EAAYC,GAAmB,IAAlB,KAACC,EAAI,SAAEL,GAASI,EACpC,MAAME,EAAcD,EAAKE,IAAID,YAC7B,OAAOZ,EAAAA,cAAoBc,EAAAA,EAAQ,KAAMd,EAAAA,cAAoB,KAAM,KAAMY,EAAYG,OAAQf,EAAAA,cAAoB,MAAO,CACtHO,UAAW,cACVK,EAAYI,MAAQJ,EAAYI,KAAKC,OAAS,GAAKL,EAAYI,KAAKE,KAAIC,GAClEnB,EAAAA,cAAoBoB,EAAAA,GAAM,CAC/BC,GAAI,SAASF,EAAG,IAChBG,SAAU,OACTtB,EAAAA,cAAoB,SAAU,KAAMmB,OACpCnB,EAAAA,cAAoBuB,EAAAA,GAAa,CACpCxB,WAAYA,GACXO,GACL,CACe,SAASkB,EAAiBtC,GACvC,OAAOc,EAAAA,cAAoBS,EAAcvB,EAAOc,EAAAA,cAAoByB,EAAqBvC,GAC3F,C","sources":["webpack:///./content/posts/2019/subprocess.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    span: \"span\",\n    h2: \"h2\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\",\n    h4: \"h4\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"https://docs.python.org/3/library/subprocess.html\"), \"\\n\", React.createElement(_components.p, null, \"こういうやつ\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">\\n      +-------+\\n      | child |\\n      |process|\\n      +-------+\\n   stdin ^ | stdout\\n         | v\\n      +-------+\\n      |process|\\n      +-------+\\n-> stdin     stdout -></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"subprocess モジュール\"), \"\\n\", React.createElement(_components.p, null, \"subprocess は、\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">os.system\\nos.spawn*</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"の置き換え。\"), \"\\n\", React.createElement(_components.h3, null, \"subprocess.run\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://docs.python.org/3/library/subprocess.html#subprocess.run\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"中でPopenして結果を集めて \", React.createElement(_components.code, null, \"CompletedProcess\"), \" として返す。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"python\\\"><pre class=\\\"language-python\\\"><code class=\\\"language-python\\\"><span class=\\\"token comment\\\"># 抜粋</span>\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">run</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token keyword\\\">with</span> Popen<span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">*</span>popenargs<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">**</span>kwargs<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">as</span> process<span class=\\\"token punctuation\\\">:</span>\\n        <span class=\\\"token keyword\\\">try</span><span class=\\\"token punctuation\\\">:</span>\\n            stdout<span class=\\\"token punctuation\\\">,</span> stderr <span class=\\\"token operator\\\">=</span> process<span class=\\\"token punctuation\\\">.</span>communicate<span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">input</span><span class=\\\"token punctuation\\\">,</span> timeout<span class=\\\"token operator\\\">=</span>timeout<span class=\\\"token punctuation\\\">)</span> \\n\\n    <span class=\\\"token keyword\\\">return</span> CompletedProcess<span class=\\\"token punctuation\\\">(</span>process<span class=\\\"token punctuation\\\">.</span>args<span class=\\\"token punctuation\\\">,</span> retcode<span class=\\\"token punctuation\\\">,</span> stdout<span class=\\\"token punctuation\\\">,</span> stderr<span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"実行して結果の文字列を得て終わりというタイプの用途向け。\\n旧 \", React.createElement(_components.code, null, \"os.system\"), \" の代替になると思う。\"), \"\\n\", React.createElement(_components.h3, null, \"subprocess.Popen\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://docs.python.org/3/library/subprocess.html#popen-constructor\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"標準入力、標準出力を制御するのはこっち。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"python\\\"><pre class=\\\"language-python\\\"><code class=\\\"language-python\\\">subprocess<span class=\\\"token punctuation\\\">.</span>Popen<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'cmd_name'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'arg0'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'arg1'</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n    stdin<span class=\\\"token operator\\\">=</span>subprocess<span class=\\\"token punctuation\\\">.</span>PIPE<span class=\\\"token punctuation\\\">,</span>\\n    stdout<span class=\\\"token operator\\\">=</span>subprocess<span class=\\\"token punctuation\\\">.</span>PIPE<span class=\\\"token punctuation\\\">,</span>\\n    stderr<span class=\\\"token operator\\\">=</span>subprocess<span class=\\\"token punctuation\\\">.</span>PIPE<span class=\\\"token punctuation\\\">,</span>\\n    cwd<span class=\\\"token operator\\\">=</span><span class=\\\"token boolean\\\">None</span><span class=\\\"token punctuation\\\">,</span> env<span class=\\\"token operator\\\">=</span><span class=\\\"token boolean\\\">None</span><span class=\\\"token punctuation\\\">,</span>\\n    text<span class=\\\"token operator\\\">=</span><span class=\\\"token boolean\\\">False</span>\\n    <span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"Readループが一個しかない時はこれでいいんでないかな。\"), \"\\n\", React.createElement(_components.h2, null, \"今回のテーマ\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">\\n      +-------+\\n      | child |\\n      |process|\\n      +-------+\\n   stdin ^ | @stdout\\n         | v\\n      +-------+\\n      |process| ここでロギングして通信内容を確認したい\\n      +-------+\\n  @stdin ^ | stdout\\n         | v\\n      +-------+\\n      | parent|\\n      |process|\\n      +-------+\\n</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"@のところを常時読み込みにしたい(2つのReadループ)\"), \"\\n\", React.createElement(_components.li, null, \"@stdin をReadするとブロックして固まるのでつらい\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"つらいのだ。\"), \"\\n\", React.createElement(_components.h2, null, \"asyncio\"), \"\\n\", React.createElement(_components.p, null, \"２つのReaderを非同期で制御しようということで 。\"), \"\\n\", React.createElement(_components.h3, null, \"asyncio の基本\"), \"\\n\", React.createElement(_components.p, null, \"loop を露出させる。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"python\\\"><pre class=\\\"language-python\\\"><code class=\\\"language-python\\\"></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"loop は暗黙。\\n基本的にこちらでよいと思う。\\n必要に応じて取得する。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"python\\\"><pre class=\\\"language-python\\\"><code class=\\\"language-python\\\"></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h4, null, \"asyncio.create_task で新しいスタックを開始する\"), \"\\n\", React.createElement(_components.p, null, \"新しいスタックなのでエラーハンドリングが無いことに注意。\"), \"\\n\", React.createElement(_components.h4, null, \"StreamReaderProtocol と StreamWriterProtocol\"), \"\\n\", React.createElement(_components.p, null, \"コールバックと Stream を結び付ける。\"), \"\\n\", React.createElement(_components.h3, null, \"Windowsの標準入出力はIOCPできない\"), \"\\n\", React.createElement(_components.p, null, \"IOCPできるハンドルは決まっていて、\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"通常のファイル\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Socket\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"NamedPipe\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"https://tim.mcnamara.nz/post/176613307022/iocp-and-stdio\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h4, null, \"python3.7 で \", React.createElement(_components.code, null, \"asyncio.create_subprocess\"), \" ができた\"), \"\\n\", React.createElement(_components.p, null, \"child process 側はこれで助かった。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://docs.python.org/3/library/asyncio-subprocess.html\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"なんか、たまに \", React.createElement(_components.code, null, \"socket.exception\"), \" が出るので、\\ntcpのlocalhost接続にリダイレクトするとか謎の技使っているのかもしれぬ。\"), \"\\n\", React.createElement(_components.p, null, \"おかげで、子プロセスの標準入出力から \", React.createElement(_components.code, null, \"StreamReader\"), \" と \", React.createElement(_components.code, null, \"StreamWriter\"), \"\\nを楽に取得できる。\"), \"\\n\", React.createElement(_components.h4, null, \"重い NativeCoroutine は、ThreadPoolExecutorに逃がす\"), \"\\n\", React.createElement(_components.p, null, \"標準入力側\"), \"\\n\", React.createElement(_components.p, null, \"GILを回避して、別スレッドで待てるのではないか。\"), \"\\n\", React.createElement(_components.p, null, \"どんな処理が、NativeCoroutine なのか。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2019/subprocess.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  const frontmatter = data.mdx.frontmatter;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"div\", {\n    className: \"tags-index\"\n  }, frontmatter.tags && frontmatter.tags.length > 0 && frontmatter.tags.map(tag => {\n    return React.createElement(Link, {\n      to: `/tags/${tag}/`,\n      itemProp: \"url\"\n    }, React.createElement(\"button\", null, tag));\n  })), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        tags\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","span","h2","h3","ul","li","code","h4","_provideComponents","components","React","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","frontmatter","mdx","Layout","title","tags","length","map","tag","Link","to","itemProp","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}