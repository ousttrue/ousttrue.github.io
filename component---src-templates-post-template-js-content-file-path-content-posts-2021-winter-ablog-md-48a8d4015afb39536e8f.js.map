{"version":3,"file":"component---src-templates-post-template-js-content-file-path-content-posts-2021-winter-ablog-md-48a8d4015afb39536e8f.js","mappings":"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","sources":["webpack:///./content/posts/2021/winter/ablog.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\",\n    code: \"code\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    span: \"span\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"ABlog にシステムを変更\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://getnikola.com/\"\n  }, \"nikola\"), \" は使いこなせなくて短命に終わってしまった。\\n\", React.createElement(_components.a, {\n    href: \"https://pydoit.org/\"\n  }, \"doit\"), \" は面白いと思うのだが。\"), \"\\n\", React.createElement(_components.p, null, \"ということで、 \", React.createElement(_components.code, null, \"sphinx\"), \" プラグインの \", React.createElement(_components.a, {\n    href: \"https://ablog.readthedocs.io/en/latest/\"\n  }, \"ABlog\"), \" です。\"), \"\\n\", React.createElement(_components.h2, null, \"はまり1: Sphinx のキャッシュ\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"python -m sphinx content build\"), \" にデバッガをアタッチして試行錯誤するのだけど、\\nキャッシュされて処理されなかった。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"python -m sphinx content build -E -v\"), \" とする。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"-E: 全処理(キャッシュを使わない)\"), \"\\n\", React.createElement(_components.li, null, \"-v: 詳細メッセージ\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"はまり2: ablog が timezone の有無で日付の比較に失敗する\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">can't compare offset-naive and offset-aware datetimes</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"これは、既存記事の \", React.createElement(_components.code, null, \"frontmatter\"), \" の日付に \", React.createElement(_components.code, null, \"timezone\"), \" が付いていると\\n日付の比較に失敗する。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"python\\\"><pre class=\\\"language-python\\\"><code class=\\\"language-python\\\"><span class=\\\"token comment\\\"># site-packages/ablog/blog.py:382</span>\\nself<span class=\\\"token punctuation\\\">.</span>date <span class=\\\"token operator\\\">=</span> date <span class=\\\"token operator\\\">=</span> info<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"date\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>replace<span class=\\\"token punctuation\\\">(</span>tzinfo<span class=\\\"token operator\\\">=</span><span class=\\\"token boolean\\\">None</span><span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"と対処した。\"), \"\\n\", React.createElement(_components.h2, null, \"はまり3: myst-parser の toml frontmatter 対応\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"myst-parser\"), \" が \", React.createElement(_components.code, null, \"---\"), \" による \", React.createElement(_components.code, null, \"yaml\"), \" 形式の \", React.createElement(_components.code, null, \"frontmatter\"), \" にしか対応していない様子。\\n\", React.createElement(_components.a, {\n    href: \"https://gohugo.io/content-management/front-matter/\"\n  }, \"hugo の frontmatter\"), \" にある \", React.createElement(_components.code, null, \"toml\"), \" 様式に対応するべく改造したい。\"), \"\\n\", React.createElement(_components.h3, null, \"切り出し\"), \"\\n\", React.createElement(_components.p, null, \"どこで処理しているのか探索が難航した。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"site-packages/mdit_py_plugins/front_matter/index.py\"), \"\\nで処理している。\"), \"\\n\", React.createElement(_components.h3, null, \"Parse\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"site-packages/myst_parser/docutils_renderer.py\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"render_front_matter\"), \" で切り出した文字列を \", React.createElement(_components.code, null, \"yaml\"), \" でパースしている。\\n\", React.createElement(_components.code, null, \"except\"), \" 節で \", React.createElement(_components.code, null, \"toml\"), \" にリトライさせたら動いた。\"), \"\\n\", React.createElement(_components.h2, null, \"モンキーパッチ\"), \"\\n\", React.createElement(_components.p, null, \"とりあえず \", React.createElement(_components.code, null, \"conf.py\"), \" にて直接修正する。\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/ousttrue/ousttrue.github.io/blob/ablog/content/patch.py\"), \"\\n\", React.createElement(_components.p, null, \"後で PR 送ったりできるかな。\"), \"\\n\", React.createElement(_components.h2, null, \"ABlog は何をしているのか\"), \"\\n\", React.createElement(_components.h3, null, \"toctree無しのpost記事\"), \"\\n\", React.createElement(_components.p, null, \"特定の条件で、記事をブログ記事と見做して \", React.createElement(_components.code, null, \"toctree\"), \" 無しで辿れるようにする。\\n記事は、日付やタグでグループ化してくれる。\"), \"\\n\", React.createElement(_components.p, null, \"https://ablog.readthedocs.io/en/latest/manual/posting-and-listing/#posting-with-page-front-matter\"), \"\\n\", React.createElement(_components.p, null, \"パス指定。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"python\\\"><pre class=\\\"language-python\\\"><code class=\\\"language-python\\\">blog_post_pattern <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"posts/**/*.md\\\"</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"条件。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"python\\\"><pre class=\\\"language-python\\\"><code class=\\\"language-python\\\"><span class=\\\"token comment\\\"># .venv/lib/python3.9/site-packages/ablog/post.py</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token string\\\">\\\"blogpost\\\"</span> <span class=\\\"token keyword\\\">not</span> <span class=\\\"token keyword\\\">in</span> metadata <span class=\\\"token keyword\\\">and</span> self<span class=\\\"token punctuation\\\">.</span>env<span class=\\\"token punctuation\\\">.</span>docname <span class=\\\"token keyword\\\">not</span> <span class=\\\"token keyword\\\">in</span> self<span class=\\\"token punctuation\\\">.</span>config<span class=\\\"token punctuation\\\">.</span>matched_blog_posts<span class=\\\"token punctuation\\\">:</span>\\n            <span class=\\\"token keyword\\\">return</span> <span class=\\\"token boolean\\\">None</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"frontmatter\"), \" 等から最低限、日付の情報がとれないとトップページから辿る方法が無い状態になる。\"), \"\\n\", React.createElement(_components.p, null, \"あと \", React.createElement(_components.code, null, \"sphinx\"), \" なのでトップレベルの表題が本文側に必要かも。\\n\", React.createElement(_components.code, null, \"frontmatter\"), \" の \", React.createElement(_components.code, null, \"title\"), \" を反映できると便利そう。\"), \"\\n\", React.createElement(_components.h3, null, \"event: 'doctree-read'\"), \"\\n\", React.createElement(_components.p, null, \"doctree から \", React.createElement(_components.code, null, \"PostNode\"), \" を集める。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"alog/post#process_posts(app, doctree)\")), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"python\\\"><pre class=\\\"language-python\\\"><code class=\\\"language-python\\\"><span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">process_posts</span><span class=\\\"token punctuation\\\">(</span>app<span class=\\\"token punctuation\\\">,</span> doctree<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n    post_nodes <span class=\\\"token operator\\\">=</span> <span class=\\\"token builtin\\\">list</span><span class=\\\"token punctuation\\\">(</span>doctree<span class=\\\"token punctuation\\\">.</span>traverse<span class=\\\"token punctuation\\\">(</span>PostNode<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token keyword\\\">not</span> post_nodes<span class=\\\"token punctuation\\\">:</span>\\n        <span class=\\\"token comment\\\"># PostNode が必要</span>\\n        <span class=\\\"token keyword\\\">return</span>\\n\\n    <span class=\\\"token comment\\\"># 省略</span>\\n\\n    postinfo <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token string\\\">\\\"docname\\\"</span><span class=\\\"token punctuation\\\">:</span> docname<span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"section\\\"</span><span class=\\\"token punctuation\\\">:</span> section_name<span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"order\\\"</span><span class=\\\"token punctuation\\\">:</span> order<span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"date\\\"</span><span class=\\\"token punctuation\\\">:</span> date<span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"update\\\"</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token builtin\\\">max</span><span class=\\\"token punctuation\\\">(</span>update_dates <span class=\\\"token operator\\\">+</span> <span class=\\\"token punctuation\\\">[</span>date<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"title\\\"</span><span class=\\\"token punctuation\\\">:</span> title<span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"excerpt\\\"</span><span class=\\\"token punctuation\\\">:</span> excerpt<span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"tags\\\"</span><span class=\\\"token punctuation\\\">:</span> node<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"tags\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"author\\\"</span><span class=\\\"token punctuation\\\">:</span> node<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"author\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"category\\\"</span><span class=\\\"token punctuation\\\">:</span> node<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"category\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"location\\\"</span><span class=\\\"token punctuation\\\">:</span> node<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"location\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"language\\\"</span><span class=\\\"token punctuation\\\">:</span> node<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"language\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"redirect\\\"</span><span class=\\\"token punctuation\\\">:</span> node<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"redirect\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"nocomments\\\"</span><span class=\\\"token punctuation\\\">:</span> node<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"nocomments\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"image\\\"</span><span class=\\\"token punctuation\\\">:</span> node<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"image\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"exclude\\\"</span><span class=\\\"token punctuation\\\">:</span> node<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"exclude\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"doctree\\\"</span><span class=\\\"token punctuation\\\">:</span> section_copy<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">if</span> docname <span class=\\\"token keyword\\\">not</span> <span class=\\\"token keyword\\\">in</span> env<span class=\\\"token punctuation\\\">.</span>ablog_posts<span class=\\\"token punctuation\\\">:</span>\\n        env<span class=\\\"token punctuation\\\">.</span>ablog_posts<span class=\\\"token punctuation\\\">[</span>docname<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n    env<span class=\\\"token punctuation\\\">.</span>ablog_posts<span class=\\\"token punctuation\\\">[</span>docname<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>append<span class=\\\"token punctuation\\\">(</span>postinfo<span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"python\\\"><pre class=\\\"language-python\\\"><code class=\\\"language-python\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">CheckFrontMatter</span><span class=\\\"token punctuation\\\">(</span>SphinxTransform<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">apply</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n        <span class=\\\"token keyword\\\">pass</span>\\n\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">setup</span><span class=\\\"token punctuation\\\">(</span>app<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n    app<span class=\\\"token punctuation\\\">.</span>add_transform<span class=\\\"token punctuation\\\">(</span>CheckFrontMatter<span class=\\\"token punctuation\\\">)</span>    </code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h3, null, \"追加のページ生成\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"ablog/templates\"), \" に格納されている。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"python\\\"><pre class=\\\"language-python\\\"><code class=\\\"language-python\\\"><span class=\\\"token comment\\\"># -- ABlog Sidebars -------------------------------------------------------</span>\\n\\n<span class=\\\"token comment\\\"># There are seven sidebars you can include in your HTML output.</span>\\n<span class=\\\"token comment\\\"># postcard.html provides information regarding the current post.</span>\\n<span class=\\\"token comment\\\"># recentposts.html lists most recent five posts. Others provide</span>\\n<span class=\\\"token comment\\\"># a link to a archive pages generated for each tag, category, and year.</span>\\n<span class=\\\"token comment\\\"># In addition, there are authors.html, languages.html, and locations.html</span>\\n<span class=\\\"token comment\\\"># sidebars that link to author and location archive pages.</span>\\nhtml_sidebars <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token string\\\">'**'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n        <span class=\\\"token string\\\">'about.html'</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">'postcard.html'</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">'navigation.html'</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">'recentposts.html'</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">'tagcloud.html'</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">'categories.html'</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">'archives.html'</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">'searchbox.html'</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"これらに対して追加のページ生成を行っている。\\n\", React.createElement(_components.code, null, \"genindex.html\"), \" などのように。\"), \"\\n\", React.createElement(_components.h2, null, \"ToDo\"), \"\\n\", React.createElement(_components.h3, null, \"✅ タグが変\"), \"\\n\", React.createElement(_components.p, null, \"toml 由来の tag の処理に失敗している。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"[\\\"python\\\", \\\"ssg\\\", \\\"sphinx\\\"]\")), \"\\n\", React.createElement(_components.p, null, \"が、\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"[\\\"python\\\"\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"\\\"ssg\\\"\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"\\\"sphinx\\\"]\")), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"になっちゃってる。\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/sunpy/ablog/pull/119\"), \"\\n\", React.createElement(_components.p, null, \"送ってみた。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"v0.10.22\"), \" で修正。👍\"), \"\\n\", React.createElement(_components.h3, null, \"✅ 日付のフォーマット\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"conf.py\")), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"python\\\"><pre class=\\\"language-python\\\"><code class=\\\"language-python\\\">post_date_format <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">r'%Y/%m/%d'</span>\\npost_date_format_short <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">r'%Y/%m'</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h3, null, \"✅ 記事のURL\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://zenn.dev/attakei/articles/sphinx-make-dirhtml\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"✅ 記事タイトルは最初の見出しではなく、frontmatter の title にしたい\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"MystParser\"), \" を改造した。\\nわりと Sphinx わかってきた。\\n\", React.createElement(_components.code, null, \"python\"), \" でデバッガがアタッチできるとなんでもできる(慣れ)。\"), \"\\n\", React.createElement(_components.h3, null, \"[ ] tagの表記振れ\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"c++\"), \" と \", React.createElement(_components.code, null, \"C++\"), \"、\", React.createElement(_components.code, null, \"c#\"), \" と \", React.createElement(_components.code, null, \"csharp\"), \" などをたばねる。\"), \"\\n\", React.createElement(_components.h2, null, \"参考\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://water2litter.net/pisco/doc/ablog.html\"\n  }, \"Sphinxでブログをしてみよう\")), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2021/winter/ablog.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  const frontmatter = data.mdx.frontmatter;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"div\", {\n    className: \"tags-index\"\n  }, frontmatter.tags && frontmatter.tags.length > 0 && frontmatter.tags.map(tag => {\n    return React.createElement(Link, {\n      to: `/tags/${tag}/`,\n      itemProp: \"url\"\n    }, React.createElement(\"button\", null, tag));\n  })), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        tags\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","a","code","h2","ul","li","span","h3","_provideComponents","components","React","href","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","frontmatter","mdx","Layout","title","tags","length","map","tag","Link","to","itemProp","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}