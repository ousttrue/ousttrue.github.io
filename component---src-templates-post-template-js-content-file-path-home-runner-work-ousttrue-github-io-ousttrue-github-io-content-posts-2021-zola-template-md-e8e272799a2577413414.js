"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8354],{1471:function(e,n,t){t.r(n),t.d(n,{default:function(){return m}});var a=t(1151),l=t(7294);function s(e){const n=Object.assign({p:"p",ul:"ul",li:"li",h1:"h1",span:"span"},(0,a.ah)(),e.components);return l.createElement(l.Fragment,null,l.createElement(n.p,null,"サイト整備のメモ。共通化して部品を少なくした。"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"zola 設定"),"\n",l.createElement(n.li,null,"template 構築"),"\n",l.createElement(n.li,null,"場合によっては zola の改造"),"\n"),"\n",l.createElement(n.h1,null,"共通"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"[x] title"),"\n",l.createElement(n.li,null,"[x] 日付"),"\n",l.createElement(n.li,null,"[x] 見出しの見た目"),"\n"),"\n",l.createElement(n.h1,null,"Markdown"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"[x] url 文字列を自動でリンクにしたい。markdownで ",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">&lt;url></code>'}})," と記述するべし"),"\n"),"\n",l.createElement(n.h1,null,"20210716: masonry 入れてみた"),"\n",l.createElement(n.p,null,"https://masonry.desandro.com/"),"\n",l.createElement(n.h1,null,"20210717: TOC"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"[x] 目次\nだいたいできた。\ngithub が増えすぎてカオスなので不要なものを整理せねば・・・"),"\n"),"\n",l.createElement(n.h1,null,"20210725: 色"),"\n",l.createElement(n.p,null,"作業用に区域ごとに色分けしていたのをやめて、地味な色に変更。"),"\n",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="scss"><pre class="language-scss"><code class="language-scss"><span class="token keyword">@mixin</span> <span class="token selector">MAIN_COLOR </span><span class="token punctuation">{</span>\n    <span class="token property">color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span>\n    background-color white<span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",l.createElement(n.p,null,"のような方法を試してみた。"),"\n",l.createElement(n.h1,null,"20210725: TOC 固定"),"\n",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="css"><pre class="language-css"><code class="language-css"><span class="token property">position</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span></code></pre></div>'}}),"\n",l.createElement(n.h1,null,"20210725: 画像を入れれるようにしてみた"),"\n",l.createElement(n.p,null,l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">page.assets</code>'}})," や ",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">section.assets</code>'}})," に想定した形で入ってこないので、\n無理やりパスを操作したのだが、さすがにこれはちょっと・・・"),"\n",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="html"><pre class="language-html"><code class="language-html">  {% if page.extra.image %}\n  {% set s = page.relative_path | split(pat="/") %}\n  {% set len = s | length %}\n  {% set sl = s | slice(start=0, end=len-1) %}\n  {% set j = sl | join(sep="/") %}\n  {% set image_url = resize_image(path=j ~ "/" ~ page.extra.image, width=600, op="fit_width") %}\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{{ image_url }}<span class="token punctuation">"</span></span><span class="token attr-name">"</span><span class="token punctuation">></span></span>\n  {% endif %}</code></pre></div>'}}),"\n",l.createElement(n.p,null,"なんか、 ",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">zola</code>'}})," がわりと融通が利かないことが分かってきた。\n",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">resize_image</code>'}})," で明示的に画像を加工するという設計は理解。なるほど。\n当方、 ",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">md</code>'}})," ファイルと同じフォルダに ",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">png, jpg</code>'}})," を放り込んでそれを記事内で使いたいのです。\n画像を中央の ",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">static</code>'}})," フォルダにまとめて入れておくの嫌なので。\n改造して page.assets に放り込んでしまおう。"),"\n",l.createElement(n.p,null,l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">hugo</code>'}})," ほど多機能複雑でなく、 ",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">zola</code>'}})," ほど strict でない、そんなほどほどなツールが望まれる。"),"\n",l.createElement(n.h1,null,"20210815: pagination"),"\n",l.createElement(n.p,null,"https://www.getzola.org/documentation/templates/pagination/"),"\n",l.createElement(n.p,null,"ドキュメントよりもソースを読もう w\n5分もかからぬ。"),"\n",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="html"><pre class="language-html"><code class="language-html">      {% if paginator.current_index == 1 %}</code></pre></div>'}}),"\n",l.createElement(n.h1,null,"20210829: 内部リンク記法"),"\n",l.createElement(n.p,null,l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">.md</code>'}})," の記法。"),"\n",l.createElement(n.p,null,"https://www.getzola.org/documentation/content/linking/#internal-links"),"\n",l.createElement(n.p,null,l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">[NvimTexture](@/posts/2021/summer/nvimtexture.md)</code>'}})),"\n",l.createElement(n.p,null,l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">@</code>'}})," と ",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">.md</code>'}})," が必要。"),"\n",l.createElement(n.h1,null,"20210831: search"),"\n",l.createElement(n.p,null,"https://www.getzola.org/documentation/content/search/"),"\n",l.createElement(n.p,null,"設定は ",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">build_search_index = true</code>'}})," するだけなのだが、\ntemplate 作るのは大変。"),"\n",l.createElement(n.p,null,"https://github.com/aaranxu/adidoks から部品を頂いてきた。"))}var c=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?l.createElement(n,e,l.createElement(s,e)):s(e)},r=t(8678),o=t(8838);const u={code:e=>{let{children:n,className:t}=e;return t?l.createElement(o.Z,{className:t},n):l.createElement("code",null,n)}};function p(e){let{data:n,children:t}=e;return l.createElement(r.Z,null,l.createElement("h1",null,n.mdx.frontmatter.title),l.createElement(a.Zo,{components:u},t))}function m(e){return l.createElement(p,e,l.createElement(c,e))}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2021-zola-template-md-e8e272799a2577413414.js.map