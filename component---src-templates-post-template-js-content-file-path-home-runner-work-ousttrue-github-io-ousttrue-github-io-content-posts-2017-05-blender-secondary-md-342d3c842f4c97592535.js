"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3458],{6490:function(e,n,t){t.r(n),t.d(n,{default:function(){return s}});var l=t(1151),r=t(7294);function c(e){const n=Object.assign({p:"p",ul:"ul",li:"li"},(0,l.ah)(),e.components);return r.createElement(r.Fragment,null,r.createElement(n.p,null,"MmdUtilityでmmdモデルをインポートして物理を取り入れるべく、Blenderの物理で揺れ物をセットアップする方法を調べている。"),"\n",r.createElement(n.p,null,"剛体を入れる\n素直にmeshオブジェクトを作って剛体を設定していく。\n剛体とボーンを連動させる\nボーンの動きを剛体に反映する(ゆれない。ゆれものの接続先)\nKinematic、BlenderではPassiveかつAnimatedになる設定。\nボーンの動きを剛体に伝えなければならないので剛体オブジェクトにコンストレイントを追加する。copy transformかchild ofが候補になる。どっちも問題がある。copy transformにするとボーンのヘッドのtransformを剛体の中心にコピーするのでずれる。child ofにすると剛体の親とボーンの両方の影響を受けるようになってしまうので原点から移動できなくなる。前者の方が致命的なので後者を選択して、剛体の親オブジェクトが原点に留まるように工夫することにする。\n剛体の動きを骨に反映する(ゆれもの)\nDynamic,  BlenderではActive。\n剛体の動きをボーンに伝えるべく、ポーズボーンにコンストレイントを追加する。child ofで剛体を指定する。この場合、親ボーンと剛体の両方の影響を受けてしまうので親ボーンの影響を切らねばならない。parentにNoneをセットするか、use_inherit_rotation, use_inherit_scale, use_inherit_locationをFalseにするのだけど、そうすると今度はポーズを変えたときについてこなくなる。一筋縄でいかないな・・・。ポーズ変えたときに追随させるスクリプトを用意すべしということか。\n参考"),"\n",r.createElement(n.ul,null,"\n",r.createElement(n.li,null,"https://github.com/12funkeys/rigid_bodys_gen"),"\n",r.createElement(n.li,null,"http://mrsoramame.jpn.org/archives/138"),"\n"))}var a=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,l.ah)(),e.components);return n?r.createElement(n,e,r.createElement(c,e)):c(e)},i=(t(8678),t(8838));const m={code:e=>{let{children:n,className:t}=e;return t?r.createElement(i.Z,{className:t},n):r.createElement("code",null,n)}};function o(e){let{data:n,children:t}=e;return r.createElement(r.Fragment,null,r.createElement("h1",null,n.mdx.frontmatter.title),r.createElement(l.Zo,{components:m},t))}function s(e){return r.createElement(o,e,r.createElement(a,e))}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2017-05-blender-secondary-md-342d3c842f4c97592535.js.map