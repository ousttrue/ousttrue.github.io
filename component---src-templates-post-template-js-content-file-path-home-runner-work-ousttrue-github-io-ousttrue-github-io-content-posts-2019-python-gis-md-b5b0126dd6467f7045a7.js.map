{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2019-python-gis-md-b5b0126dd6467f7045a7.js","mappings":"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","sources":["webpack:///./content/posts/2019/python_gis.md","webpack:///./src/templates/post-template.js","webpack:///./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Windows10。\"), \"\\n\", React.createElement(_components.h2, null, \"vcpkgでCの関連ライブラリをインストール\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"$ vcpkg install --triplet x64-windows geos gdal\\n\")), \"\\n\", React.createElement(_components.p, null, \"30分くらいかかった。\"), \"\\n\", React.createElement(_components.p, null, \"環境変数、 \", React.createElement(_components.code, null, \"GDAL_DATA\"), \" に \", React.createElement(_components.code, null, \"%VCPKG_DIR%\\\\installed\\\\x64-windows\\\\share\\\\gdal\"), \" ビルド先のフォルダを指定する。\"), \"\\n\", React.createElement(_components.h2, null, \"GDAL\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://gdal.org/\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"python\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://pypi.org/project/GDAL/\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"$ pip install gdal\\nfatal error C1083: Cannot open include file: 'cpl_port.h': No such file or directory\\n\")), \"\\n\", React.createElement(_components.p, null, \"事前にVCPKGでビルドしてある。 \", React.createElement(_components.code, null, \"INLUCDE\"), \" を指し示す。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"$ pip install --global-option=build_ext --global-option=\\\"-IC:\\\\vcpkg\\\\installed\\\\x64-windows\\\\include\\\" gdal\\n'GDALGetSpatialRef': identifier not found\\n\")), \"\\n\", React.createElement(_components.p, null, \"バージョンをCのGDALに合わせる。vcpkg でインストールしたのは \", React.createElement(_components.code, null, \"2.4.1\"), \" だった。\\ngdalの \", React.createElement(_components.code, null, \"2.4.1\"), \" は欠番みたいなので、 \", React.createElement(_components.code, null, \"2.4.2\"), \" にしてみた。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"$ pip install --global-option=build_ext --global-option=\\\"-IC:\\\\vcpkg\\\\installed\\\\x64-windows\\\\include\\\" --global-option=\\\"-LC:\\\\vcpkg\\\\installed\\\\x64-windows\\\\lib\\\" 'gdal==2.4.2'\\nLINK : fatal error LNK1181: cannot open input file 'gdal_i.lib'\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"gdal_i.lib\"), \" inline の static library かな？\\n探したら、 \", React.createElement(_components.code, null, \"vcpkg\"), \" のビルドフォルダにあったので lib にコピーする。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"$ copy C:\\\\vcpkg\\\\buildtrees\\\\gdal\\\\src-x64-windows-release\\\\gdal-2.4.1\\\\gdal_i.lib C:\\\\vcpkg\\\\installed\\\\x64-windows\\\\lib\\\\\\n$ pip install --global-option=build_ext --global-option=\\\"-IC:\\\\vcpkg\\\\installed\\\\x64-windows\\\\include\\\" --global-option=\\\"-LC:\\\\vcpkg\\\\installed\\\\x64-windows\\\\lib\\\" 'gdal==2.4.2'\\nSuccessfully installed gdal-2.4.2\\n\")), \"\\n\", React.createElement(_components.p, null, \"OK\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://www.gis-py.com/entry/py-gdal\"), \"\\n\", React.createElement(_components.li, null, \"https://pcjericks.github.io/py-gdalogr-cookbook/index.html\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2019/python_gis.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nfunction PostTempalte({data, children}) {\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, null, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h2","pre","code","ul","li","h3","_provideComponents","components","React","wrapper","MDXLayout","PostTempalte","_ref","data","children","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}