"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6216],{2080:function(e,n,t){t.r(n),t.d(n,{default:function(){return m}});var a=t(1151),s=t(7294);function l(e){const n=Object.assign({p:"p",span:"span",h2:"h2"},(0,a.ah)(),e.components);return s.createElement(s.Fragment,null,s.createElement(n.p,null,"当初 ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">python</code>'}})," 向けに ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">mindriot101/vim-yapf</code>'}})," を使っていたが、\n全部まとめて ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">hiel92/vim-autoformat</code>'}})," で設定してみる。"),"\n",s.createElement(n.p,null,"https://github.com/Chiel92/vim-autoformat"),"\n",s.createElement(n.p,null,"プラグインを設定したら特に個別に設定することなく、\nシステムにインストール済みの、"),"\n",s.createElement(n.p,null,s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">yapf</code>'}}),", ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">clang-format</code>'}})," が有効になった？"),"\n",s.createElement(n.p,null,"便利。"),"\n",s.createElement(n.h2,null,"Tomlのフォーマットがよろしくなかったり"),"\n",s.createElement(n.p,null,"dein.tomlのindentが悪くなってしまった😑"),"\n",s.createElement(n.p,null,"自動実行は、時期尚早。\n大丈夫そうなやつから拡張子指定した方がよさそう。"),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="vim"><pre class="language-vim"><code class="language-vim"><span class="token builtin">autocmd</span> BufWrite <span class="token operator">*</span><span class="token operator">.</span><span class="token keyword">py</span> <span class="token punctuation">:</span>Autoformat</code></pre></div>'}}),"\n",s.createElement(n.h2,null,"dのフォーマッターとか"),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="vim"><pre class="language-vim"><code class="language-vim"><span class="token keyword">let</span> g<span class="token punctuation">:</span>formatdef_my_custom_d <span class="token operator">=</span> <span class="token string">\'"dub run -q dfmt -- -i"\'</span>\n<span class="token keyword">let</span> g<span class="token punctuation">:</span>formatters_d <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'my_custom_d\'</span><span class="token punctuation">]</span></code></pre></div>'}}))}var c=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?s.createElement(n,e,s.createElement(l,e)):l(e)},r=t(8678),o=t(8838);const p={code:e=>{let{children:n,className:t}=e;return t?s.createElement(o.Z,{className:t},n):s.createElement("code",null,n)}};function u(e){let{data:n,children:t}=e;return s.createElement(r.Z,null,s.createElement("h1",null,n.mdx.frontmatter.title),s.createElement(a.Zo,{components:p},t))}function m(e){return s.createElement(u,e,s.createElement(c,e))}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2019-vim-autoformat-md-c3a428b7cf45626eb00b.js.map