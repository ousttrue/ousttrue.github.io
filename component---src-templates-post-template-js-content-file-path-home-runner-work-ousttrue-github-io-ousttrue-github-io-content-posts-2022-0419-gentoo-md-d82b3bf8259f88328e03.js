"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4072],{58:function(e,n,t){t.r(n),t.d(n,{default:function(){return d}});var a=t(1151),l=t(7294);function s(e){const n=Object.assign({h1:"h1",p:"p",span:"span",h2:"h2",a:"a",ul:"ul",li:"li"},(0,a.ah)(),e.components);return l.createElement(l.Fragment,null,l.createElement(n.h1,null,"Gentoo 構築"),"\n",l.createElement(n.p,null,"久しぶりに gentoo の機運が高まったので入れてみた。\n先に ",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">Ubuntu-20.04</code>'}})," を入れておいて、後ろのパーティションに gentoo をインストールする作戦。\nUbuntu と同じ ",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">/home</code>'}})," をマウントしてみたら ",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">dotfiles</code>'}})," に互換性が無かったのでやめた。\nわりと順調にインストールできた。\nゆくゆくは wsl も gentoo に換装したいところじゃ。"),"\n",l.createElement(n.h2,null,"2022-05-05"),"\n",l.createElement(n.p,null,"システムを壊してしもた。\n作りなおし。ついでに ",l.createElement(n.a,{href:"https://wiki.gentoo.org/wiki/Btrfs"},"btffs")," やってみる。"),"\n",l.createElement(n.ul,null,"\n",l.createElement(n.li,null,"https://wiki.gentoo.org/wiki/Handbook:AMD64/Installation/Stage#Downloading_the_stage_tarball"),"\n"),"\n",l.createElement(n.p,null,"Stage3: ",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">openrc | desktop profile</code>'}})),"\n",l.createElement(n.h2,null,"btrfs"),"\n",l.createElement(n.p,null,l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">/etc/fstab</code>'}})),"\n",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">/dev/sdb                /srv            btrfs           compress=zstd:9,relatime,rw     0 0</code></pre></div>'}}),"\n",l.createElement(n.h2,null,"python-3.10"),"\n",l.createElement(n.p,null,l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">PYTHON_SINGLE_TARGET</code>'}})),"\n",l.createElement(n.p,null,"6月くらいにデフォルトになる予定みたいだ。先にやってみた。"),"\n",l.createElement(n.p,null,"間違い。去年の6月に、 ",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">Python-3.9</code>'}})," がデフォルトになった。\n",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">Python-3.10</code>'}})," は今のところ予定に無い。\nいろいろインストールできなくなったので、元に戻した。"),"\n",l.createElement(n.h2,null,"make.conf"),"\n",l.createElement(n.p,null,"ここに貼っておこう。\nこいつを育てているようなものだし。"),"\n",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text"># These settings were set by the catalyst build script that automatically\n# built this stage.\n# Please consult /usr/share/portage/config/make.conf.example for a more\n# detailed example.\nCOMMON_FLAGS="-march=native -O2 -pipe"\nCFLAGS="${COMMON_FLAGS}"\nCXXFLAGS="${COMMON_FLAGS}"\nFCFLAGS="${COMMON_FLAGS}"\nFFLAGS="${COMMON_FLAGS}"\n\n# NOTE: This stage was built with the bindist Use flag enabled\nPORTDIR="/var/db/repos/gentoo"\nDISTDIR="/var/cache/distfiles"\nPKGDIR="/var/cache/binpkgs"\n\nUSE="X sixel truetype vim-syntax jpeg png python fontforge cjk alsa \\\n     pulseaudio mp3 dbus opengl ffmpeg mad mpd elogind gtk"\nINPUT_DEVICES="evdev libinput synaptics"\n#VIDEO_CARDS="nouveau"\nVIDEO_CARDS="nvidia"\nABI_X86="64"\n\n# This sets the language of build output to English.\n# Please keep this setting intact when reporting bugs.\nLC_MESSAGES="C"\n\nMAKEOPTS="-j6"</code></pre></div>'}}),"\n",l.createElement(n.h2,null,"passwd"),"\n",l.createElement(n.p,null,l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">/etc/security/passwdqc.conf</code>'}})),"\n",l.createElement(n.h2,null,"boot"),"\n",l.createElement(n.p,null,l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">refind</code>'}})," を試してみた。\n先に、Ubuntu の方でインストールして ",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">gentoo</code>'}})," でエントリーだけ増やした。\n",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">grub2</code>'}})," より設定が簡単だと思った。\n情報は少なめ。"),"\n",l.createElement(n.p,null,l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">/boot/efi/EFI/refind/refind.conf</code>'}})),"\n",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text"># rootの指定が必要 \nmenuentry Gentoo {\n    icon EFI/refind/icons/os_gentoo.png\n    loader /EFI/gentoo/vmlinuz-5.15.32-gentoo-r1-x86_64\n    initrd /EFI/gentoo/initramfs-5.15.32-gentoo-r1-x86_64.img\n    options "root=/dev/sda4"\n}</code></pre></div>'}}),"\n",l.createElement(n.p,null,"起動時に自動検索と設定に記述したエントリが出てくるので、",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">-</code>'}})," キーで隠すと見ためがすっきりする。"),"\n",l.createElement(n.h2,null,"xorg"),"\n",l.createElement(n.p,null,"なんとなくできた。"),"\n",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">$ startx -- vt1</code></pre></div>'}}),"\n",l.createElement(n.p,null,"としないとエラーになる。\n",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">/etc/X11</code>'}})," は作らなくても動いた。"),"\n",l.createElement(n.p,null,"いつもどおりに ",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">openbox</code>'}}),", ",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">tint2</code>'}}),", ",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">PCManFM</code>'}}),", ",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">conky</code>'}})," という感じだが、今回は新型の ",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">wezterm</code>'}})," がある。"),"\n",l.createElement(n.h2,null,"yaft"),"\n",l.createElement(n.p,null,"nerdfonts 入りの bdffont を作りたいのだが未だ。\nmlterm-fb や kmscon も試してみたのだがうまく動かなかった。"),"\n",l.createElement(n.h2,null,"wayland"),"\n",l.createElement(n.p,null,"TODO:"))}var c=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?l.createElement(n,e,l.createElement(s,e)):s(e)},r=t(8678),o=t(8838);const g={code:e=>{let{children:n,className:t}=e;return t?l.createElement(o.Z,{className:t},n):l.createElement("code",null,n)}};function u(e){let{data:n,children:t}=e;return l.createElement(r.Z,null,l.createElement("h1",null,n.mdx.frontmatter.title),l.createElement(a.Zo,{components:g},t))}function d(e){return l.createElement(u,e,l.createElement(c,e))}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2022-0419-gentoo-md-d82b3bf8259f88328e03.js.map