---
import { type CollectionEntry, getCollection } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";
import PostTitle from "../../components/PostTitle.astro";
import PostToc from "../../components/PostToc.astro";
import PostOlder from "../../components/PostOlder.astro";
import PostNewer from "../../components/PostNewer.astro";

export async function getStaticPaths() {
  const posts = await getCollection("posts");
  posts.sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}
type Props = CollectionEntry<"posts">;

const post = Astro.props;
let { Content, headings } = await post.render();

// newer & older
const posts = await getCollection("posts");
posts.sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
const index = posts.findIndex((p) => p.slug == post.slug);
let older = index + 1 < posts.length ? posts[index + 1] : null;
let newer = index > 0 ? posts[index - 1] : null;
---

<BaseLayout title={post.data.title} description={post.data.description}>
  <div class="size-full flex-col">
    <div class="mx-auto max-w-3xl p-4">
      <PostTitle {...post} />
    </div>

    <div class="flex flex-col-reverse md:flex-row mx-auto max-w-3xl">
      <article class="prose">
        <div class="p-4">
          <Content />
        </div>

        <div class="flex justify-between">
          <div class="w-1/2">
            {newer && <PostNewer {...newer} />}
          </div>
          <div class="w-1/2">
            {older && <PostOlder {...older} />}
          </div>
        </div>
      </article>

      <nav class="md:w-72">
        <div class="md:fixed mx-auto">
          {headings.length > 0 && <PostToc {headings}> </PostToc>}
        </div>
      </nav>
    </div>
  </div>
</BaseLayout>
