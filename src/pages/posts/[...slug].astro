---
import { type CollectionEntry, getCollection } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";
import PostTitle from "../../components/PostTitle.astro";
import PostToc from "../../components/PostToc.astro";
// import CodeBlock from "../../components/CodeBlock.astro";

export async function getStaticPaths() {
  const posts = await getCollection("posts");
  posts.sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}
type Props = CollectionEntry<"posts">;

const post = Astro.props;
let { Content, headings } = await post.render();

// next & prev
const posts = await getCollection("posts");
posts.sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
const index = posts.findIndex((p) => p.slug == post.slug);
let prev = index + 1 < posts.length ? posts[index + 1] : null;
let next = index > 0 ? posts[index - 1] : null;
---

<BaseLayout title={post.data.title} description={post.data.description}>
  <div class="flex-col size-full">
    <div class="mx-auto max-w-3xl">
      <PostTitle {...post} />
    </div>

    <div class="flex flex-col-reverse md:flex-row mx-auto max-w-3xl">
      <article class="prose p-4">
        <Content />

        <div class="divider"></div>
        <div class="flex justify-between mx-auto max-w-3xl">
          <div>{next && "ðŸ‘ˆæ–°"}</div>
          <div>{prev && "æ—§ðŸ‘‰"}</div>
        </div>
        <div class="flex justify-between mx-auto max-w-3xl">
          <div class="w-1/2">
            {next && <PostTitle {...next} />}
          </div>
          <div class="w-1/2">
            {prev && <PostTitle {...prev} />}
          </div>
        </div>
      </article>

      <nav class="flex md:w-72">
        <div class="md:fixed mx-auto">
          {headings.length > 0 && <PostToc {headings}> </PostToc>}
        </div>
      </nav>
    </div>
  </div>
</BaseLayout>

<style is:global>
  pre[data-language] {
    position: relative;
  }

  pre[data-language]::before {
    content: attr(data-language);
    font-family: "Helvetica Neue", "Helvetica", "Arial",
      "Hiragino Kaku Gothic Pro", "Meiryo", "MS PGothic", sans-serif;
    font-style: italic;
    position: absolute;
    top: 0;
    right: 0;
    background-color: #ffffff;
    border-radius: 0 0 0 4px;
    padding: 0 7px;
  }

  /* pre[data-language]:hover::before { */
  /*   display: none; */
  /* } */
</style>
