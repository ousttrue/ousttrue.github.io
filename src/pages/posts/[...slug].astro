---
import { type CollectionEntry, getCollection } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";
import PostTitle from "../../components/PostTitle.astro";
import PostToc from "../../components/PostToc.astro";

export async function getStaticPaths() {
  const posts = await getCollection("posts");
  posts.sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}
type Props = CollectionEntry<"posts">;

const post = Astro.props;
let { Content, headings } = await post.render();

const TOC_MAX_LEVEL = 3;
headings = headings.filter(
  (heading) =>
    heading.depth <= TOC_MAX_LEVEL &&
    !(heading.slug === "footnote-label" && heading.text === "Footnotes"),
);

// next & prev
const posts = await getCollection("posts");
posts.sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
const index = posts.findIndex((p) => p.slug == post.slug);
let prev = index + 1 < posts.length ? posts[index + 1] : null;
let next = index > 0 ? posts[index - 1] : null;
---

<BaseLayout title={post.data.title} description={post.data.description}>
  <div class="flex-col size-full">
    <PostTitle {...post} />

    <div class="flex flex-col-reverse md:flex-row mx-auto max-w-3xl">
      <article class="prose p-4">
        <Content />
      </article>

      <nav class="flex md:w-72">
        <div class="md:fixed mx-auto">
          {headings.length > 0 && <PostToc {headings}> </PostToc>}
        </div>
      </nav>
    </div>

    <div class="flex justify-between mx-auto max-w-3xl">
      <div>ðŸ‘ˆæ–°</div>
      <div>æ—§ðŸ‘‰</div>
    </div>
    <div class="flex justify-between mx-auto max-w-3xl">
      <div class="w-1/2">
        {next && <PostTitle {...next} />}
      </div>
      <div class="w-1/2">
        {prev && <PostTitle {...prev} />}
      </div>
    </div>
  </div>
</BaseLayout>
