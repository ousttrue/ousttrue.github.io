---
import { type CollectionEntry, getCollection } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";
import PostTitleCard from "../../components/PostTitleCard.astro";

export async function getStaticPaths() {
  const posts: CollectionEntry<"posts">[] = await getCollection("posts");
  posts.sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
  const flat = posts
    .map((post) => post.data.tags)
    .filter((tags) => tags)
    .flat();
  const tags = Array.from(new Set(flat)).sort();
  return tags.map((tag) => ({
    params: { tag },
    props: {
      tag,
      posts: posts.filter((post) => post.data.tags.includes(tag)),
    },
  }));
}

interface Props {
  tag: string;
  posts: CollectionEntry<"posts">[];
}
const { tag, posts } = Astro.props;
---

<BaseLayout title={tag} description={tag}>
  <!-- <PostTag {tag} count={posts.length} /> -->
  <a role="button" class="btn btn-primary" href={`/tags/${tag}`}>
    {tag}
    <div class="badge">{posts.length}</div>
  </a>

  <div class="flex flex-col">
    {posts.map((post) => <PostTitleCard {...post} />)}
  </div>
</BaseLayout>
