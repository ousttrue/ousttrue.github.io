---
import type { MarkdownHeading } from "astro";
import TableOfContentsHeading from "./TableOfContentsHeading.astro";
const { headings } = Astro.props;

type MarkdownHeadingNode = {
  heading: MarkdownHeading;
  subheadings: MarkdownHeadingNode[];
};

function buildToc(headings: MarkdownHeading[]): MarkdownHeadingNode[] {
  // console.log(headings);
  const root: MarkdownHeadingNode[] = [];
  const stack: MarkdownHeadingNode[] = [];
  function push(heading: MarkdownHeadingNode) {
    if (stack.length == 0) {
      root.push(heading);
    } else {
      stack[stack.length - 1].subheadings.push(heading);
    }
    stack.push(heading);
  }

  for (const h of headings) {
    const node: MarkdownHeadingNode = { heading: h, subheadings: [] };
    if (
      stack.length > 0 &&
      node.heading.depth <= stack[stack.length - 1].heading.depth
    ) {
      while (
        stack.length > 0 &&
        node.heading.depth <= stack[stack.length - 1].heading.depth
      ) {
        stack.pop();
      }
    }
    push(node);
  }
  // console.log(root);
  return root;
}

const toc = buildToc(headings);
---

<nav class="p-4 toc">
  <div class="flex">
    <h3 class="mx-auto">ðŸ“‘ç›®æ¬¡ðŸ“‘</h3>
  </div>
  <ul>
    {toc.map((node) => <TableOfContentsHeading {...node} />)}
  </ul>
</nav>
