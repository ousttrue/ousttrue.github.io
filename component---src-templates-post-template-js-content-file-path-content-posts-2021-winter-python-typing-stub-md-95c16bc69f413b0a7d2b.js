"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1919],{6226:function(e,n,l){l.r(n),l.d(n,{default:function(){return p}});var t=l(1151),c=l(7294);function a(e){const n=Object.assign({h1:"h1",ul:"ul",li:"li",h2:"h2",p:"p",code:"code",a:"a"},(0,t.ah)(),e.components);return c.createElement(c.Fragment,null,c.createElement(n.h1,null,"python typing"),"\n",c.createElement(n.ul,null,"\n",c.createElement(n.li,null,"https://docs.python.org/3/library/typing.html"),"\n"),"\n",c.createElement(n.h2,null,"生成する"),"\n",c.createElement(n.p,null,"既存のライブラリ、特に拡張ライブラリに型ヒントを付与したいことがある。\nこれらは、元が ",c.createElement(n.code,null,"c/c++")," なのでその型情報から ",c.createElement(n.code,null,"pyi")," を生成してやる。\n型情報は、 ",c.createElement(n.code,null,"clang.cindex")," を使って ",c.createElement(n.code,null,"c/c++")," のヘッダーから得るとよい。"),"\n",c.createElement(n.h2,null,"vscode + pylance(pyright)"),"\n",c.createElement(n.p,null,"プロジェクトローカルでいい場合は、 ",c.createElement(n.code,null,"${workspaceFolder}/typings")," に配置すると処理してくれる。\n",c.createElement(n.code,null,"clang.cindex")," に ",c.createElement(n.code,null,"enum")," の情報を追加してみた。"),"\n",c.createElement(n.h2,null,"ctypes"),"\n",c.createElement(n.ul,null,"\n",c.createElement(n.li,null,"clang.cindex"),"\n"),"\n",c.createElement(n.p,null,"もとのモジュールと構造が同じ ",c.createElement(n.code,null,"pyi")," を用意してやる。\n",c.createElement(n.code,null,"ctypes")," の ",c.createElement(n.code,null,"Structure")," や関数ポインタに直接型ヒントを付与うまい方法は無さそう？"),"\n",c.createElement(n.h2,null,"拡張モジュール"),"\n",c.createElement(n.ul,null,"\n",c.createElement(n.li,null,"bpy"),"\n",c.createElement(n.li,null,"imgui のバインディング"),"\n"),"\n",c.createElement(n.p,null,"拡張モジュールに型ヒントを埋め込む方法がまだ無いっぽい。\n埋め込む方法ができれば、 ",c.createElement(n.code,null,"cython")," や ",c.createElement(n.code,null,"pybind")," で作った拡張モジュールには自動で型ヒントが付きそうな気がするのだが。"),"\n",c.createElement(n.h2,null,"imgui で作ってみた。"),"\n",c.createElement(n.ul,null,"\n",c.createElement(n.li,null,"\n",c.createElement(n.p,null,"https://github.com/ousttrue/cydeer"),"\n"),"\n",c.createElement(n.li,null,"\n",c.createElement(n.p,null,c.createElement(n.a,{href:"https://blog.ymyzk.com/2018/09/creating-packages-using-pep-561/"},"PEP 561 に準拠した型ヒントを含むパッケージの作り方")),"\n"),"\n"),"\n",c.createElement(n.p,null,"を参考に作ってみた。"))}var r=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,t.ah)(),e.components);return n?c.createElement(n,e,c.createElement(a,e)):a(e)},u=l(8678),m=l(4160),o=l(8736);const E={code:e=>{let{children:n,className:l}=e;return l?c.createElement(o.Z,{className:l},n):c.createElement("code",null,n)}};function i(e){let{data:n,children:l}=e;const a=n.mdx.frontmatter;return c.createElement(u.Z,null,c.createElement("h1",null,a.title),c.createElement("div",{className:"tags-index"},a.tags&&a.tags.length>0&&a.tags.map((e=>c.createElement(m.rU,{to:"/tags/"+e+"/",itemProp:"url"},c.createElement("button",null,e))))),c.createElement(t.Zo,{components:E},l))}function p(e){return c.createElement(i,e,c.createElement(r,e))}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-content-posts-2021-winter-python-typing-stub-md-95c16bc69f413b0a7d2b.js.map