"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4858],{4064:function(e,t,n){n.r(t),n.d(t,{default:function(){return p}});var o=n(1151),a=n(7294);function c(e){const t=Object.assign({p:"p",a:"a"},(0,o.ah)(),e.components);return a.createElement(a.Fragment,null,a.createElement(t.p,null,"vcpkgを眺めていたらnot boostなasioを発見した。"),"\n",a.createElement(t.p,null,"asioをBoostに含まれているオフィシャル感のあるクロスプラットフォームな通信ライブラリととらえていたのだけど、c++11でboostのよく使う部分がc++にかなり取り込まれて肥大化する一方のboostを避ける気持ちが生まれていた。"),"\n",a.createElement(t.p,null,a.createElement(t.a,{href:"http://think-async.com/Asio/AsioAndBoostAsio"},"http://think-async.com/Asio/AsioAndBoostAsio")),"\n",a.createElement(t.p,null,"読んでみるとついにヘッダオンリー化を果たしたらしい。boostの外に出ないとヘッダオンリー化が難しそうではある。たしか、asioはsocket周りじゃなくてerror周りのクラスがコンパイル対象なのに引きずられてasioを使うにはコンパイルを強いられるということがあった。技術的にはだいぶ前からヘッダオンリー化は可能であったのだろうがついにやってくれたか。素晴らしい。解凍するとギガ単位になる最近のboostはいかがなものかと思ってた。\n稀に使われているぽい、拙作のmsgpack-asioもヘッダオンリーのasioを使って近代化したいなぁ。あと、msgpackの実装も\n",a.createElement(t.a,{href:"https://github.com/nlohmann/json"},"https://github.com/nlohmann/json"),"\nに切り替えたい。\nc++11以降、c++界隈が活性化しているような気がするな。"))}var s=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,o.ah)(),e.components);return t?a.createElement(t,e,a.createElement(c,e)):c(e)},l=n(8678),r=n(1883),m=n(8838);const i={code:e=>{let{children:t,className:n}=e;return n?a.createElement(m.Z,{className:n},t):a.createElement("code",null,t)}};function u(e){let{data:t,children:n}=e;const c=t.mdx.frontmatter;return a.createElement(l.Z,null,a.createElement("h1",null,c.title),a.createElement("div",{className:"tags-index"},c.tags&&c.tags.length>0&&c.tags.map((e=>a.createElement(r.rU,{to:"/tags/"+e+"/",itemProp:"url"},a.createElement("button",null,e))))),a.createElement(o.Zo,{components:i},n))}function p(e){return a.createElement(u,e,a.createElement(s,e))}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2017-05-asio-md-de49620f28644464addd.js.map