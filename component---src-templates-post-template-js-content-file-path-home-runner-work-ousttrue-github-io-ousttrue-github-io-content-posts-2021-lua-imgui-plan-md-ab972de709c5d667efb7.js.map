{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2021-lua-imgui-plan-md-ab972de709c5d667efb7.js","mappings":"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","sources":["webpack:///./content/posts/2021/lua_imgui_plan.md","webpack:///./src/templates/post-template.js","webpack:///./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    pre: \"pre\",\n    h3: \"h3\",\n    h4: \"h4\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"rust で D3D11 レンダラを進めてきたが・・・\"), \"\\n\", React.createElement(_components.p, null, \"当初 \", React.createElement(_components.code, null, \"rust\"), \" で \", React.createElement(_components.code, null, \"d3d11\"), \" のレンダラーを作ろうとして作業を進めていた。\\n\", React.createElement(_components.code, null, \"imgui\"), \" を組み込んで、 \", React.createElement(_components.code, null, \"glTF\"), \" をロードして \", React.createElement(_components.code, null, \"unlit\"), \" で描画するところまで作ったが、\\n\", React.createElement(_components.code, null, \"GUI\"), \" の作りこみが大変そうな感じだった。\\n\", React.createElement(_components.code, null, \"rust\"), \" は関数オーバーロードが無いので　\", React.createElement(_components.code, null, \"imgui\"), \" のラッパーの使い勝手が \", React.createElement(_components.code, null, \"c++\"), \" より落ちるなど。\\nポインターを渡せるのは素敵なのだが。\"), \"\\n\", React.createElement(_components.h2, null, \"nvim-0.5 はおもしろい\"), \"\\n\", React.createElement(_components.p, null, \"ここで寄り道して、 \", React.createElement(_components.code, null, \"nvim\"), \" をいじり始めた。\\nちょうどバージョン \", React.createElement(_components.code, null, \"0.5\"), \" がリリースされるタイミングで、\", React.createElement(_components.code, null, \"0.5\"), \" になると lua サポートが強化されて、設定が lua で書けるとのこと。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://zenn.dev/hituzi_no_sippo/articles/871c06cdbc45b53181e3\"\n  }, \"NeovimとLua\")), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"ということで Windows 向けのソースからのビルドシステムを作って \", React.createElement(_components.code, null, \"nvim\"), \" 環境を整備してみた。\\nlua で記述された plugin をなるべく採用。\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/ousttrue/my_nvim\"), \"\\n\", React.createElement(_components.p, null, \"最近常用していた、 \", React.createElement(_components.code, null, \"vscode\"), \" の便利さにどこまで追いつけるか。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Language Server Protocol。nvim-0.5 から nvim-lsp (luaで書いてある) がある。組み込み\"), \"\\n\", React.createElement(_components.li, null, \"Debug Adapter Protocol。nvim-0.5 から nvim-dap (lulで書いてある) がある。https://github.com/mfussenegger/nvim-dap\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"vscode から \", React.createElement(_components.code, null, \"lsp\"), \" と \", React.createElement(_components.code, null, \"dap\"), \" という重要な資産を持ってこれるので慣れればいけそうである。\\n調べたところ下記のようだった。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"codelldb(native debugger c++ や rust) は nvim-dap を改造すれば使えた https://github.com/ousttrue/nvim-dap\"), \"\\n\", React.createElement(_components.li, null, \"rust-analyzer 動いた\"), \"\\n\", React.createElement(_components.li, null, \"python: lsp, dap ともに動きそう\"), \"\\n\", React.createElement(_components.li, null, \"lua: lsp, dap ともに動きそう\"), \"\\n\", React.createElement(_components.li, null, \"csharp: lsp, dap ともに動きそう(Unityはうまくいかず)\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"nvim-lsp も nvim-dap も lua で簡単に記述されているので、コードを読めば、たぶんわかる。\\nあとは、タスクランナーを整備すれば開発環境に使えそう。\"), \"\\n\", React.createElement(_components.h2, null, \"luarocks の Windows 運用\"), \"\\n\", React.createElement(_components.p, null, \"lua で記述された nvim のパッケージマネージャー https://github.com/wbthomason/packer.nvim を採用したのだが、\\nWindows で luarocks 機能が動かなかった。https://luarocks.org/ は \", React.createElement(_components.code, null, \"lua\"), \" のパッケージマネージャー。\\nちょっと、古め(vc2017より前)の vc でないとだめぽい。\\n改造した。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/ousttrue/packer.nvim\"), \"\\n\", React.createElement(_components.li, null, \"https://github.com/ousttrue/hererocks\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"hererocks は、luarocks のインストーラー。\\n\", React.createElement(_components.code, null, \"LUA_PATH\"), \" \", React.createElement(_components.code, null, \"package.path\"), \" を理解した。\"), \"\\n\", React.createElement(_components.h2, null, \"スタンドアロンの lua インタプリタによるプロジェクト\"), \"\\n\", React.createElement(_components.p, null, \"luarocks が無事に Windows で運用できるようになったので、プロジェクトローカルに必要なライブラリをインストールして、\\nスタンドアロンの lua インタープリターを起点にしたアプリ開発ができないか探ってみた。\\nlua インタプリタがアプリ組み込みだと dap の運用がしづらい(port 開けて attach とかになる)のでスタンドアロンの lua インタープリターを推す。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"# フォルダ構成\\nproject_root\\n  + lua(.gitignore) # hererocks でローカルビルドする\\n  + main.lua\\n\")), \"\\n\", React.createElement(_components.p, null, \"これで、 \", React.createElement(_components.code, null, \"lsp\"), \" と \", React.createElement(_components.code, null, \"dap\"), \" が利用できれば快適になるのではないか。\"), \"\\n\", React.createElement(_components.h3, null, \"lua の LanguageServer\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://marketplace.visualstudio.com/items?itemName=sumneko.lua\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/sumneko/lua-language-server\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"がしっかり動き、\", React.createElement(_components.code, null, \"EmmyLua\"), \" の型ヒントを活用できることが分かった。\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/neovim/nvim-lspconfig/blob/a21a509417aa530fb7b54020f590fa5ccc67de77/CONFIG.md#sumneko_lua に例があって、\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-lua\"\n  }, \"require'lspconfig'.sumneko_lua.setup {\\n  settings = {\\n    Lua = {\\n      workspace = {\\n        -- Make the server aware of Neovim runtime files\\n        library = {\\n          [vim.fn.expand('$VIMRUNTIME/lua')] = true, -- lua標準の型定義がある\\n          [vim.fn.expand('$VIMRUNTIME/lua/vim/lsp')] = true, -- Vimの型定義がある\\n        },\\n      },\\n    },\\n  },\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"インテリセンスが効くし、組み込み関数の型ヒントも追加できる。\"), \"\\n\", React.createElement(_components.h3, null, \"lua の DebugAdapter\"), \"\\n\", React.createElement(_components.p, null, \"DebugAdapter も問題なく動いた。\\nluajit の場合は対応しているものを使うべし。\"), \"\\n\", React.createElement(_components.h4, null, \"Lua Debug\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://marketplace.visualstudio.com/items?itemName=actboy168.lua-debug\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/actboy168/lua-debug\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/actboy168/bee.lua の\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Add error hook (for debugger)\"), \"\\n\", React.createElement(_components.li, null, \"Add resume/yield hook (for debugger)\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"謎の機能で実装されているぽい。\"), \"\\n\", React.createElement(_components.h4, null, \"Local Lua Debugger\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"https://marketplace.visualstudio.com/items?itemName=tomblind.local-lua-debugger-vscode\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/tomblind/local-lua-debugger-vscode\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"luajit でも動く\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"TypeScriptToLua で書かれている\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"lua で 3D\"), \"\\n\", React.createElement(_components.p, null, \"ちょっと試したところ、 luajit の \", React.createElement(_components.a, {\n    href: \"https://luajit.org/ext_ffi.html\"\n  }, \"FFI\"), \" を使うのが有望そうという感触を得た。\\nd3d は lua でやっている人があまりいなかった。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/sonoro1234/LuaJIT-GLFW\"), \"\\n\", React.createElement(_components.li, null, \"https://github.com/sonoro1234/LuaJIT-ImGui\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"最新の luajit-2.1.0-beta3(lua-5.1仕様) でいく。\"), \"\\n\", React.createElement(_components.h2, null, \"imgui の ffi\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"cimgui\"), \" ではなく 素の \", React.createElement(_components.code, null, \"imgui\"), \" の luajit ffi できるか実験した。\"), \"\\n\", React.createElement(_components.p, null, \"https://stackoverflow.com/questions/6691651/is-it-possible-to-use-functions-from-c-namespaces-with-luajit-ffi\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-lua\"\n  }, \"ffi.cdef[[\\nvoid Test1_Method1(void) asm(\\\"_ZN5Test17Method1Ev\\\");\\n]]\\n\")), \"\\n\", React.createElement(_components.p, null, \"のように mangling に対応すればできそう。\"), \"\\n\", React.createElement(_components.h2, null, \"libclang による コード生成\"), \"\\n\", React.createElement(_components.p, null, \"ということで、 \", React.createElement(_components.code, null, \"luajit\"), \" + \", React.createElement(_components.code, null, \"FFI\"), \" を中心に \", React.createElement(_components.code, null, \"imgui\"), \" ラッパーを作ってレンダラーというか 3D ツールのインフラとなる、\\n簡単なレンダラーと \", React.createElement(_components.code, null, \"Gizmo\"), \" に対応したツールキットを作るという方向になってきた。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"imgui\"), \" の \", React.createElement(_components.code, null, \"luajit\"), \" \", React.createElement(_components.code, null, \"FFI\"), \" の使い勝手が重要。\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/ousttrue/limgui\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"[ ] libclang で \", React.createElement(_components.code, null, \"imgui.h\"), \" をパースして、luajit FFI 生成と \", React.createElement(_components.code, null, \"lsp\"), \" への EmmyLua アノテーション生成を同時にやるツール。\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2021/lua_imgui_plan.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nfunction PostTempalte({data, children}) {\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, null, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","code","ul","li","a","pre","h3","h4","_provideComponents","components","React","href","className","wrapper","MDXLayout","PostTempalte","_ref","data","children","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}