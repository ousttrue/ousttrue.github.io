{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2022-0918-w-3-m-mod-md-4ee524242f685a3a0952.js","mappings":"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","sources":["webpack:///./content/posts/2022/0918-w3m-mod.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    span: \"span\",\n    ul: \"ul\",\n    li: \"li\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"w3m改造に再突入\"), \"\\n\", React.createElement(_components.p, null, \"なんとなく最初からやり直し。\"), \"\\n\", React.createElement(_components.h2, null, \"マクロカッター\"), \"\\n\", React.createElement(_components.p, null, \"今回は、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">python</code>\"\n    }\n  }), \" でマクロカッターを作って前処理してみた。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">#ifdef USE_UNICODE\\n// hogehoge\\n#endif</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"みたいな \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">#ifdef</code>\"\n    }\n  }), \" 事前に解決しえカットしていくツールである。\\nめんどくさいので \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">if defined(HOGE)</code>\"\n    }\n  }), \" などは実装していない。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">true</code>\"\n    }\n  }), \", \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">false</code>\"\n    }\n  }), \", \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">none</code>\"\n    }\n  }), \" の3値で判断。\\ntrue であれば \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">#if</code>\"\n    }\n  }), \" を削除。\\nfalse であれば \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">#if</code>\"\n    }\n  }), \" ブロックをコードごと削除し。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">none</code>\"\n    }\n  }), \" であれば保持するというロジック。\\nわりとうまくいって、コードがかなり簡単になった。\"), \"\\n\", React.createElement(_components.h2, null, \"いつも通り C++ 化\"), \"\\n\", React.createElement(_components.p, null, \"C++ 化しないとCの暗黙の型変換が緩すぎてコンパイルエラー追うのが難しくなるので、\\n次の一手はこれ。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">c++</code>\"\n    }\n  }), \" できたら、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">typdef struct Some {} Some;</code>\"\n    }\n  }), \" を \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">struct Some;</code>\"\n    }\n  }), \" に書き換える。\\nこれでストレスをかなり低減できる。\"), \"\\n\", React.createElement(_components.p, null, \"局所性の高い関数をメンバー関数にする。\\nなるべくメンバーを private にして、名前も \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">_</code>\"\n    }\n  }), \" などの prefix を付ける。\\n大きい struct は分割する。\\nコンストラクタ、デストラクタ、コピーコンストラクタは避ける。\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">GC</code>\"\n    }\n  }), \" や \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">setmem(0)</code>\"\n    }\n  }), \" で死ぬ。\\n同様に、 std::vector, std::string は慎重に導入する。\"), \"\\n\", React.createElement(_components.h2, null, \"macro 減らす\"), \"\\n\", React.createElement(_components.p, null, \"macro 関数を\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">inline 関数</code>\"\n    }\n  }), \" に置き換えたり、\\nmacro 定数を \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">enum</code>\"\n    }\n  }), \" に置き換える。int, char などを enum に置き換える。\\n使えれば \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">bitfield</code>\"\n    }\n  }), \" とかも駆使。\"), \"\\n\", React.createElement(_components.h2, null, \"fm.h, proto.h, file.c の分配\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">.c</code>\"\n    }\n  }), \" と \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">.h</code>\"\n    }\n  }), \" をペアにして関数を一致させる\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">struct</code>\"\n    }\n  }), \" 毎にヘッダを分ける。\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">global</code>\"\n    }\n  }), \" 変数を散らす\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">const char*</code>\"\n    }\n  }), \" との戦い。順次\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"膨大な global 変数があるので、使わないもの思い切って削除する。\"), \"\\n\", React.createElement(_components.h3, null, \"file.c\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">file.c</code>\"\n    }\n  }), \" が 7000 行とかあってすごい。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"html のロードが 4500 くらい。 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">table.c</code>\"\n    }\n  }), \", \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">frame.c</code>\"\n    }\n  }), \" も関連？\"), \"\\n\", React.createElement(_components.li, null, \"http を操作が 500 くらい\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"http アクセスや、html パース、ローカルCGI とか Buffer 操作が色々入っている。\"), \"\\n\", React.createElement(_components.h2, null, \"libuv\"), \"\\n\", React.createElement(_components.h3, null, \"mainloop\"), \"\\n\", React.createElement(_components.p, null, \"あっさりできてしまった。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">tty input</code>\"\n    }\n  }), \", \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">resize signal</code>\"\n    }\n  }), \" で \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">idle</code>\"\n    }\n  }), \" のときに描画などという方針でよさそう。\\nraw モード切り替えなども \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">libuv</code>\"\n    }\n  }), \" 移行できそう。\"), \"\\n\", React.createElement(_components.h3, null, \"入力ストリーム\"), \"\\n\", React.createElement(_components.p, null, \"tcp, fd, FILE*, Str と圧縮 decoder のランタイム polymorphism.\\nc++ の継承に置き換えて、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">void*</code>\"\n    }\n  }), \" の cast より、型チェックの聞く状態にできる。\"), \"\\n\", React.createElement(_components.p, null, \"TODO: libuv を使う\"), \"\\n\", React.createElement(_components.h3, null, \"linein / readline\"), \"\\n\", React.createElement(_components.h3, null, \"出力\"), \"\\n\", React.createElement(_components.h3, null, \"signal\"), \"\\n\", React.createElement(_components.p, null, \"読み込みを \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">ctrl-c</code>\"\n    }\n  }), \" で中断するなど。\"), \"\\n\", React.createElement(_components.h2, null, \"使わない機能を削る\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"backend, dump など\"), \"\\n\", React.createElement(_components.li, null, \"pager 系の機能\"), \"\\n\", React.createElement(_components.li, null, \"news, gopher など使わないプロトコル\"), \"\\n\", React.createElement(_components.li, null, \"mouse 系の機能\"), \"\\n\", React.createElement(_components.li, null, \"search_header 系の機能\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"wtf-8 とは？\"), \"\\n\", React.createElement(_components.p, null, \"謎の文字コード \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">wtf-8</code>\"\n    }\n  }), \" について、再調査。\"), \"\\n\", React.createElement(_components.p, null, \"https://badsector.pullup.net/?p=70\"), \"\\n\", React.createElement(_components.p, null, \"👇\"), \"\\n\", React.createElement(_components.p, null, \"https://simonsapin.github.io/wtf-8/\"), \"\\n\", React.createElement(_components.h2, null, \"vt100 分離\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Buffer = Screen => tty_out</code>\"\n    }\n  }), \" という流れに統一する。\\n各所からローレベルの描画機能を呼ばない。\"), \"\\n\", React.createElement(_components.p, null, \"メッセージ表示も抽象化して、text を push するだけに。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"カーソル移動\"), \"\\n\", React.createElement(_components.li, null, \"out\"), \"\\n\", React.createElement(_components.li, null, \"flush\"), \"\\n\", React.createElement(_components.li, null, \"カーソル復帰\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"とかしない。\"), \"\\n\", React.createElement(_components.h2, null, \"TODO: logger 導入\"), \"\\n\", React.createElement(_components.h2, null, \"UIとデータ構造の分離\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">+----+\\n|DATA| TabBuffer, Buffer, Anchor, Form, Image...\\n+----+\\n  A\\n  |\\n+----+\\n| UI | mainloop... tty, key dispatch\\n+----+</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">TabBuffer, Buffer, Anchor, FormList</code>\"\n    }\n  }), \" と \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">mainloop keydispatch</code>\"\n    }\n  }), \" あたりを分離する。\\n片方向の参照。\"), \"\\n\", React.createElement(_components.p, null, \"バッファーローダーからグローバル変数を除去して、再入可能にする。\\ntab を平行動作可能にする。\"), \"\\n\", React.createElement(_components.h3, null, \"TODO: lua 導入\"), \"\\n\", React.createElement(_components.p, null, \"DEFUN を lua で記述したい。\\nrc も？\"), \"\\n\", React.createElement(_components.h2, null, \"TODO: libgc 減らす。止める\"), \"\\n\", React.createElement(_components.h2, null, \"TODO: zig に移植\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">zig cc</code>\"\n    }\n  }), \" でビルドはできた。\\nじゃなくて、ソースを \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">zig</code>\"\n    }\n  }), \" にしたい。\"), \"\\n\", React.createElement(_components.h2, null, \"TODO\"), \"\\n\", React.createElement(_components.p, null, \"Windows ネイティブで動くようにしたい。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">libuv</code>\"\n    }\n  }), \" + \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">conpty</code>\"\n    }\n  }), \" できそうな気がするのだけど、まだまだ。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2022/0918-w3m-mod.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","h2","span","ul","li","h3","_provideComponents","components","React","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}