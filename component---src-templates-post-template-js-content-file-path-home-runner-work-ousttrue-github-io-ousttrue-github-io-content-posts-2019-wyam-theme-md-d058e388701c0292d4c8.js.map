{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2019-wyam-theme-md-d058e388701c0292d4c8.js","mappings":"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","sources":["webpack:///./content/posts/2019/wyam-theme.md","webpack:///./src/templates/post-template.js","webpack:///./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\",\n    pre: \"pre\",\n    a: \"a\",\n    blockquote: \"blockquote\",\n    strong: \"strong\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"cssとかの調整。\"), \"\\n\", React.createElement(_components.h2, null, \"調べる\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://wyam.io/docs/\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://wyam.io/recipes/blog/themes/\"), \"\\n\", React.createElement(_components.li, null, \"https://wyam.io/docs/extensibility/creating-a-theme\"), \"\\n\", React.createElement(_components.li, null, \"https://wyam.io/docs/extensibility/customizing-themes\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"ローカルにファイルを配置することでテーマをオーバーライドできると書いてあるのだが、\\nどのように配置するか正確なところがわからん。\"), \"\\n\", React.createElement(_components.p, null, \"試行錯誤したところ、\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"input\"), \" にテーマのファイルを直接コピーしたら反映された。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"theme\"), \" フォルダでもよさそうなのだけど、 \", React.createElement(_components.code, null, \"input\"), \" しか \", React.createElement(_components.code, null, \"--watch\"), \" の対象にならないので、\\n\", React.createElement(_components.code, null, \"input\"), \" に入れてしまうのがよさそう。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"input\\n  + assets\\n  + _Layout.cshtml\\n\")), \"\\n\", React.createElement(_components.h2, null, \"レイアウトの構成\"), \"\\n\", React.createElement(_components.p, null, \"ASP.Net のtemplateエンジン、 \", React.createElement(_components.a, {\n    href: \"https://docs.microsoft.com/en-us/aspnet/core/mvc/views/razor?view=aspnetcore-2.2\"\n  }, \"Razor\"), \" で構成されていて拡張子は、 \", React.createElement(_components.code, null, \"cshtml\"), \" 。\"), \"\\n\", React.createElement(_components.p, null, \"ファイル名は、\", React.createElement(_components.a, {\n    href: \"https://wyam.io/recipes/blog/overview\"\n  }, \"Blog Recipe\"), \"が規定している。\"), \"\\n\", React.createElement(_components.p, null, \"サイトのルート(index), 各記事(post), 記事一覧(archive, tag), タグ一覧(tags)などがある。単純な例はこれ。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/Wyamio/Wyam/tree/develop/themes/Blog/BlogTemplate\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"テーマを作ってみる\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/Wyamio/Wyam.git\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"をクローンして、\", React.createElement(_components.code, null, \"themes/Blog/BlogTemplate/*\"), \" を \", React.createElement(_components.code, null, \"input\"), \" にコピーする。\\nconfig.yml も \", React.createElement(_components.code, null, \"#theme BlogTemplate\"), \" とする。\"), \"\\n\", React.createElement(_components.p, null, \"共通のレイアウトが \", React.createElement(_components.code, null, \"_Layout.cshtml\"), \" 。 その中の、 \", React.createElement(_components.code, null, \"@RenderBody()\"), \" にルート(_Index.cshtml), 記事(_PostLayout.cshtml), 記事一覧(_Archive.cshtml, _Tag.cshtml), タグ一覧(_Tags.cshtml)がはめ込まれる様子。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"_PostIndex.cshtml\"), \" は廃止されたので使われない。\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"[Breaking Change]\"), \"[Refactoring] Moved Blog recipe theme file \", React.createElement(_components.code, null, \"/_PostIndex.cshtml\"), \" to \", React.createElement(_components.code, null, \"/_Archive.cshtml\"), \", no other changes should be needed to this file in themes other than to move it - sorry for the rename (again), the first name was kind of dumb, this one is better\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"日本語が文字化けするので、 \", React.createElement(_components.code, null, \"_Layout.cshtml\"), \" に \", React.createElement(_components.code, null, \"<meta charset=\\\"UTF-8\\\">\"), \" だけ足す。\\nあとは適当にやってみる。\"), \"\\n\", React.createElement(_components.h2, null, \"cshtml からアクセスできる変数\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Model\"), \"\\n\", React.createElement(_components.li, null, \"Context\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-cshtml\"\n  }, \"<a href=\\\"@Context.GetLink(Context.String(BlogKeys.PostsPath))\\\">Back To posts</a>\\n\")), \"\\n\", React.createElement(_components.h2, null, \"作業メモ\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"scss(wyamが対応している)\"), \"\\n\", React.createElement(_components.li, null, \"highlight.js (phantom themeからコピー)\"), \"\\n\", React.createElement(_components.li, null, \"旧記事を雑に復旧\"), \"\\n\", React.createElement(_components.li, null, \"locale https://wyam.io/docs/advanced/setting-the-culture\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"ToDo\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"404頁\"), \"\\n\", React.createElement(_components.li, null, \"一覧をpageで分割\"), \"\\n\", React.createElement(_components.li, null, \"記事内のTOC\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/Wyamio/Wyam/issues/29\"), \"\\n\", React.createElement(_components.li, null, \"https://blog.kabrt.cz/posts/2018-11-wyam-blog\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"https://konpa.github.io/devicon/\"), \"\\n\", React.createElement(_components.li, null, \"http://fizzed.com/oss/font-mfizz\"), \"\\n\", React.createElement(_components.li, null, \"https://www.digitaltapestry.net/posts/poshwyam\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"動作\"), \"\\n\", React.createElement(_components.p, null, \"複数のパイプラインが登録してあって(Recipe)、ひとつずつ実行する\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"public IReadOnlyList<IDocument> Execute(ExecutionContext context, IEnumerable<IModule> modules, ImmutableArray<IDocument> inputDocuments\\n\\nforeach(var pipeline in pipelines)\\n{\\n  ExecutionPipeline.Execute\\n}\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2019/wyam-theme.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nfunction PostTempalte({data, children}) {\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, null, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h2","ul","li","code","pre","a","blockquote","strong","h3","_provideComponents","components","React","href","className","wrapper","MDXLayout","PostTempalte","_ref","data","children","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}