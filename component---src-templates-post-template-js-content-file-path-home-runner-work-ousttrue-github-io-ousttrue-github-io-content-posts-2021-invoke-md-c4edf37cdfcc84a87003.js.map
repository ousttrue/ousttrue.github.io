{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2021-invoke-md-c4edf37cdfcc84a87003.js","mappings":"8JAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,KAAM,OACNC,GAAI,OACHC,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,+BAAgCK,EAAAA,cAAoBR,EAAYI,KAAM,CAC9JK,wBAAyB,CACvBC,OAAQ,6CAER,uEAAwEF,EAAAA,cAAoBR,EAAYI,KAAM,CAChHK,wBAAyB,CACvBC,OAAQ,iDAER,mBAAoB,KAAMF,EAAAA,cAAoBR,EAAYK,GAAI,KAAM,WAAY,KAAMG,EAAAA,cAAoBR,EAAYI,KAAM,CAC9HK,wBAAyB,CACvBC,OAAQ,uJAER,KAAMF,EAAAA,cAAoBR,EAAYK,GAAI,KAAM,YAAa,KAAMG,EAAAA,cAAoBR,EAAYI,KAAM,CAC3GK,wBAAyB,CACvBC,OAAQ,yrDAER,KAAMF,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,MAAO,KAAMK,EAAAA,cAAoBR,EAAYI,KAAM,CACpGK,wBAAyB,CACvBC,OAAQ,4jBAER,KAAMF,EAAAA,cAAoBR,EAAYK,GAAI,KAAM,gBAAiB,KAAMG,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,YAAaK,EAAAA,cAAoBR,EAAYI,KAAM,CACrKK,wBAAyB,CACvBC,OAAQ,+CAER,YAAa,KAAMF,EAAAA,cAAoBR,EAAYI,KAAM,CAC3DK,wBAAyB,CACvBC,OAAQ,81CAGd,CAKA,MAJA,SAAoBX,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGI,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC3E,OAAOK,EAAYJ,EAAAA,cAAoBI,EAAWb,EAAOS,EAAAA,cAAoBV,EAAmBC,IAAUD,EAAkBC,EAC9H,E,oBCpCA,MAAMQ,EAAa,CACjBM,KAAMC,IAA2B,IAA1B,SAACC,EAAQ,UAAEC,GAAUF,EAC1B,OAAOE,EAAYR,EAAAA,cAAoBS,EAAAA,EAAsB,CAC3DD,UAAWA,GACVD,GAAYP,EAAAA,cAAoB,OAAQ,KAAMO,EAAS,GAG9D,SAASG,EAAYC,GAAmB,IAAlB,KAACC,EAAI,SAAEL,GAASI,EACpC,OAAOX,EAAAA,cAAoBa,EAAAA,EAAQ,KAAMb,EAAAA,cAAoB,KAAM,KAAMY,EAAKE,IAAIC,YAAYC,OAAQhB,EAAAA,cAAoBiB,EAAAA,GAAa,CACrIlB,WAAYA,GACXQ,GACL,CACe,SAASW,EAAiB3B,GACvC,OAAOS,EAAAA,cAAoBU,EAAcnB,EAAOS,EAAAA,cAAoBmB,EAAqB5B,GAC3F,C","sources":["webpack:///./content/posts/2021/invoke.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    span: \"span\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"python でちょっとしたツールを書くときに便利。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">make</code>\"\n    }\n  }), \" みたいにタスクを定義して、コマンドラインから実行する。\\ntask として定義した関数の引数に応じてコマンドライン引数をさばけるので \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">argparse</code>\"\n    }\n  }), \" せずにすませることができる。\"), \"\\n\", React.createElement(_components.h2, null, \"install\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">$ pip install invoke</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"tasks.py\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"python\\\"><pre class=\\\"language-python\\\"><code class=\\\"language-python\\\"><span class=\\\"token keyword\\\">from</span> invoke <span class=\\\"token keyword\\\">import</span> task\\n\\n<span class=\\\"token decorator annotation punctuation\\\">@task</span>\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">hello</span><span class=\\\"token punctuation\\\">(</span>c<span class=\\\"token punctuation\\\">,</span> who<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"hoge\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token triple-quoted-string string\\\">'''\\n    hello task\\n    '''</span>\\n    <span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string-interpolation\\\"><span class=\\\"token string\\\">f'hello </span><span class=\\\"token interpolation\\\"><span class=\\\"token punctuation\\\">{</span>hoge<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token string\\\">'</span></span><span class=\\\"token punctuation\\\">)</span>\\n\\n\\n<span class=\\\"token decorator annotation punctuation\\\">@task</span><span class=\\\"token punctuation\\\">(</span>hello<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">ver</span><span class=\\\"token punctuation\\\">(</span>c<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token triple-quoted-string string\\\">'''\\n    version\\n    '''</span>\\n    <span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span>sys<span class=\\\"token punctuation\\\">.</span>version<span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"使う\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">$ invoke -l           \\nAvailable tasks:\\n\\n  hello   hello task\\n  ver     version\\n\\n$ invoke hello --help\\nUsage: inv[oke] [--core-opts] hello [--options] [other tasks here ...]\\n\\nDocstring:\\n  hello task\\n\\nOptions:\\n  -w STRING, --who=STRING\\n\\n$ invoke hello fuga  \\nNo idea what 'fuga' is!\\n$ invoke hello -w fuga\\nhello fuga\\n$ invoke ver\\nhello hoge\\n3.8.6 (tags/v3.8.6:db45529, Sep 23 2020, 15:52:53) [MSC v.1927 64 bit (AMD64)]</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"vscode でデバッグ\"), \"\\n\", React.createElement(_components.p, null, \"module に \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">invoke</code>\"\n    }\n  }), \" を設定してやる\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"json\\\"><pre class=\\\"language-json\\\"><code class=\\\"language-json\\\">        <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token property\\\">\\\"name\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"task\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token property\\\">\\\"type\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"python\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token property\\\">\\\"request\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"launch\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token property\\\">\\\"module\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"invoke\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token property\\\">\\\"args\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n                <span class=\\\"token string\\\">\\\"hello\\\"</span>\\n            <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n            <span class=\\\"token property\\\">\\\"console\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"integratedTerminal\\\"</span>\\n        <span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2021/invoke.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","span","h2","_provideComponents","components","React","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","Layout","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}