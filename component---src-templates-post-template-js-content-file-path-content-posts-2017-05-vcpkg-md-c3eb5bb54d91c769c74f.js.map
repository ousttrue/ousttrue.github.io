{"version":3,"file":"component---src-templates-post-template-js-content-file-path-content-posts-2017-05-vcpkg-md-c3eb5bb54d91c769c74f.js","mappings":"+JAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,WAAY,eACXC,EAAAA,EAAAA,MAAsBN,EAAMO,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,8DAA+D,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,WAAY,KAAMI,EAAAA,cAAoBP,EAAYI,WAAY,KAAM,KAAMG,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,oDAAqD,MAAO,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,WAAY,KAAMI,EAAAA,cAAoBP,EAAYI,WAAY,KAAM,KAAMG,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,oCAAqC,MAAO,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,6DAA8D,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,sEAAuE,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,8IAA+I,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,sCAAuC,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,iBAAkB,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,mCAAoC,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,aAAc,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,mBAAoB,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,gBAAiB,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,4EACj8C,CAKA,MAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOS,QAASC,GAAaR,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWV,EAAOQ,EAAAA,cAAoBT,EAAmBC,IAAUD,EAAkBC,EAC9H,E,8BCNA,MAAMO,EAAa,CACjBI,KAAMC,IAA2B,IAA1B,SAACC,EAAQ,UAAEC,GAAUF,EAC1B,OAAOE,EAAYN,EAAAA,cAAoBO,EAAAA,EAAsB,CAC3DD,UAAWA,GACVD,GAAYL,EAAAA,cAAoB,OAAQ,KAAMK,EAAS,GAG9D,SAASG,EAAYC,GAAmB,IAAlB,KAACC,EAAI,SAAEL,GAASI,EACpC,MAAME,EAAcD,EAAKE,IAAID,YAC7B,OAAOX,EAAAA,cAAoBa,EAAAA,EAAQ,KAAMb,EAAAA,cAAoB,KAAM,KAAMW,EAAYG,OAAQd,EAAAA,cAAoB,MAAO,CACtHM,UAAW,cACVK,EAAYI,MAAQJ,EAAYI,KAAKC,OAAS,GAAKL,EAAYI,KAAKE,KAAIC,GAClElB,EAAAA,cAAoBmB,EAAAA,GAAM,CAC/BC,GAAI,SAASF,EAAG,IAChBG,SAAU,OACTrB,EAAAA,cAAoB,SAAU,KAAMkB,OACpClB,EAAAA,cAAoBsB,EAAAA,GAAa,CACpCvB,WAAYA,GACXM,GACL,CACe,SAASkB,EAAiB/B,GACvC,OAAOQ,EAAAA,cAAoBQ,EAAchB,EAAOQ,EAAAA,cAAoBwB,EAAqBhC,GAC3F,C","sources":["webpack:///./content/posts/2017/05/vcpkg.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    blockquote: \"blockquote\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"uwp向けのlibpngのビルドのエラーを修正する過程でvcpkgを見つけた。\\nvc向けのメタビルドツールの予感。\"), \"\\n\", React.createElement(_components.p, null, \"cloneして\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"git clone https://github.com/Microsoft/vcpkg.git\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"buildする\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"cd vcpkg\\nvcpkg> ./bootstrap.bat\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"UWP版のpackageインストール\\nvcpkg> ./vcpkg install libpng:x86-uwp\"), \"\\n\", React.createElement(_components.p, null, \"なるほど。\\nOpenCVのUWP版はあるかな・・・。\\nvcpkg> ./vcpkg install opencv:x86-uwp\"), \"\\n\", React.createElement(_components.p, null, \"あった。\\n最新版のopencv-3.2.0もビルドできるやん。\\n一瞬にして作り始めていた、\\nhttps://github.com/ousttrue/bldproc/tree/master/procs\\nがオワコンになった。\\n検索してみたら日本語の紹介記事が一つあった。\"), \"\\n\", React.createElement(_components.p, null, \"【速報】Vcpkg: Windowsの公式C++ライブラリ管理ツール\"), \"\\n\", React.createElement(_components.p, null, \"desktopビルドできた\"), \"\\n\", React.createElement(_components.p, null, \"ffpmeg(msys2をダウンロードして使っていた。わかる)\"), \"\\n\", React.createElement(_components.p, null, \"uwpビルドできた\"), \"\\n\", React.createElement(_components.p, null, \"opencv\\nopenssl\"), \"\\n\", React.createElement(_components.p, null, \"uwpビルドできなかった\"), \"\\n\", React.createElement(_components.p, null, \"cairo。途中でpeclのビルドに失敗する(pixmanはビルドできたのでオプション外せばいけそう)。\\nbullet3。ちょっと修正が要るか\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2017/05/vcpkg.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  const frontmatter = data.mdx.frontmatter;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"div\", {\n    className: \"tags-index\"\n  }, frontmatter.tags && frontmatter.tags.length > 0 && frontmatter.tags.map(tag => {\n    return React.createElement(Link, {\n      to: `/tags/${tag}/`,\n      itemProp: \"url\"\n    }, React.createElement(\"button\", null, tag));\n  })), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        tags\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","blockquote","_provideComponents","components","React","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","frontmatter","mdx","Layout","title","tags","length","map","tag","Link","to","itemProp","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}