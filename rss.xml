<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>三次元日誌</title><link>https://ousttrue.github.io/</link><description>作業記録</description><atom:link href="https://ousttrue.github.io/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>ja</language><copyright>Contents © 2021 &lt;a href="mailto:ousttrue@gmail.com"&gt;ousttrue&lt;/a&gt; </copyright><lastBuildDate>Sun, 21 Nov 2021 15:34:03 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>ktx2 情報収集</title><link>https://ousttrue.github.io/posts/2021/fall/ktx2/</link><dc:creator>ousttrue</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;a href="https://www.khronos.org/ktx/"&gt;https://www.khronos.org/ktx/&lt;/a&gt;
* (2021.04)&lt;a href="https://www.khronos.org/news/press/khronos-ktx-2-0-textures-enable-compact-visually-rich-gltf-3d-assets"&gt;https://www.khronos.org/news/press/khronos-ktx-2-0-textures-enable-compact-visually-rich-gltf-3d-assets&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;仕様&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.khronos.org/KTX-Specification/"&gt;https://github.khronos.org/KTX-Specification/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;gltf拡張: KHR_texture_basisu&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/KhronosGroup/glTF/tree/main/extensions/2.0/Khronos/KHR_texture_basisu"&gt;https://github.com/KhronosGroup/glTF/tree/main/extensions/2.0/Khronos/KHR_texture_basisu&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;samples&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/KhronosGroup/glTF-Sample-Environments"&gt;https://github.com/KhronosGroup/glTF-Sample-Environments&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/KhronosGroup/glTF/issues/1750"&gt;https://github.com/KhronosGroup/glTF/issues/1750&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/KhronosGroup/glTF/issues/1750#issuecomment-665965234"&gt;https://github.com/KhronosGroup/glTF/issues/1750#issuecomment-665965234&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/oframe/ogl/tree/master/examples/assets/gltf"&gt;https://github.com/oframe/ogl/tree/master/examples/assets/gltf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;tools&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/alecazam/kram"&gt;https://github.com/alecazam/kram&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/sandramariamachon/gltf_to_ktx2"&gt;https://github.com/sandramariamachon/gltf_to_ktx2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><category>gltf</category><guid>https://ousttrue.github.io/posts/2021/fall/ktx2/</guid><pubDate>Sat, 20 Nov 2021 15:00:00 GMT</pubDate></item><item><title>pyside6 やってみる</title><link>https://ousttrue.github.io/posts/2021/fall/pyside6/</link><dc:creator>ousttrue</dc:creator><description>&lt;div&gt;&lt;h2&gt;pyside6 の pyi&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://doc.qt.io/qtforpython/quickstart.html"&gt;https://doc.qt.io/qtforpython/quickstart.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;pip install pyside6&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;地味に &lt;code&gt;pyi&lt;/code&gt; ファイルが同梱されていて、 &lt;code&gt;pyright&lt;/code&gt; の補助が良く効く。
&lt;code&gt;vscode&lt;/code&gt; では、 &lt;code&gt;pylance&lt;/code&gt; 拡張をイストールする。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;settings.json&lt;/code&gt;&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;"python.languageServer": "Pylance",
"python.analysis.typeCheckingMode": "basic",
&lt;/pre&gt;

&lt;p&gt;一部解決不能なエラーが出るので、&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;open_action&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;triggered&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;open_dialog&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# type: ignore&lt;/span&gt;
&lt;/pre&gt;

&lt;p&gt;のように明示的に型チェックを無効にする。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/pylance-release/issues/196"&gt;https://github.com/microsoft/pylance-release/issues/196&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/pylance-release/issues/333"&gt;https://github.com/microsoft/pylance-release/issues/333&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Tutorials&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://doc.qt.io/qtforpython/tutorials/index.html"&gt;https://doc.qt.io/qtforpython/tutorials/index.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Widgets&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://doc.qt.io/qtforpython/PySide6/QtWidgets/index.html"&gt;https://doc.qt.io/qtforpython/PySide6/QtWidgets/index.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;QMainWindow&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://doc.qt.io/qtforpython-6/PySide6/QtWidgets/QMainWindow.html"&gt;https://doc.qt.io/qtforpython-6/PySide6/QtWidgets/QMainWindow.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.pythonguis.com/tutorials/pyside6-creating-your-first-window/"&gt;https://www.pythonguis.com/tutorials/pyside6-creating-your-first-window/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyWidget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;QtWidgets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QMainWindow&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QtWidgets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;QLabel&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Hello World"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                                     &lt;span class="n"&gt;alignment&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;QtCore&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Qt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;AlignCenter&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setCentralWidget&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;"__main__"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;QApplication&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;widget&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MyWidget&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;show&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;resize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;800&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="k"&gt;exec&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;/pre&gt;

&lt;h3&gt;QDockWidget&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pythonpyqt.com/qdockwidget/"&gt;https://pythonpyqt.com/qdockwidget/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;menu&lt;/h3&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;        &lt;span class="n"&gt;menu&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;menuBar&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;file_menu&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;menu&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;addMenu&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"&amp;amp;File"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;# file_menu.addAction(button_action)&lt;/span&gt;
&lt;/pre&gt;

&lt;h3&gt;toolbar&lt;/h3&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;        toolbar = QtWidgets.QToolBar("My main toolbar")
        self.addToolBar(toolbar)
        button_action = QtGui.QAction("Click me!", self)
        button_action.setStatusTip("rundom text")
        button_action.triggered.connect(self.magic)
        toolbar.addAction(button_action)
&lt;/pre&gt;

&lt;h3&gt;file dialog&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://doc.qt.io/qtforpython/PySide6/QtWidgets/QFileDialog.html"&gt;https://doc.qt.io/qtforpython/PySide6/QtWidgets/QFileDialog.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;OpenGL&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ousttrue.github.io/glglue/samples/pyside6.html"&gt;https://ousttrue.github.io/glglue/samples/pyside6.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Signal&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.pythoncentral.io/pysidepyqt-tutorial-creating-your-own-signals-and-slots/"&gt;https://www.pythoncentral.io/pysidepyqt-tutorial-creating-your-own-signals-and-slots/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Timeline&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://doc.qt.io/qtforpython/PySide6/QtCore/QTimeLine.html"&gt;https://doc.qt.io/qtforpython/PySide6/QtCore/QTimeLine.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Tree&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://fereria.github.io/reincarnation_tech/11_PySide/02_Tips/ViewModelDelegate/custom_model/"&gt;https://fereria.github.io/reincarnation_tech/11_PySide/02_Tips/ViewModelDelegate/custom_model/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;メモ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://pyqt-node-editor.readthedocs.io/en/latest/introduction.html#installation"&gt;https://pyqt-node-editor.readthedocs.io/en/latest/introduction.html#installation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><category>python</category><category>qt</category><guid>https://ousttrue.github.io/posts/2021/fall/pyside6/</guid><pubDate>Mon, 15 Nov 2021 15:00:00 GMT</pubDate></item><item><title>最近のpythonパッケージングとpyproject.toml</title><link>https://ousttrue.github.io/posts/2021/fall/pyproject/</link><dc:creator>ousttrue</dc:creator><description>&lt;div&gt;&lt;h2&gt;最近の python ライブラリのパッケージング手法を調査&lt;/h2&gt;
&lt;p&gt;最近の python package の記述の仕方で、 &lt;code&gt;pyproject.toml&lt;/code&gt; なる作法があるのでメモ。&lt;/p&gt;
&lt;p&gt;元々、 &lt;code&gt;setup.py&lt;/code&gt; や &lt;code&gt;setup.cfg&lt;/code&gt; で記述していたのだけどこれに変わるものらしい。
&lt;code&gt;setup.py&lt;/code&gt; はともかく &lt;code&gt;setup.cfg&lt;/code&gt; が大変分かりにくいと思っていました。
というか、何か調べにくい。
&lt;code&gt;setup.py&lt;/code&gt; を宣言的に書けるよ、詳しくは &lt;code&gt;setup.py&lt;/code&gt; のリファンンスを見て。みたいになっているのだけど、
書き方がよくわからんことが多かった。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(2016)&lt;a href="https://www.yunabe.jp/docs/python_package_management.html"&gt;Python パッケージ管理技術まとめ (pip, setuptools, easy_install, etc)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;2013年に distribute は setuptools にマージされた&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;pyproject.toml&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;(2019)&lt;a href="https://tech.515hikaru.net/post/2019-11-23-pyproject/"&gt;pyproject.toml とは何か&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;pyproject.toml は Node.js の package.json などのように、そのプロジェクトに関する様々なことを定義できるファイルとして存在しています&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;なるほど。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(2019)&lt;a href="https://orolog.hatenablog.jp/entry/2019/03/24/223531"&gt;pip が 19.02 で pyproject.toml から pip install できるようになった&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;pyproject の build-system&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;(2019)&lt;a href="https://engineer.recruit-lifestyle.co.jp/techblog/2019-12-25-python-packaging-specs/"&gt;https://engineer.recruit-lifestyle.co.jp/techblog/2019-12-25-python-packaging-specs/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;setuptools&lt;/h4&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[build-system]&lt;/span&gt;
&lt;span class="na"&gt;requires&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;[&lt;/span&gt;
&lt;span class="s"&gt;    "setuptools&amp;gt;=42",&lt;/span&gt;
&lt;span class="s"&gt;    "wheel"&lt;/span&gt;
&lt;span class="na"&gt;]&lt;/span&gt;
&lt;span class="na"&gt;build-backend&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"setuptools.build_meta"&lt;/span&gt;
&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://packaging.python.org/tutorials/packaging-projects/#creating-pyproject-toml"&gt;https://packaging.python.org/tutorials/packaging-projects/#creating-pyproject-toml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(2021)&lt;a href="https://zenn.dev/detsu/articles/5d74bf72e96a0f"&gt;PyPIパッケージのリリースもバージョニングもGitHub単独で完結させる&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[build-system]&lt;/span&gt;
&lt;span class="na"&gt;requires&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;["setuptools&amp;gt;=45", "wheel", "setuptools_scm&amp;gt;=6.2"]&lt;/span&gt;
&lt;/pre&gt;

&lt;p&gt;なるほど。
&lt;code&gt;setup.cfg&lt;/code&gt; と &lt;code&gt;pyproject.toml&lt;/code&gt; の役割が被っていると思うのだが両方要るのだろうか。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(2021)&lt;a href="https://hirayarn.hatenablog.com/entry/2021/11/08/214053"&gt;PyPIにパッケージを公開する手順の整理&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;pyproject.toml&lt;/code&gt; には &lt;code&gt;build-backend&lt;/code&gt; の指定だけを記述して、 &lt;code&gt;setup.cfg&lt;/code&gt; と併用するということでよさそう。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(2018)&lt;a href="https://astropengu.in/posts/23/"&gt;Python の setup.py の内容を setup.cfg で管理する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;setup.cfg: metadata&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;https://packaging.python.org/specifications/core-metadata/&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;setup.cfg: options&lt;/h5&gt;
&lt;h6&gt;setup.cfg: options.entry_points&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://setuptools.pypa.io/en/latest/userguide/entry_point.html"&gt;https://setuptools.pypa.io/en/latest/userguide/entry_point.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;poetry&lt;/h4&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[build-system]&lt;/span&gt;
&lt;span class="na"&gt;requires&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;["poetry&amp;gt;=0.12"]&lt;/span&gt;
&lt;span class="na"&gt;build-backend&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;"poetry.masonry.api"&lt;/span&gt;
&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;(2019)&lt;a href="https://rcmdnk.com/blog/2019/02/04/computer-python/"&gt;https://rcmdnk.com/blog/2019/02/04/computer-python/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(2018)&lt;a href="https://kk6.hateblo.jp/entry/2018/12/20/124151"&gt;Poetryを使ったPythonパッケージ開発からPyPI公開まで&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;練習&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/ousttrue/glglue"&gt;https://github.com/ousttrue/glglue&lt;/a&gt; に使ってみる。
結局、 &lt;code&gt;setup.cfg&lt;/code&gt; を使っているのとあまり変わらず。
&lt;code&gt;setuptools_scm&lt;/code&gt; による git tag を &lt;code&gt;version&lt;/code&gt; 化する技を覚えた。
あと、&lt;code&gt;github actions&lt;/code&gt;。
そのうち、 &lt;code&gt;setup.cfg&lt;/code&gt; の内容を &lt;code&gt;pyproject.toml&lt;/code&gt; に書けるようになりそうではある。&lt;/p&gt;&lt;/div&gt;</description><category>python</category><guid>https://ousttrue.github.io/posts/2021/fall/pyproject/</guid><pubDate>Sun, 14 Nov 2021 15:00:00 GMT</pubDate></item><item><title>msys2 セットアップ</title><link>https://ousttrue.github.io/posts/2021/fall/msys2/</link><dc:creator>ousttrue</dc:creator><description>&lt;div&gt;&lt;h3&gt;pacman&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://qiita.com/MoriokaReimen/items/dbe1448ce6c0f80a6ac1"&gt;Pacmanの使い方&lt;/a&gt;&lt;/p&gt;
&lt;h4&gt;Sync&lt;/h4&gt;
&lt;p&gt;イントール&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;$ pacman -S vim git tmux python3
&lt;/pre&gt;

&lt;p&gt;更新&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;$ pacman -Syu
&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;-y refresh&lt;/li&gt;
&lt;li&gt;-u sysupgrade&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;サーチ&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;$ pacman -Ss pip
&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;-s search&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;インストール済み&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;$ pacman -Qs python
&lt;/pre&gt;

&lt;h3&gt;/etc/fstab&lt;/h3&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</description><category>msys2</category><guid>https://ousttrue.github.io/posts/2021/fall/msys2/</guid><pubDate>Fri, 12 Nov 2021 15:00:00 GMT</pubDate></item><item><title>docutils メモ</title><link>https://ousttrue.github.io/posts/2021/fall/docutils/</link><dc:creator>ousttrue</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;a href="https://docutils.sourceforge.io/"&gt;https://docutils.sourceforge.io/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://showa-yojyo.github.io/notebook/python-docutils/index.html"&gt;Docutils 解読ノート&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://showa-yojyo.github.io/notebook/python-docutils/nodes.html"&gt;https://showa-yojyo.github.io/notebook/python-docutils/nodes.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://myst-parser.readthedocs.io/en/v0.13.4/index.html"&gt;MyST - Markedly Structured Text&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://myst-parser.readthedocs.io/en/v0.13.4/using/use_api.html"&gt;Python API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.ykrods.net/posts/2020/10/15/sphinx-docutils-extension/"&gt;https://www.ykrods.net/posts/2020/10/15/sphinx-docutils-extension/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://booth.pm/ja/items/1576243"&gt;Inside Sphinx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><category>python</category><guid>https://ousttrue.github.io/posts/2021/fall/docutils/</guid><pubDate>Thu, 11 Nov 2021 15:00:00 GMT</pubDate></item><item><title>Windows11 で wslg する</title><link>https://ousttrue.github.io/posts/2021/fall/wslg_on_windows11/</link><dc:creator>ousttrue</dc:creator><description>&lt;div&gt;&lt;p&gt;PCを新調したので &lt;code&gt;Windows11&lt;/code&gt; にアップグレードして wslg を試してみた。&lt;/p&gt;
&lt;h2&gt;その前に&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://news.mynavi.jp/article/win11tips-6/"&gt;Windows 10と同じコンテキストメニューを使う&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;WSLg&lt;/h2&gt;
&lt;h3&gt;WSLg とは&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/wslg"&gt;https://github.com/microsoft/wslg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/windows/wsl/tutorials/gui-apps"&gt;https://docs.microsoft.com/en-us/windows/wsl/tutorials/gui-apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(2021.10) &lt;a href="https://devblogs.microsoft.com/commandline/a-preview-of-wsl-in-the-microsoft-store-is-now-available/"&gt;https://devblogs.microsoft.com/commandline/a-preview-of-wsl-in-the-microsoft-store-is-now-available/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(2021.04) &lt;a href="https://devblogs.microsoft.com/commandline/the-initial-preview-of-gui-app-support-is-now-available-for-the-windows-subsystem-for-linux-2/"&gt;https://devblogs.microsoft.com/commandline/the-initial-preview-of-gui-app-support-is-now-available-for-the-windows-subsystem-for-linux-2/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;(2020) &lt;a href="https://www.phoronix.com/scan.php?page=news_item&amp;amp;px=Microsoft-Writing-Wayland-Comp"&gt;Microsoft Is Writing Its Own Wayland Compositor As Part Of WSL2 GUI Efforts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ビジュアルを &lt;code&gt;Wayland&lt;/code&gt; 、音声を &lt;code&gt;PulseAudio&lt;/code&gt; を代行する WSLg 仮想マシンに転送することで、
Linux の GUI アプリを使えるようにする仕組み。&lt;/p&gt;
&lt;h3&gt;Windows11 で試す&lt;/h3&gt;
&lt;p&gt;Windows11 では、 &lt;code&gt;Windows Insider Program&lt;/code&gt; にせずとも使える。&lt;/p&gt;
&lt;p&gt;&lt;del&gt;&lt;code&gt;Ubuntu-CommPrev&lt;/code&gt; をインストールすると &lt;code&gt;wslg&lt;/code&gt; できる。&lt;/del&gt;
WSLで &lt;code&gt;/mnt/wslg&lt;/code&gt; が存在していれば動作する状態になっている。
Distribution による特別な設定は不要？&lt;/p&gt;
&lt;h2&gt;X&lt;/h2&gt;
&lt;p&gt;特に何も設定しなくても &lt;code&gt;xterm&lt;/code&gt; とか &lt;code&gt;gvim&lt;/code&gt; などの X11 のアプリは動作する。&lt;/p&gt;
&lt;h3&gt;101キーボード&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.eisbahn.jp/yoichiro/2021/06/wslg.html"&gt;Windows 10 HomeでWSLgをさっそく試してみた&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;setxkbmap -layout us&lt;/code&gt; でなおった。&lt;/p&gt;
&lt;h2&gt;PluseAudio&lt;/h2&gt;
&lt;h3&gt;mpd から pluse audio に出力してみる&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mpcbridge.fourthgate.jp/other/mpd_on_ubuntu"&gt;https://mpcbridge.fourthgate.jp/other/mpd_on_ubuntu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/wslg/issues/306"&gt;https://github.com/microsoft/wslg/issues/306&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;echo $PULSE_SERVER
/mnt/wslg/PulseServer
&lt;/pre&gt;

&lt;p&gt;環境変数 &lt;code&gt;$PULSE_SERVER&lt;/code&gt; にファイルパスが入っているときは &lt;code&gt;unix socket&lt;/code&gt; を使うという意味。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/etc/mpd.conf&lt;/code&gt;&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;audio_output {
       type     "pulse"
       name     "My PULSE Device"
       server   "/mnt/wslg/PulseServer" # $PULSE_SERVER
}
&lt;/pre&gt;

&lt;p&gt;という設定になる。&lt;code&gt;TCP&lt;/code&gt; 経由ではなく &lt;code&gt;UNIX SOCKET&lt;/code&gt; 経由なのに注意。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;load-module module-native-protocol-tcp auth-ip-acl=127.0.0.1
&lt;/pre&gt;

&lt;p&gt;は使われない。&lt;/p&gt;
&lt;h4&gt;mpd client&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.microsoft.com/ja-jp/p/mpdctrl/9nv2bbj82brx"&gt;https://www.microsoft.com/ja-jp/p/mpdctrl/9nv2bbj82brx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><category>wsl</category><guid>https://ousttrue.github.io/posts/2021/fall/wslg_on_windows11/</guid><pubDate>Sat, 30 Oct 2021 15:18:23 GMT</pubDate></item><item><title>wsl で HDD を mount する</title><link>https://ousttrue.github.io/posts/2021/fall/wsl_rawdevice/</link><dc:creator>ousttrue</dc:creator><description>&lt;div&gt;&lt;h2&gt;raw device の mount&lt;/h2&gt;
&lt;p&gt;予備の HDD を raw device としてマウントして mpd の sotrage として使ってみる。
(OSが吹き飛ぶなどそれなりに危険な作業なので注意)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/windows/wsl/wsl2-mount-disk"&gt;https://docs.microsoft.com/en-us/windows/wsl/wsl2-mount-disk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;on windows&lt;/h3&gt;
&lt;p&gt;未使用のディスクだったので、管理から volume 削除してディスクをオフラインに変更した。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;gt; wsl --mount &amp;lt;DiskPath&amp;gt; --bare&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;でディスクを丸ごと &lt;code&gt;wsl&lt;/code&gt; に送る。&lt;/p&gt;
&lt;h3&gt;on wsl&lt;/h3&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;$ lsblk
NAME   MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
sda      &lt;span class="m"&gt;8&lt;/span&gt;:0    &lt;span class="m"&gt;0&lt;/span&gt;   256G  &lt;span class="m"&gt;0&lt;/span&gt; disk
sdb      &lt;span class="m"&gt;8&lt;/span&gt;:16   &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;339&lt;/span&gt;.7M  &lt;span class="m"&gt;1&lt;/span&gt; disk
sdc      &lt;span class="m"&gt;8&lt;/span&gt;:32   &lt;span class="m"&gt;0&lt;/span&gt;   256G  &lt;span class="m"&gt;0&lt;/span&gt; disk /
sdd      &lt;span class="m"&gt;8&lt;/span&gt;:48   &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;931&lt;/span&gt;.5G  &lt;span class="m"&gt;0&lt;/span&gt; disk
&lt;/pre&gt;

&lt;p&gt;/dev/sdd となった。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;parted&lt;/li&gt;
&lt;li&gt;mkfs.ext4&lt;/li&gt;
&lt;li&gt;mount&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;$ lsblk
NAME   MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
sda      &lt;span class="m"&gt;8&lt;/span&gt;:0    &lt;span class="m"&gt;0&lt;/span&gt;   256G  &lt;span class="m"&gt;0&lt;/span&gt; disk
sdb      &lt;span class="m"&gt;8&lt;/span&gt;:16   &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;339&lt;/span&gt;.7M  &lt;span class="m"&gt;1&lt;/span&gt; disk
sdc      &lt;span class="m"&gt;8&lt;/span&gt;:32   &lt;span class="m"&gt;0&lt;/span&gt;   256G  &lt;span class="m"&gt;0&lt;/span&gt; disk /
sdd      &lt;span class="m"&gt;8&lt;/span&gt;:48   &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;931&lt;/span&gt;.5G  &lt;span class="m"&gt;0&lt;/span&gt; disk
&lt;span class="sb"&gt;`&lt;/span&gt;-sdd1   &lt;span class="m"&gt;8&lt;/span&gt;:49   &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;465&lt;/span&gt;.8G  &lt;span class="m"&gt;0&lt;/span&gt; part /mnt/data
&lt;/pre&gt;

&lt;h3&gt;auto mount したい&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/WSL/issues/6073"&gt;https://github.com/microsoft/WSL/issues/6073&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><category>wsl</category><guid>https://ousttrue.github.io/posts/2021/fall/wsl_rawdevice/</guid><pubDate>Fri, 29 Oct 2021 15:18:23 GMT</pubDate></item><item><title>最近のWayland</title><link>https://ousttrue.github.io/posts/2021/fall/wayland/</link><dc:creator>ousttrue</dc:creator><description>&lt;div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://gitlab.freedesktop.org/wayland"&gt;https://gitlab.freedesktop.org/wayland&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/wayland-project/wayland"&gt;Core Wayland protocol and libraries (mirror)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/NilsBrause/waylandpp"&gt;https://github.com/NilsBrause/waylandpp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danvd/wlroots-eglstreams"&gt;https://github.com/danvd/wlroots-eglstreams&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://wayland-book.com/"&gt;https://wayland-book.com/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(2021) &lt;a href="https://gihyo.jp/admin/serial/01/ubuntu-recipe/0666"&gt;Ubuntu Weekly Recipe
第666回　Waypipeを用いてWayland環境で「X転送 over SSH」っぽいことをしてみる&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(2017) &lt;a href="https://qiita.com/maueki/items/34323b2762e3c3342c51"&gt;作って学ぶWayland&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(2016) &lt;a href="https://qiita.com/naohikowatanabe/items/06a8b988b89b4b1ec899"&gt;Wayland の Client と Compositor の概念を理解する&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Waypipe&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gitlab.freedesktop.org/mstoeckl/waypipe"&gt;https://gitlab.freedesktop.org/mstoeckl/waypipe&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(2019) &lt;a href="https://mstoeckl.com/notes/gsoc/blog.html"&gt;Network transparency with Wayland&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>wayland</category><category>wsl</category><guid>https://ousttrue.github.io/posts/2021/fall/wayland/</guid><pubDate>Fri, 22 Oct 2021 15:00:00 GMT</pubDate></item><item><title>サイトジェネレーターを nikola にしてみる</title><link>https://ousttrue.github.io/posts/2021/fall/nikola/</link><dc:creator>ousttrue</dc:creator><description>&lt;div&gt;&lt;p&gt;また生成システムを変えてみる。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://getnikola.com/"&gt;https://getnikola.com/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;init&lt;/h2&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&amp;gt; pip install "Nikola[extras]"
&amp;gt; nikola init .
&lt;/pre&gt;

&lt;p&gt;&lt;a href="https://github.com/github/gitignore/blob/master/community/Python/Nikola.gitignore"&gt;https://github.com/github/gitignore/blob/master/community/Python/Nikola.gitignore&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;# nikola
.doit.db*
*.pyc
/cache/
/output/
&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;conf.py&lt;/code&gt;&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# とりあえず &lt;/span&gt;
&lt;span class="n"&gt;POSTS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"content/*.rst"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"posts"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"post.tmpl"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"content/*.md"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"posts"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"post.tmpl"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"content/*.txt"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"posts"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"post.tmpl"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"content/*.html"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"posts"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"post.tmpl"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;

&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&amp;gt; nikola auto --browser
&lt;/pre&gt;

&lt;p&gt;なんとなくプレビューできた。
ええやん。&lt;/p&gt;
&lt;h2&gt;zola から記事移植&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;POSTS&lt;/code&gt; のパス調整でもうできているのだけど、 &lt;code&gt;frontmatter&lt;/code&gt; の非互換がある。
それを調べる。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://getnikola.com/handbook.html#metadata-fields"&gt;https://getnikola.com/handbook.html#metadata-fields&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;taxonomies.tags&lt;/code&gt; を &lt;code&gt;tags&lt;/code&gt; に書き換える&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;小文字強制&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;METADATA_VALUE_MAPPING&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"toml"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;"tags"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;ls&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;ls&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
     &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;

&lt;h2&gt;github action で gh-pages&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;.github/workflows/nikola.yml&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;こんなもんかな。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Nikola&lt;/span&gt;

&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;branches&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;nikola&lt;/span&gt;

&lt;span class="n"&gt;jobs&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;runs&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ubuntu&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;latest&lt;/span&gt;
    &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="n"&gt;ACTIONS_ALLOW_UNSECURE_COMMANDS&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
    &lt;span class="n"&gt;steps&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;uses&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;actions&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;checkout&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;v1&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="s2"&gt;"Nikola[extras]"&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;
        &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;nikola&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Deploy&lt;/span&gt;
        &lt;span class="n"&gt;uses&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;peaceiris&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;actions&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;gh&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pages&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;v3&lt;/span&gt;
        &lt;span class="k"&gt;with&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
          &lt;span class="n"&gt;github_token&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;$&lt;/span&gt;&lt;span class="o"&gt;{{&lt;/span&gt; &lt;span class="n"&gt;secrets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;GITHUB_TOKEN&lt;/span&gt; &lt;span class="o"&gt;}}&lt;/span&gt;
          &lt;span class="n"&gt;publish_dir&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;
&lt;/pre&gt;

&lt;h3&gt;動作&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://getnikola.com/internals.html"&gt;https://getnikola.com/internals.html&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;yapsy&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://getnikola.com/extending.html"&gt;https://getnikola.com/extending.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nikola/plugin_categories.py&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://yapsy.sourceforge.net/"&gt;http://yapsy.sourceforge.net/&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;build&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://pydoit.org/"&gt;DoIt&lt;/a&gt; で駆動されるらしい。&lt;/p&gt;
&lt;p&gt;nikola は DoIt の task を生成する。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://schettino72.wordpress.com/2008/04/14/doit-a-build-tool-tale/"&gt;https://schettino72.wordpress.com/2008/04/14/doit-a-build-tool-tale/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/iisaka51/items/052ffbd9ab3b12504228"&gt;タスクランナー Doit を使ってみよう&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Theme&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://getnikola.com/creating-a-theme.html"&gt;https://getnikola.com/creating-a-theme.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://getnikola.com/theming.html"&gt;https://getnikola.com/theming.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://iuk.hateblo.jp/entry/2016/10/28/040908"&gt;Nikola を windows でやるぞ 2&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;themes/custom&lt;/code&gt; フォルダを作る&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;conf.py&lt;/code&gt; の &lt;code&gt;THEME = "custom"&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最低限&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;path&lt;/th&gt;
&lt;th&gt;url&lt;/th&gt;
&lt;th&gt;必須&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;bundles&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;td&gt;空ファイルでもOk。copy from nikola/data/themes/base/bundles&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;assets&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;option&lt;/td&gt;
&lt;td&gt;copy from nikola/data/themes/base/assets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;templates/index.tmpl&lt;/td&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;td&gt;top page&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;templates/post.tmpl&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;td&gt;各記事&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;templates/page.tmpl&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;td&gt;各記事&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;templates/list.tmpl&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;td&gt;archive.html&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;templates/archive.tmpl&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;td&gt;{YEARE}/ archive.html から 年別 リンクをたどったところ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;templates/tags.tmpl&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;td&gt;categories/index.html&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;templates/tag.tmpl&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;td&gt;categories/{TAG_NAME}/index.html&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;templates/gallery.tmpl&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;templates/listing.tmpl&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;THEME_NAME.theme&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;option&lt;/td&gt;
&lt;td&gt;Theme meta files&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;templates/base.tmpl&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;option&lt;/td&gt;
&lt;td&gt;すべての tmpl が継承することで一貫した見た目にする&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;bundles and assets&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;lib/python3.9/site-packages/nikola/data/themes/base&lt;/code&gt; からコピーするとよさそう。&lt;/p&gt;
&lt;h4&gt;base.tmpl&lt;/h4&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"brand"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"{{ _link('root', None, lang) }}"&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"{{ blog_title|e }}"&lt;/span&gt; &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"home"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"blog-title"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{{ blog_title|e }}&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;hr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;main&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"content"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        {% block content %}{% endblock %}
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;main&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;

&lt;h4&gt;index.tmpl&lt;/h4&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;{% extends 'base.tmpl' %}

{% block content %}
{% if prevlink %}
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"{{ prevlink }}"&lt;/span&gt; &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"prev"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;prev&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
{% endif %}

{% for post in posts %}
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"p-name entry-title"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"{{ post.permalink() }}"&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"u-url"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{{ post.title()|e }}&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
{% endfor %}

{% if nextlink %}
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"{{ nextlink }}"&lt;/span&gt; &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"next"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;next&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
{% endif %}
{% endblock %}
&lt;/pre&gt;

&lt;h4&gt;post.tmpl&lt;/h4&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;{% extends 'base.tmpl' %}

{% block content %}
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"p-name entry-title"&lt;/span&gt; &lt;span class="na"&gt;itemprop&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"headline name"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"{{ post.permalink() }}"&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"u-url"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{{ post.title()|e}}&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
{{ post.text() }}
{% endblock %}
&lt;/pre&gt;

&lt;h4&gt;THEME_NAME.theme&lt;/h4&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[Theme]&lt;/span&gt;
&lt;span class="na"&gt;engine&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;jinja&lt;/span&gt;
&lt;/pre&gt;

&lt;h3&gt;vscode&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;settings.json&lt;/code&gt;&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="s2"&gt;"files.associations"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nt"&gt;"*.tmpl"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"html"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;
&lt;/pre&gt;

&lt;h3&gt;ToDo&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Theme 調整&lt;/li&gt;
&lt;li&gt;TOC&lt;/li&gt;
&lt;li&gt;syntax highlight&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><category>python</category><category>ssg</category><guid>https://ousttrue.github.io/posts/2021/fall/nikola/</guid><pubDate>Fri, 15 Oct 2021 15:00:00 GMT</pubDate></item><item><title>Squirrel</title><link>https://ousttrue.github.io/posts/2021/fall/squirrel/</link><dc:creator>ousttrue</dc:creator><description>&lt;div&gt;&lt;p&gt;lua のコード解読しててふお思い出した Squirrel 。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.squirrel-lang.org/"&gt;http://www.squirrel-lang.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/albertodemichelis/squirrel"&gt;https://github.com/albertodemichelis/squirrel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;こっちの方が &lt;code&gt;c++&lt;/code&gt; なので読みやすいかも。&lt;/p&gt;
&lt;h2&gt;3.1&lt;/h2&gt;
&lt;p&gt;2016 年に &lt;code&gt;3.1&lt;/code&gt; が出てからバージョンは変わっていないぽい。
更新はあるポイ？細々という様子。&lt;/p&gt;
&lt;h2&gt;tool&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;formatter&lt;/code&gt;, &lt;code&gt;language-server&lt;/code&gt;, &lt;code&gt;debug adapter&lt;/code&gt; あるのか。&lt;/p&gt;&lt;/div&gt;</description><category>sq</category><guid>https://ousttrue.github.io/posts/2021/fall/squirrel/</guid><pubDate>Sun, 26 Sep 2021 15:00:00 GMT</pubDate></item></channel></rss>