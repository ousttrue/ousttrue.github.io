<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>三次元日誌</title><link>https://ousttrue.github.io/</link><description>作業記録</description><atom:link href="https://ousttrue.github.io/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>ja</language><copyright>Contents © 2021 &lt;a href="mailto:ousttrue@gmail.com"&gt;ousttrue&lt;/a&gt; </copyright><lastBuildDate>Thu, 04 Nov 2021 03:36:31 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Windows11 で wslg する</title><link>https://ousttrue.github.io/posts/2021/fall/wslg_on_windows11/</link><dc:creator>ousttrue</dc:creator><description>&lt;div&gt;&lt;p&gt;PCを新調したので &lt;code&gt;Windows11&lt;/code&gt; にアップグレードして wslg を試してみた。&lt;/p&gt;
&lt;h2&gt;WSLg&lt;/h2&gt;
&lt;h3&gt;WSLg とは&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/wslg"&gt;https://github.com/microsoft/wslg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/windows/wsl/tutorials/gui-apps"&gt;https://docs.microsoft.com/en-us/windows/wsl/tutorials/gui-apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devblogs.microsoft.com/commandline/a-preview-of-wsl-in-the-microsoft-store-is-now-available/"&gt;https://devblogs.microsoft.com/commandline/a-preview-of-wsl-in-the-microsoft-store-is-now-available/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devblogs.microsoft.com/commandline/the-initial-preview-of-gui-app-support-is-now-available-for-the-windows-subsystem-for-linux-2/"&gt;https://devblogs.microsoft.com/commandline/the-initial-preview-of-gui-app-support-is-now-available-for-the-windows-subsystem-for-linux-2/&lt;/a&gt;
(2020) &lt;a href="https://www.phoronix.com/scan.php?page=news_item&amp;amp;px=Microsoft-Writing-Wayland-Comp"&gt;Microsoft Is Writing Its Own Wayland Compositor As Part Of WSL2 GUI Efforts&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ビジュアルを &lt;code&gt;Wayland&lt;/code&gt; 、音声を &lt;code&gt;PulseAudio&lt;/code&gt; を代行する WSLg 仮想マシンに転送することで、
Linux の GUI アプリを使えるようにする仕組み。&lt;/p&gt;
&lt;h3&gt;Windows11 で試す&lt;/h3&gt;
&lt;p&gt;Windows11 では、 &lt;code&gt;Windows Insider Program&lt;/code&gt; にせずとも、
&lt;code&gt;Ubuntu-CommPrev&lt;/code&gt; をインストールすると &lt;code&gt;wslg&lt;/code&gt; できる。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&amp;gt; wsl -l
Linux 用 Windows サブシステム ディストリビューション:
Ubuntu-CommPrev (既定)
Ubuntu-20.04
&lt;/pre&gt;

&lt;h2&gt;X&lt;/h2&gt;
&lt;p&gt;特に何も設定しなくても &lt;code&gt;xterm&lt;/code&gt; とか &lt;code&gt;gvim&lt;/code&gt; などの X11 のアプリは動作する。
日本語Windows で 101 キーボード使っていると違うのになるとかあったので、その辺は設定ありそう。&lt;/p&gt;
&lt;h2&gt;PluseAudio&lt;/h2&gt;
&lt;h3&gt;mpd から pluse audio に出力してみる&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mpcbridge.fourthgate.jp/other/mpd_on_ubuntu"&gt;https://mpcbridge.fourthgate.jp/other/mpd_on_ubuntu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/wslg/issues/306"&gt;https://github.com/microsoft/wslg/issues/306&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;echo $PULSE_SERVER
/mnt/wslg/PulseServer
&lt;/pre&gt;

&lt;p&gt;環境変数 &lt;code&gt;$PULSE_SERVER&lt;/code&gt; にファイルパスが入っているときは &lt;code&gt;unix socket&lt;/code&gt; を使うという意味。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/etc/mpd.conf&lt;/code&gt;&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;audio_output {
       type     "pulse"
       name     "My PULSE Device"
       server   "/mnt/wslg/PulseServer" # $PULSE_SERVER
}
&lt;/pre&gt;

&lt;p&gt;という設定になる。&lt;code&gt;TCP&lt;/code&gt; 経由ではなく &lt;code&gt;UNIX SOCKET&lt;/code&gt; 経由なのに注意。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;load-module module-native-protocol-tcp auth-ip-acl=127.0.0.1
&lt;/pre&gt;

&lt;p&gt;は使われない。&lt;/p&gt;
&lt;h4&gt;mpd client&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.microsoft.com/ja-jp/p/mpdctrl/9nv2bbj82brx"&gt;https://www.microsoft.com/ja-jp/p/mpdctrl/9nv2bbj82brx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><category>wsl</category><guid>https://ousttrue.github.io/posts/2021/fall/wslg_on_windows11/</guid><pubDate>Sat, 30 Oct 2021 15:18:23 GMT</pubDate></item><item><title>wsl で HDD を mount する</title><link>https://ousttrue.github.io/posts/2021/fall/wsl_rawdevice/</link><dc:creator>ousttrue</dc:creator><description>&lt;div&gt;&lt;h2&gt;raw device の mount&lt;/h2&gt;
&lt;p&gt;予備の HDD を raw device としてマウントして mpd の sotrage として使ってみる。
(OSが吹き飛ぶなどそれなりに危険な作業なので注意)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/windows/wsl/wsl2-mount-disk"&gt;https://docs.microsoft.com/en-us/windows/wsl/wsl2-mount-disk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;on windows&lt;/h3&gt;
&lt;p&gt;未使用のディスクだったので、管理から volume 削除してディスクをオフラインに変更した。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;gt; wsl --mount &amp;lt;DiskPath&amp;gt; --bare&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;でディスクを丸ごと &lt;code&gt;wsl&lt;/code&gt; に送る。&lt;/p&gt;
&lt;h3&gt;on wsl&lt;/h3&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;$ lsblk
NAME   MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
sda      &lt;span class="m"&gt;8&lt;/span&gt;:0    &lt;span class="m"&gt;0&lt;/span&gt;   256G  &lt;span class="m"&gt;0&lt;/span&gt; disk
sdb      &lt;span class="m"&gt;8&lt;/span&gt;:16   &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;339&lt;/span&gt;.7M  &lt;span class="m"&gt;1&lt;/span&gt; disk
sdc      &lt;span class="m"&gt;8&lt;/span&gt;:32   &lt;span class="m"&gt;0&lt;/span&gt;   256G  &lt;span class="m"&gt;0&lt;/span&gt; disk /
sdd      &lt;span class="m"&gt;8&lt;/span&gt;:48   &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;931&lt;/span&gt;.5G  &lt;span class="m"&gt;0&lt;/span&gt; disk
&lt;/pre&gt;

&lt;p&gt;/dev/sdd となった。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;parted&lt;/li&gt;
&lt;li&gt;mkfs.ext4&lt;/li&gt;
&lt;li&gt;mount&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;$ lsblk
NAME   MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
sda      &lt;span class="m"&gt;8&lt;/span&gt;:0    &lt;span class="m"&gt;0&lt;/span&gt;   256G  &lt;span class="m"&gt;0&lt;/span&gt; disk
sdb      &lt;span class="m"&gt;8&lt;/span&gt;:16   &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;339&lt;/span&gt;.7M  &lt;span class="m"&gt;1&lt;/span&gt; disk
sdc      &lt;span class="m"&gt;8&lt;/span&gt;:32   &lt;span class="m"&gt;0&lt;/span&gt;   256G  &lt;span class="m"&gt;0&lt;/span&gt; disk /
sdd      &lt;span class="m"&gt;8&lt;/span&gt;:48   &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;931&lt;/span&gt;.5G  &lt;span class="m"&gt;0&lt;/span&gt; disk
&lt;span class="sb"&gt;`&lt;/span&gt;-sdd1   &lt;span class="m"&gt;8&lt;/span&gt;:49   &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;465&lt;/span&gt;.8G  &lt;span class="m"&gt;0&lt;/span&gt; part /mnt/data
&lt;/pre&gt;

&lt;h3&gt;auto mount したい&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/microsoft/WSL/issues/6073"&gt;https://github.com/microsoft/WSL/issues/6073&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><category>wsl</category><guid>https://ousttrue.github.io/posts/2021/fall/wsl_rawdevice/</guid><pubDate>Fri, 29 Oct 2021 15:18:23 GMT</pubDate></item><item><title>最近のWayland</title><link>https://ousttrue.github.io/posts/2021/fall/wayland/</link><dc:creator>ousttrue</dc:creator><description>&lt;div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://gitlab.freedesktop.org/wayland"&gt;https://gitlab.freedesktop.org/wayland&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/wayland-project/wayland"&gt;Core Wayland protocol and libraries (mirror)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/NilsBrause/waylandpp"&gt;https://github.com/NilsBrause/waylandpp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/danvd/wlroots-eglstreams"&gt;https://github.com/danvd/wlroots-eglstreams&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://wayland-book.com/"&gt;https://wayland-book.com/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(2021) &lt;a href="https://gihyo.jp/admin/serial/01/ubuntu-recipe/0666"&gt;Ubuntu Weekly Recipe
第666回　Waypipeを用いてWayland環境で「X転送 over SSH」っぽいことをしてみる&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(2017) &lt;a href="https://qiita.com/maueki/items/34323b2762e3c3342c51"&gt;作って学ぶWayland&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;(2016) &lt;a href="https://qiita.com/naohikowatanabe/items/06a8b988b89b4b1ec899"&gt;Wayland の Client と Compositor の概念を理解する&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Waypipe&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gitlab.freedesktop.org/mstoeckl/waypipe"&gt;https://gitlab.freedesktop.org/mstoeckl/waypipe&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(2019) &lt;a href="https://mstoeckl.com/notes/gsoc/blog.html"&gt;Network transparency with Wayland&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>wayland</category><category>wsl</category><guid>https://ousttrue.github.io/posts/2021/fall/wayland/</guid><pubDate>Fri, 22 Oct 2021 15:00:00 GMT</pubDate></item><item><title>サイトジェネレーターを nikola にしてみる</title><link>https://ousttrue.github.io/posts/2021/fall/nikola/</link><dc:creator>ousttrue</dc:creator><description>&lt;div&gt;&lt;p&gt;また生成システムを変えてみる。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://getnikola.com/"&gt;https://getnikola.com/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;init&lt;/h2&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&amp;gt; pip install "Nikola[extras]"
&amp;gt; nikola init .
&lt;/pre&gt;

&lt;p&gt;&lt;a href="https://github.com/github/gitignore/blob/master/community/Python/Nikola.gitignore"&gt;https://github.com/github/gitignore/blob/master/community/Python/Nikola.gitignore&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;# nikola
.doit.db*
*.pyc
/cache/
/output/
&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;conf.py&lt;/code&gt;&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;# とりあえず &lt;/span&gt;
&lt;span class="n"&gt;POSTS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"content/*.rst"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"posts"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"post.tmpl"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"content/*.md"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"posts"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"post.tmpl"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"content/*.txt"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"posts"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"post.tmpl"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"content/*.html"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"posts"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"post.tmpl"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;

&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&amp;gt; nikola auto --browser
&lt;/pre&gt;

&lt;p&gt;なんとなくプレビューできた。
ええやん。&lt;/p&gt;
&lt;h2&gt;zola から記事移植&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;POSTS&lt;/code&gt; のパス調整でもうできているのだけど、 &lt;code&gt;frontmatter&lt;/code&gt; の非互換がある。
それを調べる。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://getnikola.com/handbook.html#metadata-fields"&gt;https://getnikola.com/handbook.html#metadata-fields&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;taxonomies.tags&lt;/code&gt; を &lt;code&gt;tags&lt;/code&gt; に書き換える&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;小文字強制&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;METADATA_VALUE_MAPPING&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"toml"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;"tags"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;lambda&lt;/span&gt; &lt;span class="n"&gt;ls&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;ls&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
     &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;

&lt;h2&gt;github action で gh-pages&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;.github/workflows/nikola.yml&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;こんなもんかな。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Nikola&lt;/span&gt;

&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;push&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;branches&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;nikola&lt;/span&gt;

&lt;span class="n"&gt;jobs&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
  &lt;span class="n"&gt;build&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;runs&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;on&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ubuntu&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;latest&lt;/span&gt;
    &lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="n"&gt;ACTIONS_ALLOW_UNSECURE_COMMANDS&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
    &lt;span class="n"&gt;steps&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;uses&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;actions&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;checkout&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;v1&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="s2"&gt;"Nikola[extras]"&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;
        &lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;nikola&lt;/span&gt; &lt;span class="n"&gt;build&lt;/span&gt;
      &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Deploy&lt;/span&gt;
        &lt;span class="n"&gt;uses&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;peaceiris&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;actions&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;gh&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pages&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;v3&lt;/span&gt;
        &lt;span class="k"&gt;with&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
          &lt;span class="n"&gt;github_token&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;$&lt;/span&gt;&lt;span class="o"&gt;{{&lt;/span&gt; &lt;span class="n"&gt;secrets&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;GITHUB_TOKEN&lt;/span&gt; &lt;span class="o"&gt;}}&lt;/span&gt;
          &lt;span class="n"&gt;publish_dir&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;./&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;
&lt;/pre&gt;

&lt;h3&gt;動作&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://getnikola.com/internals.html"&gt;https://getnikola.com/internals.html&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;yapsy&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://getnikola.com/extending.html"&gt;https://getnikola.com/extending.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;nikola/plugin_categories.py&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://yapsy.sourceforge.net/"&gt;http://yapsy.sourceforge.net/&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;build&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://pydoit.org/"&gt;DoIt&lt;/a&gt; で駆動されるらしい。&lt;/p&gt;
&lt;p&gt;nikola は DoIt の task を生成する。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://schettino72.wordpress.com/2008/04/14/doit-a-build-tool-tale/"&gt;https://schettino72.wordpress.com/2008/04/14/doit-a-build-tool-tale/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://qiita.com/iisaka51/items/052ffbd9ab3b12504228"&gt;タスクランナー Doit を使ってみよう&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Theme&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://getnikola.com/creating-a-theme.html"&gt;https://getnikola.com/creating-a-theme.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://getnikola.com/theming.html"&gt;https://getnikola.com/theming.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://iuk.hateblo.jp/entry/2016/10/28/040908"&gt;Nikola を windows でやるぞ 2&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;themes/custom&lt;/code&gt; フォルダを作る&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;conf.py&lt;/code&gt; の &lt;code&gt;THEME = "custom"&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最低限&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;path&lt;/th&gt;
&lt;th&gt;url&lt;/th&gt;
&lt;th&gt;必須&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;bundles&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;td&gt;空ファイルでもOk。copy from nikola/data/themes/base/bundles&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;assets&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;option&lt;/td&gt;
&lt;td&gt;copy from nikola/data/themes/base/assets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;templates/index.tmpl&lt;/td&gt;
&lt;td&gt;/&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;td&gt;top page&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;templates/post.tmpl&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;td&gt;各記事&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;templates/page.tmpl&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;td&gt;各記事&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;templates/list.tmpl&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;td&gt;archive.html&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;templates/archive.tmpl&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;td&gt;{YEARE}/ archive.html から 年別 リンクをたどったところ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;templates/tags.tmpl&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;td&gt;categories/index.html&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;templates/tag.tmpl&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;td&gt;categories/{TAG_NAME}/index.html&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;templates/gallery.tmpl&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;templates/listing.tmpl&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;必須&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;THEME_NAME.theme&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;option&lt;/td&gt;
&lt;td&gt;Theme meta files&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;templates/base.tmpl&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;option&lt;/td&gt;
&lt;td&gt;すべての tmpl が継承することで一貫した見た目にする&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;bundles and assets&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;lib/python3.9/site-packages/nikola/data/themes/base&lt;/code&gt; からコピーするとよさそう。&lt;/p&gt;
&lt;h4&gt;base.tmpl&lt;/h4&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"brand"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"{{ _link('root', None, lang) }}"&lt;/span&gt; &lt;span class="na"&gt;title&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"{{ blog_title|e }}"&lt;/span&gt; &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"home"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"blog-title"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{{ blog_title|e }}&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;span&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;hr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;main&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"content"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        {% block content %}{% endblock %}
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;main&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;

&lt;h4&gt;index.tmpl&lt;/h4&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;{% extends 'base.tmpl' %}

{% block content %}
{% if prevlink %}
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"{{ prevlink }}"&lt;/span&gt; &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"prev"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;prev&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
{% endif %}

{% for post in posts %}
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"p-name entry-title"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"{{ post.permalink() }}"&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"u-url"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{{ post.title()|e }}&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
{% endfor %}

{% if nextlink %}
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"{{ nextlink }}"&lt;/span&gt; &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"next"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;next&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
{% endif %}
{% endblock %}
&lt;/pre&gt;

&lt;h4&gt;post.tmpl&lt;/h4&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;{% extends 'base.tmpl' %}

{% block content %}
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"p-name entry-title"&lt;/span&gt; &lt;span class="na"&gt;itemprop&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"headline name"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"{{ post.permalink() }}"&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"u-url"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{{ post.title()|e}}&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;h1&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
{{ post.text() }}
{% endblock %}
&lt;/pre&gt;

&lt;h4&gt;THEME_NAME.theme&lt;/h4&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;[Theme]&lt;/span&gt;
&lt;span class="na"&gt;engine&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;jinja&lt;/span&gt;
&lt;/pre&gt;

&lt;h3&gt;vscode&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;settings.json&lt;/code&gt;&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;    &lt;span class="s2"&gt;"files.associations"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nt"&gt;"*.tmpl"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"html"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;
&lt;/pre&gt;

&lt;h3&gt;ToDo&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Theme 調整&lt;/li&gt;
&lt;li&gt;TOC&lt;/li&gt;
&lt;li&gt;syntax highlight&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><category>python</category><category>ssg</category><guid>https://ousttrue.github.io/posts/2021/fall/nikola/</guid><pubDate>Fri, 15 Oct 2021 15:00:00 GMT</pubDate></item><item><title>Squirrel</title><link>https://ousttrue.github.io/posts/2021/fall/squirrel/</link><dc:creator>ousttrue</dc:creator><description>&lt;div&gt;&lt;p&gt;lua のコード解読しててふお思い出した Squirrel 。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.squirrel-lang.org/"&gt;http://www.squirrel-lang.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/albertodemichelis/squirrel"&gt;https://github.com/albertodemichelis/squirrel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;こっちの方が &lt;code&gt;c++&lt;/code&gt; なので読みやすいかも。&lt;/p&gt;
&lt;h2&gt;3.1&lt;/h2&gt;
&lt;p&gt;2016 年に &lt;code&gt;3.1&lt;/code&gt; が出てからバージョンは変わっていないぽい。
更新はあるポイ？細々という様子。&lt;/p&gt;
&lt;h2&gt;tool&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;formatter&lt;/code&gt;, &lt;code&gt;language-server&lt;/code&gt;, &lt;code&gt;debug adapter&lt;/code&gt; あるのか。&lt;/p&gt;&lt;/div&gt;</description><category>sq</category><guid>https://ousttrue.github.io/posts/2021/fall/squirrel/</guid><pubDate>Sun, 26 Sep 2021 15:00:00 GMT</pubDate></item><item><title>sphinx + MyST よいのでは</title><link>https://ousttrue.github.io/posts/2021/fall/sphinx_myst/</link><dc:creator>ousttrue</dc:creator><description>&lt;div&gt;&lt;p&gt;Gizmo を作る過程で GeometryShader からやりなおしていたら、記憶が飛んでいたので
忘れてもいいように記録しておくことにした。&lt;/p&gt;
&lt;p&gt;旧 &lt;code&gt;MinTriangle&lt;/code&gt; リポジトリを作り直し。&lt;/p&gt;
&lt;p&gt;&lt;a href="http://ousttrue.github.io/d3d11_samples/"&gt;http://ousttrue.github.io/d3d11_samples/&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;MyST なかなかよい&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;reStructuredText&lt;/code&gt; わりと苦手なので &lt;code&gt;sphinx&lt;/code&gt; でも Markdown を使いたい派なのだが、
&lt;a href="https://myst-parser.readthedocs.io/en/latest/index.html"&gt;MyST&lt;/a&gt; なる Sphinx 向け markdown 拡張ができていた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://qiita.com/Tachy_Pochy/items/53866eea43d0ad93ea1d"&gt;Sphinx で使える Markdown 方言 'MyST'&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;sphinx directive の指定の仕方がシンプルで下のような感じ。markdown のシンタックスハイライトやフォーマッターに乗れるのでよい。&lt;/p&gt;
&lt;pre&gt;
```{image} ./basic_pipeline.jpg
:width: 320px
:height: 320px

&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;```{toctree}
basic/create_window
basic/create_device
basic/create_swapchain
basic/render_target
basic/compile_shader
basic/basic_pipeline
&lt;/pre&gt;


&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;sphinx-autobuild&lt;/code&gt; と github-actions による &lt;code&gt;gh-pages&lt;/code&gt; デプロイを仕込んだらかなりよくなった。&lt;/p&gt;
&lt;h2&gt;memo&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/wpilibsuite/sphinxext-remoteliteralinclude"&gt;https://github.com/wpilibsuite/sphinxext-remoteliteralinclude&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;git の revision と path 指定して include できないかしら。
サンプルコードにちょこちょこっと解説を書きたいのだが、サンプルコードが進化する場合に &lt;code&gt;literalinclude&lt;/code&gt; だと場所がずれるのだ。&lt;/p&gt;&lt;/div&gt;</description><category>sphinx</category><category>ssg</category><guid>https://ousttrue.github.io/posts/2021/fall/sphinx_myst/</guid><pubDate>Fri, 10 Sep 2021 15:00:00 GMT</pubDate></item><item><title>gizmo のライブラリを整備したい</title><link>https://ousttrue.github.io/posts/2021/fall/gizmo/</link><dc:creator>ousttrue</dc:creator><description>&lt;div&gt;&lt;p&gt;去年手を付けたのだが、放棄されていたのを発掘した。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ousttrue/gizmesh"&gt;https://github.com/ousttrue/gizmesh&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;tiny gizmo を改造しようとしてて、動かなくなっている。&lt;/p&gt;
&lt;h2&gt;既存の gizmo libraries&lt;/h2&gt;
&lt;h3&gt;tinygizmo&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/ddiakopoulos/tinygizmo"&gt;https://github.com/ddiakopoulos/tinygizmo&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;im3d&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/john-chapman/im3d"&gt;https://github.com/john-chapman/im3d&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;memo&lt;/h2&gt;
&lt;h3&gt;20210921&lt;/h3&gt;
&lt;p&gt;tinygizmo の改造を最初からやりなおし&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ousttrue/tinygizmo/tree/custom"&gt;https://github.com/ousttrue/tinygizmo/tree/custom&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;example を整理する。
* glfw 依存を最小化して、 include が伝わらないように隔離
* gizmo と OpenGL を分離&lt;/p&gt;&lt;/div&gt;</description><category>3d</category><category>c++</category><guid>https://ousttrue.github.io/posts/2021/fall/gizmo/</guid><pubDate>Thu, 09 Sep 2021 15:00:00 GMT</pubDate></item><item><title>法線マップやってみる</title><link>https://ousttrue.github.io/posts/2021/summer/normalmap/</link><dc:creator>ousttrue</dc:creator><description>&lt;figure&gt;&lt;img src="https://ousttrue.github.io/posts/2021/summer/mikk.jpg"&gt;&lt;/figure&gt; &lt;div&gt;&lt;p&gt;glTFViewerの実装がてら法線マップの実装をやってみる。
&lt;code&gt;OpenGL 4.0 Shading Language Cookbook&lt;/code&gt; を参考に進めた。&lt;/p&gt;
&lt;h2&gt;法線mapとTangentを供給する&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/KhronosGroup/glTF-Sample-Models/tree/master/2.0/DamagedHelmet"&gt;https://github.com/KhronosGroup/glTF-Sample-Models/tree/master/2.0/DamagedHelmet&lt;/a&gt; をサンプルモデルとした。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;glActiveTexture&lt;/code&gt; がうまくいかず難航する。
以下のようにして、無理やり解決。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#version 400&lt;/span&gt;
&lt;span class="cp"&gt;#extension GL_ARB_shading_language_420pack : enable&lt;/span&gt;
&lt;span class="k"&gt;layout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;binding&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mo"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;uniform&lt;/span&gt; &lt;span class="kt"&gt;sampler2D&lt;/span&gt; &lt;span class="n"&gt;Tex0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;layout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;binding&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;uniform&lt;/span&gt; &lt;span class="kt"&gt;sampler2D&lt;/span&gt; &lt;span class="n"&gt;Tex1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;

&lt;p&gt;すべての sampler2D が 0 にバインディングされる挙動だった。
&lt;code&gt;#version 420&lt;/code&gt; はうまくいかなかったので断念。
エラーは出ないが、何もレンダリングされなくなった。&lt;/p&gt;
&lt;h2&gt;Tangent が格納されていないので生成する&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://github.com/KhronosGroup/glTF/tree/master/specification/2.0"&gt;https://github.com/KhronosGroup/glTF/tree/master/specification/2.0&lt;/a&gt; に以下のよう書いてある。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Implementation note: When tangents are not specified, client implementations should calculate tangents using default MikkTSpace algorithms. For best results, the mesh triangles should also be processed using default MikkTSpace algorithms.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://github.com/mmikk/MikkTSpace"&gt;https://github.com/mmikk/MikkTSpace&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;さくっと dll を作成して、 luajit から呼びだしてみた。
&lt;code&gt;indices&lt;/code&gt; &lt;code&gt;POSITION&lt;/code&gt; &lt;code&gt;NORMAL&lt;/code&gt; &lt;code&gt;TEXCOORD0&lt;/code&gt; を入力して &lt;code&gt;TANGENT&lt;/code&gt; を出力する。
わりと適当で動く &lt;code&gt;luajit ffi&lt;/code&gt; 恐るべし。
さすがに C の方に呼びだし回数を減らすラッパーを作ったほうが速そうだが、動かすだけなら問題なし。&lt;/p&gt;
&lt;h2&gt;Shader&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;OpenGL 4.0 Shading Language Cookbook&lt;/code&gt; の phong shading を省略して法線だけ確認。
&lt;code&gt;2倍して1引く&lt;/code&gt; を補った。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#version 400&lt;/span&gt;
&lt;span class="k"&gt;uniform&lt;/span&gt; &lt;span class="kt"&gt;mat4&lt;/span&gt; &lt;span class="n"&gt;MVP&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;uniform&lt;/span&gt; &lt;span class="kt"&gt;mat4&lt;/span&gt; &lt;span class="n"&gt;ModelViewMatrix&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;uniform&lt;/span&gt; &lt;span class="kt"&gt;mat3&lt;/span&gt; &lt;span class="n"&gt;NormalMatrix&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;uniform&lt;/span&gt; &lt;span class="kt"&gt;vec3&lt;/span&gt; &lt;span class="n"&gt;LightDirection&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;layout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mo"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="kt"&gt;vec3&lt;/span&gt; &lt;span class="n"&gt;VertexPosition&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;layout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="kt"&gt;vec3&lt;/span&gt; &lt;span class="n"&gt;VertexNormal&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;layout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="kt"&gt;vec2&lt;/span&gt; &lt;span class="n"&gt;VertexTexCoord&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;layout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;location&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="kt"&gt;vec4&lt;/span&gt; &lt;span class="n"&gt;VertexTangent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;out&lt;/span&gt; &lt;span class="kt"&gt;vec3&lt;/span&gt; &lt;span class="n"&gt;LightDir&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;out&lt;/span&gt; &lt;span class="kt"&gt;vec3&lt;/span&gt; &lt;span class="n"&gt;ViewDir&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;out&lt;/span&gt; &lt;span class="kt"&gt;vec2&lt;/span&gt; &lt;span class="n"&gt;TexCoord&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;out&lt;/span&gt; &lt;span class="kt"&gt;vec3&lt;/span&gt; &lt;span class="n"&gt;Debug&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;vec3&lt;/span&gt; &lt;span class="n"&gt;normal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;normalize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NormalMatrix&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;VertexNormal&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kt"&gt;vec3&lt;/span&gt; &lt;span class="n"&gt;tangent&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;normalize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;NormalMatrix&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="kt"&gt;vec3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;VertexTangent&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="kt"&gt;vec3&lt;/span&gt; &lt;span class="n"&gt;binormal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;normalize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cross&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;normal&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tangent&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;VertexTangent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;mat3&lt;/span&gt; &lt;span class="n"&gt;toObjectLocal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;
      &lt;span class="kt"&gt;mat3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tangent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;binormal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;normal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tangent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;binormal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;normal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
           &lt;span class="n"&gt;tangent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;binormal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;normal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kt"&gt;vec3&lt;/span&gt; &lt;span class="n"&gt;pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;vec3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ModelViewMatrix&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="kt"&gt;vec4&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;VertexPosition&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="n"&gt;LightDir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;normalize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;toObjectLocal&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;LightDirection&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;ViewDir&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;toObjectLocal&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;normalize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;TexCoord&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;VertexTexCoord&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;Debug&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;vec3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;VertexTangent&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="nb"&gt;gl_Position&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;MVP&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="kt"&gt;vec4&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;VertexPosition&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/pre&gt;

&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#version 400&lt;/span&gt;
&lt;span class="cp"&gt;#extension GL_ARB_shading_language_420pack : enable&lt;/span&gt;

&lt;span class="k"&gt;layout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;binding&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mo"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;uniform&lt;/span&gt; &lt;span class="kt"&gt;sampler2D&lt;/span&gt; &lt;span class="n"&gt;Tex0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;layout&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;binding&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;uniform&lt;/span&gt; &lt;span class="kt"&gt;sampler2D&lt;/span&gt; &lt;span class="n"&gt;Tex1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="kt"&gt;vec3&lt;/span&gt; &lt;span class="n"&gt;LightDir&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="kt"&gt;vec3&lt;/span&gt; &lt;span class="n"&gt;ViewDir&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="kt"&gt;vec2&lt;/span&gt; &lt;span class="n"&gt;TexCoord&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="kt"&gt;vec3&lt;/span&gt; &lt;span class="n"&gt;Debug&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;out&lt;/span&gt; &lt;span class="kt"&gt;vec4&lt;/span&gt; &lt;span class="n"&gt;FragColor&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kt"&gt;void&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kt"&gt;vec4&lt;/span&gt; &lt;span class="n"&gt;texColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;texture2D&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Tex0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TexCoord&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kt"&gt;vec4&lt;/span&gt; &lt;span class="n"&gt;normal&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;texture2D&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Tex1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;TexCoord&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;// FragColor = vec4(Debug, 1);&lt;/span&gt;

  &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="n"&gt;intensity&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;dot&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LightDir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;normal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xyz&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt; &lt;span class="mo"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="kt"&gt;vec3&lt;/span&gt; &lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;vec3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;intensity&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;FragColor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kt"&gt;vec4&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;};&lt;/span&gt;
&lt;/pre&gt;

&lt;p&gt;glTF の シェーダー では、 &lt;code&gt;mat3&lt;/code&gt; を fragment shader に送りこんでいた。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/bwasty/gltf-viewer/tree/master/src/shaders"&gt;https://github.com/bwasty/gltf-viewer/tree/master/src/shaders&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;tangent space でライティングするという概念は同じらしい。&lt;/p&gt;&lt;/div&gt;</description><category>opengl</category><guid>https://ousttrue.github.io/posts/2021/summer/normalmap/</guid><pubDate>Sat, 04 Sep 2021 15:00:00 GMT</pubDate></item><item><title>Blender-3.0</title><link>https://ousttrue.github.io/posts/2021/summer/blender3/</link><dc:creator>ousttrue</dc:creator><description>&lt;div&gt;&lt;p&gt;Blender-3.0 が面白そうだし bender 活動を再開しよう。
&lt;code&gt;Gingerbread Man&lt;/code&gt; を作りなおそう。&lt;/p&gt;
&lt;h2&gt;Blender-3.0 alpha&lt;/h2&gt;
&lt;h3&gt;build&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://github.com/ousttrue/bpy_module"&gt;https://github.com/ousttrue/bpy_module&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;build より subversion の更新が遥かに長い。
embree や llvm までいろんなもの入っているな。&lt;/p&gt;
&lt;p&gt;luajit を仕込んだら ffi で色々な関数にアクセスできるかもしれないな。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/scoder/lupa"&gt;https://github.com/scoder/lupa&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;python-3.9&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Blender-2.93&lt;/code&gt; で既に python-3.9 になっていた。
python-3.9 の型ヒント付きで addon 書くで。
Blender に合わせて python のバージョンを上げるスタイル。&lt;/p&gt;
&lt;h3&gt;asset browser&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://ameblo.jp/kay-nea/entry-12688563203.html"&gt;Blender 3.0 Alphaを触ってみた　【　Blender 3.0 Alpha　】&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;pose library&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=TNbdj6qbrAg"&gt;https://www.youtube.com/watch?v=TNbdj6qbrAg&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;USD&lt;/h3&gt;
&lt;p&gt;オープンソースで簡単なオーサリングができるツールがあるといいのだけど、現状 Houdini の Solaris しか存在しない？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://zenn.dev/remiria/articles/a4c8e4a80caec7"&gt;Blender 3.0 のUSD対応状況を調べる(1)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;addon&lt;/h2&gt;
&lt;p&gt;作りかけで放置している&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/ousttrue/io_scene_yup"&gt;https://github.com/ousttrue/io_scene_yup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ousttrue/pyimpex"&gt;https://github.com/ousttrue/pyimpex&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><category>blender</category><guid>https://ousttrue.github.io/posts/2021/summer/blender3/</guid><pubDate>Sun, 29 Aug 2021 15:00:00 GMT</pubDate></item><item><title>NvimTexture開発開始</title><link>https://ousttrue.github.io/posts/2021/summer/nvimtexture/</link><dc:creator>ousttrue</dc:creator><description>&lt;figure&gt;&lt;img src="https://ousttrue.github.io/posts/2021/summer/nvimtexture.jpg"&gt;&lt;/figure&gt; &lt;div&gt;&lt;p&gt;&lt;code&gt;Nvy&lt;/code&gt; の改造をしてだいたい構造を理解した。
&lt;a href="https://github.com/ousttrue/msgpack-rpc-asio"&gt;msgpack-rpc-asio&lt;/a&gt; をオーバーホールして使えるようになった。
ということで一から組みなおすで。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ousttrue/NvimTexture"&gt;https://github.com/ousttrue/NvimTexture&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;部品を疎結合にする&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Window(HWND, resize, keyboard, mouse event)&lt;/li&gt;
&lt;li&gt;NvimPipe(stdin, stdout, msgpack-rpc transport)&lt;/li&gt;
&lt;li&gt;EventDispatcher(WindowEvent と MsgPackRPCMessage の処理)&lt;/li&gt;
&lt;li&gt;D3D DeviceManager&lt;/li&gt;
&lt;li&gt;D3D Renderer(RenderTarget)&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;            +--------+
+----+ pipe |Renderer|redraw
|nvim|-----&amp;gt;+--------+
|    |&amp;lt;-----+------+
+----+      |Window|resize, keyboard, mouse event
            +------+
&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;MainLoop&lt;/li&gt;
&lt;li&gt;NvimMsgPackRPC Read-Dispatch Loop&lt;/li&gt;
&lt;li&gt;RenderLoop(30FPS)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Sample&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;FullWindow&lt;/li&gt;
&lt;li&gt;imgui と混在させる&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;20210910&lt;/h2&gt;
&lt;p&gt;それなりに動くようになった。
key-logger や msgpack-rpc の通信ログを横に表示できるようにしたい。&lt;/p&gt;&lt;/div&gt;</description><category>msgpack</category><category>nvim</category><guid>https://ousttrue.github.io/posts/2021/summer/nvimtexture/</guid><pubDate>Sat, 21 Aug 2021 15:00:00 GMT</pubDate></item></channel></rss>