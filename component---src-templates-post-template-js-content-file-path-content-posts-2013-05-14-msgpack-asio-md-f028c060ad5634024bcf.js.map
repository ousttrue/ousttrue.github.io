{"version":3,"file":"component---src-templates-post-template-js-content-file-path-content-posts-2013-05-14-msgpack-asio-md-f028c060ad5634024bcf.js","mappings":"8JAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,KAAM,OACNC,KAAM,SACLC,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,8FAA+F,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,+CAAgD,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,MAAO,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,gDAAiD,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,OAAQK,EAAAA,cAAoBR,EAAYI,KAAM,KAAM,eAAgB,aAAcI,EAAAA,cAAoBR,EAAYI,KAAM,KAAM,QAAS,MAAOI,EAAAA,cAAoBR,EAAYI,KAAM,KAAM,QAAS,MAAOI,EAAAA,cAAoBR,EAAYI,KAAM,KAAM,UAAW,qCAAsCI,EAAAA,cAAoBR,EAAYI,KAAM,KAAM,QAAS,gDAAiDI,EAAAA,cAAoBR,EAAYI,KAAM,KAAM,eAAgB,MAAOI,EAAAA,cAAoBR,EAAYI,KAAM,KAAM,kBAAmB,0DAA2DI,EAAAA,cAAoBR,EAAYI,KAAM,KAAM,QAAS,iIAAkII,EAAAA,cAAoBR,EAAYI,KAAM,KAAM,QAAS,MAAOI,EAAAA,cAAoBR,EAAYI,KAAM,KAAM,eAAgB,6BAA8BI,EAAAA,cAAoBR,EAAYI,KAAM,KAAM,eAAgB,WAAYI,EAAAA,cAAoBR,EAAYI,KAAM,KAAM,eAAgB,4BAA6BI,EAAAA,cAAoBR,EAAYI,KAAM,KAAM,QAAS,mCAAoC,KAAMI,EAAAA,cAAoBR,EAAYK,KAAM,CACxpDI,wBAAyB,CACvBC,OAAQ,ooCAER,KAAMF,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,cAAeK,EAAAA,cAAoBR,EAAYI,KAAM,KAAM,WAAY,gCAAiCI,EAAAA,cAAoBR,EAAYI,KAAM,KAAM,oBAAqB,mCAAoCI,EAAAA,cAAoBR,EAAYI,KAAM,KAAM,sBAAuB,sBAAuBI,EAAAA,cAAoBR,EAAYI,KAAM,KAAM,kBAAmB,UAAWI,EAAAA,cAAoBR,EAAYI,KAAM,KAAM,kBAAmB,iBAAkBI,EAAAA,cAAoBR,EAAYI,KAAM,KAAM,SAAU,MAAOI,EAAAA,cAAoBR,EAAYI,KAAM,KAAM,WAAY,iDAAkDI,EAAAA,cAAoBR,EAAYI,KAAM,KAAM,WAAY,uEAAwEI,EAAAA,cAAoBR,EAAYI,KAAM,KAAM,oBAAqB,kBAAmBI,EAAAA,cAAoBR,EAAYI,KAAM,KAAM,sBAAuB,iBACr7B,CAKA,MAJA,SAAoBL,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGI,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC3E,OAAOK,EAAYJ,EAAAA,cAAoBI,EAAWb,EAAOS,EAAAA,cAAoBV,EAAmBC,IAAUD,EAAkBC,EAC9H,E,8BCXA,MAAMQ,EAAa,CACjBH,KAAMS,IAA2B,IAA1B,SAACC,EAAQ,UAAEC,GAAUF,EAC1B,OAAOE,EAAYP,EAAAA,cAAoBQ,EAAAA,EAAsB,CAC3DD,UAAWA,GACVD,GAAYN,EAAAA,cAAoB,OAAQ,KAAMM,EAAS,GAG9D,SAASG,EAAYC,GAAmB,IAAlB,KAACC,EAAI,SAAEL,GAASI,EACpC,MAAME,EAAcD,EAAKE,IAAID,YAC7B,OAAOZ,EAAAA,cAAoBc,EAAAA,EAAQ,KAAMd,EAAAA,cAAoB,KAAM,KAAMY,EAAYG,OAAQf,EAAAA,cAAoB,MAAO,CACtHO,UAAW,cACVK,EAAYI,MAAQJ,EAAYI,KAAKC,OAAS,GAAKL,EAAYI,KAAKE,KAAIC,GAClEnB,EAAAA,cAAoBoB,EAAAA,GAAM,CAC/BC,GAAI,SAASF,EAAG,IAChBG,SAAU,OACTtB,EAAAA,cAAoB,SAAU,KAAMmB,OACpCnB,EAAAA,cAAoBuB,EAAAA,GAAa,CACpCxB,WAAYA,GACXO,GACL,CACe,SAASkB,EAAiBjC,GACvC,OAAOS,EAAAA,cAAoBS,EAAclB,EAAOS,EAAAA,cAAoByB,EAAqBlC,GAC3F,C","sources":["webpack:///./content/posts/2013/05/14/msgpack-asio.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"msgpack-rpcのasio版を作成中\\n連休から始めていたmsgpack-rpcのバックエンドをasioに置き換えてWindowsでも動くようにする試みがやっと目処が立った。\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/ousttrue/msgpack-asiorpc\"), \"\\n\", React.createElement(_components.p, null, \"改め\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/ousttrue/msgpack-rpc-asio\"), \"\\n\", React.createElement(_components.p, null, \"当初は \", React.createElement(_components.code, null, \"msgpack-rpc\"), \" のバックエンドの \", React.createElement(_components.code, null, \"mpio\"), \" に \", React.createElement(_components.code, null, \"asio\"), \" の \", React.createElement(_components.code, null, \"kernel\"), \" を追加することで乗り切ろうとしたのだが、わりとすぐに頓挫した。\\n\", React.createElement(_components.code, null, \"mpio\"), \" のファイルディスクリプタでIOを管理するAPIがasioと合わないのですな。\\n次に、 \", React.createElement(_components.code, null, \"msgpack-rpc\"), \" の \", React.createElement(_components.code, null, \"mp::wavy::loop\"), \" をasioをラップしたクラスで置き換える作戦で\\n進めていたのだがだいぶ改造して構造が見えてきたところで、 \", React.createElement(_components.code, null, \"asio\"), \" との設計の違いをラップするのがめんどくさく\\nなってまた頓挫した。 http://dev.activebasic.com/egtra/2011/10/27/449/\\nを見ると簡単そうに見えるのだが功夫が足らないようだ。\\nで、上記の反省を踏まえて \", React.createElement(_components.code, null, \"asio\"), \" で \", React.createElement(_components.code, null, \"msgpack-rpc\"), \" を自由に実装することにした。\\nバイナリデータと \", React.createElement(_components.code, null, \"msgpack-rpc\"), \" の変換部分に \", React.createElement(_components.code, null, \"msgpack-rpc\"), \" のコードを借用して、\\nネットワーク通信部分は \", React.createElement(_components.code, null, \"asio\"), \" で普通に作成した。\\nだいたいこんな感じのAPIになる予定。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c++\\\"><pre class=\\\"language-c++\\\"><code class=\\\"language-c++\\\">static int server_method(int a, int b) { return a+b; }\\n\\nint main(int argc, char **argv) { \\n    int port=18080;\\n    // server\\n    boost::io_service server_io;\\n    msgpack::asiorpc::server s(server_io);\\n    s.add_handler(&amp;server_method, &quot;add&quot;);\\n    s.start(boost::asio::ip::tcp::endpoint(boost::asio::ip::tcp::v4(), port));\\n    boost::thread server_thread([&amp;server_io](){ server_io.run(); }\\n\\n    // client\\n    boost::io_service client_io;\\n    msgpack::asiorpc::session c(server_io); \\n    c.connect(boost::asio::ip::tcp::endpoint(boost::asio::ip::address::from_string(&quot;127.0.0.1&quot;), port);\\n    boost::thread client_thread([&amp;client_io](){ client_io.run(); }\\n\\n    // request\\n    auto request=c.call(&quot;add&quot;, 3, 4);\\n\\n    // blocking\\n    int result;\\n    request.convert(&amp;result);\\n    std::cout &lt;&lt; resut &lt;&lt; std::endl;\\n\\n    // finalize\\n    client_io.stop();\\n    client_thread.join();\\n\\n    server_io.stop();\\n    server_thread.join();\\n\\n    return 0;\\n}</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"原型はだいたいできて \", React.createElement(_components.code, null, \"Windows\"), \" でも動いたので続きを作りこんで行きたい。\\n今のうちに \", React.createElement(_components.code, null, \"msgpack::asiorpc\"), \" のネームスペースを変えたいような気もするがどうしようかね。\\n\", React.createElement(_components.code, null, \"msgpack::rpc::asio\"), \" とかか？うぅむ。\\nあと、クラスを \", React.createElement(_components.code, null, \"UpperCamelCase\"), \" で、関数を \", React.createElement(_components.code, null, \"lowerCamelCase\"), \" に変えよう思っていたが\\n\", React.createElement(_components.code, null, \"boost\"), \" 、 \", React.createElement(_components.code, null, \"msgpack\"), \" と一緒に使うときの見栄えを考慮するとスケークケースも一理あるな。\\nクラス名と同じ変数名(\", React.createElement(_components.code, null, \"request\"), \"とか)を使いたいときに変数名をreq等に変えることを強いられることがあるのが\\n気に入らないところではあるのだが。\\nプロジェクト名を \", React.createElement(_components.code, null, \"msgpack-rpc-asio\"), \"\\nに変えてネームスペースも \", React.createElement(_components.code, null, \"msgpack::rpc::asio\"), \" に変えることに今決めた。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2013/05/14/msgpack-asio.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  const frontmatter = data.mdx.frontmatter;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"div\", {\n    className: \"tags-index\"\n  }, frontmatter.tags && frontmatter.tags.length > 0 && frontmatter.tags.map(tag => {\n    return React.createElement(Link, {\n      to: `/tags/${tag}/`,\n      itemProp: \"url\"\n    }, React.createElement(\"button\", null, tag));\n  })), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        tags\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","code","span","_provideComponents","components","React","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","frontmatter","mdx","Layout","title","tags","length","map","tag","Link","to","itemProp","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}