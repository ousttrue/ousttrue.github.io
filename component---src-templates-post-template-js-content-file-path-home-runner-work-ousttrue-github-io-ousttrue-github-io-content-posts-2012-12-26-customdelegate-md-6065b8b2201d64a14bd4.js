"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6731],{5842:function(e,t,n){n.r(t),n.d(t,{default:function(){return l}});var o=n(1151),i=n(7294);function r(e){const t=Object.assign({pre:"pre",code:"code"},(0,o.ah)(),e.components);return i.createElement(t.pre,null,i.createElement(t.code,null,"C++のQt4と平行してPyQt4を使い始めた。大概の用途にはこっちで十分な気がする。\n\npyqtのチュートリアルには、\n\nhttp://zetcode.com/tutorials/pyqt4/\n\nがいい。wxWidgetsとかgtkでも世話になったが、ここのチュートリアルはサンプルが小さいので助かる。\nビューのアイテム表示をカスタマイズするデリゲートについて調査中。\n# !/usr/bin/python\n# -*- coding: utf-8 -*-\n\nimport sys from PyQt4 import QtGui, QtCore from random import randint\n\nclass CustomDelegate(QtGui.QItemDelegate):\n\n  def \\_\\_init\\_\\_(self, parent = None):\n\n  :   super(CustomDelegate, self).\\_\\_init\\_\\_(parent) self.editor\n      = QtGui.QSpinBox()\n\n  \\# 編集時\n  ---------\n\n  \\# create widget def createEditor(self, parent, styleOption, index):\n  editor = QtGui.QSpinBox(parent) return editor\n\n  \\# model to editor def setEditorData(self, editor, index):\n  data=index.model().data(index, QtCore.Qt.EditRole)\n  editor.setValue(data.toInt()\\[0\\])\n\n  \\# editor to model def setModelData(self, editor, model, index):\n  model.setData(index, editor.value())\n\n  def updateEditorGeometry(self, editor, option, index):\n\n  :   editor.setGeometry(option.rect)\n\n  \\# 通常時\n  ---------\n\n  \\# item render def paint(self, painter, option, index): widget =\n  QtGui.QLabel() \\#widget = QtGui.QSpinBox()\n  data=index.model().data(index, QtCore.Qt.EditRole)\n  widget.setText(data.toString()\\[0\\])\n  \\#widget.setValue(data.toInt()\\[0\\]) widget.setGeometry(option.rect)\n  \\# border ? point=QtCore.QPoint(option.rect.left()+2,\n  option.rect.top()+2) widget.render(painter, point)\n\n  \\# item一個分の大きさ\n  ---------------------\n\n  def sizeHint(self, option, index):\n\n  :   self.editor.setGeometry(option.rect)\n      return self.editor.sizeHint()\n\ndef main():\n\n:   app = QtGui.QApplication(sys.argv)\n\n    \\# setup model model = QtGui.QStandardItemModel() for n in\n    range(10): item = QtGui.QStandardItem('%s' % randint(1, 100))\n    model.appendRow(item)\n\n    view = QtGui.QListView()\n    view.setModel(model) view.setItemDelegate(CustomDelegate())\n    view.show()\n\n    sys.exit(app.exec\\_())\n\nif \\_\\_name\\_\\_ == '\\_\\_main\\_\\_':\n\n:   main()\n\n\nQItemDelegateは非編集時のアイテム描画にpaintメソッドを使い、編集時の描画にcreateEditor,\nsetEditorData, setModelData,\nupdateEditorGeometryを使う。カスタムデリゲートにするとアイテムの大きさが変わりそうなのでsizeHintも実装するとよさげ。\n"))}var d=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,o.ah)(),e.components);return t?i.createElement(t,e,i.createElement(r,e)):r(e)};n(8678);function a(e){let{data:t,children:n}=e;return i.createElement(i.Fragment,null,i.createElement("h1",null,t.mdx.frontmatter.title),i.createElement(o.Zo,null,n))}function l(e){return i.createElement(a,e,i.createElement(d,e))}},8678:function(e,t,n){n(7294)},1151:function(e,t,n){n.d(t,{Zo:function(){return a},ah:function(){return r}});var o=n(7294);const i=o.createContext({});function r(e){const t=o.useContext(i);return o.useMemo((()=>"function"==typeof e?e(t):{...t,...e}),[t,e])}const d={};function a({components:e,children:t,disableParentContext:n}){let a;return a=n?"function"==typeof e?e({}):e||d:r(e),o.createElement(i.Provider,{value:a},t)}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2012-12-26-customdelegate-md-6065b8b2201d64a14bd4.js.map