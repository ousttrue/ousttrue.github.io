{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2017-04-mmdbridge-md-9f84c6345e64bd2be07f.js","mappings":"+JAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,MACFC,EAAAA,EAAAA,MAAsBL,EAAMM,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBN,EAAYG,EAAG,KAAM,4BAA6B,KAAMG,EAAAA,cAAoBN,EAAYG,EAAG,KAAM,yPAA0P,KAAMG,EAAAA,cAAoBN,EAAYG,EAAG,KAAM,kEAAmE,KAAMG,EAAAA,cAAoBN,EAAYG,EAAG,KAAM,0OAA2O,KAAMG,EAAAA,cAAoBN,EAAYG,EAAG,KAAM,sQAAuQ,KAAMG,EAAAA,cAAoBN,EAAYG,EAAG,KAAM,0QAA2Q,KAAMG,EAAAA,cAAoBN,EAAYG,EAAG,KAAM,yCAA0C,KAAMG,EAAAA,cAAoBN,EAAYG,EAAG,KAAM,qFAAsF,KAAMG,EAAAA,cAAoBN,EAAYG,EAAG,KAAM,yEAA0E,KAAMG,EAAAA,cAAoBN,EAAYG,EAAG,KAAM,UAAW,KAAMG,EAAAA,cAAoBN,EAAYG,EAAG,KAAM,kOAAmO,KAAMG,EAAAA,cAAoBN,EAAYG,EAAG,KAAM,kCAChnE,CAKA,MAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOQ,QAASC,GAAaP,OAAOC,OAAO,CAAC,GAAGE,EAAAA,EAAAA,MAAsBL,EAAMM,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWT,EAAOO,EAAAA,cAAoBR,EAAmBC,IAAUD,EAAkBC,EAC9H,E,oBCNA,MAAMM,EAAa,CACjBI,KAAMC,IAA2B,IAA1B,SAACC,EAAQ,UAAEC,GAAUF,EAC1B,OAAOE,EAAYN,EAAAA,cAAoBO,EAAAA,EAAsB,CAC3DD,UAAWA,GACVD,GAAYL,EAAAA,cAAoB,OAAQ,KAAMK,EAAS,GAG9D,SAASG,EAAYC,GAAmB,IAAlB,KAACC,EAAI,SAAEL,GAASI,EACpC,OAAOT,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoB,KAAM,KAAMU,EAAKC,IAAIC,YAAYC,OAAQb,EAAAA,cAAoBc,EAAAA,GAAa,CAC7If,WAAYA,GACXM,GACL,CACe,SAASU,EAAiBtB,GACvC,OAAOO,EAAAA,cAAoBQ,EAAcf,EAAOO,EAAAA,cAAoBgB,EAAqBvB,GAC3F,C","sources":["webpack:///./content/posts/2017/04/mmdbridge.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"MmdBridgeがよさげなのでビルドしてみる。\"), \"\\n\", React.createElement(_components.p, null, \"最初はプロジェクトと同じPython-3.4 + VS2010でがんばったのだが、 Windows10(64bit)でVS2010(64bit)環境を作るのが困難であることがわかった。ちょっと違うがPython-3.5 + VS2015でやってみる。\\nPython3.5のビルド(不要)\\nDebug版でもBoost.PythonがRelease版のPython.dllにリンクするとわかった。\\n普通のインストーラーでインストールするとデバッグ版が手に入らぬ。せっかくなので自前ビルド。\"), \"\\n\", React.createElement(_components.p, null, \"Windows上でPython3.5をビルドする\\nBoost.PythonのデバッグビルドがリンクするPython.dll\"), \"\\n\", React.createElement(_components.p, null, \"Boost.Python\\n手元のboost-1.61.0を使う。\\n$HOME/user-config.jam\\nusing python\\n: 3.5.3\\n: D:\\\\usr\\\\src\\\\Python-3.5.3\\\\PCBuild\\\\python # cmd-or-prefix\\n: D:\\\\usr\\\\src\\\\Python-3.5.3\\\\include\\n: D:\\\\usr\\\\src\\\\Python-3.5.3\\\\PCBuild\\\\amd64\\n;\"), \"\\n\", React.createElement(_components.p, null, \"memo: Jamroot.jam\\nboost_1_61_0> bootstrap.bat\\nboost_1_61_0> b2 -j2 --with-python3 address-model=64 toolset=msvc-14.0 threading=multi variant=debug,release link=static runtime-link=static,shared --stagedir=stage/x86_64 include=D:\\\\usr\\\\src\\\\Python-3.5.3\\\\PC\"), \"\\n\", React.createElement(_components.p, null, \"include=D:\\\\usr\\\\src\\\\Python-3.5.3\\\\PCはpyconfig.hの場所。user-config.jamに2個目のincludeパスを記述する方法がわからなかったのでコマンドライン投入。\\nDXSDK_Jun10のインストール\\nd3dx9のあるDirectXはダウンロードしてインストールする必要がある。 April 2006を使っているそうなのだけどネット上に見つからなかったので手に入ったバージョンを使った。ビルド時にエラーが出るので下記の記事に沿ってd3dx9core.hを修正する。\"), \"\\n\", React.createElement(_components.p, null, \"https://gist.github.com/t-mat/1540248\"), \"\\n\", React.createElement(_components.p, null, \"VS2015\\npremake5でVS2015向けにプロジェクトを作ってビルドしたところkンパイルエラーになった。VS2015固有の問題のようなのでコードを修正。\"), \"\\n\", React.createElement(_components.p, null, \"VS 2015 で std::codecvt_utf8 がリンクできない場合の対処法\\nsrc/umbase/UMStringUtil.h\"), \"\\n\", React.createElement(_components.p, null, \"動作確認する\"), \"\\n\", React.createElement(_components.p, null, \"Mmdを展開する\\nmmdBridgeのd3d9.dllとd3dx9_43.dllをMmdディレクトリにコピーする(ビルド結果)\\nmmdBridgeのpythonスクリプトをMmdディレクトリにコピーする(mmdbridge/Release/Win32フォルダにある)\\npython.dllをMmdディレクトリにコピーする。もしくはパスを通す(普通にインストールしたPython3でよい)\\nMmdディレクトリにoutディレクトリを作成する\"), \"\\n\", React.createElement(_components.p, null, \"以上で、mmdbridge_vmd.pyの動作を確認できた。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2017/04/mmdbridge.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","_provideComponents","components","React","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}