{"version":3,"file":"component---content-posts-2021-summer-lua-opengl-md-f3921a89ee2ef385467c.js","mappings":"wHAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,GAAI,KACJC,IAAK,MACLC,KAAM,SACLC,EAAAA,EAAAA,MAAsBR,EAAMS,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,sDAAuD,KAAMM,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,+CAAgD,KAAMM,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,oBAAqB,KAAMM,EAAAA,cAAoBT,EAAYI,GAAI,KAAM,6BAA8B,KAAMK,EAAAA,cAAoBT,EAAYK,IAAK,KAAMI,EAAAA,cAAoBT,EAAYM,KAAM,CACvdI,UAAW,gBACV,2MAA4M,KAAMD,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,MAAO,KAAMM,EAAAA,cAAoBT,EAAYK,IAAK,KAAMI,EAAAA,cAAoBT,EAAYM,KAAM,CAC1VI,UAAW,gBACV,mPAAsP,KAAMD,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,kCAAmC,KAAMM,EAAAA,cAAoBT,EAAYI,GAAI,KAAM,gBAAiB,KAAMK,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,iCAAkC,KAAMM,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,qCAAsC,KAAMM,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,UAAW,KAAMM,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,qBAAsB,KAAMM,EAAAA,cAAoBT,EAAYK,IAAK,KAAMI,EAAAA,cAAoBT,EAAYM,KAAM,KAAM,kCAAmC,KAAMG,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,gEAAiE,KAAMM,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,eAAgBM,EAAAA,cAAoBT,EAAYM,KAAM,KAAM,gBAAiB,kFAAmF,KAAMG,EAAAA,cAAoBT,EAAYI,GAAI,KAAM,YAAa,KAAMK,EAAAA,cAAoBT,EAAYG,EAAG,KAAMM,EAAAA,cAAoBT,EAAYM,KAAM,KAAM,QAAS,aAAc,KAAMG,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,gEAAiE,KAAMM,EAAAA,cAAoBT,EAAYK,IAAK,KAAMI,EAAAA,cAAoBT,EAAYM,KAAM,CACp+CI,UAAW,cACV,2PAA4P,KAAMD,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,4CAChT,CAKA,UAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,MAAsBR,EAAMS,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWb,EAAOU,EAAAA,cAAoBX,EAAmBC,IAAUD,EAAkBC,EAC9H,C,sECYO,MAAMc,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBN,GAC/B,MAAMO,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAfL,EACFA,EAAWO,GAGb,IAAIA,KAAsBP,IAChC,CAACO,EAAmBP,GACzB,C","sources":["webpack:///./content/posts/2021/summer/lua_opengl.md","webpack:///./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h1: \"h1\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"imgui bind がだいたいできて軌道に乗ったので、glTF viewer の作成にとりかかる。\"), \"\\n\", React.createElement(_components.p, null, \"https://www.glfw.org/docs/latest/quick.html\"), \"\\n\", React.createElement(_components.p, null, \"の回転アニメーション以外できた。\"), \"\\n\", React.createElement(_components.h1, null, \"luajit の cdef で頂点配列の定義が捗る\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-c++\"\n  }, \"static const struct\\n{\\n    float x, y;\\n    float r, g, b;\\n} vertices[3] =\\n{\\n    { -0.6f, -0.4f, 1.f, 0.f, 0.f },\\n    {  0.6f, -0.4f, 0.f, 1.f, 0.f },\\n    {   0.f,  0.6f, 0.f, 0.f, 1.f }\\n};\\n\")), \"\\n\", React.createElement(_components.p, null, \"が、\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-lua\"\n  }, \"ffi.cdef([[\\nstruct Vertex2DRGB\\n{\\n    float x, y;\\n    float r, g, b;\\n};\\n]])\\n\\nlocal vertices = ffi.new(\\n    \\\"struct Vertex2DRGB[3]\\\",\\n    { -0.6, -0.4, 1., 0., 0. },\\n    { 0.6, -0.4, 0., 1., 0. },\\n    { 0., 0.6, 0., 0., 1. }\\n)\\n\")), \"\\n\", React.createElement(_components.p, null, \"などという書き方ができてしまう。luajit ffi 強い。\"), \"\\n\", React.createElement(_components.h1, null, \"ffi.metatype\"), \"\\n\", React.createElement(_components.p, null, \"luajit を活かした線形代数ライブラリを探索していて、\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/bjornbytes/maf\"), \"\\n\", React.createElement(_components.p, null, \"を見つけた。\"), \"\\n\", React.createElement(_components.p, null, \"luajit ffi には便利関数\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"ffi.metatype(ct, metatable)\\n\")), \"\\n\", React.createElement(_components.p, null, \"があって、これを使うと ffi.cdef した C の struct に lua の metatable を合体できる。\"), \"\\n\", React.createElement(_components.p, null, \"線形代数ライブラリは、 \", React.createElement(_components.code, null, \"ffi.metatype\"), \" を使って自作してみよう(mafにはvec3 と quaternion しかないのもあり)。\\nついでに、lua の unittest を取り入れましょう。\"), \"\\n\", React.createElement(_components.h1, null, \"20210830\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"mat4\"), \" を実装してみた。\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/ousttrue/limgui/blob/master/lua/mafex.lua\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-C\"\n  }, \"    typedef union {\\n        struct {\\n            float _11, _12, _13, _14;\\n            float _21, _22, _23, _24;\\n            float _31, _32, _33, _34;\\n            float _41, _42, _43, _44;\\n        };\\n        float array[16];\\n    } mat4;\\n\")), \"\\n\", React.createElement(_components.p, null, \"という定義で OpenGL の uniform 変数に直接渡せるので使いやすい。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h1","pre","code","_provideComponents","components","React","className","wrapper","MDXLayout","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}