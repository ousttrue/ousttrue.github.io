{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2021-summer-normalmap-md-0f9ba0b14a5394254e93.js","mappings":"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","sources":["webpack:///./content/posts/2021/summer/normalmap.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    span: \"span\",\n    h1: \"h1\",\n    blockquote: \"blockquote\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"glTFViewerの実装がてら法線マップの実装をやってみる。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">OpenGL 4.0 Shading Language Cookbook</code>\"\n    }\n  }), \" を参考に進めた。\"), \"\\n\", React.createElement(_components.h1, null, \"法線mapとTangentを供給する\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/KhronosGroup/glTF-Sample-Models/tree/master/2.0/DamagedHelmet をサンプルモデルとした。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">glActiveTexture</code>\"\n    }\n  }), \" がうまくいかず難航する。\\n以下のようにして、無理やり解決。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"glsl\\\"><pre class=\\\"language-glsl\\\"><code class=\\\"language-glsl\\\"><span class=\\\"token macro property\\\"><span class=\\\"token directive-hash\\\">#</span><span class=\\\"token directive keyword\\\">version</span> <span class=\\\"token expression\\\"><span class=\\\"token number\\\">400</span></span></span>\\n<span class=\\\"token macro property\\\"><span class=\\\"token directive-hash\\\">#</span><span class=\\\"token directive keyword\\\">extension</span> <span class=\\\"token expression\\\">GL_ARB_shading_language_420pack <span class=\\\"token operator\\\">:</span> enable</span></span>\\n<span class=\\\"token keyword\\\">layout</span><span class=\\\"token punctuation\\\">(</span>binding <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">uniform</span> <span class=\\\"token keyword\\\">sampler2D</span> Tex0<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">layout</span><span class=\\\"token punctuation\\\">(</span>binding <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">uniform</span> <span class=\\\"token keyword\\\">sampler2D</span> Tex1<span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"すべての sampler2D が 0 にバインディングされる挙動だった。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">#version 420</code>\"\n    }\n  }), \" はうまくいかなかったので断念。\\nエラーは出ないが、何もレンダリングされなくなった。\"), \"\\n\", React.createElement(_components.h1, null, \"Tangent が格納されていないので生成する\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/KhronosGroup/glTF/tree/master/specification/2.0 に以下のよう書いてある。\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Implementation note: When tangents are not specified, client implementations should calculate tangents using default MikkTSpace algorithms. For best results, the mesh triangles should also be processed using default MikkTSpace algorithms.\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"MikkTSpace\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/mmikk/MikkTSpace\"), \"\\n\", React.createElement(_components.p, null, \"さくっと dll を作成して、 luajit から呼びだしてみた。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">indices</code>\"\n    }\n  }), \" \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">POSITION</code>\"\n    }\n  }), \" \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">NORMAL</code>\"\n    }\n  }), \" \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">TEXCOORD0</code>\"\n    }\n  }), \" を入力して \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">TANGENT</code>\"\n    }\n  }), \" を出力する。\\nわりと適当で動く \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">luajit ffi</code>\"\n    }\n  }), \" 恐るべし。\\nさすがに C の方に呼びだし回数を減らすラッパーを作ったほうが速そうだが、動かすだけなら問題なし。\"), \"\\n\", React.createElement(_components.p, null, \"memo\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://bgolus.medium.com/generating-perfect-normal-maps-for-unity-f929e673fc57#c473\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"Shader\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">OpenGL 4.0 Shading Language Cookbook</code>\"\n    }\n  }), \" の phong shading を省略して法線だけ確認。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">2倍して1引く</code>\"\n    }\n  }), \" を補った。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"glsl\\\"><pre class=\\\"language-glsl\\\"><code class=\\\"language-glsl\\\"><span class=\\\"token macro property\\\"><span class=\\\"token directive-hash\\\">#</span><span class=\\\"token directive keyword\\\">version</span> <span class=\\\"token expression\\\"><span class=\\\"token number\\\">400</span></span></span>\\n<span class=\\\"token keyword\\\">uniform</span> <span class=\\\"token keyword\\\">mat4</span> MVP<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">uniform</span> <span class=\\\"token keyword\\\">mat4</span> ModelViewMatrix<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">uniform</span> <span class=\\\"token keyword\\\">mat3</span> NormalMatrix<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">uniform</span> <span class=\\\"token keyword\\\">vec3</span> LightDirection<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">layout</span><span class=\\\"token punctuation\\\">(</span>location <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">in</span> <span class=\\\"token keyword\\\">vec3</span> VertexPosition<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">layout</span><span class=\\\"token punctuation\\\">(</span>location <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">in</span> <span class=\\\"token keyword\\\">vec3</span> VertexNormal<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">layout</span><span class=\\\"token punctuation\\\">(</span>location <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">in</span> <span class=\\\"token keyword\\\">vec2</span> VertexTexCoord<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">layout</span><span class=\\\"token punctuation\\\">(</span>location <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">in</span> <span class=\\\"token keyword\\\">vec4</span> VertexTangent<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">out</span> <span class=\\\"token keyword\\\">vec3</span> LightDir<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">out</span> <span class=\\\"token keyword\\\">vec3</span> ViewDir<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">out</span> <span class=\\\"token keyword\\\">vec2</span> TexCoord<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">out</span> <span class=\\\"token keyword\\\">vec3</span> Debug<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">main</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">vec3</span> normal <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">normalize</span><span class=\\\"token punctuation\\\">(</span>NormalMatrix <span class=\\\"token operator\\\">*</span> VertexNormal<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">vec3</span> tangent <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">normalize</span><span class=\\\"token punctuation\\\">(</span>NormalMatrix <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">vec3</span><span class=\\\"token punctuation\\\">(</span>VertexTangent<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">vec3</span> binormal <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">normalize</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">cross</span><span class=\\\"token punctuation\\\">(</span>normal<span class=\\\"token punctuation\\\">,</span> tangent<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">*</span> VertexTangent<span class=\\\"token punctuation\\\">.</span>w<span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">mat3</span> toObjectLocal <span class=\\\"token operator\\\">=</span>\\n      <span class=\\\"token keyword\\\">mat3</span><span class=\\\"token punctuation\\\">(</span>tangent<span class=\\\"token punctuation\\\">.</span>x<span class=\\\"token punctuation\\\">,</span> binormal<span class=\\\"token punctuation\\\">.</span>x<span class=\\\"token punctuation\\\">,</span> normal<span class=\\\"token punctuation\\\">.</span>x<span class=\\\"token punctuation\\\">,</span> tangent<span class=\\\"token punctuation\\\">.</span>y<span class=\\\"token punctuation\\\">,</span> binormal<span class=\\\"token punctuation\\\">.</span>y<span class=\\\"token punctuation\\\">,</span> normal<span class=\\\"token punctuation\\\">.</span>y<span class=\\\"token punctuation\\\">,</span>\\n           tangent<span class=\\\"token punctuation\\\">.</span>z<span class=\\\"token punctuation\\\">,</span> binormal<span class=\\\"token punctuation\\\">.</span>z<span class=\\\"token punctuation\\\">,</span> normal<span class=\\\"token punctuation\\\">.</span>z<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">vec3</span> pos <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">vec3</span><span class=\\\"token punctuation\\\">(</span>ModelViewMatrix <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">vec4</span><span class=\\\"token punctuation\\\">(</span>VertexPosition<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">1.0</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  LightDir <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">normalize</span><span class=\\\"token punctuation\\\">(</span>toObjectLocal <span class=\\\"token operator\\\">*</span> LightDirection<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  ViewDir <span class=\\\"token operator\\\">=</span> toObjectLocal <span class=\\\"token operator\\\">*</span> <span class=\\\"token function\\\">normalize</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">-</span>pos<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  TexCoord <span class=\\\"token operator\\\">=</span> VertexTexCoord<span class=\\\"token punctuation\\\">;</span>\\n  Debug <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">vec3</span><span class=\\\"token punctuation\\\">(</span>VertexTangent<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  gl_Position <span class=\\\"token operator\\\">=</span> MVP <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">vec4</span><span class=\\\"token punctuation\\\">(</span>VertexPosition<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">1.0</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"glsl\\\"><pre class=\\\"language-glsl\\\"><code class=\\\"language-glsl\\\"><span class=\\\"token macro property\\\"><span class=\\\"token directive-hash\\\">#</span><span class=\\\"token directive keyword\\\">version</span> <span class=\\\"token expression\\\"><span class=\\\"token number\\\">400</span></span></span>\\n<span class=\\\"token macro property\\\"><span class=\\\"token directive-hash\\\">#</span><span class=\\\"token directive keyword\\\">extension</span> <span class=\\\"token expression\\\">GL_ARB_shading_language_420pack <span class=\\\"token operator\\\">:</span> enable</span></span>\\n\\n<span class=\\\"token keyword\\\">layout</span><span class=\\\"token punctuation\\\">(</span>binding <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">uniform</span> <span class=\\\"token keyword\\\">sampler2D</span> Tex0<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">layout</span><span class=\\\"token punctuation\\\">(</span>binding <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">uniform</span> <span class=\\\"token keyword\\\">sampler2D</span> Tex1<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">in</span> <span class=\\\"token keyword\\\">vec3</span> LightDir<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">in</span> <span class=\\\"token keyword\\\">vec3</span> ViewDir<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">in</span> <span class=\\\"token keyword\\\">vec2</span> TexCoord<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">in</span> <span class=\\\"token keyword\\\">vec3</span> Debug<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">out</span> <span class=\\\"token keyword\\\">vec4</span> FragColor<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">void</span> <span class=\\\"token function\\\">main</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">vec4</span> texColor <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">texture2D</span><span class=\\\"token punctuation\\\">(</span>Tex0<span class=\\\"token punctuation\\\">,</span> TexCoord<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">vec4</span> normal <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">texture2D</span><span class=\\\"token punctuation\\\">(</span>Tex1<span class=\\\"token punctuation\\\">,</span> TexCoord<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n  <span class=\\\"token comment\\\">// FragColor = vec4(Debug, 1);</span>\\n\\n  <span class=\\\"token keyword\\\">float</span> intensity <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">max</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">dot</span><span class=\\\"token punctuation\\\">(</span>LightDir<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">(</span>normal<span class=\\\"token punctuation\\\">.</span>xyz <span class=\\\"token operator\\\">*</span> <span class=\\\"token number\\\">2</span> <span class=\\\"token operator\\\">-</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">vec3</span> color <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">vec3</span><span class=\\\"token punctuation\\\">(</span>intensity<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  FragColor <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">vec4</span><span class=\\\"token punctuation\\\">(</span>color<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"glTF の シェーダー では、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">mat3</code>\"\n    }\n  }), \" を fragment shader に送りこんでいた。\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/bwasty/gltf-viewer/tree/master/src/shaders\"), \"\\n\", React.createElement(_components.p, null, \"tangent space でライティングするという概念は同じらしい。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2021/summer/normalmap.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","span","h1","blockquote","ul","li","_provideComponents","components","React","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","Layout","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}