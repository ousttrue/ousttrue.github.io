{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2019-vim-debugger-md-4045108046cd59edc92c.js","mappings":"8JAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,KAAM,OACNC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,WAAY,aACZC,EAAG,IACHC,GAAI,OACHC,EAAAA,EAAAA,MAAsBb,EAAMc,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,QAASW,EAAAA,cAAoBd,EAAYI,KAAM,CACvIW,wBAAyB,CACvBC,OAAQ,mDAER,+BAAgC,KAAMF,EAAAA,cAAoBd,EAAYK,GAAI,KAAM,cAAe,KAAMS,EAAAA,cAAoBd,EAAYM,GAAI,KAAM,aAAc,KAAMQ,EAAAA,cAAoBd,EAAYO,GAAI,KAAM,KAAMO,EAAAA,cAAoBd,EAAYQ,GAAI,KAAM,qCAAsC,MAAO,KAAMM,EAAAA,cAAoBd,EAAYM,GAAI,KAAM,gBAAiB,KAAMQ,EAAAA,cAAoBd,EAAYO,GAAI,KAAM,KAAMO,EAAAA,cAAoBd,EAAYQ,GAAI,KAAM,4CAA6C,MAAO,KAAMM,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,gBAAiBW,EAAAA,cAAoBd,EAAYI,KAAM,CACvmBW,wBAAyB,CACvBC,OAAQ,gDAER,sDAAuD,KAAMF,EAAAA,cAAoBd,EAAYM,GAAI,KAAM,WAAY,KAAMQ,EAAAA,cAAoBd,EAAYO,GAAI,KAAM,KAAMO,EAAAA,cAAoBd,EAAYQ,GAAI,KAAM,wCAAyC,MAAO,KAAMM,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,0BAA2B,KAAMW,EAAAA,cAAoBd,EAAYM,GAAI,KAAM,QAAS,KAAMQ,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,eAAgB,KAAMW,EAAAA,cAAoBd,EAAYO,GAAI,KAAM,KAAMO,EAAAA,cAAoBd,EAAYQ,GAAI,KAAM,mCAAoC,MAAO,KAAMM,EAAAA,cAAoBd,EAAYM,GAAI,KAAM,gBAAiB,KAAMQ,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,eAAgB,KAAMW,EAAAA,cAAoBd,EAAYO,GAAI,KAAM,KAAMO,EAAAA,cAAoBd,EAAYQ,GAAI,KAAM,0CAA2C,MAAO,KAAMM,EAAAA,cAAoBd,EAAYM,GAAI,KAAM,cAAe,KAAMQ,EAAAA,cAAoBd,EAAYO,GAAI,KAAM,KAAMO,EAAAA,cAAoBd,EAAYQ,GAAI,KAAM,8CAA+C,MAAO,KAAMM,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,WAAYW,EAAAA,cAAoBd,EAAYI,KAAM,CAC1pCW,wBAAyB,CACvBC,OAAQ,6DAER,cAAe,KAAMF,EAAAA,cAAoBd,EAAYS,WAAY,KAAM,KAAMK,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,uLAAwL,MAAO,KAAMW,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,eAAgB,KAAMW,EAAAA,cAAoBd,EAAYK,GAAI,KAAM,wBAAyB,KAAMS,EAAAA,cAAoBd,EAAYO,GAAI,KAAM,KAAMO,EAAAA,cAAoBd,EAAYQ,GAAI,KAAMM,EAAAA,cAAoBd,EAAYU,EAAG,CAClkBO,KAAM,iFACL,wBAAyB,KAAMH,EAAAA,cAAoBd,EAAYO,GAAI,KAAM,KAAMO,EAAAA,cAAoBd,EAAYQ,GAAI,KAAMM,EAAAA,cAAoBd,EAAYU,EAAG,CAC7JO,KAAM,yDACL,eAAgB,MAAO,MAAO,MAAO,KAAMH,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,OAAQ,KAAMW,EAAAA,cAAoBd,EAAYS,WAAY,KAAM,KAAMK,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,6JAAkK,MAAO,KAAMW,EAAAA,cAAoBd,EAAYI,KAAM,CACzZW,wBAAyB,CACvBC,OAAQ,iNAER,KAAMF,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,6BAA8B,KAAMW,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,kBAAmBW,EAAAA,cAAoBd,EAAYI,KAAM,CACvLW,wBAAyB,CACvBC,OAAQ,4DAER,aAAc,KAAMF,EAAAA,cAAoBd,EAAYS,WAAY,KAAM,KAAMK,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,6IAA8I,MAAO,KAAMW,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,6BAA8B,KAAMW,EAAAA,cAAoBd,EAAYO,GAAI,KAAM,KAAMO,EAAAA,cAAoBd,EAAYQ,GAAI,KAAM,2DAA4D,KAAMM,EAAAA,cAAoBd,EAAYO,GAAI,KAAM,KAAMO,EAAAA,cAAoBd,EAAYQ,GAAI,KAAM,8DAA+D,MAAO,MAAO,MAAO,KAAMM,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,OAAQ,KAAMW,EAAAA,cAAoBd,EAAYO,GAAI,KAAM,KAAMO,EAAAA,cAAoBd,EAAYQ,GAAI,KAAM,+DAAgE,MAAO,KAAMM,EAAAA,cAAoBd,EAAYS,WAAY,KAAM,KAAMK,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,6JAA8J,MAAO,KAAMW,EAAAA,cAAoBd,EAAYS,WAAY,KAAM,KAAMK,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,mMAAoM,MAAO,KAAMW,EAAAA,cAAoBd,EAAYM,GAAI,KAAM,UAAW,KAAMQ,EAAAA,cAAoBd,EAAYO,GAAI,KAAM,KAAMO,EAAAA,cAAoBd,EAAYQ,GAAI,KAAM,oEAAqE,MAAO,KAAMM,EAAAA,cAAoBd,EAAYM,GAAI,KAAM,UAAW,KAAMQ,EAAAA,cAAoBd,EAAYO,GAAI,KAAM,KAAMO,EAAAA,cAAoBd,EAAYQ,GAAI,KAAM,6EAA8E,MAAO,KAAMM,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,yDAA0DW,EAAAA,cAAoBd,EAAYI,KAAM,CAC3iEW,wBAAyB,CACvBC,OAAQ,2CAER,MAAOF,EAAAA,cAAoBd,EAAYI,KAAM,CAC/CW,wBAAyB,CACvBC,OAAQ,4CAER,MAAOF,EAAAA,cAAoBd,EAAYI,KAAM,CAC/CW,wBAAyB,CACvBC,OAAQ,6CAER,UAAW,KAAMF,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,kBAAmBW,EAAAA,cAAoBd,EAAYI,KAAM,CACrHW,wBAAyB,CACvBC,OAAQ,6CAER,KAAMF,EAAAA,cAAoBd,EAAYI,KAAM,CAC9CW,wBAAyB,CACvBC,OAAQ,6CAER,KAAMF,EAAAA,cAAoBd,EAAYI,KAAM,CAC9CW,wBAAyB,CACvBC,OAAQ,6CAER,qBAAsBF,EAAAA,cAAoBd,EAAYI,KAAM,CAC9DW,wBAAyB,CACvBC,OAAQ,2CAER,KAAMF,EAAAA,cAAoBd,EAAYI,KAAM,CAC9CW,wBAAyB,CACvBC,OAAQ,2CAER,wBAAyB,KAAMF,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,2BAA4B,KAAMW,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,wBAAyB,KAAMW,EAAAA,cAAoBd,EAAYW,GAAI,KAAM,gBAAiB,KAAMG,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,6GAA8G,KAAMW,EAAAA,cAAoBd,EAAYO,GAAI,KAAM,KAAMO,EAAAA,cAAoBd,EAAYQ,GAAI,KAAM,gDAAiD,MAAO,KAAMM,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,QAAS,KAAMW,EAAAA,cAAoBd,EAAYO,GAAI,KAAM,KAAMO,EAAAA,cAAoBd,EAAYQ,GAAI,KAAM,0CAA2C,MAAO,KAAMM,EAAAA,cAAoBd,EAAYW,GAAI,KAAM,QAAS,KAAMG,EAAAA,cAAoBd,EAAYS,WAAY,KAAM,KAAMK,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,oCAAqC,MAAO,KAAMW,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,iDAAkD,KAAMW,EAAAA,cAAoBd,EAAYO,GAAI,KAAM,KAAMO,EAAAA,cAAoBd,EAAYQ,GAAI,KAAM,iDAAkD,MAAO,KAAMM,EAAAA,cAAoBd,EAAYW,GAAI,KAAM,QAAS,KAAMG,EAAAA,cAAoBd,EAAYO,GAAI,KAAM,KAAMO,EAAAA,cAAoBd,EAAYQ,GAAI,KAAM,kDAAmD,MAAO,KAAMM,EAAAA,cAAoBd,EAAYW,GAAI,KAAM,SAAU,KAAMG,EAAAA,cAAoBd,EAAYO,GAAI,KAAM,KAAMO,EAAAA,cAAoBd,EAAYQ,GAAI,KAAM,4DAA6D,MAAO,KAAMM,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,yDAA0D,KAAMW,EAAAA,cAAoBd,EAAYW,GAAI,KAAM,cAAe,KAAMG,EAAAA,cAAoBd,EAAYO,GAAI,KAAM,KAAMO,EAAAA,cAAoBd,EAAYQ,GAAI,KAAM,4DAA6D,MAAO,KAAMM,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,eAAgB,KAAMW,EAAAA,cAAoBd,EAAYW,GAAI,KAAM,cAAe,KAAMG,EAAAA,cAAoBd,EAAYO,GAAI,KAAM,KAAMO,EAAAA,cAAoBd,EAAYQ,GAAI,KAAM,mDAAoD,MAAO,KAAMM,EAAAA,cAAoBd,EAAYW,GAAI,KAAM,UAAW,KAAMG,EAAAA,cAAoBd,EAAYO,GAAI,KAAM,KAAMO,EAAAA,cAAoBd,EAAYQ,GAAI,KAAM,8CAA+C,MAAO,KAAMM,EAAAA,cAAoBd,EAAYK,GAAI,KAAM,iBAAkB,KAAMS,EAAAA,cAAoBd,EAAYO,GAAI,KAAM,KAAMO,EAAAA,cAAoBd,EAAYQ,GAAI,KAAM,8CAA+C,MAAO,KAAMM,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,OAAQ,KAAMW,EAAAA,cAAoBd,EAAYG,EAAG,KAAMW,EAAAA,cAAoBd,EAAYI,KAAM,CAC/vFW,wBAAyB,CACvBC,OAAQ,8DAEP,KAAMF,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,aAAcW,EAAAA,cAAoBd,EAAYI,KAAM,CACtGW,wBAAyB,CACvBC,OAAQ,+CAER,MAAOF,EAAAA,cAAoBd,EAAYI,KAAM,CAC/CW,wBAAyB,CACvBC,OAAQ,kDAER,MAAOF,EAAAA,cAAoBd,EAAYI,KAAM,CAC/CW,wBAAyB,CACvBC,OAAQ,iDAER,SAAUF,EAAAA,cAAoBd,EAAYI,KAAM,CAClDW,wBAAyB,CACvBC,OAAQ,kDAER,OAAQF,EAAAA,cAAoBd,EAAYI,KAAM,CAChDW,wBAAyB,CACvBC,OAAQ,4CAER,oBAAqB,KAAMF,EAAAA,cAAoBd,EAAYG,EAAG,KAAMW,EAAAA,cAAoBd,EAAYI,KAAM,CAC5GW,wBAAyB,CACvBC,OAAQ,iEAEP,KAAMF,EAAAA,cAAoBd,EAAYI,KAAM,CAC/CW,wBAAyB,CACvBC,OAAQ,qkBAER,KAAMF,EAAAA,cAAoBd,EAAYG,EAAG,KAAMW,EAAAA,cAAoBd,EAAYI,KAAM,CACvFW,wBAAyB,CACvBC,OAAQ,6EAEP,KAAMF,EAAAA,cAAoBd,EAAYI,KAAM,CAC/CW,wBAAyB,CACvBC,OAAQ,2fAER,KAAMF,EAAAA,cAAoBd,EAAYG,EAAG,KAAMW,EAAAA,cAAoBd,EAAYI,KAAM,CACvFW,wBAAyB,CACvBC,OAAQ,qDAER,cAAeF,EAAAA,cAAoBd,EAAYI,KAAM,CACvDW,wBAAyB,CACvBC,OAAQ,6CAER,SAAUF,EAAAA,cAAoBd,EAAYI,KAAM,CAClDW,wBAAyB,CACvBC,OAAQ,6CAER,iBAAkB,KAAMF,EAAAA,cAAoBd,EAAYG,EAAG,KAAMW,EAAAA,cAAoBd,EAAYI,KAAM,CACzGW,wBAAyB,CACvBC,OAAQ,0DAEP,KAAMF,EAAAA,cAAoBd,EAAYI,KAAM,CAC/CW,wBAAyB,CACvBC,OAAQ,mmBAER,KAAMF,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,KAAMW,EAAAA,cAAoBd,EAAYI,KAAM,CAC7FW,wBAAyB,CACvBC,OAAQ,uDAER,uCAAwCF,EAAAA,cAAoBd,EAAYI,KAAM,CAChFW,wBAAyB,CACvBC,OAAQ,4CAER,MAAOF,EAAAA,cAAoBd,EAAYI,KAAM,CAC/CW,wBAAyB,CACvBC,OAAQ,4CAER,MAAOF,EAAAA,cAAoBd,EAAYI,KAAM,CAC/CW,wBAAyB,CACvBC,OAAQ,gDAER,cAAeF,EAAAA,cAAoBd,EAAYI,KAAM,CACvDW,wBAAyB,CACvBC,OAAQ,uDAER,MAAOF,EAAAA,cAAoBd,EAAYI,KAAM,CAC/CW,wBAAyB,CACvBC,OAAQ,4DAER,eAAgBF,EAAAA,cAAoBd,EAAYI,KAAM,CACxDW,wBAAyB,CACvBC,OAAQ,iDAER,kBAAmBF,EAAAA,cAAoBd,EAAYI,KAAM,CAC3DW,wBAAyB,CACvBC,OAAQ,qDAER,UAAW,KAAMF,EAAAA,cAAoBd,EAAYG,EAAG,KAAMW,EAAAA,cAAoBd,EAAYI,KAAM,CAClGW,wBAAyB,CACvBC,OAAQ,iEAER,IAAKF,EAAAA,cAAoBd,EAAYI,KAAM,CAC7CW,wBAAyB,CACvBC,OAAQ,+DAER,IAAKF,EAAAA,cAAoBd,EAAYI,KAAM,CAC7CW,wBAAyB,CACvBC,OAAQ,wDAER,2DAA4D,KAAMF,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,mBAAoB,KAAMW,EAAAA,cAAoBd,EAAYG,EAAG,KAAMW,EAAAA,cAAoBd,EAAYI,KAAM,CACtNW,wBAAyB,CACvBC,OAAQ,kJAEP,KAAMF,EAAAA,cAAoBd,EAAYG,EAAG,KAAMW,EAAAA,cAAoBd,EAAYI,KAAM,CACxFW,wBAAyB,CACvBC,OAAQ,yDAER,uBAAwBF,EAAAA,cAAoBd,EAAYI,KAAM,CAChEW,wBAAyB,CACvBC,OAAQ,uDAER,OAAQ,KAAMF,EAAAA,cAAoBd,EAAYG,EAAG,KAAMW,EAAAA,cAAoBd,EAAYI,KAAM,CAC/FW,wBAAyB,CACvBC,OAAQ,6CAER,gBAAiB,KAAMF,EAAAA,cAAoBd,EAAYI,KAAM,CAC/DW,wBAAyB,CACvBC,OAAQ,4UAER,KAAMF,EAAAA,cAAoBd,EAAYG,EAAG,KAAMW,EAAAA,cAAoBd,EAAYI,KAAM,CACvFW,wBAAyB,CACvBC,OAAQ,+CAER,MAAOF,EAAAA,cAAoBd,EAAYI,KAAM,CAC/CW,wBAAyB,CACvBC,OAAQ,gDAER,kBAAmB,KAAMF,EAAAA,cAAoBd,EAAYK,GAAI,KAAM,6BAA8B,KAAMS,EAAAA,cAAoBd,EAAYG,EAAG,KAAMW,EAAAA,cAAoBd,EAAYI,KAAM,CACxLW,wBAAyB,CACvBC,OAAQ,uDAER,SAAUF,EAAAA,cAAoBd,EAAYI,KAAM,CAClDW,wBAAyB,CACvBC,OAAQ,sDAER,oBAAqBF,EAAAA,cAAoBd,EAAYI,KAAM,CAC7DW,wBAAyB,CACvBC,OAAQ,4CAER,8BAA+BF,EAAAA,cAAoBd,EAAYI,KAAM,CACvEW,wBAAyB,CACvBC,OAAQ,+CAER,gCAAiC,KAAMF,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,2CAA4C,KAAMW,EAAAA,cAAoBd,EAAYO,GAAI,KAAM,KAAMO,EAAAA,cAAoBd,EAAYQ,GAAI,KAAM,iFAAkF,KAAMM,EAAAA,cAAoBd,EAAYQ,GAAI,KAAM,8EAA+E,KAAMM,EAAAA,cAAoBd,EAAYQ,GAAI,KAAM,4EAA6E,MAAO,KAAMM,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,qDAAsDW,EAAAA,cAAoBd,EAAYI,KAAM,CAC9rBW,wBAAyB,CACvBC,OAAQ,gDAER,kBAAmB,KAAMF,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,wFAAyF,KAAMW,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,0DAA2D,KAAMW,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,SAAU,KAAMW,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,qDAAsD,KAAMW,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,WAAYW,EAAAA,cAAoBd,EAAYI,KAAM,CACtgBW,wBAAyB,CACvBC,OAAQ,4DAER,WAAYF,EAAAA,cAAoBd,EAAYI,KAAM,CACpDW,wBAAyB,CACvBC,OAAQ,+CAER,gBAAiB,KAAMF,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,8EAA+E,KAAMW,EAAAA,cAAoBd,EAAYG,EAAG,KAAM,WACpM,CAKA,MAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOmB,QAASC,GAAalB,OAAOC,OAAO,CAAC,GAAGU,EAAAA,EAAAA,MAAsBb,EAAMc,YAC3E,OAAOM,EAAYL,EAAAA,cAAoBK,EAAWpB,EAAOe,EAAAA,cAAoBhB,EAAmBC,IAAUD,EAAkBC,EAC9H,E,oBCtOA,MAAMc,EAAa,CACjBO,KAAMC,IAA2B,IAA1B,SAACC,EAAQ,UAAEC,GAAUF,EAC1B,OAAOE,EAAYT,EAAAA,cAAoBU,EAAAA,EAAsB,CAC3DD,UAAWA,GACVD,GAAYR,EAAAA,cAAoB,OAAQ,KAAMQ,EAAS,GAG9D,SAASG,EAAYC,GAAmB,IAAlB,KAACC,EAAI,SAAEL,GAASI,EACpC,OAAOZ,EAAAA,cAAoBc,EAAAA,EAAQ,KAAMd,EAAAA,cAAoB,KAAM,KAAMa,EAAKE,IAAIC,YAAYC,OAAQjB,EAAAA,cAAoBkB,EAAAA,GAAa,CACrInB,WAAYA,GACXS,GACL,CACe,SAASW,EAAiBlC,GACvC,OAAOe,EAAAA,cAAoBW,EAAc1B,EAAOe,EAAAA,cAAoBoB,EAAqBnC,GAC3F,C","sources":["webpack:///./content/posts/2019/vim_debugger.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    span: \"span\",\n    h1: \"h1\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    blockquote: \"blockquote\",\n    a: \"a\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"vimで \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">breakpoint</code>\"\n    }\n  }), \" を設置してステップ実行できるようなデバッガを調べた。\"), \"\\n\", React.createElement(_components.h1, null, \"vim 上のデバッガ\"), \"\\n\", React.createElement(_components.h2, null, \"lldb.nvim\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/dbgx/lldb.nvim\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"vim-vebugger\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/idanarye/vim-vebugger\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"なんか動きそうなのだが、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">vimproc</code>\"\n    }\n  }), \" を使っていたので動かせなかった\\nkaoriya 版の Vim を使うなどしてみたがよくわからず。\"), \"\\n\", React.createElement(_components.h2, null, \"pyclewn\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/Mistobaan/pyclewn\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"gdb と pdb のvimフロントエンド？\"), \"\\n\", React.createElement(_components.h2, null, \"pubd\"), \"\\n\", React.createElement(_components.p, null, \"pythonのpdb.\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/inducer/pudb\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"vim-breakpts\"), \"\\n\", React.createElement(_components.p, null, \"vim スクリプト用？\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/albfan/vim-breakpts\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"vimspector\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/puremourning/vimspector\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"VSCodeの \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">DebugAdapterProtocol</code>\"\n    }\n  }), \" を使うものらしい。\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"While Language Server Protocol is well known, the Debug Adapter Protocol is less well known, but achieves a similar goal: language agnostic API abstracting debuggers from clients.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"動かし方よくわからず。\"), \"\\n\", React.createElement(_components.h1, null, \"DebugAdapterProtocol\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://code.visualstudio.com/blogs/2018/08/07/debug-adapter-protocol-website\"\n  }, \"DebugAdapterProtocol\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/Microsoft/vscode-debugadapter-node\"\n  }, \"旧サイト・リポジトリ\")), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"読む。\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"The \\\"deep understanding of a language\\\" is surfaced by the Language Server Protocol (LSP) and the \\\"debugging support\\\" by the Debug Adapter Protocol (DAP).\"), \"\\n\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">editor &lt;=> adapter &lt;=> gdb\\n              ||\\n              ++=====> pdb</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"adapterでラップして同じに見えるようにする。\"), \"\\n\", React.createElement(_components.p, null, \"adapterの起動設定は、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">.vscode/launch.json</code>\"\n    }\n  }), \" にというわけか。\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"The Debug Adapter Protocol is not tied to VS Code and can be used as the foundation for a generic debugger UI in other development tools.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"新サイトで仕様を公開していくで、って書いてあるね。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"新サイト https://microsoft.github.io/debug-adapter-protocol/\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"新リポジトリ https://github.com/Microsoft/debug-adapter-protocol\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"読む。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://microsoft.github.io/debug-adapter-protocol/overview\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"single session mode: in this mode, the development tool starts a debug adapter as a standalone process and communicates with it through stdin and stdout.\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"multi session mode: in this mode, the development tool does not start the debug adapter but assumes that it is already running and that it listens on a specific port for connections attempts.\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"DAPの仕様\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://microsoft.github.io/debug-adapter-protocol/specification\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"DAPの実装\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://microsoft.github.io/debug-adapter-protocol/implementors/adapters/\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"ネイティブコンパイルするタイプは言語ごとではなく、ネイティブコンパイルの様式ごとに違うものになる。例えば、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">vc</code>\"\n    }\n  }), \" , \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">gcc</code>\"\n    }\n  }), \" , \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">llvm</code>\"\n    }\n  }), \" のように。\"), \"\\n\", React.createElement(_components.p, null, \"となるとVMタイプのものは、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">.Net</code>\"\n    }\n  }), \", \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Mono</code>\"\n    }\n  }), \", \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">java</code>\"\n    }\n  }), \" といった分類になるのだろうか。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">C#</code>\"\n    }\n  }), \", \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">F#</code>\"\n    }\n  }), \" が両方デバッグできたりしそうではある。\"), \"\\n\", React.createElement(_components.p, null, \"インタープリター型はそれぞれの言語ごとになる。\"), \"\\n\", React.createElement(_components.p, null, \"あとは、リモートデバッグの事情を調べる。\"), \"\\n\", React.createElement(_components.h3, null, \"native debug\"), \"\\n\", React.createElement(_components.p, null, \"c++やd, rustなんかのnativeコードを出力するものをまとめて面倒見れるという理解であったいるのかな。ビルド形式とデバッグビルドに付加される情報のフォーマットに対応してデバッガを選択する必要があると。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/Microsoft/vscode-cpptools\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"LLVM\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/vadimcn/vscode-lldb\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \".Net\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Mono debugging is not supported.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"ILは互換性があるにしても、VMのデバッグインタフェースは互換性が無いということなのかな。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/OmniSharp/omnisharp-vscode\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"Mono\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/Microsoft/vscode-mono-debug\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"Unity\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/Unity-Technologies/vscode-unity-debug\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"UnityEditorにアタッチできるらしい。\\nUnity版のMonoにアタッチできるということかしら。\"), \"\\n\", React.createElement(_components.h3, null, \"lua / ravi\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/dibyendumajumdar/ravi-vscode-debugger\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"こんなのあるのか・・・\"), \"\\n\", React.createElement(_components.h3, null, \"powershell\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/PowerShell/vscode-powershell\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"python\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/Microsoft/vscode-python\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"vimspectorの実装\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/puremourning/vimspector\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"読む。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">.\\\\install_gadget.py</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.p, null, \"を実行することで、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">VSCode</code>\"\n    }\n  }), \" の \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">extension</code>\"\n    }\n  }), \" を \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">download</code>\"\n    }\n  }), \" する。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">extension</code>\"\n    }\n  }), \" に、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">DAP</code>\"\n    }\n  }), \" が含まれているのでこれを使う。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">autoload/vimspector.vim</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"vim\\\"><pre class=\\\"language-vim\\\"><code class=\\\"language-vim\\\"><span class=\\\"token keyword\\\">function</span><span class=\\\"token operator\\\">!</span> vimspector#<span class=\\\"token function\\\">Launch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> abort\\n  py3 _vimspector_session<span class=\\\"token operator\\\">.</span><span class=\\\"token function\\\">Start</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">endfunction</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">python3/vimspector/debug_session.py</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"py\\\"><pre class=\\\"language-py\\\"><code class=\\\"language-py\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">DebugSession</span><span class=\\\"token punctuation\\\">:</span>\\n  <span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">Start</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token keyword\\\">pass</span>\\n</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">vim.bindeval</code>\"\n    }\n  }), \" を使っているので、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">vim8</code>\"\n    }\n  }), \" 専用。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">nvim</code>\"\n    }\n  }), \" では回避する必要がある。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">.vimspector.json</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"json\\\"><pre class=\\\"language-json\\\"><code class=\\\"language-json\\\"><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">\\\"adapters\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token property\\\">\\\"configurations\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"の \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">configurations</code>\"\n    }\n  }), \" からデバッグセッションの起動方法を取得して、\\nデバッグアダプターを \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">vim</code>\"\n    }\n  }), \" の \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">job</code>\"\n    }\n  }), \" か \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">channel</code>\"\n    }\n  }), \" 経由で起動する。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">configurations</code>\"\n    }\n  }), \" が \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">.vscode/launch.json</code>\"\n    }\n  }), \" に相当するようだ。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">adapters</code>\"\n    }\n  }), \" は、インストールされている \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">DebugAdapter</code>\"\n    }\n  }), \" のリスト。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">call vimspector#Launch()</code>\"\n    }\n  }), \" \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">simple_python - launch</code>\"\n    }\n  }), \" \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">/Users/ousttrue</code>\"\n    }\n  }), \" と入力することでjobが、アダプター開始するところまでできた。\\nしかし、アダプターがすぐに死んでいる様子。\"), \"\\n\", React.createElement(_components.p, null, \"アダプターを手動起動してみる。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">node .\\\\.vscode\\\\extensions\\\\ms-python.python-2019.4.11987\\\\out\\\\client\\\\debugger\\\\debugAdapter\\\\main.js</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">.vimspector.json</code>\"\n    }\n  }), \" に書いてあるのとバージョンが違う。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">file not found</code>\"\n    }\n  }), \" か。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">path</code>\"\n    }\n  }), \" をなおしたら動いた😃\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">-          \\\"$HOME/.vscode/extensions/ms-python.python-2018.4.0/out/client/debugger/Main.js\\\"\\n+          \\\"$HOME/.vscode/extensions/ms-python.python-2019.4.11987/out/client/debugger/debugAdapter/Main.js\\\"</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">neovim</code>\"\n    }\n  }), \" の \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">rplugin</code>\"\n    }\n  }), \" での構成を考えてみようか。\"), \"\\n\", React.createElement(_components.h1, null, \"python3 で Adapter を起動してみる\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">AdapterAdapter</code>\"\n    }\n  }), \" というか \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">AdapterBridge</code>\"\n    }\n  }), \" という感じになりそうだけど、\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">vim</code>\"\n    }\n  }), \" で込み入った実装をするのは手に余るので、可能な限り \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">python</code>\"\n    }\n  }), \" で事を進めよう。\\npythonでprotocl実験。\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/ousttrue/daplauncher\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"http://pydev.blogspot.com/2018/05/howto-launch-and-debug-in-vscode-using.html\"), \"\\n\", React.createElement(_components.li, null, \"https://vscode-docs.readthedocs.io/en/stable/extensions/example-debuggers/\"), \"\\n\", React.createElement(_components.li, null, \"https://vscode-docs.readthedocs.io/en/stable/extensionAPI/api-debugging/\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"launchRequestの後で固まると思ったら、サイトに記述されていないパラメーターがあった。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">console</code>\"\n    }\n  }), \" どこに書いてあるのか・・・\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/Microsoft/vscode-debugadapter-node/blob/master/debugProtocol.json\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/Microsoft/vscode-python/issues/3762\"), \"\\n\", React.createElement(_components.p, null, \"わかった。\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/Microsoft/vscode-go/issues/219\"), \"\\n\", React.createElement(_components.p, null, \"vscodeの \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">.vscode/launch.json</code>\"\n    }\n  }), \" の起動設定を \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">launch</code>\"\n    }\n  }), \" の引数に合体するのだ。\"), \"\\n\", React.createElement(_components.p, null, \"https://code.visualstudio.com/Docs/editor/debugging#_launchjson-attributes\"), \"\\n\", React.createElement(_components.p, null, \"書いとけよー。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2019/vim_debugger.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","span","h1","h2","ul","li","blockquote","a","h3","_provideComponents","components","React","dangerouslySetInnerHTML","__html","href","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","Layout","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}