{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2013-05-20-gentoo-md-1005ff370d5c59b30f7c.js","mappings":"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","sources":["webpack:///./content/posts/2013/05/20/gentoo.md","webpack:///./src/templates/post-template.js","webpack:///./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\",\n    h3: \"h3\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Gentoo再構築\"), \"\\n\", React.createElement(_components.p, null, \"gentooのルートファイルシステムに10Gを割り当てていたのだがいつのまにかディスクフルになってしまった。\\nportageとhomeをmountしていたので大丈夫かと思っていたのだが意外と容量を使ってしまっていた様子。\\nいろいろインストールしすぎなのかもしれぬ。\\nとりあえず/var/logの大きいファイルをxzして急場を凌いだが、\\nパーティションの割り方の都合で拡大できないので新しく作り直すことにした。\"), \"\\n\", React.createElement(_components.h2, null, \"作業記録。\"), \"\\n\", React.createElement(_components.h3, null, \"ファイルシステム準備\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"# lvcreate -L 100G -n gentoo_root mygroup\\n# mkfs.ext4 /dev/mygroup/gentoo_root\\n# cd /mnt\\n# mkdir gentoo\\n# mount /dev/mygroup/gentoo_root\\n\")), \"\\n\", React.createElement(_components.h3, null, \"Installing the Gentoo Installation Files\"), \"\\n\", React.createElement(_components.p, null, \"http://www.gentoo.org/doc/en/handbook/handbook-amd64.xml?part=1&chap=5\"), \"\\n\", React.createElement(_components.p, null, \"stage3ファイルの取得と展開\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"# cd /mnt/gentoo\\n# wget http://ftp.jaist.ac.jp/pub/Linux/Gentoo/releases/amd64/current-stage3/stage3-amd64-20130516.tar.bz2\\n# tar xvjpf stage3-*.tar.bz2\\n\")), \"\\n\", React.createElement(_components.p, null, \"portageは旧パーティションを流用\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"# mkdir usr/portage\\n# mount /dev/mygroup/portage usr/portage\\n\\n/etc/portage/make.conf\\n# These settings were set by the catalyst build script that automatically\\n# built this stage.\\n# Please consult /usr/share/portage/config/make.conf.example for a more\\n# detailed example.\\nCFLAGS=\\\"-march=native -O2 -pipe\\\"\\n#CFLAGS=\\\"-march=bdver2 -O2 -pipe\\\"\\nCXXFLAGS=\\\"${CFLAGS}\\\"\\n# WARNING: Changing your CHOST is not something that should be done lightly.\\n# Please consult http://www.gentoo.org/doc/en/change-chost.xml before changing.\\nCHOST=\\\"x86_64-pc-linux-gnu\\\"\\n# These are the USE flags that were used in addition to what is provided by the\\n# profile used for building.\\nUSE=\\\"\\\"\\nUSE=\\\"$USE -ldap\\\"\\nUSE=\\\"$USE mmx sse sse2 sse3 ssse3\\\"\\nUSE=\\\"$USE openal alsa gstreamer phonon pulseaudio xft xnest\\\"\\nUSE=\\\"$USE gtk gnome xfce imlib gconf\\\"\\nUSE=\\\"$USE qt4 kde\\\"\\nUSE=\\\"$USE gd imlib eigen\\\"\\nUSE=\\\"$USE sqlite apache2\\\"\\nUSE=\\\"$USE ffmpeg theora lame mms\\\"\\nUSE=\\\"$USE samba fuse udisks\\\"\\nUSE=\\\"$USE icu\\\"\\nUSE=\\\"$USE consolekit dbus pam policykit udev\\\"\\nUSE=\\\"$USE c++0x\\\"\\n\\nINPUT_DEVICES=\\\"evdev\\\"\\n#VIDEO_CARDS=\\\"radeon\\\"\\nVIDEO_CARDS=\\\"fglrx\\\"\\nLINGUAS=\\\"ja\\\"\\n\\nMAKEOPTS=\\\"-j5\\\"\\nGENTOO_MIRRORS=\\\"http://ftp.iij.ad.jp/pub/linux/gentoo/ ftp://ftp.iij.ad.jp/pub/linux/gentoo/ http://ftp.jaist.ac.jp/pub/Linux/Gentoo/\\\"\\n\")), \"\\n\", React.createElement(_components.p, null, \"CFLAGSに-march=nativeを使えるようになった\"), \"\\n\", React.createElement(_components.h3, null, \"Installing the Gentoo Base System\"), \"\\n\", React.createElement(_components.p, null, \"http://www.gentoo.org/doc/en/handbook/handbook-amd64.xml?part=1&chap=6\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"# cp -L /etc/resolv.conf /mnt/gentoo/etc/\\n# mount -t proc none /mnt/gentoo/proc\\n# mount --rbind /sys /mnt/gentoo/sys\\n# mount --rbind /dev /mnt/gentoo/dev\\n\\n# chroot /mnt/gentoo /bin/bash\\n# source /etc/profile\\n# export PS1=\\\"(chroot) $PS1\\\"\\n\\n# emerge --sync\\n# cp /usr/share/zoneinfo/Asia/Tokyo /etc/localtime\\n# echo \\\"Asia/Tokyo\\\" > /etc/timezone\\n\")), \"\\n\", React.createElement(_components.h3, null, \"Configuring the Kernel\"), \"\\n\", React.createElement(_components.p, null, \"http://www.gentoo.org/doc/en/handbook/handbook-amd64.xml?part=1&chap=7\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"# emerge gentoo-sources\\n\")), \"\\n\", React.createElement(_components.p, null, \"LVMからブートするのでgenkernelを使う\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"# emerge genkernel\\n# genkernel --lvm --install all\\n\")), \"\\n\", React.createElement(_components.h3, null, \"Configuring your System\"), \"\\n\", React.createElement(_components.p, null, \"http://www.gentoo.org/doc/en/handbook/handbook-amd64.xml?part=1&chap=8\"), \"\\n\", React.createElement(_components.h3, null, \"Installing Necessary System Tools\"), \"\\n\", React.createElement(_components.p, null, \"http://www.gentoo.org/doc/en/handbook/handbook-amd64.xml?part=1&chap=9\"), \"\\n\", React.createElement(_components.h3, null, \"Configuring the Bootloader\"), \"\\n\", React.createElement(_components.p, null, \"http://www.gentoo.org/doc/en/handbook/handbook-amd64.xml?part=1&chap=10\"), \"\\n\", React.createElement(_components.p, null, \"/boot/grub/menu.lst\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"title genkernel 3.8.13\\nroot (hd0,0)\\nkernel /boot/kernel-genkernel-x86_64-3.8.13-gentoo real_root=/dev/mygroup/gentoo_root rootfstype=ext4 dolvm\\ninitrd /boot/initramfs-genkernel-x86_64-3.8.13-gentoo\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2013/05/20/gentoo.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nfunction PostTempalte({data, children}) {\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, null, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","h2","h3","pre","code","_provideComponents","components","React","wrapper","MDXLayout","PostTempalte","_ref","data","children","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}