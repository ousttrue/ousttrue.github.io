"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1052],{4703:function(e,n,t){t.r(n),t.d(n,{default:function(){return m}});var l=t(1151),a=t(7294);function r(e){const n=Object.assign({h1:"h1",p:"p",a:"a",code:"code",h2:"h2",ul:"ul",li:"li",pre:"pre",h3:"h3"},(0,l.ah)(),e.components);return a.createElement(a.Fragment,null,a.createElement(n.h1,null,"ABlog にシステムを変更"),"\n",a.createElement(n.p,null,a.createElement(n.a,{href:"https://getnikola.com/"},"nikola")," は使いこなせなくて短命に終わってしまった。\n",a.createElement(n.a,{href:"https://pydoit.org/"},"doit")," は面白いと思うのだが。"),"\n",a.createElement(n.p,null,"ということで、 ",a.createElement(n.code,null,"sphinx")," プラグインの ",a.createElement(n.a,{href:"https://ablog.readthedocs.io/en/latest/"},"ABlog")," です。"),"\n",a.createElement(n.h2,null,"はまり1: Sphinx のキャッシュ"),"\n",a.createElement(n.p,null,a.createElement(n.code,null,"python -m sphinx content build")," にデバッガをアタッチして試行錯誤するのだけど、\nキャッシュされて処理されなかった。"),"\n",a.createElement(n.p,null,a.createElement(n.code,null,"python -m sphinx content build -E -v")," とする。"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"-E: 全処理(キャッシュを使わない)"),"\n",a.createElement(n.li,null,"-v: 詳細メッセージ"),"\n"),"\n",a.createElement(n.h2,null,"はまり2: ablog が timezone の有無で日付の比較に失敗する"),"\n",a.createElement(n.pre,null,a.createElement(n.code,null,"can't compare offset-naive and offset-aware datetimes\n")),"\n",a.createElement(n.p,null,"これは、既存記事の ",a.createElement(n.code,null,"frontmatter")," の日付に ",a.createElement(n.code,null,"timezone")," が付いていると\n日付の比較に失敗する。"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-python"},'# site-packages/ablog/blog.py:382\nself.date = date = info["date"].replace(tzinfo=None)\n')),"\n",a.createElement(n.p,null,"と対処した。"),"\n",a.createElement(n.h2,null,"はまり3: myst-parser の toml frontmatter 対応"),"\n",a.createElement(n.p,null,a.createElement(n.code,null,"myst-parser")," が ",a.createElement(n.code,null,"---")," による ",a.createElement(n.code,null,"yaml")," 形式の ",a.createElement(n.code,null,"frontmatter")," にしか対応していない様子。\n",a.createElement(n.a,{href:"https://gohugo.io/content-management/front-matter/"},"hugo の frontmatter")," にある ",a.createElement(n.code,null,"toml")," 様式に対応するべく改造したい。"),"\n",a.createElement(n.h3,null,"切り出し"),"\n",a.createElement(n.p,null,"どこで処理しているのか探索が難航した。"),"\n",a.createElement(n.p,null,a.createElement(n.code,null,"site-packages/mdit_py_plugins/front_matter/index.py"),"\nで処理している。"),"\n",a.createElement(n.h3,null,"Parse"),"\n",a.createElement(n.p,null,a.createElement(n.code,null,"site-packages/myst_parser/docutils_renderer.py")),"\n",a.createElement(n.p,null,a.createElement(n.code,null,"render_front_matter")," で切り出した文字列を ",a.createElement(n.code,null,"yaml")," でパースしている。\n",a.createElement(n.code,null,"except")," 節で ",a.createElement(n.code,null,"toml")," にリトライさせたら動いた。"),"\n",a.createElement(n.h2,null,"モンキーパッチ"),"\n",a.createElement(n.p,null,"とりあえず ",a.createElement(n.code,null,"conf.py")," にて直接修正する。"),"\n",a.createElement(n.p,null,"https://github.com/ousttrue/ousttrue.github.io/blob/ablog/content/patch.py"),"\n",a.createElement(n.p,null,"後で PR 送ったりできるかな。"),"\n",a.createElement(n.h2,null,"ABlog は何をしているのか"),"\n",a.createElement(n.h3,null,"toctree無しのpost記事"),"\n",a.createElement(n.p,null,"特定の条件で、記事をブログ記事と見做して ",a.createElement(n.code,null,"toctree")," 無しで辿れるようにする。\n記事は、日付やタグでグループ化してくれる。"),"\n",a.createElement(n.p,null,"https://ablog.readthedocs.io/en/latest/manual/posting-and-listing/#posting-with-page-front-matter"),"\n",a.createElement(n.p,null,"パス指定。"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-python"},'blog_post_pattern = "posts/**/*.md"\n')),"\n",a.createElement(n.p,null,"条件。"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-python"},'# .venv/lib/python3.9/site-packages/ablog/post.py\n        if "blogpost" not in metadata and self.env.docname not in self.config.matched_blog_posts:\n            return None\n')),"\n",a.createElement(n.p,null,a.createElement(n.code,null,"frontmatter")," 等から最低限、日付の情報がとれないとトップページから辿る方法が無い状態になる。"),"\n",a.createElement(n.p,null,"あと ",a.createElement(n.code,null,"sphinx")," なのでトップレベルの表題が本文側に必要かも。\n",a.createElement(n.code,null,"frontmatter")," の ",a.createElement(n.code,null,"title")," を反映できると便利そう。"),"\n",a.createElement(n.h3,null,"event: 'doctree-read'"),"\n",a.createElement(n.p,null,"doctree から ",a.createElement(n.code,null,"PostNode")," を集める。"),"\n",a.createElement(n.p,null,a.createElement(n.code,null,"alog/post#process_posts(app, doctree)")),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-python"},'def process_posts(app, doctree):\n    post_nodes = list(doctree.traverse(PostNode))\n    if not post_nodes:\n        # PostNode が必要\n        return\n\n    # 省略\n\n    postinfo = {\n        "docname": docname,\n        "section": section_name,\n        "order": order,\n        "date": date,\n        "update": max(update_dates + [date]),\n        "title": title,\n        "excerpt": excerpt,\n        "tags": node["tags"],\n        "author": node["author"],\n        "category": node["category"],\n        "location": node["location"],\n        "language": node["language"],\n        "redirect": node["redirect"],\n        "nocomments": node["nocomments"],\n        "image": node["image"],\n        "exclude": node["exclude"],\n        "doctree": section_copy,\n    }\n\n    if docname not in env.ablog_posts:\n        env.ablog_posts[docname] = []\n    env.ablog_posts[docname].append(postinfo)\n')),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-python"},"class CheckFrontMatter(SphinxTransform):\n    def apply():\n        pass\n\ndef setup(app):\n    app.add_transform(CheckFrontMatter)    \n")),"\n",a.createElement(n.h3,null,"追加のページ生成"),"\n",a.createElement(n.p,null,a.createElement(n.code,null,"ablog/templates")," に格納されている。"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-python"},"# -- ABlog Sidebars -------------------------------------------------------\n\n# There are seven sidebars you can include in your HTML output.\n# postcard.html provides information regarding the current post.\n# recentposts.html lists most recent five posts. Others provide\n# a link to a archive pages generated for each tag, category, and year.\n# In addition, there are authors.html, languages.html, and locations.html\n# sidebars that link to author and location archive pages.\nhtml_sidebars = {\n    '**': [\n        'about.html',\n        'postcard.html',\n        'navigation.html',\n        'recentposts.html',\n        'tagcloud.html',\n        'categories.html',\n        'archives.html',\n        'searchbox.html',\n    ],\n}\n")),"\n",a.createElement(n.p,null,"これらに対して追加のページ生成を行っている。\n",a.createElement(n.code,null,"genindex.html")," などのように。"),"\n",a.createElement(n.h2,null,"ToDo"),"\n",a.createElement(n.h3,null,"✅ タグが変"),"\n",a.createElement(n.p,null,"toml 由来の tag の処理に失敗している。"),"\n",a.createElement(n.p,null,a.createElement(n.code,null,'["python", "ssg", "sphinx"]')),"\n",a.createElement(n.p,null,"が、"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,a.createElement(n.code,null,'["python"')),"\n",a.createElement(n.li,null,a.createElement(n.code,null,'"ssg"')),"\n",a.createElement(n.li,null,a.createElement(n.code,null,'"sphinx"]')),"\n"),"\n",a.createElement(n.p,null,"になっちゃってる。"),"\n",a.createElement(n.p,null,"https://github.com/sunpy/ablog/pull/119"),"\n",a.createElement(n.p,null,"送ってみた。"),"\n",a.createElement(n.p,null,a.createElement(n.code,null,"v0.10.22")," で修正。👍"),"\n",a.createElement(n.h3,null,"✅ 日付のフォーマット"),"\n",a.createElement(n.p,null,a.createElement(n.code,null,"conf.py")),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-python"},"post_date_format = r'%Y/%m/%d'\npost_date_format_short = r'%Y/%m'\n")),"\n",a.createElement(n.h3,null,"✅ 記事のURL"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"https://zenn.dev/attakei/articles/sphinx-make-dirhtml"),"\n"),"\n",a.createElement(n.h3,null,"✅ 記事タイトルは最初の見出しではなく、frontmatter の title にしたい"),"\n",a.createElement(n.p,null,a.createElement(n.code,null,"MystParser")," を改造した。\nわりと Sphinx わかってきた。\n",a.createElement(n.code,null,"python")," でデバッガがアタッチできるとなんでもできる(慣れ)。"),"\n",a.createElement(n.h3,null,"[ ] tagの表記振れ"),"\n",a.createElement(n.p,null,a.createElement(n.code,null,"c++")," と ",a.createElement(n.code,null,"C++"),"、",a.createElement(n.code,null,"c#")," と ",a.createElement(n.code,null,"csharp")," などをたばねる。"),"\n",a.createElement(n.h2,null,"参考"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,a.createElement(n.a,{href:"https://water2litter.net/pisco/doc/ablog.html"},"Sphinxでブログをしてみよう")),"\n"))}var c=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,l.ah)(),e.components);return n?a.createElement(n,e,a.createElement(r,e)):r(e)};t(8678);function o(e){let{data:n,children:t}=e;return a.createElement(a.Fragment,null,a.createElement("h1",null,n.mdx.frontmatter.title),a.createElement(l.Zo,null,t))}function m(e){return a.createElement(o,e,a.createElement(c,e))}},8678:function(e,n,t){t(7294)},1151:function(e,n,t){t.d(n,{Zo:function(){return o},ah:function(){return r}});var l=t(7294);const a=l.createContext({});function r(e){const n=l.useContext(a);return l.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const c={};function o({components:e,children:n,disableParentContext:t}){let o;return o=t?"function"==typeof e?e({}):e||c:r(e),l.createElement(a.Provider,{value:o},n)}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2021-winter-ablog-md-02cb3eb16454438afe2d.js.map