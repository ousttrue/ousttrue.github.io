{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2021-luajitffi-md-54e856d602b6890cedb5.js","mappings":"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","sources":["webpack:///./content/posts/2021/luajitffi.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    span: \"span\",\n    a: \"a\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"lua による imgui 計画の準備として、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">libclang</code>\"\n    }\n  }), \" によるバインディング生成器を \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">luajit</code>\"\n    }\n  }), \" に移植してみた。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/ousttrue/luajitffi\"\n  }, \"https://github.com/ousttrue/luajitffi\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">libclang</code>\"\n    }\n  }), \" に対してはだいだい動くようになって、自身で生成した \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">FFI</code>\"\n    }\n  }), \" で動作するところまでできた。\\nまた、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">EmmyLua Annotation</code>\"\n    }\n  }), \" もある程度付与できた。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/ousttrue/luajitffi/blob/master/clang/mod.lua\"\n  }, \"https://github.com/ousttrue/luajitffi/blob/master/clang/mod.lua\")), \"\\n\", React.createElement(_components.p, null, \"こいつで、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">imgui.h</code>\"\n    }\n  }), \" から luajit FFI を生成する。\"), \"\\n\", React.createElement(_components.h2, null, \"libclang\"), \"\\n\", React.createElement(_components.p, null, \"c(c++)ヘッダーを \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">clang_visitChildren</code>\"\n    }\n  }), \" により、カーソルのTree としてパースする。\\n今回は、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">CXChildVisit_Recurse</code>\"\n    }\n  }), \" で全部のカーソルをパースすることにした。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"同じカーソルが複数個所に現れうる\"), \"\\n\", React.createElement(_components.li, null, \"循環しうる(Link List ？)\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"がありうることを考慮しておく。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">clang-c/Index.h</code>\"\n    }\n  }), \" は 6000 カーソルくらいなので問題ないが、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Windows.h</code>\"\n    }\n  }), \" とかは 150000 カーソルとか爆発する。\"), \"\\n\", React.createElement(_components.h2, null, \"わりと色んなところで型がネストしていてつらい\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"struct の中は namespace なので何でもあり\"), \"\\n\", React.createElement(_components.li, null, \"anonymous な union や struct のその場定義\"), \"\\n\", React.createElement(_components.li, null, \"typedef struct などのその場定義\"), \"\\n\", React.createElement(_components.li, null, \"関数ポインタのその場定義\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"要するに、Cのコードの書き方によってどのようなカーソル構造になるかのパターンを知っている必要があって、\\nパターン毎に分岐して情報を収集する必要がある。\\nある型のメンバーの情報を集めていると、ネストした別の型情報が現れる場合があるので切り分ける。\"), \"\\n\", React.createElement(_components.h2, null, \"基本的なパターン\"), \"\\n\", React.createElement(_components.p, null, \"FFI では、対象となる関数を起点にその関数が使用するすべての型の定義を取り込む。\\nカーソルはCのTranslationUnitの木構造をあらわしていて、型をあらわしていない。\\nカーソルから頑張って型を得る。\\n型を得られるカーソルは決まっていて、\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">CXCursorType</code>\"\n    }\n  }), \" が宣言Declの系列となる。\"), \"\\n\", React.createElement(_components.p, null, \"TODO\"), \"\\n\", React.createElement(_components.h3, null, \"カーソル FunctionDecl\"), \"\\n\", React.createElement(_components.h3, null, \"カーソル EnumDecl\"), \"\\n\", React.createElement(_components.h3, null, \"カーソル TypedefDecl\"), \"\\n\", React.createElement(_components.h3, null, \"カーソル StructDecl\"), \"\\n\", React.createElement(_components.h3, null, \"Type Pointer\"), \"\\n\", React.createElement(_components.h3, null, \"Type Array\"), \"\\n\", React.createElement(_components.h3, null, \"Type Elaborated\"), \"\\n\", React.createElement(_components.h3, null, \"Type Record\"), \"\\n\", React.createElement(_components.h3, null, \"Type FunctionProto 関数ポインタ pointer => functionproto\"), \"\\n\", React.createElement(_components.h3, null, \"union\"), \"\\n\", React.createElement(_components.h3, null, \"typedef struct\"), \"\\n\", React.createElement(_components.h3, null, \"c++ name mangling\"), \"\\n\", React.createElement(_components.h3, null, \"マクロとの戦い\"), \"\\n\", React.createElement(_components.h2, null, \"luajit ffi\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">ffi.cdef</code>\"\n    }\n  }), \" に素直に定義すればいいので、他の言語の FFI に比べて簡単。\"), \"\\n\", React.createElement(_components.p, null, \"はまり。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">ffi.load</code>\"\n    }\n  }), \" の返り値が GC されると関数ポインタが死ぬ\"), \"\\n\", React.createElement(_components.li, null, \"pointer は \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">ffi.new('TYPE[1]')</code>\"\n    }\n  }), \" のようにサイズ１の array で運用する\"), \"\\n\", React.createElement(_components.li, null, \"tostring と ffi.string は違う\"), \"\\n\", React.createElement(_components.li, null, \"nullptr は nil ?\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"だいたいよきに計らってくれるので、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">rust</code>\"\n    }\n  }), \" の FFI に比べて簡単なのであった。\"), \"\\n\", React.createElement(_components.p, null, \"ひとつだけはまりがあって、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">struct</code>\"\n    }\n  }), \" の値渡しができない場合がある。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"http://wiki.luajit.org/FFI-Callbacks-with-pass-by-value-structs\"\n  }, \"http://wiki.luajit.org/FFI-Callbacks-with-pass-by-value-structs\")), \"\\n\", React.createElement(_components.p, null, \"そういえば、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">rust</code>\"\n    }\n  }), \" でも \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">struct</code>\"\n    }\n  }), \" の値渡しではまった記憶が。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://forum.dlang.org/thread/dkamxcamwttszxwwxttv@forum.dlang.org\"\n  }, \"https://forum.dlang.org/thread/dkamxcamwttszxwwxttv@forum.dlang.org\")), \"\\n\", React.createElement(_components.p, null, \"rust の場合は、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">struct</code>\"\n    }\n  }), \" の値返しが動かなかった。\\nこれ、C の方で pointer 経由で値を返すラッパーを定義する必要があって回避方法はなかった。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">ImVec2 ImGui::GetContentRegionAvail()</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.p, null, \"luajit ffi でもできるか注意が必要だな。\"), \"\\n\", React.createElement(_components.h2, null, \"lfs への依存を FFI した Windows API で置き換える\"), \"\\n\", React.createElement(_components.p, null, \"現状、ファイル操作 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">isExists</code>\"\n    }\n  }), \", \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">mkDir</code>\"\n    }\n  }), \" のために lfs を使っているのだけど、\\nFFI で Windows API にアクセスできるようにしたら lfs 無しにできそう。\\nとなれば luarocks も無しにできるので、 必要なのは luajit.exe だけになる。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2021/luajitffi.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  const frontmatter = data.mdx.frontmatter;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"div\", {\n    className: \"tags-index\"\n  }, frontmatter.tags && frontmatter.tags.length > 0 && frontmatter.tags.map(tag => {\n    return React.createElement(Link, {\n      to: `/tags/${tag}/`,\n      itemProp: \"url\"\n    }, React.createElement(\"button\", null, tag));\n  })), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        tags\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","span","a","h2","ul","li","h3","_provideComponents","components","React","dangerouslySetInnerHTML","__html","href","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","frontmatter","mdx","Layout","title","tags","length","map","tag","Link","to","itemProp","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}