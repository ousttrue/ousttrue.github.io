{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2019-moldstamp-md-cce1cda0b8946fccd313.js","mappings":"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","sources":["webpack:///./content/posts/2019/moldstamp.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    span: \"span\",\n    a: \"a\",\n    h2: \"h2\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"ディスククラッシュで \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">hugo</code>\"\n    }\n  }), \" の管理リポジトリがロストしたので、\\n新しく自分で作ってみることにした。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/ousttrue/moldstamp\"\n  }, \"moldstamp\"), \" と名付ける。\"), \"\\n\", React.createElement(_components.p, null, \"途中まで作ってみた感じだとサイトの構成面に関しては、既存のツールを使うより自作した方がはるかに簡単。ファイルが変換される法則とか、それをカスタマイズする方法をgoogle先生に聞くのではなく自分で作るだけなので。当然、機能は少ないし見た目はしょぼいのだけど、必要最低限を満たすのは難しくなかったり。\"), \"\\n\", React.createElement(_components.p, null, \"以下、開発メモ\"), \"\\n\", React.createElement(_components.h2, null, \"記事\"), \"\\n\", React.createElement(_components.h3, null, \"🤔 フォルダ構成\"), \"\\n\", React.createElement(_components.p, null, \"検討中\"), \"\\n\", React.createElement(_components.p, null, \"src\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"root\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"articles\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"xxx.md: htmlに変換してコピー\"), \"\\n\", React.createElement(_components.li, null, \"xxx.jpg,png: など。そのままコピー\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"templates\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"index.html: jinja2 temlate\"), \"\\n\", React.createElement(_components.li, null, \"article.html: jinja2 temlate\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"dst\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"github.io\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"/index.html\"), \"\\n\", React.createElement(_components.li, null, \"/post/xxx.html\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"🌝 Frontmatter\"), \"\\n\", React.createElement(_components.p, null, \"hugo風にtomlで。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"toml\\\"><pre class=\\\"language-toml\\\"><code class=\\\"language-toml\\\">+++\\n<span class=\\\"token key property\\\">date</span> <span class=\\\"token punctuation\\\">=</span> <span class=\\\"token string\\\">\\\"2012-04-06\\\"</span>\\n<span class=\\\"token key property\\\">tags</span> <span class=\\\"token punctuation\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'nvim'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'python'</span><span class=\\\"token punctuation\\\">]</span>\\n+++</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h3, null, \"🔨 draftの扱い\"), \"\\n\", React.createElement(_components.h3, null, \"🔨 各tag毎の記事一覧\"), \"\\n\", React.createElement(_components.h3, null, \"🔨 各記事の同じタグの記事へのリンク\"), \"\\n\", React.createElement(_components.h3, null, \"🔨 next, prev\"), \"\\n\", React.createElement(_components.h2, null, \"markdown\"), \"\\n\", React.createElement(_components.h3, null, \"🔨 ライブラリ入れ替え？\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">makdown2</code>\"\n    }\n  }), \" から \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">markdown</code>\"\n    }\n  }), \" へ。\"), \"\\n\", React.createElement(_components.h3, null, \"🔨 link-pattern\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/trentm/python-markdown2/wiki/link-patterns\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"わりと誤判定する。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://docs.python.org/ja/3/library/html.parser.html\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"で作り直す\"), \"\\n\", React.createElement(_components.h3, null, \"🌝 toc\"), \"\\n\", React.createElement(_components.h3, null, \"🌝 syntax highlight\"), \"\\n\", React.createElement(_components.p, null, \"pygmentsを使う\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"🌝 markdownのコード部分をシンタックスハイライトする\"), \"\\n\", React.createElement(_components.li, null, \"🌝 cssを生成する\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"jinja2\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"🌝 index\"), \"\\n\", React.createElement(_components.li, null, \"🌝 article\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"🔨 inheritance\"), \"\\n\", React.createElement(_components.p, null, \"ヘッダとフッタを分離するなど\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"http://jinja.pocoo.org/docs/2.10/templates/#template-inheritance\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"css\"), \"\\n\", React.createElement(_components.h3, null, \"🔨 h1, h2, h3...\"), \"\\n\", React.createElement(_components.h3, null, \"🔨 引用\"), \"\\n\", React.createElement(_components.h3, null, \"🔨 ul, li\"), \"\\n\", React.createElement(_components.p, null, \"インデントが深すぎる\"), \"\\n\", React.createElement(_components.h2, null, \"local server\"), \"\\n\", React.createElement(_components.h3, null, \"🌝 livereload\"), \"\\n\", React.createElement(_components.p, null, \"ローカル実験用のlivereload server\"), \"\\n\", React.createElement(_components.h3, null, \"🔨 livereload 無変換のファイル(jpgなど)\"), \"\\n\", React.createElement(_components.h3, null, \"🔨 livereload pygmentsの生成ファイル(css)\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2019/moldstamp.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","span","a","h2","h3","ul","li","_provideComponents","components","React","dangerouslySetInnerHTML","__html","href","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","Layout","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}