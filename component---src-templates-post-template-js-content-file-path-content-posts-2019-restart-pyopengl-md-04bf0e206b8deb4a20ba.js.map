{"version":3,"file":"component---src-templates-post-template-js-content-file-path-content-posts-2019-restart-pyopengl-md-04bf0e206b8deb4a20ba.js","mappings":"+JAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,EAAG,IACHC,KAAM,SACLC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,iBAAkB,KAAMS,EAAAA,cAAoBZ,EAAYI,GAAI,KAAM,YAAa,KAAMQ,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,yFAA0F,KAAMS,EAAAA,cAAoBZ,EAAYK,GAAI,KAAM,UAAW,KAAMO,EAAAA,cAAoBZ,EAAYM,GAAI,KAAM,KAAMM,EAAAA,cAAoBZ,EAAYO,GAAI,KAAM,sCAAuC,KAAMK,EAAAA,cAAoBZ,EAAYO,GAAI,KAAM,uCAAwC,KAAMK,EAAAA,cAAoBZ,EAAYO,GAAI,KAAMK,EAAAA,cAAoBZ,EAAYQ,EAAG,CAC7pBK,KAAM,yDACL,8BAA+B,MAAO,KAAMD,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,+CAAgD,KAAMS,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,wCAAyC,KAAMS,EAAAA,cAAoBZ,EAAYK,GAAI,KAAM,oBAAqB,KAAMO,EAAAA,cAAoBZ,EAAYM,GAAI,KAAM,KAAMM,EAAAA,cAAoBZ,EAAYO,GAAI,KAAMK,EAAAA,cAAoBZ,EAAYQ,EAAG,CACtaK,KAAM,yDACL,yBAA0B,KAAMD,EAAAA,cAAoBZ,EAAYO,GAAI,KAAMK,EAAAA,cAAoBZ,EAAYQ,EAAG,CAC9GK,KAAM,uBACL,wCAAyC,KAAMD,EAAAA,cAAoBZ,EAAYO,GAAI,KAAMK,EAAAA,cAAoBZ,EAAYQ,EAAG,CAC7HK,KAAM,yDACL,0BAA2B,MAAO,KAAMD,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,+BAAgCS,EAAAA,cAAoBZ,EAAYS,KAAM,KAAM,SAAU,MAAOG,EAAAA,cAAoBZ,EAAYS,KAAM,KAAM,UAAW,UAC1O,CAKA,MAJA,SAAoBV,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOe,QAASC,GAAad,OAAOC,OAAO,CAAC,GAAGQ,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWhB,EAAOa,EAAAA,cAAoBd,EAAmBC,IAAUD,EAAkBC,EAC9H,E,8BCnBA,MAAMY,EAAa,CACjBF,KAAMO,IAA2B,IAA1B,SAACC,EAAQ,UAAEC,GAAUF,EAC1B,OAAOE,EAAYN,EAAAA,cAAoBO,EAAAA,EAAsB,CAC3DD,UAAWA,GACVD,GAAYL,EAAAA,cAAoB,OAAQ,KAAMK,EAAS,GAG9D,SAASG,EAAYC,GAAmB,IAAlB,KAACC,EAAI,SAAEL,GAASI,EACpC,MAAME,EAAcD,EAAKE,IAAID,YAC7B,OAAOX,EAAAA,cAAoBa,EAAAA,EAAQ,KAAMb,EAAAA,cAAoB,KAAM,KAAMW,EAAYG,OAAQd,EAAAA,cAAoB,MAAO,CACtHM,UAAW,cACVK,EAAYI,MAAQJ,EAAYI,KAAKC,OAAS,GAAKL,EAAYI,KAAKE,KAAIC,GAClElB,EAAAA,cAAoBmB,EAAAA,GAAM,CAC/BC,GAAI,SAASF,EAAG,IAChBG,SAAU,OACTrB,EAAAA,cAAoB,SAAU,KAAMkB,OACpClB,EAAAA,cAAoBsB,EAAAA,GAAa,CACpCvB,WAAYA,GACXM,GACL,CACe,SAASkB,EAAiBpC,GACvC,OAAOa,EAAAA,cAAoBQ,EAAcrB,EAAOa,EAAAA,cAAoBwB,EAAqBrC,GAC3F,C","sources":["webpack:///./content/posts/2019/restart_pyopengl.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"久しぶりのpyopengl\"), \"\\n\", React.createElement(_components.h2, null, \"PyOpenGL\"), \"\\n\", React.createElement(_components.p, null, \"長らく、python で OpenGL してなかったのだけど再開。\\n最近のpythonであれば、型Annotationを活用していい感じできるような気がしたやってみる。\"), \"\\n\", React.createElement(_components.h3, null, \"glglue\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/ousttrue/glglue\"), \"\\n\", React.createElement(_components.li, null, \"http://pypi.python.org/pypi/glglue/\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://qiita.com/ousttrue/items/07d2a06ab7e3fedf731a\"\n  }, \"PyOpenGLするGUI選びと描画とGUIの分離\")), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"ついでなので、glglue をメンテナンスしてみた。\\ntwine 使った。なるほど。\"), \"\\n\", React.createElement(_components.p, null, \"CreateWindow と OnMouseDown 等はこれに任せた。\"), \"\\n\", React.createElement(_components.h3, null, \"glBufferDataで躓いた\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://qiita.com/ousttrue/items/e343baabdbdd6b7891c4\"\n  }, \"PyOpenGLで描画。VBO周りの混乱\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"/posts/glbufferdata\"\n  }, \"PyOpenGLのglBufferDataにはどんなデータが渡せるのか\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://qiita.com/ousttrue/items/44a119e62aea1f12c5af\"\n  }, \"pyOpenGLのglBufferData\")), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"調べ直して、記事をメンテナンスした。\\n結局のところ、 \", React.createElement(_components.code, null, \"bytes\"), \" か \", React.createElement(_components.code, null, \"ctypes\"), \" が使える。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2019/restart_pyopengl.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  const frontmatter = data.mdx.frontmatter;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"div\", {\n    className: \"tags-index\"\n  }, frontmatter.tags && frontmatter.tags.length > 0 && frontmatter.tags.map(tag => {\n    return React.createElement(Link, {\n      to: `/tags/${tag}/`,\n      itemProp: \"url\"\n    }, React.createElement(\"button\", null, tag));\n  })), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        tags\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h2","h3","ul","li","a","code","_provideComponents","components","React","href","wrapper","MDXLayout","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","frontmatter","mdx","Layout","title","tags","length","map","tag","Link","to","itemProp","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}