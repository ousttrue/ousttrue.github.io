{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2022-0331-term-md-a708b64e26823890d1bd.js","mappings":"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","sources":["webpack:///./content/posts/2022/0331-term.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    h2: \"h2\",\n    p: \"p\",\n    span: \"span\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"term周りの更新\"), \"\\n\", React.createElement(_components.h2, null, \"terminal emulator を選定・・・\"), \"\\n\", React.createElement(_components.p, null, \"主に3つの動作環境、\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Windows</code>\"\n    }\n  }), \", \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Windows wsl</code>\"\n    }\n  }), \", \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Ubuntu-20.04</code>\"\n    }\n  }), \" があってtoolや設定をある程度共通にしたいということで試行錯誤していた。\\n他に \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">ssh経由</code>\"\n    }\n  }), \", \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Windows wslg</code>\"\n    }\n  }), \" もあるよ。\"), \"\\n\", React.createElement(_components.h3, null, \"wezterm\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">wezterm</code>\"\n    }\n  }), \" が有望であることがわかった\"), \"\\n\", React.createElement(_components.p, null, \"|                 | font fallback | multiplexer | emoji | nerdfnt | graphics escape      |\\n|-----------------|---------------|-------------|-------|---------|----------------------|\\n| wezterm windows | ✅            | ✅          | color | ✅      | conpty issue         |\\n| wezterm wsl     | ✅            | ✅          | color | ✅      | conpty issue         |\\n| wezterm ssh     | ✅            | ✅          | color | ✅      | sixel, kitty, iterm2 |\\n| wezterm linux   | ✅            | ✅          | color | ✅      | sixel, kitty, iterm2 |\"), \"\\n\", React.createElement(_components.p, null, \"conpty を通すときに escape sequence が加工されるとかで、\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">sixel</code>\"\n    }\n  }), \", \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">kitty</code>\"\n    }\n  }), \", \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">iterm2</code>\"\n    }\n  }), \" いずれのプロトコルもうまくうごかなかった。\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">iterm2</code>\"\n    }\n  }), \" は絵はでるのだけど場所がずれるという惜しい挙動・・・。\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/wez/wezterm/issues/1236\"), \"\\n\", React.createElement(_components.p, null, \"SSH 経由で WSL することで対処する。\"), \"\\n\", React.createElement(_components.h3, null, \"wslg(xtermなど)\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">xterm</code>\"\n    }\n  }), \" は軽快できれいに表示できるので良かった。フォントのフォールバックができないぽいのが弱点。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">urxvt</code>\"\n    }\n  }), \" は、\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">NerdFonts</code>\"\n    }\n  }), \" がうまくでなかった。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">st</code>\"\n    }\n  }), \" (simple term) もフォントまわりでつまづきだったかな。\"), \"\\n\", React.createElement(_components.p, null, \"|             | font fallback | multiplexer | emoji | nerdfnt | graphics escape |\\n|-------------|---------------|-------------|-------|---------|-----------------|\\n| xterm wslg  |               |             | mono  | ✅      | sixel           |\\n| mlterm wslg | ✅            | mlterm-con  | color | ✅      | sixel           |\"), \"\\n\", React.createElement(_components.p, null, \"mlterm はフォント周りの設定が強力でよかった。\\n文字セットごとにフォントを個別に指定できるので、フォントを合成せずともばらのままでよい。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">mlterm-con</code>\"\n    }\n  }), \" という multiplexer があり sixel support があるらしい。\\n自前ビルドが必要そう(apt には含まれていないぽい)。\"), \"\\n\", React.createElement(_components.p, null, \"wslgは、頻繁にキーボードが押しっぱなしになったり不安定なような・・・\\nhttps://github.com/microsoft/wslg/issues/207\\nなおっているけ、リリースに時間がかかりそう？\"), \"\\n\", React.createElement(_components.h3, null, \"libvte\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">libvte</code>\"\n    }\n  }), \" 系のterm。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">gnome-terminal</code>\"\n    }\n  }), \", \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">xfce4-term</code>\"\n    }\n  }), \" など。\"), \"\\n\", React.createElement(_components.h3, null, \"gpu rendering\"), \"\\n\", React.createElement(_components.p, null, \"GPUレンダリングで \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">araclitty</code>\"\n    }\n  }), \", \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">kitty</code>\"\n    }\n  }), \" そして \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">wezterm</code>\"\n    }\n  }), \" がある。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">wezterm</code>\"\n    }\n  }), \" が \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Windows</code>\"\n    }\n  }), \" をサポートしていて、フォントのレンダリング、タブのサポートと総合的に良い。\"), \"\\n\", React.createElement(_components.h3, null, \"その他\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"tabby\"), \"\\n\", React.createElement(_components.li, null, \"RLogin\"), \"\\n\", React.createElement(_components.li, null, \"ConEmu\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"など。\"), \"\\n\", React.createElement(_components.h2, null, \"要件\"), \"\\n\", React.createElement(_components.h3, null, \"日本語、中文、絵文字, NerdFonts を同時にいい感じに表示したい\"), \"\\n\", React.createElement(_components.p, null, \"となるとすべてを含むひとつのフォントより、主になるフォントを設定してそれにグリフが含まれなかったら、他のフォントにフォールバックする挙動をしてもらう方が便利。\\nいくつかのフォントを試してみたのだけど、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">HackGenNerd Console</code>\"\n    }\n  }), \" が良かった。\\nで、中文の足りない漢字を \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">更紗ゴシックフォント</code>\"\n    }\n  }), \" にフォールバックするという組み合わせ。\\nがんばって完璧な合成フォントを自作すればいいのだけど、よくわからないので、 複数フォントのフォールバック機能が必要。\"), \"\\n\", React.createElement(_components.p, null, \"かつて w3m で表示が乱れることで苦労した \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">ambigous width</code>\"\n    }\n  }), \" 問題はあまり気にならなくなっていた。\\nなんか、表示は２カラム使うが、データ上は1カラムと見なすような扱いになっていて、\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">X</code>\"\n    }\n  }), \" につづいて \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\"> </code>\"\n    }\n  }), \" で隙間を開けることで正しく表示できるようだ。\\nNerdFonts や 絵文字 はそのようになっている？\"), \"\\n\", React.createElement(_components.h3, null, \"エスケープシーケンスで画像を表示したい\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">sixel</code>\"\n    }\n  }), \" とか \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">kitty</code>\"\n    }\n  }), \" とか \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">iterm2</code>\"\n    }\n  }), \" による画像表示。\"), \"\\n\", React.createElement(_components.p, null, \"|                        | graphics            |\\n|------------------------|---------------------|\\n| Windows Native(conpty) |                     |\\n| wsltty                 | sixel               |\\n| xterm wslg             | sixel               |\\n| wezterm linux          | sixel, kityt ,iterm2 |\"), \"\\n\", React.createElement(_components.p, null, \"という感じになった。\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">wsltty</code>\"\n    }\n  }), \" は \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">conpty</code>\"\n    }\n  }), \" ではなくて \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">winpty</code>\"\n    }\n  }), \" なので例外的に \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">sixel</code>\"\n    }\n  }), \" が通過できるらしい。\\n動く環境でも \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">tmux</code>\"\n    }\n  }), \" を挟むと動かなくなる。\\n代わりに terminal emulator の方で multiplexer(タブ機能) する必要が発生。\"), \"\\n\", React.createElement(_components.h2, null, \"まとめ\"), \"\\n\", React.createElement(_components.p, null, \"総合力で wezterm が強い。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"あまり頑張らなくてもフォントがうまく設定できる(cjk, NerdFonts, 絵文字)\"), \"\\n\", React.createElement(_components.li, null, \"multiplexer 機能あり\"), \"\\n\", React.createElement(_components.li, null, \"sixel, kitty, iterm2 プロトコルで画像を表示できる\"), \"\\n\", React.createElement(_components.li, null, \"Windows でも動く\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"参考\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://zenn.dev/yutakatay/articles/wezterm-intro\"\n  }, \"alacritty+tmuxもいいけど、weztermがすごい件\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://wezfurlong.org/wezterm/\"\n  }, \"wezterm\")), \"\\n\", React.createElement(_components.li, null, \"https://sw.kovidgoyal.net/kitty/graphics-protocol/\"), \"\\n\", React.createElement(_components.li, null, \"OSC1337 https://iterm2.com/documentation-images.html\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://unrealman.hatenablog.com/entry/tty-mintty-winpty\"\n  }, \"【Git for Windows】tty/mintty/winptyとは何なのか？【Gitbash】\")), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2022/0331-term.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","h2","p","span","h3","ul","li","a","_provideComponents","components","React","dangerouslySetInnerHTML","__html","href","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","Layout","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}