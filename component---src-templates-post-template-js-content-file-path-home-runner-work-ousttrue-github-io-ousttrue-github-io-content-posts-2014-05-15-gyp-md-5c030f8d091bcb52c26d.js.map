{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2014-05-15-gyp-md-5c030f8d091bcb52c26d.js","mappings":"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","sources":["webpack:///./content/posts/2014/05/15/gyp.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    blockquote: \"blockquote\",\n    br: \"br\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"python製のビルドツールgypを使ってみる\\ngyp(Generate Your Projects) は、\\npythonで記述されたプロジェクト生成ツールで設定からVC向けプロジェクトや、GCC向けMakefileを生成するツールである。\\nchromeやnode.jsのビルドツールとして採用されているそうな。\\n機能的にはpremake4やcmakeと同じ範囲をカバーするがそれぞれ以下のような問題があった。\"), \"\\n\", React.createElement(_components.p, null, \"premake4はわりと気に入っているのだが布教困難。luaで宣言的に記述するのが分かりづらい\\ncmakeはcmake語が解読不能でちょっとしたプロジェクトのカスタマイズが困難すぎる(OpenCVとかのことだ)\"), \"\\n\", React.createElement(_components.p, null, \"そこで、python製のgypを試してみた。\\ngyp導入\\n環境は、Windows7 + python3。\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"python setup.py install\\n:\\n中略\\n:\\nSyntaxError: invalid syntax\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"File \\\"c:\\\\python33\\\\lib\\\\site-packages\\\\gyp-0.1-py3.3.egg\\\\gyp\\\\generator\\\\ninja.py\\\",\\nline 475\\nprint \\\"Warning: Actions/rules writing object files don't work with \\\" \", React.createElement(_components.br), \"\\n\", \"^\\nSyntaxError: invalid syntax\"), \"\\n\", React.createElement(_components.p, null, \"File \\\"c:\\\\python33\\\\lib\\\\site-packages\\\\gyp-0.1-py3.3.egg\\\\gyp\\\\generator\\\\xcode.py\\\",\\nline 126\\nexcept OSError, e:\\n^\\nSyntaxError: invalid syntax\"), \"\\n\", React.createElement(_components.p, null, \"python3非対応だった。まぁpython2で。\\nとりあえずc++の”hello world”をビルドするところから\\nhello_gyp\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"main.cpp\"), \"\\n\", React.createElement(_components.li, null, \"projects.gyp\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"main.cpp\\nprojects.gyp\\nプロジェクト生成。\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"gyp projects.gyp --depth .\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"これで、projects.slnとhello_gyp.vcxprojが生成された。\\nhello_gyp\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"main.cpp\"), \"\\n\", React.createElement(_components.li, null, \"projects.gyp\"), \"\\n\", React.createElement(_components.li, null, \"projects.sln(generated)\"), \"\\n\", React.createElement(_components.li, null, \"hello_gyp.vcxproj(generated)\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"vc2010 express editionでprojects.slnを開いてビルドできた。\\nhello_gyp\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"main.cpp\"), \"\\n\", React.createElement(_components.li, null, \"projects.gyp\"), \"\\n\", React.createElement(_components.li, null, \"projects.sln\"), \"\\n\", React.createElement(_components.li, null, \"hello_gyp.vcxproj\"), \"\\n\", React.createElement(_components.li, null, \"Default/hello_gyp.exe(build)\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"構成がDebug,\\nReleaseではなくDefault一本立てなのでカスタマイズの必要あり。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2014/05/15/gyp.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","blockquote","br","ul","li","_provideComponents","components","React","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}