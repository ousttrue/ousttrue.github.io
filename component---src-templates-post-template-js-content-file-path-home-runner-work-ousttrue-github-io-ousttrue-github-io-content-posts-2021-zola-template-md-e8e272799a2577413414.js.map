{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2021-zola-template-md-e8e272799a2577413414.js","mappings":"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","sources":["webpack:///./content/posts/2021/zola_template.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    h1: \"h1\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"サイト整備のメモ。共通化して部品を少なくした。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"zola 設定\"), \"\\n\", React.createElement(_components.li, null, \"template 構築\"), \"\\n\", React.createElement(_components.li, null, \"場合によっては zola の改造\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"共通\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"[x] title\"), \"\\n\", React.createElement(_components.li, null, \"[x] 日付\"), \"\\n\", React.createElement(_components.li, null, \"[x] 見出しの見た目\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"Markdown\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"[x] url 文字列を自動でリンクにしたい。markdownで \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">&lt;url></code>\"\n    }\n  }), \" と記述するべし\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"20210716: masonry 入れてみた\"), \"\\n\", React.createElement(_components.p, null, \"https://masonry.desandro.com/\"), \"\\n\", React.createElement(_components.h1, null, \"20210717: TOC\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"[x] 目次\\nだいたいできた。\\ngithub が増えすぎてカオスなので不要なものを整理せねば・・・\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"20210725: 色\"), \"\\n\", React.createElement(_components.p, null, \"作業用に区域ごとに色分けしていたのをやめて、地味な色に変更。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"scss\\\"><pre class=\\\"language-scss\\\"><code class=\\\"language-scss\\\"><span class=\\\"token keyword\\\">@mixin</span> <span class=\\\"token selector\\\">MAIN_COLOR </span><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">color</span><span class=\\\"token punctuation\\\">:</span> black<span class=\\\"token punctuation\\\">;</span>\\n    background-color white<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"のような方法を試してみた。\"), \"\\n\", React.createElement(_components.h1, null, \"20210725: TOC 固定\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"css\\\"><pre class=\\\"language-css\\\"><code class=\\\"language-css\\\"><span class=\\\"token property\\\">position</span><span class=\\\"token punctuation\\\">:</span> fixed<span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h1, null, \"20210725: 画像を入れれるようにしてみた\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">page.assets</code>\"\n    }\n  }), \" や \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">section.assets</code>\"\n    }\n  }), \" に想定した形で入ってこないので、\\n無理やりパスを操作したのだが、さすがにこれはちょっと・・・\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"html\\\"><pre class=\\\"language-html\\\"><code class=\\\"language-html\\\">  {% if page.extra.image %}\\n  {% set s = page.relative_path | split(pat=\\\"/\\\") %}\\n  {% set len = s | length %}\\n  {% set sl = s | slice(start=0, end=len-1) %}\\n  {% set j = sl | join(sep=\\\"/\\\") %}\\n  {% set image_url = resize_image(path=j ~ \\\"/\\\" ~ page.extra.image, width=600, op=\\\"fit_width\\\") %}\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>img</span> <span class=\\\"token attr-name\\\">src</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>{{ image_url }}<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token attr-name\\\">\\\"</span><span class=\\\"token punctuation\\\">></span></span>\\n  {% endif %}</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"なんか、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">zola</code>\"\n    }\n  }), \" がわりと融通が利かないことが分かってきた。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">resize_image</code>\"\n    }\n  }), \" で明示的に画像を加工するという設計は理解。なるほど。\\n当方、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">md</code>\"\n    }\n  }), \" ファイルと同じフォルダに \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">png, jpg</code>\"\n    }\n  }), \" を放り込んでそれを記事内で使いたいのです。\\n画像を中央の \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">static</code>\"\n    }\n  }), \" フォルダにまとめて入れておくの嫌なので。\\n改造して page.assets に放り込んでしまおう。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">hugo</code>\"\n    }\n  }), \" ほど多機能複雑でなく、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">zola</code>\"\n    }\n  }), \" ほど strict でない、そんなほどほどなツールが望まれる。\"), \"\\n\", React.createElement(_components.h1, null, \"20210815: pagination\"), \"\\n\", React.createElement(_components.p, null, \"https://www.getzola.org/documentation/templates/pagination/\"), \"\\n\", React.createElement(_components.p, null, \"ドキュメントよりもソースを読もう w\\n5分もかからぬ。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"html\\\"><pre class=\\\"language-html\\\"><code class=\\\"language-html\\\">      {% if paginator.current_index == 1 %}</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h1, null, \"20210829: 内部リンク記法\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">.md</code>\"\n    }\n  }), \" の記法。\"), \"\\n\", React.createElement(_components.p, null, \"https://www.getzola.org/documentation/content/linking/#internal-links\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">[NvimTexture](@/posts/2021/summer/nvimtexture.md)</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">@</code>\"\n    }\n  }), \" と \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">.md</code>\"\n    }\n  }), \" が必要。\"), \"\\n\", React.createElement(_components.h1, null, \"20210831: search\"), \"\\n\", React.createElement(_components.p, null, \"https://www.getzola.org/documentation/content/search/\"), \"\\n\", React.createElement(_components.p, null, \"設定は \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">build_search_index = true</code>\"\n    }\n  }), \" するだけなのだが、\\ntemplate 作るのは大変。\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/aaranxu/adidoks から部品を頂いてきた。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2021/zola_template.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","ul","li","h1","span","_provideComponents","components","React","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","Layout","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}