"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1052],{4703:function(n,a,e){e.r(a),e.d(a,{default:function(){return g}});var t=e(1151),s=e(7294);function l(n){const a=Object.assign({h1:"h1",p:"p",a:"a",span:"span",h2:"h2",ul:"ul",li:"li",h3:"h3"},(0,t.ah)(),n.components);return s.createElement(s.Fragment,null,s.createElement(a.h1,null,"ABlog にシステムを変更"),"\n",s.createElement(a.p,null,s.createElement(a.a,{href:"https://getnikola.com/"},"nikola")," は使いこなせなくて短命に終わってしまった。\n",s.createElement(a.a,{href:"https://pydoit.org/"},"doit")," は面白いと思うのだが。"),"\n",s.createElement(a.p,null,"ということで、 ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">sphinx</code>'}})," プラグインの ",s.createElement(a.a,{href:"https://ablog.readthedocs.io/en/latest/"},"ABlog")," です。"),"\n",s.createElement(a.h2,null,"はまり1: Sphinx のキャッシュ"),"\n",s.createElement(a.p,null,s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">python -m sphinx content build</code>'}})," にデバッガをアタッチして試行錯誤するのだけど、\nキャッシュされて処理されなかった。"),"\n",s.createElement(a.p,null,s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">python -m sphinx content build -E -v</code>'}})," とする。"),"\n",s.createElement(a.ul,null,"\n",s.createElement(a.li,null,"-E: 全処理(キャッシュを使わない)"),"\n",s.createElement(a.li,null,"-v: 詳細メッセージ"),"\n"),"\n",s.createElement(a.h2,null,"はまり2: ablog が timezone の有無で日付の比較に失敗する"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">can\'t compare offset-naive and offset-aware datetimes</code></pre></div>'}}),"\n",s.createElement(a.p,null,"これは、既存記事の ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">frontmatter</code>'}})," の日付に ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">timezone</code>'}})," が付いていると\n日付の比較に失敗する。"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="python"><pre class="language-python"><code class="language-python"><span class="token comment"># site-packages/ablog/blog.py:382</span>\nself<span class="token punctuation">.</span>date <span class="token operator">=</span> date <span class="token operator">=</span> info<span class="token punctuation">[</span><span class="token string">"date"</span><span class="token punctuation">]</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span>tzinfo<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",s.createElement(a.p,null,"と対処した。"),"\n",s.createElement(a.h2,null,"はまり3: myst-parser の toml frontmatter 対応"),"\n",s.createElement(a.p,null,s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">myst-parser</code>'}})," が ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">---</code>'}})," による ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">yaml</code>'}})," 形式の ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">frontmatter</code>'}})," にしか対応していない様子。\n",s.createElement(a.a,{href:"https://gohugo.io/content-management/front-matter/"},"hugo の frontmatter")," にある ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">toml</code>'}})," 様式に対応するべく改造したい。"),"\n",s.createElement(a.h3,null,"切り出し"),"\n",s.createElement(a.p,null,"どこで処理しているのか探索が難航した。"),"\n",s.createElement(a.p,null,s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">site-packages/mdit_py_plugins/front_matter/index.py</code>'}}),"\nで処理している。"),"\n",s.createElement(a.h3,null,"Parse"),"\n",s.createElement(a.p,null,s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">site-packages/myst_parser/docutils_renderer.py</code>'}})),"\n",s.createElement(a.p,null,s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">render_front_matter</code>'}})," で切り出した文字列を ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">yaml</code>'}})," でパースしている。\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">except</code>'}})," 節で ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">toml</code>'}})," にリトライさせたら動いた。"),"\n",s.createElement(a.h2,null,"モンキーパッチ"),"\n",s.createElement(a.p,null,"とりあえず ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">conf.py</code>'}})," にて直接修正する。"),"\n",s.createElement(a.p,null,s.createElement(a.a,{href:"https://github.com/ousttrue/ousttrue.github.io/blob/ablog/content/patch.py"},"https://github.com/ousttrue/ousttrue.github.io/blob/ablog/content/patch.py")),"\n",s.createElement(a.p,null,"後で PR 送ったりできるかな。"),"\n",s.createElement(a.h2,null,"ABlog は何をしているのか"),"\n",s.createElement(a.h3,null,"toctree無しのpost記事"),"\n",s.createElement(a.p,null,"特定の条件で、記事をブログ記事と見做して ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">toctree</code>'}})," 無しで辿れるようにする。\n記事は、日付やタグでグループ化してくれる。"),"\n",s.createElement(a.p,null,s.createElement(a.a,{href:"https://ablog.readthedocs.io/en/latest/manual/posting-and-listing/#posting-with-page-front-matter"},"https://ablog.readthedocs.io/en/latest/manual/posting-and-listing/#posting-with-page-front-matter")),"\n",s.createElement(a.p,null,"パス指定。"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="python"><pre class="language-python"><code class="language-python">blog_post_pattern <span class="token operator">=</span> <span class="token string">"posts/**/*.md"</span></code></pre></div>'}}),"\n",s.createElement(a.p,null,"条件。"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="python"><pre class="language-python"><code class="language-python"><span class="token comment"># .venv/lib/python3.9/site-packages/ablog/post.py</span>\n        <span class="token keyword">if</span> <span class="token string">"blogpost"</span> <span class="token keyword">not</span> <span class="token keyword">in</span> metadata <span class="token keyword">and</span> self<span class="token punctuation">.</span>env<span class="token punctuation">.</span>docname <span class="token keyword">not</span> <span class="token keyword">in</span> self<span class="token punctuation">.</span>config<span class="token punctuation">.</span>matched_blog_posts<span class="token punctuation">:</span>\n            <span class="token keyword">return</span> <span class="token boolean">None</span></code></pre></div>'}}),"\n",s.createElement(a.p,null,s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">frontmatter</code>'}})," 等から最低限、日付の情報がとれないとトップページから辿る方法が無い状態になる。"),"\n",s.createElement(a.p,null,"あと ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">sphinx</code>'}})," なのでトップレベルの表題が本文側に必要かも。\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">frontmatter</code>'}})," の ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">title</code>'}})," を反映できると便利そう。"),"\n",s.createElement(a.h3,null,"event: 'doctree-read'"),"\n",s.createElement(a.p,null,"doctree から ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">PostNode</code>'}})," を集める。"),"\n",s.createElement(a.p,null,s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">alog/post#process_posts(app, doctree)</code>'}})),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="python"><pre class="language-python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">process_posts</span><span class="token punctuation">(</span>app<span class="token punctuation">,</span> doctree<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    post_nodes <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>doctree<span class="token punctuation">.</span>traverse<span class="token punctuation">(</span>PostNode<span class="token punctuation">)</span><span class="token punctuation">)</span>\n    <span class="token keyword">if</span> <span class="token keyword">not</span> post_nodes<span class="token punctuation">:</span>\n        <span class="token comment"># PostNode が必要</span>\n        <span class="token keyword">return</span>\n\n    <span class="token comment"># 省略</span>\n\n    postinfo <span class="token operator">=</span> <span class="token punctuation">{</span>\n        <span class="token string">"docname"</span><span class="token punctuation">:</span> docname<span class="token punctuation">,</span>\n        <span class="token string">"section"</span><span class="token punctuation">:</span> section_name<span class="token punctuation">,</span>\n        <span class="token string">"order"</span><span class="token punctuation">:</span> order<span class="token punctuation">,</span>\n        <span class="token string">"date"</span><span class="token punctuation">:</span> date<span class="token punctuation">,</span>\n        <span class="token string">"update"</span><span class="token punctuation">:</span> <span class="token builtin">max</span><span class="token punctuation">(</span>update_dates <span class="token operator">+</span> <span class="token punctuation">[</span>date<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n        <span class="token string">"title"</span><span class="token punctuation">:</span> title<span class="token punctuation">,</span>\n        <span class="token string">"excerpt"</span><span class="token punctuation">:</span> excerpt<span class="token punctuation">,</span>\n        <span class="token string">"tags"</span><span class="token punctuation">:</span> node<span class="token punctuation">[</span><span class="token string">"tags"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token string">"author"</span><span class="token punctuation">:</span> node<span class="token punctuation">[</span><span class="token string">"author"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token string">"category"</span><span class="token punctuation">:</span> node<span class="token punctuation">[</span><span class="token string">"category"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token string">"location"</span><span class="token punctuation">:</span> node<span class="token punctuation">[</span><span class="token string">"location"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token string">"language"</span><span class="token punctuation">:</span> node<span class="token punctuation">[</span><span class="token string">"language"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token string">"redirect"</span><span class="token punctuation">:</span> node<span class="token punctuation">[</span><span class="token string">"redirect"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token string">"nocomments"</span><span class="token punctuation">:</span> node<span class="token punctuation">[</span><span class="token string">"nocomments"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token string">"image"</span><span class="token punctuation">:</span> node<span class="token punctuation">[</span><span class="token string">"image"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token string">"exclude"</span><span class="token punctuation">:</span> node<span class="token punctuation">[</span><span class="token string">"exclude"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n        <span class="token string">"doctree"</span><span class="token punctuation">:</span> section_copy<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">if</span> docname <span class="token keyword">not</span> <span class="token keyword">in</span> env<span class="token punctuation">.</span>ablog_posts<span class="token punctuation">:</span>\n        env<span class="token punctuation">.</span>ablog_posts<span class="token punctuation">[</span>docname<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n    env<span class="token punctuation">.</span>ablog_posts<span class="token punctuation">[</span>docname<span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>postinfo<span class="token punctuation">)</span></code></pre></div>'}}),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="python"><pre class="language-python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">CheckFrontMatter</span><span class="token punctuation">(</span>SphinxTransform<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">def</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n        <span class="token keyword">pass</span>\n\n<span class="token keyword">def</span> <span class="token function">setup</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    app<span class="token punctuation">.</span>add_transform<span class="token punctuation">(</span>CheckFrontMatter<span class="token punctuation">)</span>    </code></pre></div>'}}),"\n",s.createElement(a.h3,null,"追加のページ生成"),"\n",s.createElement(a.p,null,s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">ablog/templates</code>'}})," に格納されている。"),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="python"><pre class="language-python"><code class="language-python"><span class="token comment"># -- ABlog Sidebars -------------------------------------------------------</span>\n\n<span class="token comment"># There are seven sidebars you can include in your HTML output.</span>\n<span class="token comment"># postcard.html provides information regarding the current post.</span>\n<span class="token comment"># recentposts.html lists most recent five posts. Others provide</span>\n<span class="token comment"># a link to a archive pages generated for each tag, category, and year.</span>\n<span class="token comment"># In addition, there are authors.html, languages.html, and locations.html</span>\n<span class="token comment"># sidebars that link to author and location archive pages.</span>\nhtml_sidebars <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token string">\'**\'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>\n        <span class="token string">\'about.html\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'postcard.html\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'navigation.html\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'recentposts.html\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'tagcloud.html\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'categories.html\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'archives.html\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'searchbox.html\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",s.createElement(a.p,null,"これらに対して追加のページ生成を行っている。\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">genindex.html</code>'}})," などのように。"),"\n",s.createElement(a.h2,null,"ToDo"),"\n",s.createElement(a.h3,null,"✅ タグが変"),"\n",s.createElement(a.p,null,"toml 由来の tag の処理に失敗している。"),"\n",s.createElement(a.p,null,s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">["python", "ssg", "sphinx"]</code>'}})),"\n",s.createElement(a.p,null,"が、"),"\n",s.createElement(a.ul,null,"\n",s.createElement(a.li,null,s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">["python"</code>'}})),"\n",s.createElement(a.li,null,s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">"ssg"</code>'}})),"\n",s.createElement(a.li,null,s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">"sphinx"]</code>'}})),"\n"),"\n",s.createElement(a.p,null,"になっちゃってる。"),"\n",s.createElement(a.p,null,s.createElement(a.a,{href:"https://github.com/sunpy/ablog/pull/119"},"https://github.com/sunpy/ablog/pull/119")),"\n",s.createElement(a.p,null,"送ってみた。"),"\n",s.createElement(a.p,null,s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">v0.10.22</code>'}})," で修正。👍"),"\n",s.createElement(a.h3,null,"✅ 日付のフォーマット"),"\n",s.createElement(a.p,null,s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">conf.py</code>'}})),"\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="python"><pre class="language-python"><code class="language-python">post_date_format <span class="token operator">=</span> <span class="token string">r\'%Y/%m/%d\'</span>\npost_date_format_short <span class="token operator">=</span> <span class="token string">r\'%Y/%m\'</span></code></pre></div>'}}),"\n",s.createElement(a.h3,null,"✅ 記事のURL"),"\n",s.createElement(a.ul,null,"\n",s.createElement(a.li,null,s.createElement(a.a,{href:"https://zenn.dev/attakei/articles/sphinx-make-dirhtml"},"https://zenn.dev/attakei/articles/sphinx-make-dirhtml")),"\n"),"\n",s.createElement(a.h3,null,"✅ 記事タイトルは最初の見出しではなく、frontmatter の title にしたい"),"\n",s.createElement(a.p,null,s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">MystParser</code>'}})," を改造した。\nわりと Sphinx わかってきた。\n",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">python</code>'}})," でデバッガがアタッチできるとなんでもできる(慣れ)。"),"\n",s.createElement(a.h3,null,"[ ] tagの表記振れ"),"\n",s.createElement(a.p,null,s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">c++</code>'}})," と ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">C++</code>'}}),"、",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">c#</code>'}})," と ",s.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">csharp</code>'}})," などをたばねる。"),"\n",s.createElement(a.h2,null,"参考"),"\n",s.createElement(a.ul,null,"\n",s.createElement(a.li,null,s.createElement(a.a,{href:"https://water2litter.net/pisco/doc/ablog.html"},"Sphinxでブログをしてみよう")),"\n"))}var p=function(n){void 0===n&&(n={});const{wrapper:a}=Object.assign({},(0,t.ah)(),n.components);return a?s.createElement(a,n,s.createElement(l,n)):l(n)},o=e(8678),c=e(1883),u=e(8838);const r={code:n=>{let{children:a,className:e}=n;return e?s.createElement(u.Z,{className:e},a):s.createElement("code",null,a)}};function i(n){let{data:a,children:e}=n;const l=a.mdx.frontmatter;return s.createElement(o.Z,null,s.createElement("h1",null,l.title),s.createElement("div",{className:"tags-index"},l.tags&&l.tags.length>0&&l.tags.map((n=>s.createElement(c.rU,{to:"/tags/"+n+"/",itemProp:"url"},s.createElement("button",null,n))))),s.createElement(t.Zo,{components:r},e))}function g(n){return s.createElement(i,n,s.createElement(p,n))}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2021-winter-ablog-md-04cc234b1730a3e4f364.js.map