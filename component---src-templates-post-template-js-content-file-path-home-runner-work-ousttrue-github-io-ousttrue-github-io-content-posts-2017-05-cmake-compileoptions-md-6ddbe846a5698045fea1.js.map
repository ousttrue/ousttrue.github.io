{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2017-05-cmake-compileoptions-md-6ddbe846a5698045fea1.js","mappings":"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","sources":["webpack:///./content/posts/2017/05/cmake_compileoptions.md","webpack:///./src/templates/post-template.js","webpack:///./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    h1: \"h1\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"すぐ忘れるのでここをチートシート化しよう。\"), \"\\n\", React.createElement(_components.p, null, \"構成\\nsolution\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-cmake\"\n  }, \"CMAKE_MINIMUM_REQUIRED(VERSION 2.8)\\nPROJECT(hello) # .sln\\n\")), \"\\n\", React.createElement(_components.p, null, \"subdirectory\"), \"\\n\", React.createElement(_components.p, null, \"https://cmake.org/cmake/help/latest/command/add_subdirectory.html\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-cmake\"\n  }, \"ADD_SUBDIRECTORY(src)\\n\")), \"\\n\", React.createElement(_components.h1, null, \"もしくは\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-cmake\"\n  }, \"SUBDIRS(FOO BAR HOGE FUGA)\\n\")), \"\\n\", React.createElement(_components.p, null, \"target\\nexe\"), \"\\n\", React.createElement(_components.p, null, \"https://cmake.org/cmake/help/latest/command/add_executable.html\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-cmake\"\n  }, \"ADD_EXECUTABLE(hello\\n    main.cpp\\n    renderer.cpp\\n    scene.cpp\\n    )\\n\")), \"\\n\", React.createElement(_components.p, null, \"file を集める例\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-cmake\"\n  }, \"FILE(GLOB SRC\\n    *.cpp\\n    *.h\\n    )\\nADD_EXECUTABLE(hello\\n    ${SRC}\\n    )\\n\")), \"\\n\", React.createElement(_components.h1, null, \"fo winmain\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-cmake\"\n  }, \"ADD_EXECUTABLE(hello_windows WIN32\\n    ${SRC}\\n    )\\n\")), \"\\n\", React.createElement(_components.p, null, \"static lib\"), \"\\n\", React.createElement(_components.p, null, \"https://cmake.org/cmake/help/latest/command/add_library.html\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-cmake\"\n  }, \"ADD_LIBRARY(renderer STATIC\\n    renderer.cpp\\n    )\\n\")), \"\\n\", React.createElement(_components.p, null, \"dll\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-cmake\"\n  }, \"ADD_LIBRARY(renderer SHARED\\n    renderer.cpp\\n    )\\n\")), \"\\n\", React.createElement(_components.p, null, \"compile\\ncompiler options\\n全体\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-cmake\"\n  }, \"SET(CMAKE_CXX_FLAGS \\\"-Wall\\\")\\n\")), \"\\n\", React.createElement(_components.p, null, \"ターゲット指定\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-cmake\"\n  }, \"TARGET_COMPILE_OPTIONS(foo PUBLIC \\\"$<$<CONFIG:DEBUG>:${MY_DEBUG_OPTIONS}>\\\")\\nTARGET_COMPILE_OPTIONS(foo PUBLIC \\\"$<$<CONFIG:RELEASE>:${MY_RELEASE_OPTIONS}>\\\")\\n\")), \"\\n\", React.createElement(_components.p, null, \"include path\\n全体\\n以降の ADD_XXX に対して有効になる\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"INCLUDE_DIRECTORIES(libpath/include)\\n\")), \"\\n\", React.createElement(_components.p, null, \"ターゲット指定\\nPUBLIC の部分はよくわからぬ。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"TARGET_INCLUDE_DIRECTORIES(HELLO PUBLIC\\n\\t${BOOST_DIR}\\n\\t)\\n\")), \"\\n\", React.createElement(_components.p, null, \"define\\n全体\\n以降の ADD_XXX に対して有効になる\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"ADD_DEFINITIONS(-DWITH_OPENCV2)\\n\")), \"\\n\", React.createElement(_components.p, null, \"ターゲット指定\\nPUBLIC の部分はよくわからぬ。\"), \"\\n\", React.createElement(_components.h1, null, \"-D なし\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"TARGET_COMPILE_DEFINITIONS(TARGET PUBLIC\\n    WITH_OPENCV2=1\\n    )\\n\")), \"\\n\", React.createElement(_components.p, null, \"link\\nlink path\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"LINK_DIRECTORIES(libpath/lib)\\n\")), \"\\n\", React.createElement(_components.p, null, \"x86 と x64 で違うパスにしたい時は？\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"LINK_LIBRARIES\\nTARGET_LINK_LIBRARIES\\nTARGET_LINK_LIBRARIES(MediaSessionPlaybackExample\\n    Mf\\n    Mfplat\\n    Mfuuid\\n    strmiids\\n    )\\n\")), \"\\n\", React.createElement(_components.p, null, \"Debug Release の切り分け\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"TARGET_LINK_LIBRARIES(Fuga\\n    DEBUG hoge_d\\n    OPTIMIZE hoge\\n    )\\n\")), \"\\n\", React.createElement(_components.p, null, \"変数\\nソース\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"cmake -G CMAKE_SOURCE_DIR\\nCMAKE_SOURCE_DIR\\n\")), \"\\n\", React.createElement(_components.p, null, \"ビルドディレクトリ\\ncmake -G CMAKE_SOURCE_DIR を実行したディレクトリ\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"CMAKE_BINARY_DIR\\n\")), \"\\n\", React.createElement(_components.p, null, \"The path to the top level of the build tree\"), \"\\n\", React.createElement(_components.p, null, \"出力ディレクトリ\\nexe と dll の出力先。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)\\n\")), \"\\n\", React.createElement(_components.p, null, \"example\\nCMakeLists.txt\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-cmake\"\n  }, \"CMAKE_MINIMUM_REQUIRED(VERSION 2.8)\\nPROJECT(hello) # hello.sln\\nADD_EXECUTABLE(hello main.cpp) # hello.vcxproj\\n\\nset(CMAKE_CXX_FLAGS \\\"/WD4096\\\")\\nset(CMAKE_C_FLAGS \\\"/WD4096\\\")\\ninclude_directories(libpath/include)\\nadd_definitions(\\n    -DUNICODE\\n    -D_UNICODE\\n    )\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2017/05/cmake_compileoptions.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nfunction PostTempalte({data, children}) {\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, null, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","pre","code","h1","_provideComponents","components","React","className","wrapper","MDXLayout","PostTempalte","_ref","data","children","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}