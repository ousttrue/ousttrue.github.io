{"version":3,"file":"component---src-templates-post-template-js-content-file-path-content-posts-2014-05-21-cygwin-x-md-5f44cc72f6a741b3d7a2.js","mappings":"+JAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,GAAI,OACHC,EAAAA,EAAAA,MAAsBN,EAAMO,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,+bAAgc,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,kPAA2P,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,4DAA+D,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,iGAAoG,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,2CAA4CI,EAAAA,cAAoBP,EAAYI,GAAI,KAAM,2BAA4B,+BAAgCG,EAAAA,cAAoBP,EAAYI,GAAI,KAAM,wCAAyC,gBAAiB,KAAMG,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,yEAA0E,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,qJACphD,CAKA,MAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOS,QAASC,GAAaR,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWV,EAAOQ,EAAAA,cAAoBT,EAAmBC,IAAUD,EAAkBC,EAC9H,E,8BCNA,MAAMO,EAAa,CACjBI,KAAMC,IAA2B,IAA1B,SAACC,EAAQ,UAAEC,GAAUF,EAC1B,OAAOE,EAAYN,EAAAA,cAAoBO,EAAAA,EAAsB,CAC3DD,UAAWA,GACVD,GAAYL,EAAAA,cAAoB,OAAQ,KAAMK,EAAS,GAG9D,SAASG,EAAYC,GAAmB,IAAlB,KAACC,EAAI,SAAEL,GAASI,EACpC,MAAME,EAAcD,EAAKE,IAAID,YAC7B,OAAOX,EAAAA,cAAoBa,EAAAA,EAAQ,KAAMb,EAAAA,cAAoB,KAAM,KAAMW,EAAYG,OAAQd,EAAAA,cAAoB,MAAO,CACtHM,UAAW,cACVK,EAAYI,MAAQJ,EAAYI,KAAKC,OAAS,GAAKL,EAAYI,KAAKE,KAAIC,GAClElB,EAAAA,cAAoBmB,EAAAA,GAAM,CAC/BC,GAAI,SAASF,EAAG,IAChBG,SAAU,OACTrB,EAAAA,cAAoB,SAAU,KAAMkB,OACpClB,EAAAA,cAAoBsB,EAAAA,GAAa,CACpCvB,WAAYA,GACXM,GACL,CACe,SAASkB,EAAiB/B,GACvC,OAAOQ,EAAAA,cAAoBQ,EAAchB,EAAOQ,EAAAA,cAAoBwB,EAAqBhC,GAC3F,C","sources":["webpack:///./content/posts/2014/05/21/cygwin_x.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    em: \"em\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"gvimのためにcygwinでxorg導入\\n環境をcygwinに変えたらシンボリックリンクを使えるようになった。MSYSの時より綺麗にdotfilesの共有ができるようになったのだが、引きかえにWindows版のvimの設定が読みこめなくなってしまったw。\\nということでcygwin版のgvimをインストールすることにしたのだが、こいつはxorgに依存していたのであった。\\nxtermの環境設定からだ\\nxorgを使うことにしたので勢い余ってtermもxtermにしますかということで設定してみる。\\nまずはfont設定から。\\ncygwin版のxtermはトゥルータイプフォントを表示できる。使えるようにするには、\\n~/.fontsディレクトリにttcファイル等を配置するだけだ。\\nMSゴシックの場合こうだ。\\n$ cd\\n$ mkdir .fonts\\n$ cd .fonts\\n$ ln -s /cygdrive/C/WINDOWS/Fonts/msgothic.ttc\"), \"\\n\", React.createElement(_components.p, null, \"半角用にInconsolataも用意した。http://levien.com/type/myfonts/inconsolata.html\\n$ ls .fonts\\nInconsolata.otf msgothic.ttc\\n$ fc-match.exe Inconsolata\\nInconsolata.otf: \\\"Inconsolata\\\" \\\"Medium\\\"\\n$ fc-match.exe gothic\\nmsgothic.ttc: \\\"ＭＳ ゴシック\\\" \\\"Regular\\\"\"), \"\\n\", React.createElement(_components.p, null, \"フォントを指定してxtermを起動してみる。\\n$ DISPLAY=:0 xterm -fa \\\"ＭＳ ゴシック\\\"\"), \"\\n\", React.createElement(_components.p, null, \"文字の隙間が広すぎでよろしくない。\\n半角フォントと全角フォントを別々に指定するべし。\\n$ DISPLAY=:0 xterm -fa \\\"ＭＳ ゴシック\\\" -fd Inconsolata\"), \"\\n\", React.createElement(_components.p, null, \"いい感じだ。 これを設定にするには、\\n~/.Xresources\\nXTerm\", React.createElement(_components.em, null, \"renderFont: true\\nXTerm\"), \"faceName: Inconsolata\\nXTerm\", React.createElement(_components.em, null, \"faceNameDoublesize: MS Gothic\\nXTerm\"), \"faceSize: 12\"), \"\\n\", React.createElement(_components.p, null, \"xorg起動時に自動的に読みこまれるようにするには、\\n~/.startxwinrc\\nxrdb -merge ~/.Xresources\"), \"\\n\", React.createElement(_components.p, null, \"とりあえずフォント設定としては以上。\\n日本語入力としてskk.vimを導入\\n日本語の表示はできるようになったが依然として入力はできない。kinput2とかを入れるのは辛そうだったのでvim専用になるがskk.vimを使うことにした。\\nとりあえずこれをvimで編集できる程度にはなった。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2014/05/21/cygwin_x.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  const frontmatter = data.mdx.frontmatter;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"div\", {\n    className: \"tags-index\"\n  }, frontmatter.tags && frontmatter.tags.length > 0 && frontmatter.tags.map(tag => {\n    return React.createElement(Link, {\n      to: `/tags/${tag}/`,\n      itemProp: \"url\"\n    }, React.createElement(\"button\", null, tag));\n  })), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        tags\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","em","_provideComponents","components","React","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","frontmatter","mdx","Layout","title","tags","length","map","tag","Link","to","itemProp","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}