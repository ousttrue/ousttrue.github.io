{"version":3,"file":"component---src-pages-index-js-92fcfff8761e7ead55af.js","mappings":"kHAIA,MAAMA,EAASA,IACbC,EAAAA,cAAA,cACEA,EAAAA,cAAA,WACEA,EAAAA,cAAA,UACEA,EAAAA,cAAA,UACEA,EAAAA,cAACC,EAAAA,GAAI,CAACC,GAAG,KAAI,qBAEfF,EAAAA,cAAA,UACEA,EAAAA,cAACC,EAAAA,GAAI,CAACC,GAAG,WAAU,UAErBF,EAAAA,cAAA,UACEA,EAAAA,cAACC,EAAAA,GAAI,CAACC,GAAG,UAAS,SAEpBF,EAAAA,cAAA,UACEA,EAAAA,cAACC,EAAAA,GAAI,CAACC,GAAG,WAAU,aAOvBC,EAASA,IAAMH,EAAAA,cAAA,cAAQ,OAAI,IAAII,MAAOC,cAAc,aAc1D,IAZeC,IAAA,IAAC,SAAEC,GAAUD,EAAA,OAC1BN,EAAAA,cAAA,WACEA,EAAAA,cAACD,EAAM,MAEPC,EAAAA,cAAA,OAAKQ,UAAU,UACbR,EAAAA,cAAA,YAAOO,IAGTP,EAAAA,cAACG,EAAM,MACH,C,gECuBR,UAvDkBG,IAAyB,IAAxB,KAAEG,EAAI,SAAEC,GAAUJ,EAEnC,MAAMK,EAAQF,EAAKG,OAAOC,MAE1B,OAAqB,IAAjBF,EAAMG,OAENd,EAAAA,cAAA,SAAG,6JASLA,EAAAA,cAACe,EAAAA,EAAM,KACLf,EAAAA,cAAA,MAAIgB,MAAO,CAAEC,UAAU,SACpBN,EACEO,QAAQC,GAASA,EAAKC,OAAOC,KAAKC,WAAW,aAC7CC,KAAKJ,IACJ,MAAMK,EAAQL,EAAKM,YAAYD,OAASL,EAAKC,OAAOC,KAEpD,OACErB,EAAAA,cAAA,MAAI0B,IAAKP,EAAKC,OAAOC,MACnBrB,EAAAA,cAAA,WACEQ,UAAU,iBACVmB,WAAS,EACTC,SAAS,6BAET5B,EAAAA,cAAA,cACEA,EAAAA,cAAA,UACEA,EAAAA,cAACC,EAAAA,GAAI,CAACC,GAAIiB,EAAKC,OAAOC,KAAMQ,SAAS,OACnC7B,EAAAA,cAAA,QAAM6B,SAAS,YAAYL,KAG/BxB,EAAAA,cAAA,WAAMmB,EAAKM,YAAYK,MACvB9B,EAAAA,cAAA,WAAMmB,EAAKM,YAAYM,OAEzB/B,EAAAA,cAAA,eACEA,EAAAA,cAAA,KACEgC,wBAAyB,CACvBC,OAAQd,EAAKM,YAAYS,aAAef,EAAKgB,SAE/CN,SAAS,kBAIZ,KAIN,C","sources":["webpack:///./src/components/layout.js","webpack:///./src/pages/index.js"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport \"../styles/layout.css\";\n\nconst Header = () => (\n  <header>\n    <nav>\n      <ul>\n        <li>\n          <Link to=\"/\">三次元日誌(gatsby v5)</Link>\n        </li>\n        <li>\n          <Link to=\"/about/\">about</Link>\n        </li>\n        <li>\n          <Link to=\"/tags/\">tags</Link>\n        </li>\n        <li>\n          <Link to=\"/books/\">books</Link>\n        </li>\n      </ul>\n    </nav>\n  </header>\n);\n\nconst Footer = () => <footer> © {new Date().getFullYear()} ousttrue</footer>;\n\nconst Layout = ({ children }) => (\n  <div>\n    <Header />\n\n    <div className=\"layout\">\n      <main>{children}</main>\n    </div>\n\n    <Footer />\n  </div>\n);\n\nexport default Layout;\n","import * as React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\n\nconst BlogIndex = ({ data, location }) => {\n  // const siteTitle = data.site.siteMetadata?.title || `Title`;\n  const posts = data.allMdx.nodes;\n\n  if (posts.length === 0) {\n    return (\n      <p>\n        No blog posts found. Add markdown posts to \"content/blog\" (or the\n        directory you specified for the \"gatsby-source-filesystem\" plugin in\n        gatsby-config.js).\n      </p>\n    );\n  }\n\n  return (\n    <Layout>\n      <ol style={{ listStyle: `none` }}>\n        {posts\n          .filter((post) => post.fields.slug.startsWith(\"/posts/\"))\n          .map((post) => {\n            const title = post.frontmatter.title || post.fields.slug;\n\n            return (\n              <li key={post.fields.slug}>\n                <article\n                  className=\"post-list-item\"\n                  itemScope\n                  itemType=\"http://schema.org/Article\"\n                >\n                  <header>\n                    <h2>\n                      <Link to={post.fields.slug} itemProp=\"url\">\n                        <span itemProp=\"headline\">{title}</span>\n                      </Link>\n                    </h2>\n                    <div>{post.frontmatter.date}</div>\n                    <div>{post.frontmatter.tags}</div>\n                  </header>\n                  <section>\n                    <p\n                      dangerouslySetInnerHTML={{\n                        __html: post.frontmatter.description || post.excerpt,\n                      }}\n                      itemProp=\"description\"\n                    />\n                  </section>\n                </article>\n              </li>\n            );\n          })}\n      </ol>\n    </Layout>\n  );\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"YYYY/MM/DD\")\n          title\n          tags\n        }\n        id\n      }\n    }\n  }\n`;\n"],"names":["Header","React","Link","to","Footer","Date","getFullYear","_ref","children","className","data","location","posts","allMdx","nodes","length","Layout","style","listStyle","filter","post","fields","slug","startsWith","map","title","frontmatter","key","itemScope","itemType","itemProp","date","tags","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}