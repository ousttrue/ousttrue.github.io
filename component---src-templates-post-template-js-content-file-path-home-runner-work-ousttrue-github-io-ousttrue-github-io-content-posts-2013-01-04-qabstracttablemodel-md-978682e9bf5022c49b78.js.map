{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2013-01-04-qabstracttablemodel-md-978682e9bf5022c49b78.js","mappings":"8JAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,KAAM,SACLC,EAAAA,EAAAA,MAAsBN,EAAMO,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,6CAA8C,KAAMI,EAAAA,cAAoBP,EAAYI,KAAM,CAClLI,wBAAyB,CACvBC,OAAQ,0gqBAER,KAAMF,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,QAAS,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,uDAC7G,CAKA,MAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOW,QAASC,GAAaV,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOK,EAAYJ,EAAAA,cAAoBI,EAAWZ,EAAOQ,EAAAA,cAAoBT,EAAmBC,IAAUD,EAAkBC,EAC9H,E,oBCXA,MAAMO,EAAa,CACjBM,KAAMC,IAA2B,IAA1B,SAACC,EAAQ,UAAEC,GAAUF,EAC1B,OAAOE,EAAYR,EAAAA,cAAoBS,EAAAA,EAAsB,CAC3DD,UAAWA,GACVD,GAAYP,EAAAA,cAAoB,OAAQ,KAAMO,EAAS,GAG9D,SAASG,EAAYC,GAAmB,IAAlB,KAACC,EAAI,SAAEL,GAASI,EACpC,OAAOX,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoB,KAAM,KAAMY,EAAKC,IAAIC,YAAYC,OAAQf,EAAAA,cAAoBgB,EAAAA,GAAa,CAC7IjB,WAAYA,GACXQ,GACL,CACe,SAASU,EAAiBzB,GACvC,OAAOQ,EAAAA,cAAoBU,EAAclB,EAAOQ,EAAAA,cAAoBkB,EAAqB1B,GAC3F,C","sources":["webpack:///./content/posts/2013/01/04/qabstracttablemodel.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"ディレクトリ表示をする専用のウィジェットがあったような気がするが、練習のため実装。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"python\\\"><pre class=\\\"language-python\\\"><code class=\\\"language-python\\\"><span class=\\\"token comment\\\"># !/usr/bin/env python</span>\\n<span class=\\\"token comment\\\"># coding: utf-8</span>\\n\\n\\n<span class=\\\"token keyword\\\">import</span> re <span class=\\\"token keyword\\\">import</span> operator <span class=\\\"token keyword\\\">import</span> os <span class=\\\"token keyword\\\">import</span> sys <span class=\\\"token keyword\\\">import</span> stat <span class=\\\"token keyword\\\">from</span>\\nPyQt4<span class=\\\"token punctuation\\\">.</span>QtCore <span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">from</span> PyQt4<span class=\\\"token punctuation\\\">.</span>QtGui <span class=\\\"token keyword\\\">import</span> <span class=\\\"token operator\\\">*</span>\\n\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">File</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">object</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\nheader<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">[</span>\\n\\n‘<span class=\\\"token builtin\\\">type</span>’<span class=\\\"token punctuation\\\">,</span> ‘name’<span class=\\\"token punctuation\\\">,</span> ‘size’<span class=\\\"token punctuation\\\">,</span> ‘mtime’ <span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">__init__</span><span class=\\\"token punctuation\\\">(</span>self<span class=\\\"token punctuation\\\">,</span> path<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\nself<span class=\\\"token punctuation\\\">.</span>path<span class=\\\"token operator\\\">=</span>os<span class=\\\"token punctuation\\\">.</span>path<span class=\\\"token punctuation\\\">.</span>abspath<span class=\\\"token punctuation\\\">(</span>path<span class=\\\"token punctuation\\\">)</span> self<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token boolean\\\">None</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">None</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token boolean\\\">None</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token boolean\\\">None</span><span class=\\\"token punctuation\\\">]</span> s<span class=\\\"token operator\\\">=</span>os<span class=\\\"token punctuation\\\">.</span>stat<span class=\\\"token punctuation\\\">(</span>path<span class=\\\"token punctuation\\\">)</span> mode<span class=\\\"token operator\\\">=</span>s<span class=\\\"token punctuation\\\">[</span>stat<span class=\\\"token punctuation\\\">.</span>ST_MODE<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token keyword\\\">if</span>\\nstat<span class=\\\"token punctuation\\\">.</span>S_ISDIR<span class=\\\"token punctuation\\\">(</span>mode<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span> self<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">=</span>‘<span class=\\\"token builtin\\\">dir</span>’ <span class=\\\"token keyword\\\">elif</span>\\nstat<span class=\\\"token punctuation\\\">.</span>S_ISLNK<span class=\\\"token punctuation\\\">(</span>mode<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span> self<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">=</span>‘link’ <span class=\\\"token keyword\\\">elif</span>\\nstat<span class=\\\"token punctuation\\\">.</span>S_ISREG<span class=\\\"token punctuation\\\">(</span>mode<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span> self<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">=</span>‘<span class=\\\"token builtin\\\">file</span>’ <span class=\\\"token keyword\\\">else</span><span class=\\\"token punctuation\\\">:</span>\\nself<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">=</span>‘unknown’ self<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">=</span>os<span class=\\\"token punctuation\\\">.</span>path<span class=\\\"token punctuation\\\">.</span>basename<span class=\\\"token punctuation\\\">(</span>path<span class=\\\"token punctuation\\\">)</span>\\nself<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">=</span>s<span class=\\\"token punctuation\\\">[</span>stat<span class=\\\"token punctuation\\\">.</span>ST_SIZE<span class=\\\"token punctuation\\\">]</span>\\nself<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">=</span>s<span class=\\\"token punctuation\\\">[</span>stat<span class=\\\"token punctuation\\\">.</span>ST_MTIME<span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">__str__</span><span class=\\\"token punctuation\\\">(</span>self<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n<span class=\\\"token keyword\\\">return</span> “<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">%</span>s <span class=\\\"token operator\\\">%</span>s<span class=\\\"token operator\\\">></span>” <span class=\\\"token operator\\\">%</span> <span class=\\\"token punctuation\\\">(</span>self<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span> self<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">__getitem__</span><span class=\\\"token punctuation\\\">(</span>self<span class=\\\"token punctuation\\\">,</span> key<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n<span class=\\\"token keyword\\\">return</span> self<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">[</span>key<span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">is_dir</span><span class=\\\"token punctuation\\\">(</span>self<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n<span class=\\\"token keyword\\\">return</span> self<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">==</span>‘<span class=\\\"token builtin\\\">dir</span>’\\n\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">MyTableModel</span><span class=\\\"token punctuation\\\">(</span>QAbstractTableModel<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">__init__</span><span class=\\\"token punctuation\\\">(</span>self<span class=\\\"token punctuation\\\">,</span> parent<span class=\\\"token punctuation\\\">,</span> path<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n\\n<span class=\\\"token builtin\\\">super</span><span class=\\\"token punctuation\\\">(</span>MyTableModel<span class=\\\"token punctuation\\\">,</span> self<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>__init__<span class=\\\"token punctuation\\\">(</span>parent<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">def</span>\\nget_stat<span class=\\\"token punctuation\\\">(</span>name<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span> f<span class=\\\"token operator\\\">=</span>File<span class=\\\"token punctuation\\\">(</span>os<span class=\\\"token punctuation\\\">.</span>path<span class=\\\"token punctuation\\\">.</span>join<span class=\\\"token punctuation\\\">(</span>path<span class=\\\"token punctuation\\\">,</span> name<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">return</span> f\\nself<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">[</span>get_stat<span class=\\\"token punctuation\\\">(</span>os<span class=\\\"token punctuation\\\">.</span>path<span class=\\\"token punctuation\\\">.</span>join<span class=\\\"token punctuation\\\">(</span>path<span class=\\\"token punctuation\\\">,</span> “<span class=\\\"token punctuation\\\">.</span><span class=\\\"token punctuation\\\">.</span>”<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token operator\\\">+</span><span class=\\\"token punctuation\\\">[</span>get_stat<span class=\\\"token punctuation\\\">(</span>e<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">for</span> e <span class=\\\"token keyword\\\">in</span> os<span class=\\\"token punctuation\\\">.</span>listdir<span class=\\\"token punctuation\\\">(</span>path<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">rowCount</span><span class=\\\"token punctuation\\\">(</span>self<span class=\\\"token punctuation\\\">,</span> parent<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n<span class=\\\"token keyword\\\">return</span> <span class=\\\"token builtin\\\">len</span><span class=\\\"token punctuation\\\">(</span>self<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">columnCount</span><span class=\\\"token punctuation\\\">(</span>self<span class=\\\"token punctuation\\\">,</span> parent<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n<span class=\\\"token keyword\\\">return</span> <span class=\\\"token builtin\\\">len</span><span class=\\\"token punctuation\\\">(</span>File<span class=\\\"token punctuation\\\">.</span>header<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">data</span><span class=\\\"token punctuation\\\">(</span>self<span class=\\\"token punctuation\\\">,</span> index<span class=\\\"token punctuation\\\">,</span> role<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n<span class=\\\"token keyword\\\">if</span> <span class=\\\"token keyword\\\">not</span> index<span class=\\\"token punctuation\\\">.</span>isValid<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n\\n<span class=\\\"token keyword\\\">return</span> <span class=\\\"token boolean\\\">None</span>\\n<span class=\\\"token keyword\\\">elif</span> role <span class=\\\"token operator\\\">!=</span> Qt<span class=\\\"token punctuation\\\">.</span>DisplayRole<span class=\\\"token punctuation\\\">:</span>\\n<span class=\\\"token keyword\\\">return</span> <span class=\\\"token boolean\\\">None</span>\\n\\n<span class=\\\"token keyword\\\">return</span> self<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">[</span>index<span class=\\\"token punctuation\\\">.</span>row<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">[</span>index<span class=\\\"token punctuation\\\">.</span>column<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">]</span>\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">headerData</span><span class=\\\"token punctuation\\\">(</span>self<span class=\\\"token punctuation\\\">,</span> col<span class=\\\"token punctuation\\\">,</span> orientation<span class=\\\"token punctuation\\\">,</span> role<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n<span class=\\\"token keyword\\\">if</span> orientation <span class=\\\"token operator\\\">==</span> Qt<span class=\\\"token punctuation\\\">.</span>Horizontal <span class=\\\"token keyword\\\">and</span> role <span class=\\\"token operator\\\">==</span> Qt<span class=\\\"token punctuation\\\">.</span>DisplayRole<span class=\\\"token punctuation\\\">:</span>\\n\\n<span class=\\\"token keyword\\\">return</span> File<span class=\\\"token punctuation\\\">.</span>header<span class=\\\"token punctuation\\\">[</span>col<span class=\\\"token punctuation\\\">]</span>\\n\\n<span class=\\\"token keyword\\\">return</span> <span class=\\\"token boolean\\\">None</span>\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">sort</span><span class=\\\"token punctuation\\\">(</span>self<span class=\\\"token punctuation\\\">,</span> Ncol<span class=\\\"token punctuation\\\">,</span> order<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n”““Sort table by given column number<span class=\\\"token punctuation\\\">.</span>\\n“”” self<span class=\\\"token punctuation\\\">.</span>emit<span class=\\\"token punctuation\\\">(</span>SIGNAL<span class=\\\"token punctuation\\\">(</span>“layoutAboutToBeChanged<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>”<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> self<span class=\\\"token punctuation\\\">.</span>data <span class=\\\"token operator\\\">=</span>\\n<span class=\\\"token builtin\\\">sorted</span><span class=\\\"token punctuation\\\">(</span>self<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">,</span>\\nkey<span class=\\\"token operator\\\">=</span>operator<span class=\\\"token punctuation\\\">.</span>itemgetter<span class=\\\"token punctuation\\\">(</span>Ncol<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> reverse<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">(</span>order<span class=\\\"token operator\\\">!=</span>Qt<span class=\\\"token punctuation\\\">.</span>DescendingOrder<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\nself<span class=\\\"token punctuation\\\">.</span>emit<span class=\\\"token punctuation\\\">(</span>SIGNAL<span class=\\\"token punctuation\\\">(</span>“layoutChanged<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>”<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">getRow</span><span class=\\\"token punctuation\\\">(</span>self<span class=\\\"token punctuation\\\">,</span> index<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n<span class=\\\"token keyword\\\">return</span> self<span class=\\\"token punctuation\\\">.</span>data<span class=\\\"token punctuation\\\">[</span>index<span class=\\\"token punctuation\\\">]</span>\\n\\n<span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">MyWindow</span><span class=\\\"token punctuation\\\">(</span>QWidget<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">__init__</span><span class=\\\"token punctuation\\\">(</span>self<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token operator\\\">*</span>args<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span> QWidget<span class=\\\"token punctuation\\\">.</span>__init__<span class=\\\"token punctuation\\\">(</span>self<span class=\\\"token punctuation\\\">,</span><span class=\\\"token operator\\\">*</span>args<span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token comment\\\"># create the view self.tv = QTableView() # hide</span>\\ngrid self<span class=\\\"token punctuation\\\">.</span>tv<span class=\\\"token punctuation\\\">.</span>setShowGrid<span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">False</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\"># hide vertical header vh</span>\\n<span class=\\\"token operator\\\">=</span> self<span class=\\\"token punctuation\\\">.</span>tv<span class=\\\"token punctuation\\\">.</span>verticalHeader<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> vh<span class=\\\"token punctuation\\\">.</span>setVisible<span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">False</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\"># set</span>\\nhorizontal header properties hh <span class=\\\"token operator\\\">=</span> self<span class=\\\"token punctuation\\\">.</span>tv<span class=\\\"token punctuation\\\">.</span>horizontalHeader<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\nhh<span class=\\\"token punctuation\\\">.</span>setStretchLastSection<span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">True</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\"># set column width to fit</span>\\ncontents self<span class=\\\"token punctuation\\\">.</span>tv<span class=\\\"token punctuation\\\">.</span>resizeColumnsToContents<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\"># enable</span>\\nsorting self<span class=\\\"token punctuation\\\">.</span>tv<span class=\\\"token punctuation\\\">.</span>setSortingEnabled<span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">True</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\"># layout layout</span>\\n<span class=\\\"token operator\\\">=</span> QVBoxLayout<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> layout<span class=\\\"token punctuation\\\">.</span>addWidget<span class=\\\"token punctuation\\\">(</span>self<span class=\\\"token punctuation\\\">.</span>tv<span class=\\\"token punctuation\\\">)</span> self<span class=\\\"token punctuation\\\">.</span>setLayout<span class=\\\"token punctuation\\\">(</span>layout<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token comment\\\"># double</span>\\nclick self<span class=\\\"token punctuation\\\">.</span>tv<span class=\\\"token punctuation\\\">.</span>doubleClicked<span class=\\\"token punctuation\\\">.</span>connect<span class=\\\"token punctuation\\\">(</span>self<span class=\\\"token punctuation\\\">.</span>onDoubleClick<span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">chdir</span><span class=\\\"token punctuation\\\">(</span>self<span class=\\\"token punctuation\\\">,</span> path<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n\\nself<span class=\\\"token punctuation\\\">.</span>tm <span class=\\\"token operator\\\">=</span> MyTableModel<span class=\\\"token punctuation\\\">(</span>self<span class=\\\"token punctuation\\\">,</span> path<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token comment\\\"># set the table</span>\\nmodel self<span class=\\\"token punctuation\\\">.</span>tv<span class=\\\"token punctuation\\\">.</span>setModel<span class=\\\"token punctuation\\\">(</span>self<span class=\\\"token punctuation\\\">.</span>tm<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">onDoubleClick</span><span class=\\\"token punctuation\\\">(</span>self<span class=\\\"token punctuation\\\">,</span> event<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\nitem<span class=\\\"token operator\\\">=</span>self<span class=\\\"token punctuation\\\">.</span>tm<span class=\\\"token punctuation\\\">.</span>getRow<span class=\\\"token punctuation\\\">(</span>event<span class=\\\"token punctuation\\\">.</span>row<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">if</span> <span class=\\\"token keyword\\\">not</span> item<span class=\\\"token punctuation\\\">.</span>is_dir<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n<span class=\\\"token keyword\\\">return</span> self<span class=\\\"token punctuation\\\">.</span>chdir<span class=\\\"token punctuation\\\">(</span>item<span class=\\\"token punctuation\\\">.</span>path<span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">main</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\napp <span class=\\\"token operator\\\">=</span> QApplication<span class=\\\"token punctuation\\\">(</span>sys<span class=\\\"token punctuation\\\">.</span>argv<span class=\\\"token punctuation\\\">)</span> w <span class=\\\"token operator\\\">=</span> MyWindow<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> w<span class=\\\"token punctuation\\\">.</span>chdir<span class=\\\"token punctuation\\\">(</span>“<span class=\\\"token punctuation\\\">.</span>”<span class=\\\"token punctuation\\\">)</span> w<span class=\\\"token punctuation\\\">.</span>show<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\nsys<span class=\\\"token punctuation\\\">.</span>exit<span class=\\\"token punctuation\\\">(</span>app<span class=\\\"token punctuation\\\">.</span>exec_<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">if</span> __name__ <span class=\\\"token operator\\\">==</span> “__main__“<span class=\\\"token punctuation\\\">:</span>\\nmain<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"ToDo\"), \"\\n\", React.createElement(_components.p, null, \"種類毎のアイコン表示\\n日付の表示\\n数字カラムの右寄せ\\n行選択\\nFilterProxyModel\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2013/01/04/qabstracttablemodel.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","span","_provideComponents","components","React","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}