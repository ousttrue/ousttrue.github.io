{"version":3,"file":"component---src-templates-post-template-js-content-file-path-content-posts-2021-rust-ffi-md-1803f8700fa0ad245cbf.js","mappings":"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","sources":["webpack:///./content/posts/2021/rust_ffi.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    code: \"code\",\n    h2: \"h2\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"rust の FFI に取り組んでいた。\\n結局、 sdl binding と imgui binding を自作した。\"), \"\\n\", React.createElement(_components.p, null, \"両方とも、既存の crate があるのに何故わざわざ自作するのかと言えば、\\nラップされて使い方が変わったところを学ぶのが面倒くさかったからじゃ。\\n\", React.createElement(_components.a, {\n    href: \"https://crates.io/crates/sdl2\"\n  }, \"SDL\"), \" は　\", React.createElement(_components.code, null, \"HWND\"), \" を取得する方法がわかりにくくて \", React.createElement(_components.code, null, \"SDL_Event\"), \" を \", React.createElement(_components.code, null, \"imgui\"), \" に渡す方法はわからなかった。\\n\", React.createElement(_components.a, {\n    href: \"https://crates.io/crates/imgui\"\n  }, \"imgui\"), \" は最新版の \", React.createElement(_components.code, null, \"docking\"), \" ブランチが使いたかった。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://crates.io/crates/clang-sys\"\n  }, \"clang-sys\"), \" を使って rust の FFI コードを生成し、\\n\", React.createElement(_components.a, {\n    href: \"https://crates.io/crates/cc\"\n  }, \"cc\"), \" を使って \", React.createElement(_components.code, null, \"build.rs\"), \" でライブラリをビルドした。\\nこれで、 \", React.createElement(_components.code, null, \"c\"), \" \", React.createElement(_components.code, null, \"c++\"), \" のライブラリをソースビルドしてスタティックリンクし、 \", React.createElement(_components.code, null, \"FFI\"), \" で関数を呼び出し放題。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"imgui\"), \" の FFI 生成の方が簡単で、 \", React.createElement(_components.code, null, \"SDL\"), \" の方は C のマクロに苦しんだ(雑に対応)。\\nとはいえ、わりと素直に記述できるので快適であった。\"), \"\\n\", React.createElement(_components.p, null, \"おかげで、 rust の FFI 周りに対する習熟度がだいぶ上がった。\"), \"\\n\", React.createElement(_components.h2, null, \"できないこと\"), \"\\n\", React.createElement(_components.p, null, \"POD の struct を return する関数を呼び出すとクラッシュした。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c++\\\"><pre class=\\\"language-c++\\\"><code class=\\\"language-c++\\\">ImVec2 ImGui::GetContentRegionAvail();</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"D言語だけど\"), \"\\n\", React.createElement(_components.p, null, \"https://forum.dlang.org/thread/dkamxcamwttszxwwxttv@forum.dlang.org\"), \"\\n\", React.createElement(_components.p, null, \"の件らしく、C++ 側でラップした。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c++\\\"><pre class=\\\"language-c++\\\"><code class=\\\"language-c++\\\">void pGetContentRegionAvail(ImVec2 *pOut) {\\n  if (pOut) {\\n    *pOut = GetContentRegionAvail();\\n  }\\n}</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"自由に static link できる\"), \"\\n\", React.createElement(_components.p, null, \"build.rs を駆使して自由にリンクできるので、スタティックリンクとダイナミックリンクを制御できるので便利。\\n特に Windows の場合、システムに共通のライブラリがインストールされていることが期待できないので、\\nDLLを作ってコピーした入りパスを通すよりは、スタティックリンクする方が気楽。\\n今回は \", React.createElement(_components.code, null, \"cc\"), \" でコンパイルしたけど、\", React.createElement(_components.code, null, \"c++/c\"), \" は CMake でビルドする方が管理しやすいかもしれない。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2021/rust_ffi.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  const frontmatter = data.mdx.frontmatter;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"div\", {\n    className: \"tags-index\"\n  }, frontmatter.tags && frontmatter.tags.length > 0 && frontmatter.tags.map(tag => {\n    return React.createElement(Link, {\n      to: `/tags/${tag}/`,\n      itemProp: \"url\"\n    }, React.createElement(\"button\", null, tag));\n  })), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        tags\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","code","h2","span","_provideComponents","components","React","href","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","frontmatter","mdx","Layout","title","tags","length","map","tag","Link","to","itemProp","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}