"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1803],{9101:function(e,n,t){t.r(n),t.d(n,{default:function(){return h}});var a=t(1151),s=t(7294);function r(e){const n=Object.assign({p:"p",span:"span"},(0,a.ah)(),e.components);return s.createElement(s.Fragment,null,s.createElement(n.p,null,'"W" translate | "E" rotate | "R" scale | "+" increase size | "-" decrease size\nPress "Q" to toggle world/local space, keep "Ctrl" down to snap to grid'),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">source\n今回は、本家サイトのサンプル\nhttp://threejs.org/examples/#misc_controls_transform\nをやってみよう。\nまず、TransformControlsのtypescriptインターフェースを用意する。\nというか書きながら作った。\nTransformControls.d.ts。モジュールの細かいところがよくわからん・・・\ndeclare module THREE {\n    export class TransformControls extends THREE.Mesh {\n        constructor(camera: THREE.Camera, element: Element);\n        update():void;\n        addEventListener(event: string, callback: Function): void;\n        attach(mesh: THREE.Mesh): void;\n\n        setSpace(space: string): void;\n        setTranslationSnap(snap: number): void;\n        setRotationSnap(radians: number): void;\n        setMode(mode: string): void;\n        setSize(size: number): void;\n\n        space: string;\n        size: number;\n    }\n}\n\nTransformControlsを初期化する。カメラとhtmlノードを渡して初期化する\nCreateTransformControl(mesh: THREE.Mesh) {\n    this.transform = new THREE.TransformControls(this.camera, this.renderer.domElement);\n    this.transform.addEventListener(\'change\', () => this.Render());\n    this.transform.attach(mesh);\n    this.scene.add(this.transform);\n\n    window.addEventListener(\'keydown\', (event: KeyboardEvent) => {\n\n        switch (event.keyCode) {\n\n            case 81: // Q\n                this.transform.setSpace(this.transform.space === "local" ? "world" : "local");\n                break;\n\n            case 17: // Ctrl\n                this.transform.setTranslationSnap(100);\n                this.transform.setRotationSnap(THREE.Math.degToRad(15));\n                break;\n\n            case 87: // W\n                this.transform.setMode("translate");\n                break;\n\n            case 69: // E\n                this.transform.setMode("rotate");\n                break;\n\n            case 82: // R\n                this.transform.setMode("scale");\n                break;\n\n            case 187:\n            case 107: // +, =, num+\n                this.transform.setSize(this.transform.size + 0.1);\n                break;\n\n            case 189:\n            case 109: // -, _, num-\n                this.transform.setSize(Math.max(this.transform.size - 0.1, 0.1));\n                break;\n\n        }\n    });\n\n    window.addEventListener(\'keyup\', (event: KeyboardEvent) => {\n\n        switch (event.keyCode) {\n\n            case 17: // Ctrl\n                this.transform.setTranslationSnap(null);\n                this.transform.setRotationSnap(null);\n                break;\n\n        }\n\n    });\n}</code></pre></div>'}}),"\n",s.createElement(n.p,null,"マウスイベントを監視する Html ノードと、マウスの動きをどのように解釈するかを知るためにカメラが必要ということですね。"))}var o=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?s.createElement(n,e,s.createElement(r,e)):r(e)},l=t(8678),c=t(1883),i=t(8838);const m={code:e=>{let{children:n,className:t}=e;return t?s.createElement(i.Z,{className:t},n):s.createElement("code",null,n)}};function d(e){let{data:n,children:t}=e;const r=n.mdx.frontmatter;return s.createElement(l.Z,null,s.createElement("h1",null,r.title),s.createElement("div",{className:"tags-index"},r.tags&&r.tags.length>0&&r.tags.map((e=>s.createElement(c.rU,{to:"/tags/"+e+"/",itemProp:"url"},s.createElement("button",null,e))))),s.createElement(a.Zo,{components:m},t))}function h(e){return s.createElement(d,e,s.createElement(o,e))}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2015-12-12-threejs-control-md-715d1023b2357c656937.js.map