{"version":3,"file":"component---content-posts-2017-08-pybullet-md-7afd8f0a3ccb2e7d7e51.js","mappings":"yHAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,IAAK,MACLC,KAAM,SACLC,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,gDAAiD,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,gCAAiC,KAAMK,EAAAA,cAAoBR,EAAYI,IAAK,KAAMI,EAAAA,cAAoBR,EAAYK,KAAM,KAAM,6DAA8D,KAAMG,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,sIAAuI,KAAMK,EAAAA,cAAoBR,EAAYI,IAAK,KAAMI,EAAAA,cAAoBR,EAAYK,KAAM,CACjoBI,UAAW,mBACV,m4BAAo4B,KAAMD,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,uDAAwD,KAAMK,EAAAA,cAAoBR,EAAYI,IAAK,KAAMI,EAAAA,cAAoBR,EAAYK,KAAM,KAAM,gBAAiB,KAAMG,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,qBAAsB,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,6BAA8B,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,mCAAoC,KAAMK,EAAAA,cAAoBR,EAAYI,IAAK,KAAMI,EAAAA,cAAoBR,EAAYK,KAAM,KAAM,2bAAgc,KAAMG,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,0EAA2E,KAAMK,EAAAA,cAAoBR,EAAYI,IAAK,KAAMI,EAAAA,cAAoBR,EAAYK,KAAM,CAC7iEI,UAAW,gBACV,wtBAAqwB,KAAMD,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,0BAA2B,KAAMK,EAAAA,cAAoBR,EAAYI,IAAK,KAAMI,EAAAA,cAAoBR,EAAYK,KAAM,CACv6BI,UAAW,mBACV,4iBAA+iB,KAAMD,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,SACnmB,CAKA,UAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOW,QAASC,GAAaV,OAAOC,OAAO,CAAC,GAAGI,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWZ,EAAOS,EAAAA,cAAoBV,EAAmBC,IAAUD,EAAkBC,EAC9H,C,sECaO,MAAMa,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBN,GAC/B,MAAMO,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAfL,EACFA,EAAWO,GAGb,IAAIA,KAAsBP,IAChC,CAACO,EAAmBP,GACzB,C","sources":["webpack:///./content/posts/2017/08/pybullet.md","webpack:///./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"BulletPhysics の公式 Python バインディングが出てたので使ってみる。\"), \"\\n\", React.createElement(_components.p, null, \"Windows10(64bit) + Python3.6\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"pip\\n> C:\\\\Python36\\\\Scripts\\\\pip.exe install pybullet\\n\")), \"\\n\", React.createElement(_components.p, null, \"cl.exe not found 的な\\nmsvc-14.0 なコンパイラがインストールされているにも関わらず出るなら\\nこれ\\nかもしれない\\nC:\\\\Python36\\\\Lib\\\\distutils_msvccompiler.py を修正すればいけるかも。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"    try:\\n        out = subprocess.check_output(\\n            'cmd /u /c \\\"{}\\\" {} && set'.format(vcvarsall, plat_spec),\\n            stderr=subprocess.STDOUT,\\n        ).decode('utf-16le', errors='replace')\\n        #######################################################################\\n        if out.startswith(\\\"Error in script usage\\\"):\\n            out = subprocess.check_output(\\n                'cmd /u /c \\\"{}\\\" {} && set'.format(\\\"C:\\\\\\\\Program Files (x86)\\\\\\\\Microsoft Visual C++ Build Tools\\\\\\\\vcbuildtools.bat\\\", plat_spec),\\n                stderr=subprocess.STDOUT,\\n            ).decode('utf-16le', errors='replace')\\n        #######################################################################\\n    except subprocess.CalledProcessError as exc:\\n        log.error(exc.output)\\n        raise DistutilsPlatformError(\\\"Error executing {}\\\"\\n                .format(exc.cmd))\\n\")), \"\\n\", React.createElement(_components.p, null, \"utf-8 がどうこう的な\\nいい加減 Windows は CP932 を使うのやめて欲しいのだけど。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"chcp65001\\n\")), \"\\n\", React.createElement(_components.p, null, \"インストールできた。\\n使ってみる\"), \"\\n\", React.createElement(_components.p, null, \"pybullet quickstart guide\"), \"\\n\", React.createElement(_components.p, null, \"日付が 2017 で思ったより新しい。むしろ、記述中くらいか。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"hello pybullet\\nimport pybullet as p\\nphysicsClient = p.connect(p.GUI)#or p.DIRECT for non-graphical version\\np.setGravity(0,0,-10)\\nplaneId = p.loadURDF(\\\"plane.urdf\\\")\\ncubeStartPos = [0,0,1]\\ncubeStartOrientation = p.getQuaternionFromEuler([0,0,0])\\nboxId = p.loadURDF(\\\"r2d2.urdf\\\",cubeStartPos, cubeStartOrientation)\\np.stepSimulation()\\ncubePos, cubeOrn = p.getBasePositionAndOrientation(boxId)\\nprint(cubePos,cubeOrn)\\np.disconnect()\\n\")), \"\\n\", React.createElement(_components.p, null, \"plane.urdf はどこにあるのか。\\nbullet3 のソースの中にあった。bullet3/build/data/plane.urdf\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-xml\"\n  }, \"<?xml version=\\\"0.0\\\" ?>\\n<robot name=\\\"plane\\\">\\n  <link name=\\\"planeLink\\\">\\n  <contact>\\n      <lateral_friction value=\\\"1\\\"/>\\n  </contact>\\n    <inertial>\\n      <origin rpy=\\\"0 0 0\\\" xyz=\\\"0 0 0\\\"/>\\n       <mass value=\\\".0\\\"/>\\n       <inertia ixx=\\\"0\\\" ixy=\\\"0\\\" ixz=\\\"0\\\" iyy=\\\"0\\\" iyz=\\\"0\\\" izz=\\\"0\\\"/>\\n    </inertial>\\n    <visual>\\n      <origin rpy=\\\"0 0 0\\\" xyz=\\\"0 0 0\\\"/>\\n      <geometry>\\n                <mesh filename=\\\"plane.obj\\\" scale=\\\"1 1 1\\\"/>\\n      </geometry>\\n       <material name=\\\"white\\\">\\n        <color rgba=\\\"1 1 1 1\\\"/>\\n      </material>\\n    </visual>\\n    <collision>\\n      <origin rpy=\\\"0 0 0\\\" xyz=\\\"0 0 -5\\\"/>\\n      <geometry>\\n        <box size=\\\"30 30 10\\\"/>\\n      </geometry>\\n    </collision>\\n  </link>\\n</robot>\\n\")), \"\\n\", React.createElement(_components.p, null, \"なるほどー。\\nちょっと hello を改造\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"import os\\nos.chdir('D:/dev/_python/bullet3/build/data') # urdfのあるところに移動\\n\\nimport pybullet as p\\nphysicsClient = p.connect(p.GUI)#or p.DIRECT for non-graphical version\\np.setGravity(0,0,-10)\\nplaneId = p.loadURDF(\\\"plane.urdf\\\")\\ncubeStartPos = [0,0,1]\\ncubeStartOrientation = p.getQuaternionFromEuler([0,0,0])\\nboxId = p.loadURDF(\\\"r2d2.urdf\\\",cubeStartPos, cubeStartOrientation)\\n\\nwhile True: # とりあえずpythonを抜けないように\\n    p.stepSimulation()\\n    cubePos, cubeOrn = p.getBasePositionAndOrientation(boxId)\\n    print(cubePos,cubeOrn)\\n\\np.disconnect()\\n\")), \"\\n\", React.createElement(_components.p, null, \"面白そう。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","pre","code","_provideComponents","components","React","className","wrapper","MDXLayout","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}