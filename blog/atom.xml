<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
  <id>https://ousttrue.github.io/</id>
  <title>三次元日誌(ablog)</title>
  <updated>2021-12-29T17:41:20.064722+00:00</updated>
  <link href="https://ousttrue.github.io/"/>
  <link href="https://ousttrue.github.io/blog/atom.xml" rel="self"/>
  <generator uri="https://ablog.readthedocs.org/" version="0.10.21">ABlog</generator>
  <entry>
    <id>https://ousttrue.github.io/posts/2012/12/26/customdelegate/</id>
    <title>カスタムデリゲート</title>
    <updated>2012-12-26T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;C++のQt4と平行してPyQt4を使い始めた。大概の用途にはこっちで十分な気がする。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2012/12/26/customdelegate/" rel="alternate"/>
    <summary>C++のQt4と平行してPyQt4を使い始めた。大概の用途にはこっちで十分な気がする。</summary>
    <published>2012-12-26T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2013/03/01/customize_octopress/</id>
    <title>octopress調整中</title>
    <updated>2013-03-01T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;octopress調整中
とりあえずタイトルとか入れてみた。 あと、syntax highlightを試してみた。
syntax highlight
http://octopress.org/docs/plugins/codeblock/
python3の方が参照されるとエラーになってしまう。 gentooなので、&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2013/03/01/customize_octopress/" rel="alternate"/>
    <summary>octopress調整中
とりあえずタイトルとか入れてみた。 あと、syntax highlightを試してみた。
syntax highlight
http://octopress.org/docs/plugins/codeblock/
python3の方が参照されるとエラーになってしまう。 gentooなので、</summary>
    <published>2013-03-01T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2013/03/08/markdown/</id>
    <title>Markdown形式メモ</title>
    <updated>2013-03-08T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;Markdown形式メモ
Octopressの記述形式であるMarkDown。
githubのREADME.mdの書式でもあるのでちゃんとマスターすべくメモする。
よく使うものを抜粋。
ローカルでプレビューする
Octopressの場合は付属しているので要らないがgithub向けにローカルのレンダリングサーバを導入する。
https://github.com/metaphysiks/moo
以下のようにインストールした。 $ pip install flask $ pip install
misaka $ pip install pygments $ pip install moo
$ moo README.md&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2013/03/08/markdown/" rel="alternate"/>
    <summary>Markdown形式メモ
Octopressの記述形式であるMarkDown。
githubのREADME.mdの書式でもあるのでちゃんとマスターすべくメモする。
よく使うものを抜粋。
ローカルでプレビューする
Octopressの場合は付属しているので要らないがgithub向けにローカルのレンダリングサーバを導入する。
https://github.com/metaphysiks/moo
以下のようにインストールした。 $ pip install flask $ pip install
misaka $ pip install pygments $ pip install moo
$ moo README.md</summary>
    <published>2013-03-08T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2013/05/20/gentoo/</id>
    <title>Gentoo再構築</title>
    <updated>2013-05-20T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;Gentoo再構築
gentooのルートファイルシステムに10Gを割り当てていたのだがいつのまにかディスクフルになってしまった。
portageとhomeをmountしていたので大丈夫かと思っていたのだが意外と容量を使ってしまっていた様子。
いろいろインストールしすぎなのかもしれぬ。
とりあえず/var/logの大きいファイルをxzして急場を凌いだが、
パーティションの割り方の都合で拡大できないので新しく作り直すことにした。
作業記録。
ファイルシステム準備&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2013/05/20/gentoo/" rel="alternate"/>
    <summary>Gentoo再構築
gentooのルートファイルシステムに10Gを割り当てていたのだがいつのまにかディスクフルになってしまった。
portageとhomeをmountしていたので大丈夫かと思っていたのだが意外と容量を使ってしまっていた様子。
いろいろインストールしすぎなのかもしれぬ。
とりあえず/var/logの大きいファイルをxzして急場を凌いだが、
パーティションの割り方の都合で拡大できないので新しく作り直すことにした。
作業記録。
ファイルシステム準備</summary>
    <published>2013-05-20T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2013/05/21/xorg/</id>
    <title>xorgインストール</title>
    <updated>2013-05-21T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;xorgインストール
gentooにxorgをインストールする
The X Server Configuration HOWTO
http://www.gentoo.org/doc/en/xorg-config.xml
/etc/portage/make.conf
INPUT_DEVICES=”evdev”&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2013/05/21/xorg/" rel="alternate"/>
    <summary>xorgインストール
gentooにxorgをインストールする
The X Server Configuration HOWTO
http://www.gentoo.org/doc/en/xorg-config.xml
/etc/portage/make.conf
INPUT_DEVICES=”evdev”</summary>
    <published>2013-05-21T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2013/05/22/alsa/</id>
    <title>alsaとかpulseaudio設定</title>
    <updated>2013-05-22T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;alsaとかpulseaudio設定
gentooの音周り
http://www.gentoo.org/doc/ja/alsa-guide.xml
alsa&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2013/05/22/alsa/" rel="alternate"/>
    <summary>alsaとかpulseaudio設定
gentooの音周り
http://www.gentoo.org/doc/ja/alsa-guide.xml
alsa</summary>
    <published>2013-05-22T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2013/05/25/gentoo-realtimeclock/</id>
    <title>hwclockの設定</title>
    <updated>2013-05-25T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;hwclockの設定
起動時のエラーメッセージ
Failed to sync clocks&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2013/05/25/gentoo-realtimeclock/" rel="alternate"/>
    <summary>hwclockの設定
起動時のエラーメッセージ
Failed to sync clocks</summary>
    <published>2013-05-25T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2013/05/26/gentoo-eth0/</id>
    <title>Gentooでネットワークインターフェースがeth0にならない件</title>
    <updated>2013-05-26T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;Gentooでネットワークインターフェースがeth0にならない件
最近インストールしたAMDのオンボードEtherと、MacBookAirのUsb
Etherが共にeth0にならなかった。
AMD機では、/etc/init.d/net.eth0 startが失敗するのでなんでかと思ったら違う名前になっていた。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2013/05/26/gentoo-eth0/" rel="alternate"/>
    <summary>Gentooでネットワークインターフェースがeth0にならない件
最近インストールしたAMDのオンボードEtherと、MacBookAirのUsb
Etherが共にeth0にならなかった。
AMD機では、/etc/init.d/net.eth0 startが失敗するのでなんでかと思ったら違う名前になっていた。</summary>
    <published>2013-05-26T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2013/05/27/gentoo-bluetooth/</id>
    <title>GentooでBluetooth</title>
    <updated>2013-05-27T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;GentooでBluetooth
Gentooでbluetoothを使う。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2013/05/27/gentoo-bluetooth/" rel="alternate"/>
    <summary>GentooでBluetooth
Gentooでbluetoothを使う。</summary>
    <published>2013-05-27T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2013/06/17/irrlicht_msgpackrpc/</id>
    <title>IrrlichtにMsgPackRPCを仕込む</title>
    <updated>2013-06-17T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;IrrlichtにMsgPackRPCを仕込む
Oculusの通販ステータスが早くもProcessingに変わって届くのが楽しみな今日この頃。
レンダリングエンジンにはIrrlichtを選択したのであるが、
そのままだとシーンを構築するとか諸々の作業がC++直叩きになる。
これだとさすがに大変なのでMsgPackRPCでラップして外部のツールから
操作しようと構想しておったのだが始めてみると早速問題に突き当たった。
オブジェクトを生成してそのメソッドをコールするのにどうすればいいのか。
こういう場合だ。
IMesh *mesh=CreateMesh(“miku.pmd”);
mesh-&amp;gt;SetPosition(0, 0, 5);&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2013/06/17/irrlicht_msgpackrpc/" rel="alternate"/>
    <summary>IrrlichtにMsgPackRPCを仕込む
Oculusの通販ステータスが早くもProcessingに変わって届くのが楽しみな今日この頃。
レンダリングエンジンにはIrrlichtを選択したのであるが、
そのままだとシーンを構築するとか諸々の作業がC++直叩きになる。
これだとさすがに大変なのでMsgPackRPCでラップして外部のツールから
操作しようと構想しておったのだが始めてみると早速問題に突き当たった。
オブジェクトを生成してそのメソッドをコールするのにどうすればいいのか。
こういう場合だ。
IMesh *mesh=CreateMesh(“miku.pmd”);
mesh-&gt;SetPosition(0, 0, 5);</summary>
    <published>2013-06-17T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2013/10/29/variant/</id>
    <title>wafでdebugとreleaseの設定を記述する(variant)</title>
    <updated>2013-10-29T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;wafでdebugとreleaseの設定を記述する(variant)
wafでdebug版とrelease版の出力を分けるにはvariantなる機能を使う。
+hello
+hello.cpp
+waf
+wscript&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2013/10/29/variant/" rel="alternate"/>
    <summary>wafでdebugとreleaseの設定を記述する(variant)
wafでdebug版とrelease版の出力を分けるにはvariantなる機能を使う。
+hello
+hello.cpp
+waf
+wscript</summary>
    <published>2013-10-29T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2013/12/08/use_cmake/</id>
    <title>cmakeを使ってみる(Windowsかつコマンドラインで)</title>
    <updated>2013-12-08T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;ArUcoを使おうとしたら、msvcpdのvc10版を要求されてvc12でデバッグビルドが動かなかった。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2013/12/08/use_cmake/" rel="alternate"/>
    <summary>ArUcoを使おうとしたら、msvcpdのvc10版を要求されてvc12でデバッグビルドが動かなかった。</summary>
    <published>2013-12-08T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2013/12/08/cmake/</id>
    <title>cmakeを使ってみる(Windowsかつコマンドラインで)</title>
    <updated>2013-12-08T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;cmakeを使ってみる(Windowsかつコマンドラインで)
ArUcoを使おうとしたら、msvcpdのvc10版を要求されてvc12でデバッグビルドが動かなかった。
最新版のOpenCV-2.4.7をゲットしてきたところvc10とvc11は含まれて居るのだが、vc12ビルドは含まれていなかった(vc2013は早すぎたかw)。
仕方ないので自前ビルドすることにした。
ということでcmakeの使い方を調べてみる。
ついでに、cmakeでビルドしたライブラリを特定のディレクトリを基準にインストールする方法を調べてみる。
練習にzlibをビルドしてインストールしてみる
以下のようなディレクトリ構成で運用してみることを目標に作業開始。
local_vc12&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2013/12/08/cmake/" rel="alternate"/>
    <summary>cmakeを使ってみる(Windowsかつコマンドラインで)
ArUcoを使おうとしたら、msvcpdのvc10版を要求されてvc12でデバッグビルドが動かなかった。
最新版のOpenCV-2.4.7をゲットしてきたところvc10とvc11は含まれて居るのだが、vc12ビルドは含まれていなかった(vc2013は早すぎたかw)。
仕方ないので自前ビルドすることにした。
ということでcmakeの使い方を調べてみる。
ついでに、cmakeでビルドしたライブラリを特定のディレクトリを基準にインストールする方法を調べてみる。
練習にzlibをビルドしてインストールしてみる
以下のようなディレクトリ構成で運用してみることを目標に作業開始。
local_vc12</summary>
    <published>2013-12-08T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2015/11/21/mondo_crud/</id>
    <title>MongoDBでCRUD</title>
    <updated>2015-11-21T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;“シングルページWebアプリケーション”に説明されている
mongodbをバックエンドに、node.js + expressをフロントエンドにする構成のおさらい。
MongoDB &amp;lt;-&amp;gt; node.js Express &amp;lt;-&amp;gt; Browser&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2015/11/21/mondo_crud/" rel="alternate"/>
    <summary>“シングルページWebアプリケーション”に説明されている
mongodbをバックエンドに、node.js + expressをフロントエンドにする構成のおさらい。
MongoDB &lt;-&gt; node.js Express &lt;-&gt; Browser</summary>
    <published>2015-11-21T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2015/12/24/heroku_sokcetio/</id>
    <title>Node.jsでSocket.IOなアプリをHerokuにデプロイ</title>
    <updated>2015-12-24T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;Socket.IOサーバーとしてHerokuを使ってみよう。
実験中
https://shielded-caverns-4913.herokuapp.com/
Heroku練習
以前作ったユーザーが生きていたので改めてチュートリアルを実践。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2015/12/24/heroku_sokcetio/" rel="alternate"/>
    <summary>Socket.IOサーバーとしてHerokuを使ってみよう。
実験中
https://shielded-caverns-4913.herokuapp.com/
Heroku練習
以前作ったユーザーが生きていたので改めてチュートリアルを実践。</summary>
    <published>2015-12-24T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2016/01/10/unity_shader/</id>
    <title>UnityのUsePassを追う</title>
    <updated>2016-01-10T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;下記のUnityの半透明シェーダーがいったいどういうメカニズムなのかを調べる。
Shaderの元ネタはこちら&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2016/01/10/unity_shader/" rel="alternate"/>
    <summary>下記のUnityの半透明シェーダーがいったいどういうメカニズムなのかを調べる。
Shaderの元ネタはこちら</summary>
    <published>2016-01-10T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2017/04/boost_python/</id>
    <title>Boost.Pythonのリンク周り</title>
    <updated>2017-04-22T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;mmdbridgeのビルドで必要になったBoost.Python周り。
どうやら、OpenEXR界隈では結構使われている様子。
AlembicとかUSDとか。
しかしWindows版のBoost.Pythonはリンク周りにはまり要素が多いので、記録しといた。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2017/04/boost_python/" rel="alternate"/>
    <summary>mmdbridgeのビルドで必要になったBoost.Python周り。
どうやら、OpenEXR界隈では結構使われている様子。
AlembicとかUSDとか。
しかしWindows版のBoost.Pythonはリンク周りにはまり要素が多いので、記録しといた。</summary>
    <published>2017-04-22T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2017/05/cmake_compileoptions/</id>
    <title>cmakeチートシート</title>
    <updated>2017-05-28T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;すぐ忘れるのでここをチートシート化しよう。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2017/05/cmake_compileoptions/" rel="alternate"/>
    <summary>すぐ忘れるのでここをチートシート化しよう。</summary>
    <published>2017-05-28T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2017/06/cpp11_rpc/</id>
    <title>C++でMessagePack-RPCを実装する</title>
    <updated>2017-06-03T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;最近のC++(-std=c++14)でMessagePack-RPCを再実装してみる。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2017/06/cpp11_rpc/" rel="alternate"/>
    <summary>最近のC++(-std=c++14)でMessagePack-RPCを再実装してみる。</summary>
    <published>2017-06-03T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2017/06/python_asyncio/</id>
    <title>Python3のasyncioについてのメモ</title>
    <updated>2017-06-10T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;PythonのVersion3.4から始まったasyncio周りについてのメモ。
環境は、Windows10上のpython3.6(64bit)。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2017/06/python_asyncio/" rel="alternate"/>
    <summary>PythonのVersion3.4から始まったasyncio周りについてのメモ。
環境は、Windows10上のpython3.6(64bit)。</summary>
    <published>2017-06-10T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2017/07/cmake_find_package/</id>
    <title>cmakeのfind_package</title>
    <updated>2017-07-20T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;cmakeのFIND_PACKAGEわかりずらいよ。もやもやするものがある。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2017/07/cmake_find_package/" rel="alternate"/>
    <summary>cmakeのFIND_PACKAGEわかりずらいよ。もやもやするものがある。</summary>
    <published>2017-07-20T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2017/07/imgui_python/</id>
    <title>PythonでImGuiする</title>
    <updated>2017-07-31T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;PythonでImGuiするのがよさげな気がしたのでやってみた。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2017/07/imgui_python/" rel="alternate"/>
    <summary>PythonでImGuiするのがよさげな気がしたのでやってみた。</summary>
    <published>2017-07-31T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2017/08/distutils_msvccompiler/</id>
    <title>distutilsでcl.exeが見つからない</title>
    <updated>2017-08-06T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;PythonじゃなくてVisualStudio側の問題のようなのだけど、setup.pyでネイティブモジュールをビルドするときに顕在化したので。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2017/08/distutils_msvccompiler/" rel="alternate"/>
    <summary>PythonじゃなくてVisualStudio側の問題のようなのだけど、setup.pyでネイティブモジュールをビルドするときに顕在化したので。</summary>
    <published>2017-08-06T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2017/boost_python3/</id>
    <title>Boost.PythonのPython3でのstd::string、std::wstringのふるまい</title>
    <updated>2017-08-10T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;ちょっと気になったので確認。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2017/boost_python3/" rel="alternate"/>
    <summary>ちょっと気になったので確認。</summary>
    <category term="[&quot;cpp&quot;" label="[&quot;cpp&quot;"/>
    <category term="&quot;python&quot;]" label="&quot;python&quot;]"/>
    <published>2017-08-10T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2017/08/usd/</id>
    <title>PixarのUniversal Scene Descriptionをビルドしてみる</title>
    <updated>2017-08-14T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;20170902。実はビルドスクリプトがあって、簡単になっていた。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2017/08/usd/" rel="alternate"/>
    <summary>20170902。実はビルドスクリプトがあって、簡単になっていた。</summary>
    <published>2017-08-14T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2017/gentoo_install/</id>
    <title>久しぶりにGentooインストール</title>
    <updated>2017-09-04T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;Linux成分が不足してきたので久しぶりにデスクトップを構築してみる。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2017/gentoo_install/" rel="alternate"/>
    <summary>Linux成分が不足してきたので久しぶりにデスクトップを構築してみる。</summary>
    <published>2017-09-04T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2017/gentoo_xorg/</id>
    <title>GentooでX11を設定する</title>
    <updated>2017-09-05T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;デスクトップの構築メモ。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2017/gentoo_xorg/" rel="alternate"/>
    <summary>デスクトップの構築メモ。</summary>
    <published>2017-09-05T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2017/com_wrl/</id>
    <title>WRLを使った最近のComプログラミング</title>
    <updated>2017-09-08T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;古のATLのWindows8以降？版のWRLを使ってみる。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2017/com_wrl/" rel="alternate"/>
    <summary>古のATLのWindows8以降？版のWRLを使ってみる。</summary>
    <published>2017-09-08T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2017/python_logger/</id>
    <title>Pythonのlogger</title>
    <updated>2017-10-09T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;Pythonのロガーの設定をどうすればいいのか。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2017/python_logger/" rel="alternate"/>
    <summary>Pythonのロガーの設定をどうすればいいのか。</summary>
    <category term="[&quot;python&quot;]" label="[&quot;python&quot;]"/>
    <published>2017-10-09T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2017/mypy/</id>
    <title>mypyでPythonい型チェックを取り入れる</title>
    <updated>2017-10-15T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;Pythonの型Annotationで型チェックする件について。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2017/mypy/" rel="alternate"/>
    <summary>Pythonの型Annotationで型チェックする件について。</summary>
    <category term="[&quot;python&quot;]" label="[&quot;python&quot;]"/>
    <published>2017-10-15T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2017/blender_addon_vscode/</id>
    <title>BlenderのAddOnを、VSCodeでデバッグする</title>
    <updated>2017-11-23T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;VSCodeのリモートデバッグを利用してBlenderのPythonにデバッガをアタッチする。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2017/blender_addon_vscode/" rel="alternate"/>
    <summary>VSCodeのリモートデバッグを利用してBlenderのPythonにデバッガをアタッチする。</summary>
    <category term="[&quot;blender&quot;" label="[&quot;blender&quot;"/>
    <category term="&quot;vscode&quot;]" label="&quot;vscode&quot;]"/>
    <published>2017-11-23T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2019/moldstamp/</id>
    <title>静的サイト生成器 MoldStamp</title>
    <updated>2019-04-17T15:00:00+00:00</updated>
    <content type="html">&lt;p&gt;ディスククラッシュで &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;hugo&lt;/span&gt;&lt;/code&gt; の管理リポジトリがロストしたので、
新しく自分で作ってみることにした。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2019/moldstamp/" rel="alternate"/>
    <summary>ディスククラッシュで hugo の管理リポジトリがロストしたので、
新しく自分で作ってみることにした。</summary>
    <category term="[&quot;python&quot;]" label="[&quot;python&quot;]"/>
    <published>2019-04-18T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2019/vim_on_windows/</id>
    <title>vim on Windows</title>
    <updated>2019-04-17T16:00:00+00:00</updated>
    <content type="html">&lt;p&gt;常用エディタをvimに復古するべく環境を整備し始めた。
せっかくなので &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;neovim&lt;/span&gt;&lt;/code&gt; も試してみる。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2019/vim_on_windows/" rel="alternate"/>
    <summary>常用エディタをvimに復古するべく環境を整備し始めた。
せっかくなので neovim も試してみる。</summary>
    <category term="[&quot;vim&quot;]" label="[&quot;vim&quot;]"/>
    <published>2019-04-18T01:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2019/python_clang/</id>
    <title>pythonモジュール clang で C++ ヘッダーを変換する</title>
    <updated>2019-04-18T07:10:34+00:00</updated>
    <content type="html">&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;d3d11.h&lt;/span&gt;&lt;/code&gt; を &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;d3d11.d&lt;/span&gt;&lt;/code&gt; に変換したいのでやる。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2019/python_clang/" rel="alternate"/>
    <summary>d3d11.h を d3d11.d に変換したいのでやる。</summary>
    <category term="[&quot;clang&quot;" label="[&quot;clang&quot;"/>
    <category term="&quot;python&quot;" label="&quot;python&quot;"/>
    <category term="&quot;cpp&quot;" label="&quot;cpp&quot;"/>
    <category term="&quot;dlang&quot;" label="&quot;dlang&quot;"/>
    <category term="&quot;com&quot;]" label="&quot;com&quot;]"/>
    <published>2019-04-18T16:10:34+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2019/nvim_cmake/</id>
    <title>nvim で CMake</title>
    <updated>2019-04-18T15:14:08+00:00</updated>
    <content type="html">&lt;p&gt;&lt;a class="reference external" href="https://hogehuga.net/c/289/"&gt;vimからC++プロジェクトに対してCMakeでビルドツリー生成＋コンパイル&lt;/a&gt;&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2019/nvim_cmake/" rel="alternate"/>
    <summary>vimからC++プロジェクトに対してCMakeでビルドツリー生成＋コンパイル</summary>
    <category term="[&quot;vim&quot;" label="[&quot;vim&quot;"/>
    <category term="&quot;cpp&quot;]" label="&quot;cpp&quot;]"/>
    <published>2019-04-19T00:14:08+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2019/workspacefolder/</id>
    <title>WorkspaceFolder作成中</title>
    <updated>2019-04-18T20:34:33+00:00</updated>
    <content type="html">&lt;p&gt;https://github.com/ousttrue/WorkspaceFolder&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2019/workspacefolder/" rel="alternate"/>
    <summary>https://github.com/ousttrue/WorkspaceFolder</summary>
    <category term="[&quot;python&quot;" label="[&quot;python&quot;"/>
    <category term="&quot;vim&quot;]" label="&quot;vim&quot;]"/>
    <published>2019-04-19T05:34:33+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2019/vim_lsp/</id>
    <title>vim で LSP</title>
    <updated>2019-04-19T16:32:35+00:00</updated>
    <content type="html">&lt;p&gt;Non-consecutive header level increase; 0 to 2 [myst.header]&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2019/vim_lsp/" rel="alternate"/>
    <summary>Non-consecutive header level increase; 0 to 2 [myst.header]</summary>
    <published>2019-04-20T01:32:35+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2019/nvim_oni/</id>
    <title>nvim frontend Oni</title>
    <updated>2019-04-20T17:40:00+00:00</updated>
    <content type="html">&lt;p&gt;Electron製のGUI、&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Oni&lt;/span&gt;&lt;/code&gt; です。
予想外に普通の &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;neovim&lt;/span&gt;&lt;/code&gt; だったのでWindows環境はこれで行く。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2019/nvim_oni/" rel="alternate"/>
    <summary>Electron製のGUI、Oni です。
予想外に普通の neovim だったのでWindows環境はこれで行く。</summary>
    <category term="[&quot;vim&quot;]" label="[&quot;vim&quot;]"/>
    <published>2019-04-21T02:40:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2019/vim-autoformat/</id>
    <title>vim-autoformat を使う</title>
    <updated>2019-04-21T04:00:17+00:00</updated>
    <content type="html">&lt;p&gt;当初 &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;python&lt;/span&gt;&lt;/code&gt; 向けに &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;mindriot101/vim-yapf&lt;/span&gt;&lt;/code&gt; を使っていたが、
全部まとめて &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;hiel92/vim-autoformat&lt;/span&gt;&lt;/code&gt; で設定してみる。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2019/vim-autoformat/" rel="alternate"/>
    <summary>当初 python 向けに mindriot101/vim-yapf を使っていたが、
全部まとめて hiel92/vim-autoformat で設定してみる。</summary>
    <category term="[&quot;nvim&quot;]" label="[&quot;nvim&quot;]"/>
    <published>2019-04-21T13:00:17+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2019/use_denite/</id>
    <title>Denite練習</title>
    <updated>2019-04-21T09:13:27+00:00</updated>
    <content type="html">&lt;p&gt;nvim 環境が軌道に乗ってきたので、 &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;denite&lt;/span&gt;&lt;/code&gt; やってみよう。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2019/use_denite/" rel="alternate"/>
    <summary>nvim 環境が軌道に乗ってきたので、 denite やってみよう。</summary>
    <category term="[&quot;vim&quot;]" label="[&quot;vim&quot;]"/>
    <published>2019-04-21T18:13:27+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2019/vim_completion/</id>
    <title>vim の Completion について調べる</title>
    <updated>2019-04-21T17:17:20+00:00</updated>
    <content type="html">&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;omnicompletion&lt;/span&gt;&lt;/code&gt; とかいろいろあるけどどう違うねん。ということで調べる。
&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;help&lt;/span&gt; &lt;span class="pre"&gt;ins-completion&lt;/span&gt;&lt;/code&gt;
&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;help&lt;/span&gt; &lt;span class="pre"&gt;complete-functions&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2019/vim_completion/" rel="alternate"/>
    <summary>omnicompletion とかいろいろあるけどどう違うねん。ということで調べる。
help ins-completion
help complete-functions</summary>
    <category term="[&quot;vim&quot;" label="[&quot;vim&quot;"/>
    <category term="&quot;lsp&quot;]" label="&quot;lsp&quot;]"/>
    <published>2019-04-22T02:17:20+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2019/vim_create_plugin_has_buffer/</id>
    <title>buffer を持つ vim plugin を作る</title>
    <updated>2019-04-22T15:13:09+00:00</updated>
    <content type="html">&lt;p&gt;独自のバッファを持つpluginを作りたい&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2019/vim_create_plugin_has_buffer/" rel="alternate"/>
    <summary>独自のバッファを持つpluginを作りたい</summary>
    <category term="[&quot;vim&quot;]" label="[&quot;vim&quot;]"/>
    <published>2019-04-23T00:13:09+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2019/vim_buffer/</id>
    <title>vim の Buffer 操作のメモ</title>
    <updated>2019-04-23T05:30:07+00:00</updated>
    <content type="html">&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;buffer&lt;/span&gt; &lt;span class="pre"&gt;list&lt;/span&gt;&lt;/code&gt; &amp;lt; &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;buffer&lt;/span&gt;&lt;/code&gt; &amp;gt; &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;window&lt;/span&gt;&lt;/code&gt; &amp;gt; &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;tab&lt;/span&gt;&lt;/code&gt; &amp;gt; &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;vim&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2019/vim_buffer/" rel="alternate"/>
    <summary>buffer list &lt; buffer &gt; window &gt; tab &gt; vim</summary>
    <category term="[&quot;vim&quot;]" label="[&quot;vim&quot;]"/>
    <published>2019-04-23T14:30:07+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2019/vim_debugger/</id>
    <title>vim で DebugAdapterProtocol する</title>
    <updated>2019-04-27T10:00:26+00:00</updated>
    <content type="html">&lt;p&gt;vimで &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;breakpoint&lt;/span&gt;&lt;/code&gt; を設置してステップ実行できるようなデバッガを調べた。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2019/vim_debugger/" rel="alternate"/>
    <summary>vimで breakpoint を設置してステップ実行できるようなデバッガを調べた。</summary>
    <category term="[&quot;vim&quot;" label="[&quot;vim&quot;"/>
    <category term="&quot;dap&quot;]" label="&quot;dap&quot;]"/>
    <published>2019-04-27T19:00:26+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2019/vim_python/</id>
    <title>vim の python plugin 関連</title>
    <updated>2019-04-27T18:17:07+00:00</updated>
    <content type="html">&lt;p&gt;phthon2は使わないのでスルーで。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2019/vim_python/" rel="alternate"/>
    <summary>phthon2は使わないのでスルーで。</summary>
    <category term="[&quot;vim&quot;" label="[&quot;vim&quot;"/>
    <category term="&quot;python&quot;]" label="&quot;python&quot;]"/>
    <published>2019-04-28T03:17:07+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2019/subprocess/</id>
    <title>python で process を起動して PIPE 通信する</title>
    <updated>2019-04-28T10:47:41+00:00</updated>
    <content type="html">&lt;p&gt;https://docs.python.org/3/library/subprocess.html&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2019/subprocess/" rel="alternate"/>
    <summary>https://docs.python.org/3/library/subprocess.html</summary>
    <category term="[&quot;python&quot;]" label="[&quot;python&quot;]"/>
    <published>2019-04-28T19:47:41+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2019/logging/</id>
    <title>python の logger</title>
    <updated>2019-04-30T14:19:20+00:00</updated>
    <content type="html">&lt;p&gt;loggerメモ&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2019/logging/" rel="alternate"/>
    <summary>loggerメモ</summary>
    <category term="[&quot;python&quot;]" label="[&quot;python&quot;]"/>
    <published>2019-04-30T23:19:20+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2019/import/</id>
    <title>pythonのmoduleとpackage周り</title>
    <updated>2019-04-30T15:47:39+00:00</updated>
    <content type="html">&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;ImportError:&lt;/span&gt; &lt;span class="pre"&gt;attempted&lt;/span&gt; &lt;span class="pre"&gt;relative&lt;/span&gt; &lt;span class="pre"&gt;import&lt;/span&gt; &lt;span class="pre"&gt;with&lt;/span&gt; &lt;span class="pre"&gt;no&lt;/span&gt; &lt;span class="pre"&gt;known&lt;/span&gt; &lt;span class="pre"&gt;parent&lt;/span&gt; &lt;span class="pre"&gt;package&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2019/import/" rel="alternate"/>
    <summary>ImportError: attempted relative import with no known parent package</summary>
    <category term="[&quot;python&quot;]" label="[&quot;python&quot;]"/>
    <published>2019-05-01T00:47:39+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2019/quickfix/</id>
    <title>QuickFixとLocationList周り</title>
    <updated>2019-05-06T06:09:02+00:00</updated>
    <content type="html">&lt;p&gt;Non-consecutive header level increase; 0 to 2 [myst.header]&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2019/quickfix/" rel="alternate"/>
    <summary>Non-consecutive header level increase; 0 to 2 [myst.header]</summary>
    <category term="[&quot;vim&quot;]" label="[&quot;vim&quot;]"/>
    <published>2019-05-06T15:09:02+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2019/vim_sign_gutter/</id>
    <title>Vimのgutter表示</title>
    <updated>2019-05-12T12:25:03+00:00</updated>
    <content type="html">&lt;p&gt;Non-consecutive header level increase; 0 to 2 [myst.header]&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2019/vim_sign_gutter/" rel="alternate"/>
    <summary>Non-consecutive header level increase; 0 to 2 [myst.header]</summary>
    <category term="[&quot;vim&quot;]" label="[&quot;vim&quot;]"/>
    <published>2019-05-12T21:25:03+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2019/wyam-start/</id>
    <title>wyam ことはじめ</title>
    <updated>2019-08-17T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;ソースの方のリポジトリがハードディスククラッシュで失われて
更新できなくなっていたので、サイトを作りなおし。
&lt;a class="reference external" href="https://wyam.io/"&gt;wyam&lt;/a&gt;を使ってみる。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2019/wyam-start/" rel="alternate"/>
    <summary>ソースの方のリポジトリがハードディスククラッシュで失われて
更新できなくなっていたので、サイトを作りなおし。
wyamを使ってみる。</summary>
    <published>2019-08-17T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2019/wyam-theme/</id>
    <title>wyam のテーマをカスタマイズする</title>
    <updated>2019-08-17T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;cssとかの調整。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2019/wyam-theme/" rel="alternate"/>
    <summary>cssとかの調整。</summary>
    <published>2019-08-17T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2019/restart_pyopengl/</id>
    <title>pyopengl</title>
    <updated>2019-08-24T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;久しぶりのpyopengl&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2019/restart_pyopengl/" rel="alternate"/>
    <summary>久しぶりのpyopengl</summary>
    <category term="[&quot;python&quot;" label="[&quot;python&quot;"/>
    <category term="&quot;opengl&quot;]" label="&quot;opengl&quot;]"/>
    <published>2019-08-24T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2019/vim_colorscheme/</id>
    <title>Vimのカラースキーム</title>
    <updated>2019-08-25T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;Non-consecutive header level increase; 0 to 2 [myst.header]&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2019/vim_colorscheme/" rel="alternate"/>
    <summary>Non-consecutive header level increase; 0 to 2 [myst.header]</summary>
    <published>2019-08-25T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2019/python_gis/</id>
    <title>pythonでGIS</title>
    <updated>2019-08-27T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;Windows10。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2019/python_gis/" rel="alternate"/>
    <summary>Windows10。</summary>
    <category term="[&quot;python&quot;]" label="[&quot;python&quot;]"/>
    <published>2019-08-27T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2020/hugo-github-pages/</id>
    <title>Github Pages の種類</title>
    <updated>2020-07-20T13:50:17+00:00</updated>
    <content type="html">&lt;p&gt;https://docs.github.com/ja/github/working-with-github-pages/about-github-pages&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2020/hugo-github-pages/" rel="alternate"/>
    <summary>https://docs.github.com/ja/github/working-with-github-pages/about-github-pages</summary>
    <published>2020-07-20T22:50:17+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2020/w3m-mod/</id>
    <title>w3m改造</title>
    <updated>2020-07-25T14:59:50+00:00</updated>
    <content type="html">&lt;p&gt;以前にも何度かやったことがあるのだけど立ち消えになっていた、 &lt;a class="reference external" href="http://w3m.sourceforge.net/index.ja.html"&gt;w3m&lt;/a&gt; の改造を試みている。
w3m はわりと好きなテキストブラウザなのだが、 2011 年くらいの 0.5.3 で開発が終了している様子。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2020/w3m-mod/" rel="alternate"/>
    <summary>以前にも何度かやったことがあるのだけど立ち消えになっていた、 w3m の改造を試みている。
w3m はわりと好きなテキストブラウザなのだが、 2011 年くらいの 0.5.3 で開発が終了している様子。</summary>
    <published>2020-07-25T23:59:50+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/init_zola/</id>
    <title>サイトジェネレーターを Zola に変更</title>
    <updated>2021-06-12T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;最近、 rust を再開したので、
&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Static&lt;/span&gt; &lt;span class="pre"&gt;Site&lt;/span&gt; &lt;span class="pre"&gt;Generator&lt;/span&gt;&lt;/code&gt; を go 製の hugo から rust 製の zola に変更してみた。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/init_zola/" rel="alternate"/>
    <summary>最近、 rust を再開したので、
Static Site Generator を go 製の hugo から rust 製の zola に変更してみた。</summary>
    <category term="[&quot;zola&quot;" label="[&quot;zola&quot;"/>
    <category term="&quot;rust&quot;" label="&quot;rust&quot;"/>
    <category term="&quot;ssg&quot;]" label="&quot;ssg&quot;]"/>
    <published>2021-06-12T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/mdbook/</id>
    <title>mdBook もやってみる</title>
    <updated>2021-06-14T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;&lt;a class="reference external" href="https://rust-lang.github.io/mdBook/"&gt;https://rust-lang.github.io/mdBook/&lt;/a&gt;&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/mdbook/" rel="alternate"/>
    <summary>https://rust-lang.github.io/mdBook/</summary>
    <category term="[&quot;mdbook&quot;" label="[&quot;mdbook&quot;"/>
    <category term="&quot;ssg&quot;]" label="&quot;ssg&quot;]"/>
    <published>2021-06-14T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/zola_template/</id>
    <title>zola のテンプレートを整備する</title>
    <updated>2021-06-14T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;サイト整備のメモ。共通化して部品を少なくした。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/zola_template/" rel="alternate"/>
    <summary>サイト整備のメモ。共通化して部品を少なくした。</summary>
    <category term="[&quot;zola&quot;" label="[&quot;zola&quot;"/>
    <category term="&quot;css&quot;" label="&quot;css&quot;"/>
    <category term="&quot;ssg&quot;]" label="&quot;ssg&quot;]"/>
    <published>2021-06-14T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/rust_ffi/</id>
    <title>rust の ffi</title>
    <updated>2021-06-20T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;rust の FFI に取り組んでいた。
結局、 sdl binding と imgui binding を自作した。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/rust_ffi/" rel="alternate"/>
    <summary>rust の FFI に取り組んでいた。
結局、 sdl binding と imgui binding を自作した。</summary>
    <category term="[&quot;rust&quot;" label="[&quot;rust&quot;"/>
    <category term="&quot;libclang&quot;" label="&quot;libclang&quot;"/>
    <category term="&quot;ffi&quot;]" label="&quot;ffi&quot;]"/>
    <published>2021-06-20T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/nvim_dap_codelldb/</id>
    <title>nvim-dap で coldelldb 動いた</title>
    <updated>2021-06-27T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;&lt;a class="reference external" href="https://github.com/mfussenegger/nvim-dap"&gt;nvim-dap&lt;/a&gt; で rust をデバッグするべく悪戦苦闘中。
nvim-dap というのは、来たる nvim-0.5 で動くようになる、 &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;vscode&lt;/span&gt;&lt;/code&gt; のデバッグアダプターを動作させる機能。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/nvim_dap_codelldb/" rel="alternate"/>
    <summary>nvim-dap で rust をデバッグするべく悪戦苦闘中。
nvim-dap というのは、来たる nvim-0.5 で動くようになる、 vscode のデバッグアダプターを動作させる機能。</summary>
    <category term="[&quot;nvim&quot;" label="[&quot;nvim&quot;"/>
    <category term="&quot;dap&quot;]" label="&quot;dap&quot;]"/>
    <published>2021-06-27T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/packer_luarocks/</id>
    <title>packer から luarocks を使う</title>
    <updated>2021-07-08T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;nvim のパッケージマネージャー packer に、 luarocks のモジュール機能があるのだが Windows hererocks が失敗する。
Linux は、 hererocks はできるがモジュールがロードできぬ。
問題の少ない Linux から調べていく。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/packer_luarocks/" rel="alternate"/>
    <summary>nvim のパッケージマネージャー packer に、 luarocks のモジュール機能があるのだが Windows hererocks が失敗する。
Linux は、 hererocks はできるがモジュールがロードできぬ。
問題の少ない Linux から調べていく。</summary>
    <category term="[&quot;nvim&quot;" label="[&quot;nvim&quot;"/>
    <category term="&quot;lua&quot;]" label="&quot;lua&quot;]"/>
    <published>2021-07-08T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/lua_debug_adapter/</id>
    <title>lua の DebugAdapter を書いてみた</title>
    <updated>2021-07-13T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;nvim の nvim-dap で lua をデバッグするべく自分で書いてみた。
手頃なのが見つからなかったので。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/lua_debug_adapter/" rel="alternate"/>
    <summary>nvim の nvim-dap で lua をデバッグするべく自分で書いてみた。
手頃なのが見つからなかったので。</summary>
    <category term="[&quot;lua&quot;" label="[&quot;lua&quot;"/>
    <category term="&quot;dap&quot;]" label="&quot;dap&quot;]"/>
    <published>2021-07-13T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/fix_hererocks/</id>
    <title>VS2019 向けに hererocks を修正(vswhere を使う)</title>
    <updated>2021-07-15T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;hererocks が VS2019BuildTools を検知して動作するように改造してみた。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/fix_hererocks/" rel="alternate"/>
    <summary>hererocks が VS2019BuildTools を検知して動作するように改造してみた。</summary>
    <category term="[&quot;python&quot;" label="[&quot;python&quot;"/>
    <category term="&quot;lua&quot;" label="&quot;lua&quot;"/>
    <category term="&quot;nvim&quot;]" label="&quot;nvim&quot;]"/>
    <published>2021-07-15T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/lua_imgui_plan/</id>
    <title>lua による imgui 計画</title>
    <updated>2021-07-17T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;Non-consecutive header level increase; 0 to 2 [myst.header]&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/lua_imgui_plan/" rel="alternate"/>
    <summary>Non-consecutive header level increase; 0 to 2 [myst.header]</summary>
    <category term="[&quot;lua&quot;" label="[&quot;lua&quot;"/>
    <category term="&quot;imgui&quot;]" label="&quot;imgui&quot;]"/>
    <published>2021-07-17T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/luajitffi/</id>
    <title>libclang で luajit 向けの FFI を生成する</title>
    <updated>2021-07-23T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;lua による imgui 計画の準備として、 &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;libclang&lt;/span&gt;&lt;/code&gt; によるバインディング生成器を &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;luajit&lt;/span&gt;&lt;/code&gt; に移植してみた。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/luajitffi/" rel="alternate"/>
    <summary>lua による imgui 計画の準備として、 libclang によるバインディング生成器を luajit に移植してみた。</summary>
    <category term="[&quot;lua&quot;" label="[&quot;lua&quot;"/>
    <category term="&quot;libclang&quot;]" label="&quot;libclang&quot;]"/>
    <published>2021-07-23T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/invoke/</id>
    <title>python の task runner invoke</title>
    <updated>2021-07-24T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;python でちょっとしたツールを書くときに便利。
&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;make&lt;/span&gt;&lt;/code&gt; みたいにタスクを定義して、コマンドラインから実行する。
task として定義した関数の引数に応じてコマンドライン引数をさばけるので &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;argparse&lt;/span&gt;&lt;/code&gt; せずにすませることができる。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/invoke/" rel="alternate"/>
    <summary>python でちょっとしたツールを書くときに便利。
make みたいにタスクを定義して、コマンドラインから実行する。
task として定義した関数の引数に応じてコマンドライン引数をさばけるので argparse せずにすませることができる。</summary>
    <category term="[&quot;python&quot;]" label="[&quot;python&quot;]"/>
    <published>2021-07-24T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/example_glfw_openg/</id>
    <title>imgui の FFI が luajit で動くところまで作った</title>
    <updated>2021-07-25T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;&lt;a class="reference external" href="https://github.com/ousttrue/limgui/blob/master/imgui_ffi/cdef/imgui.lua"&gt;https://github.com/ousttrue/limgui/blob/master/imgui_ffi/cdef/imgui.lua&lt;/a&gt;&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/example_glfw_openg/" rel="alternate"/>
    <summary>https://github.com/ousttrue/limgui/blob/master/imgui_ffi/cdef/imgui.lua</summary>
    <category term="[&quot;luajit&quot;" label="[&quot;luajit&quot;"/>
    <category term="&quot;ffi&quot;" label="&quot;ffi&quot;"/>
    <category term="&quot;imgui&quot;" label="&quot;imgui&quot;"/>
    <category term="&quot;libclang&quot;]" label="&quot;libclang&quot;]"/>
    <published>2021-07-25T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/lua_info/</id>
    <title>luaメモ</title>
    <updated>2021-07-27T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;&lt;a class="reference external" href="https://www.lua.org/docs.html"&gt;https://www.lua.org/docs.html&lt;/a&gt;&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/lua_info/" rel="alternate"/>
    <summary>https://www.lua.org/docs.html</summary>
    <category term="[&quot;lua&quot;" label="[&quot;lua&quot;"/>
    <category term="&quot;luajit&quot;" label="&quot;luajit&quot;"/>
    <category term="&quot;lsp&quot;" label="&quot;lsp&quot;"/>
    <category term="&quot;dap&quot;]" label="&quot;dap&quot;]"/>
    <published>2021-07-27T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/imgui_docking_api/</id>
    <title>ImGui の API</title>
    <updated>2021-07-28T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;&lt;a class="reference external" href="https://github.com/ousttrue/limgui"&gt;https://github.com/ousttrue/limgui&lt;/a&gt;&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/imgui_docking_api/" rel="alternate"/>
    <summary>https://github.com/ousttrue/limgui</summary>
    <category term="[&quot;imgui&quot;" label="[&quot;imgui&quot;"/>
    <category term="&quot;luajit&quot;" label="&quot;luajit&quot;"/>
    <category term="&quot;ffi&quot;]" label="&quot;ffi&quot;]"/>
    <published>2021-07-28T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/luv/</id>
    <title>luv</title>
    <updated>2021-07-29T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;main loop がブロックするので luv を取り入れてみる。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/luv/" rel="alternate"/>
    <summary>main loop がブロックするので luv を取り入れてみる。</summary>
    <category term="[&quot;lua&quot;]" label="[&quot;lua&quot;]"/>
    <published>2021-07-29T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/luada/</id>
    <title>LuaDA</title>
    <updated>2021-07-31T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;vscode の lua デバッガーに&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/luada/" rel="alternate"/>
    <summary>vscode の lua デバッガーに</summary>
    <category term="[&quot;lua&quot;" label="[&quot;lua&quot;"/>
    <category term="&quot;luajit&quot;" label="&quot;luajit&quot;"/>
    <category term="&quot;dap&quot;]" label="&quot;dap&quot;]"/>
    <published>2021-07-31T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/summer/lua_opengl/</id>
    <title>Lua で OpenGL</title>
    <updated>2021-08-05T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;imgui bind がだいたいできて軌道に乗ったので、glTF viewer の作成にとりかかる。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/summer/lua_opengl/" rel="alternate"/>
    <summary>imgui bind がだいたいできて軌道に乗ったので、glTF viewer の作成にとりかかる。</summary>
    <category term="[&quot;lua&quot;" label="[&quot;lua&quot;"/>
    <category term="&quot;luajit&quot;" label="&quot;luajit&quot;"/>
    <category term="&quot;OpenGL&quot;]" label="&quot;OpenGL&quot;]"/>
    <published>2021-08-05T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/summer/lua_language_server/</id>
    <title>Lua Language Server 解読</title>
    <updated>2021-08-06T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;&lt;a class="reference external" href="https://github.com/sumneko/lua-language-server"&gt;lua-language-server&lt;/a&gt; が luajit ffi のインテリセンスを出せるように emmylua annotation を生成するより、
&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;ffi.cdef&lt;/span&gt;&lt;/code&gt; を読めるようにすればよいのでは。
ということで、lua-language-server を探ってみる。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/summer/lua_language_server/" rel="alternate"/>
    <summary>lua-language-server が luajit ffi のインテリセンスを出せるように emmylua annotation を生成するより、
ffi.cdef を読めるようにすればよいのでは。
ということで、lua-language-server を探ってみる。</summary>
    <category term="[&quot;lua&quot;" label="[&quot;lua&quot;"/>
    <category term="&quot;luajit&quot;" label="&quot;luajit&quot;"/>
    <category term="&quot;lsp&quot;]" label="&quot;lsp&quot;]"/>
    <published>2021-08-06T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/summer/nvy/</id>
    <title>nvim frontend nvy</title>
    <updated>2021-08-07T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;よさげなレポジトリを発見した。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/summer/nvy/" rel="alternate"/>
    <summary>よさげなレポジトリを発見した。</summary>
    <category term="[&quot;nvim&quot;" label="[&quot;nvim&quot;"/>
    <category term="&quot;msgpack&quot;]" label="&quot;msgpack&quot;]"/>
    <published>2021-08-07T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/summer/update_asio/</id>
    <title>Asio と Coroutine (c++20)</title>
    <updated>2021-08-15T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;非同期ライブラリ ASIO&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/summer/update_asio/" rel="alternate"/>
    <summary>非同期ライブラリ ASIO</summary>
    <category term="[&quot;cpp&quot;" label="[&quot;cpp&quot;"/>
    <category term="&quot;asio&quot;]" label="&quot;asio&quot;]"/>
    <published>2021-08-15T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/summer/nvimtexture/</id>
    <title>NvimTexture開発開始</title>
    <updated>2021-08-22T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Nvy&lt;/span&gt;&lt;/code&gt; の改造をしてだいたい構造を理解した。
&lt;a class="reference external" href="https://github.com/ousttrue/msgpack-rpc-asio"&gt;msgpack-rpc-asio&lt;/a&gt; をオーバーホールして使えるようになった。
ということで一から組みなおすで。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/summer/nvimtexture/" rel="alternate"/>
    <summary>Nvy の改造をしてだいたい構造を理解した。
msgpack-rpc-asio をオーバーホールして使えるようになった。
ということで一から組みなおすで。</summary>
    <category term="[&quot;nvim&quot;" label="[&quot;nvim&quot;"/>
    <category term="&quot;msgpack&quot;]" label="&quot;msgpack&quot;]"/>
    <published>2021-08-22T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/summer/blender3/</id>
    <title>Blender-3.0</title>
    <updated>2021-08-30T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;Blender-3.0 が面白そうだし bender 活動を再開しよう。
&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Gingerbread&lt;/span&gt; &lt;span class="pre"&gt;Man&lt;/span&gt;&lt;/code&gt; を作りなおそう。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/summer/blender3/" rel="alternate"/>
    <summary>Blender-3.0 が面白そうだし bender 活動を再開しよう。
Gingerbread Man を作りなおそう。</summary>
    <category term="[&quot;blender&quot;]" label="[&quot;blender&quot;]"/>
    <published>2021-08-30T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/summer/normalmap/</id>
    <title>法線マップやってみる</title>
    <updated>2021-09-05T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;glTFViewerの実装がてら法線マップの実装をやってみる。
&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;OpenGL&lt;/span&gt; &lt;span class="pre"&gt;4.0&lt;/span&gt; &lt;span class="pre"&gt;Shading&lt;/span&gt; &lt;span class="pre"&gt;Language&lt;/span&gt; &lt;span class="pre"&gt;Cookbook&lt;/span&gt;&lt;/code&gt; を参考に進めた。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/summer/normalmap/" rel="alternate"/>
    <summary>glTFViewerの実装がてら法線マップの実装をやってみる。
OpenGL 4.0 Shading Language Cookbook を参考に進めた。</summary>
    <category term="[&quot;OpenGL&quot;]" label="[&quot;OpenGL&quot;]"/>
    <published>2021-09-05T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/fall/gizmo/</id>
    <title>gizmo のライブラリを整備したい</title>
    <updated>2021-09-10T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;去年手を付けたのだが、放棄されていたのを発掘した。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/fall/gizmo/" rel="alternate"/>
    <summary>去年手を付けたのだが、放棄されていたのを発掘した。</summary>
    <category term="[&quot;3D&quot;" label="[&quot;3D&quot;"/>
    <category term="&quot;c++&quot;]" label="&quot;c++&quot;]"/>
    <published>2021-09-10T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/fall/sphinx_myst/</id>
    <title>sphinx + MyST よいのでは</title>
    <updated>2021-09-11T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;Gizmo を作る過程で GeometryShader からやりなおしていたら、記憶が飛んでいたので
忘れてもいいように記録しておくことにした。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/fall/sphinx_myst/" rel="alternate"/>
    <summary>Gizmo を作る過程で GeometryShader からやりなおしていたら、記憶が飛んでいたので
忘れてもいいように記録しておくことにした。</summary>
    <category term="[&quot;ssg&quot;" label="[&quot;ssg&quot;"/>
    <category term="&quot;sphinx&quot;]" label="&quot;sphinx&quot;]"/>
    <published>2021-09-11T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/fall/squirrel/</id>
    <title>Squirrel</title>
    <updated>2021-09-27T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;lua のコード解読しててふお思い出した Squirrel 。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/fall/squirrel/" rel="alternate"/>
    <summary>lua のコード解読しててふお思い出した Squirrel 。</summary>
    <category term="[&quot;sq&quot;]" label="[&quot;sq&quot;]"/>
    <published>2021-09-27T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/fall/nikola/</id>
    <title>サイトジェネレーターを nikola にしてみる</title>
    <updated>2021-10-16T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;また生成システムを変えてみる。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/fall/nikola/" rel="alternate"/>
    <summary>また生成システムを変えてみる。</summary>
    <category term="[&quot;ssg&quot;" label="[&quot;ssg&quot;"/>
    <category term="&quot;python&quot;]" label="&quot;python&quot;]"/>
    <published>2021-10-16T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/fall/wayland/</id>
    <title>最近のWayland</title>
    <updated>2021-10-23T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;&lt;a class="reference external" href="https://gitlab.freedesktop.org/wayland"&gt;https://gitlab.freedesktop.org/wayland&lt;/a&gt;&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/fall/wayland/" rel="alternate"/>
    <summary>https://gitlab.freedesktop.org/wayland</summary>
    <category term="[&quot;wayland&quot;" label="[&quot;wayland&quot;"/>
    <category term="&quot;wsl&quot;]" label="&quot;wsl&quot;]"/>
    <published>2021-10-23T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/fall/wsl_rawdevice/</id>
    <title>wsl で HDD を mount する</title>
    <updated>2021-10-30T00:18:23+00:00</updated>
    <content type="html">&lt;p&gt;予備の HDD を raw device としてマウントして mpd の sotrage として使ってみる。
(OSが吹き飛ぶなどそれなりに危険な作業なので注意)&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/fall/wsl_rawdevice/" rel="alternate"/>
    <summary>予備の HDD を raw device としてマウントして mpd の sotrage として使ってみる。
(OSが吹き飛ぶなどそれなりに危険な作業なので注意)</summary>
    <category term="[&quot;wsl&quot;]" label="[&quot;wsl&quot;]"/>
    <published>2021-10-30T00:18:23+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/fall/wslg_on_windows11/</id>
    <title>Windows11 で wslg する</title>
    <updated>2021-10-31T00:18:23+00:00</updated>
    <content type="html">&lt;p&gt;PCを新調したので &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;Windows11&lt;/span&gt;&lt;/code&gt; にアップグレードして wslg を試してみた。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/fall/wslg_on_windows11/" rel="alternate"/>
    <summary>PCを新調したので Windows11 にアップグレードして wslg を試してみた。</summary>
    <category term="[&quot;wsl&quot;]" label="[&quot;wsl&quot;]"/>
    <published>2021-10-31T00:18:23+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/fall/msys2/</id>
    <title>msys2 セットアップ</title>
    <updated>2021-11-13T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;Non-consecutive header level increase; 0 to 2 [myst.header]&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/fall/msys2/" rel="alternate"/>
    <summary>Non-consecutive header level increase; 0 to 2 [myst.header]</summary>
    <category term="[&quot;msys2&quot;]" label="[&quot;msys2&quot;]"/>
    <published>2021-11-13T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/fall/pyproject/</id>
    <title>最近のpythonパッケージングとpyproject.toml</title>
    <updated>2021-11-15T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;最近の python package の記述の仕方で、 &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;pyproject.toml&lt;/span&gt;&lt;/code&gt; なる作法があるのでメモ。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/fall/pyproject/" rel="alternate"/>
    <summary>最近の python package の記述の仕方で、 pyproject.toml なる作法があるのでメモ。</summary>
    <category term="[&quot;python&quot;]" label="[&quot;python&quot;]"/>
    <published>2021-11-15T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/fall/pyside6/</id>
    <title>pyside6 やってみる</title>
    <updated>2021-11-16T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;&lt;a class="reference external" href="https://doc.qt.io/qtforpython/quickstart.html"&gt;https://doc.qt.io/qtforpython/quickstart.html&lt;/a&gt;&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/fall/pyside6/" rel="alternate"/>
    <summary>https://doc.qt.io/qtforpython/quickstart.html</summary>
    <category term="[&quot;python&quot;" label="[&quot;python&quot;"/>
    <category term="&quot;qt&quot;]" label="&quot;qt&quot;]"/>
    <published>2021-11-16T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/fall/ktx2/</id>
    <title>ktx2 情報収集</title>
    <updated>2021-11-21T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;&lt;a class="reference external" href="https://www.khronos.org/ktx/"&gt;https://www.khronos.org/ktx/&lt;/a&gt;&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/fall/ktx2/" rel="alternate"/>
    <summary>https://www.khronos.org/ktx/</summary>
    <category term="[&quot;gltf&quot;]" label="[&quot;gltf&quot;]"/>
    <published>2021-11-21T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/winter/cindex/</id>
    <title>libclang で 言語バインディングを作る</title>
    <updated>2021-12-04T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;(2019)&lt;a class="reference external" href="https://github.com/ousttrue/pycpptool"&gt;https://github.com/ousttrue/pycpptool&lt;/a&gt;&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/winter/cindex/" rel="alternate"/>
    <summary>(2019)https://github.com/ousttrue/pycpptool</summary>
    <category term="[&quot;python&quot;" label="[&quot;python&quot;"/>
    <category term="&quot;libclang&quot;" label="&quot;libclang&quot;"/>
    <category term="&quot;cython&quot;]" label="&quot;cython&quot;]"/>
    <published>2021-12-04T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/winter/python_typing_stub/</id>
    <title>python の型ヒント</title>
    <updated>2021-12-12T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;&lt;a class="reference external" href="https://docs.python.org/3/library/typing.html"&gt;https://docs.python.org/3/library/typing.html&lt;/a&gt;&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/winter/python_typing_stub/" rel="alternate"/>
    <summary>https://docs.python.org/3/library/typing.html</summary>
    <category term="[&quot;python&quot;]" label="[&quot;python&quot;]"/>
    <published>2021-12-12T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/winter/ablog/</id>
    <title>SSGをABlogに変更</title>
    <updated>2021-12-20T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;&lt;a class="reference external" href="https://getnikola.com/"&gt;nikola&lt;/a&gt; は使いこなせなくて短命に終わってしまった。
&lt;a class="reference external" href="https://pydoit.org/"&gt;doit&lt;/a&gt; は面白いと思うのだが。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/winter/ablog/" rel="alternate"/>
    <summary>nikola は使いこなせなくて短命に終わってしまった。
doit は面白いと思うのだが。</summary>
    <category term="[&quot;python&quot;" label="[&quot;python&quot;"/>
    <category term="&quot;ssg&quot;" label="&quot;ssg&quot;"/>
    <category term="&quot;sphinx&quot;]" label="&quot;sphinx&quot;]"/>
    <published>2021-12-20T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/winter/python_imgui/</id>
    <title>imgui の python バインディングをまた作る</title>
    <updated>2021-12-20T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;&lt;a class="reference external" href="https://github.com/ousttrue/cydeer"&gt;https://github.com/ousttrue/cydeer&lt;/a&gt;&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/winter/python_imgui/" rel="alternate"/>
    <summary>https://github.com/ousttrue/cydeer</summary>
    <category term="[&quot;python&quot;" label="[&quot;python&quot;"/>
    <category term="&quot;libclang&quot;" label="&quot;libclang&quot;"/>
    <category term="&quot;cython&quot;" label="&quot;cython&quot;"/>
    <category term="&quot;imgui&quot;]" label="&quot;imgui&quot;]"/>
    <published>2021-12-20T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/winter/python_geo/</id>
    <title>python で地理情報を扱う</title>
    <updated>2021-12-28T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;python で地図画像を作ろうと思ったら思いのほか大変だった(まだできていない)のでメモ。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/winter/python_geo/" rel="alternate"/>
    <summary>python で地図画像を作ろうと思ったら思いのほか大変だった(まだできていない)のでメモ。</summary>
    <category term="[&quot;python&quot;" label="[&quot;python&quot;"/>
    <category term="&quot;gis&quot;]" label="&quot;gis&quot;]"/>
    <published>2021-12-28T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2021/winter/geojson/</id>
    <title>geojson</title>
    <updated>2021-12-29T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;既存のライブラリが重厚長大なものが多いのだけど、
OpenGL や SVG のような二次元のベクター描画で簡単に済ませたい。
その方向で調査。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2021/winter/geojson/" rel="alternate"/>
    <summary>既存のライブラリが重厚長大なものが多いのだけど、
OpenGL や SVG のような二次元のベクター描画で簡単に済ませたい。
その方向で調査。</summary>
    <category term="[&quot;gis&quot;" label="[&quot;gis&quot;"/>
    <category term="&quot;python&quot;]" label="&quot;python&quot;]"/>
    <published>2021-12-29T00:00:00+00:00</published>
  </entry>
</feed>
