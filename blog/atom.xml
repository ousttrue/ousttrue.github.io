<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="ja">
  <id>https://ousttrue.github.io/</id>
  <title>三次元日誌(ablog)</title>
  <updated>2021-12-19T17:01:37.956743+00:00</updated>
  <link href="https://ousttrue.github.io/"/>
  <link href="https://ousttrue.github.io/blog/atom.xml" rel="self"/>
  <generator uri="https://ablog.readthedocs.org/" version="0.10.21">ABlog</generator>
  <entry>
    <id>https://ousttrue.github.io/posts/2012/12/26/customdelegate.html</id>
    <title>カスタムデリゲート</title>
    <updated>2012-12-26T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;C++のQt4と平行してPyQt4を使い始めた。大概の用途にはこっちで十分な気がする。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2012/12/26/customdelegate.html" rel="alternate"/>
    <summary>C++のQt4と平行してPyQt4を使い始めた。大概の用途にはこっちで十分な気がする。</summary>
    <published>2012-12-26T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2013/03/01/customize_octopress.html</id>
    <title>octopress調整中</title>
    <updated>2013-03-01T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;octopress調整中
とりあえずタイトルとか入れてみた。 あと、syntax highlightを試してみた。
syntax highlight
http://octopress.org/docs/plugins/codeblock/
python3の方が参照されるとエラーになってしまう。 gentooなので、&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2013/03/01/customize_octopress.html" rel="alternate"/>
    <summary>octopress調整中
とりあえずタイトルとか入れてみた。 あと、syntax highlightを試してみた。
syntax highlight
http://octopress.org/docs/plugins/codeblock/
python3の方が参照されるとエラーになってしまう。 gentooなので、</summary>
    <published>2013-03-01T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2013/03/08/markdown.html</id>
    <title>Markdown形式メモ</title>
    <updated>2013-03-08T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;Markdown形式メモ
Octopressの記述形式であるMarkDown。
githubのREADME.mdの書式でもあるのでちゃんとマスターすべくメモする。
よく使うものを抜粋。
ローカルでプレビューする
Octopressの場合は付属しているので要らないがgithub向けにローカルのレンダリングサーバを導入する。
https://github.com/metaphysiks/moo
以下のようにインストールした。 $ pip install flask $ pip install
misaka $ pip install pygments $ pip install moo
$ moo README.md&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2013/03/08/markdown.html" rel="alternate"/>
    <summary>Markdown形式メモ
Octopressの記述形式であるMarkDown。
githubのREADME.mdの書式でもあるのでちゃんとマスターすべくメモする。
よく使うものを抜粋。
ローカルでプレビューする
Octopressの場合は付属しているので要らないがgithub向けにローカルのレンダリングサーバを導入する。
https://github.com/metaphysiks/moo
以下のようにインストールした。 $ pip install flask $ pip install
misaka $ pip install pygments $ pip install moo
$ moo README.md</summary>
    <published>2013-03-08T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2013/05/20/gentoo.html</id>
    <title>Gentoo再構築</title>
    <updated>2013-05-20T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;Gentoo再構築
gentooのルートファイルシステムに10Gを割り当てていたのだがいつのまにかディスクフルになってしまった。
portageとhomeをmountしていたので大丈夫かと思っていたのだが意外と容量を使ってしまっていた様子。
いろいろインストールしすぎなのかもしれぬ。
とりあえず/var/logの大きいファイルをxzして急場を凌いだが、
パーティションの割り方の都合で拡大できないので新しく作り直すことにした。
作業記録。
ファイルシステム準備&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2013/05/20/gentoo.html" rel="alternate"/>
    <summary>Gentoo再構築
gentooのルートファイルシステムに10Gを割り当てていたのだがいつのまにかディスクフルになってしまった。
portageとhomeをmountしていたので大丈夫かと思っていたのだが意外と容量を使ってしまっていた様子。
いろいろインストールしすぎなのかもしれぬ。
とりあえず/var/logの大きいファイルをxzして急場を凌いだが、
パーティションの割り方の都合で拡大できないので新しく作り直すことにした。
作業記録。
ファイルシステム準備</summary>
    <published>2013-05-20T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2013/05/21/xorg.html</id>
    <title>xorgインストール</title>
    <updated>2013-05-21T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;xorgインストール
gentooにxorgをインストールする
The X Server Configuration HOWTO
http://www.gentoo.org/doc/en/xorg-config.xml
/etc/portage/make.conf
INPUT_DEVICES=&amp;quot;evdev&amp;quot;&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2013/05/21/xorg.html" rel="alternate"/>
    <summary>xorgインストール
gentooにxorgをインストールする
The X Server Configuration HOWTO
http://www.gentoo.org/doc/en/xorg-config.xml
/etc/portage/make.conf
INPUT_DEVICES="evdev"</summary>
    <published>2013-05-21T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2013/05/22/alsa.html</id>
    <title>alsaとかpulseaudio設定</title>
    <updated>2013-05-22T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;alsaとかpulseaudio設定
gentooの音周り
http://www.gentoo.org/doc/ja/alsa-guide.xml
alsa&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2013/05/22/alsa.html" rel="alternate"/>
    <summary>alsaとかpulseaudio設定
gentooの音周り
http://www.gentoo.org/doc/ja/alsa-guide.xml
alsa</summary>
    <published>2013-05-22T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2013/05/25/gentoo-realtimeclock.html</id>
    <title>hwclockの設定</title>
    <updated>2013-05-25T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;hwclockの設定
起動時のエラーメッセージ
Failed to sync clocks&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2013/05/25/gentoo-realtimeclock.html" rel="alternate"/>
    <summary>hwclockの設定
起動時のエラーメッセージ
Failed to sync clocks</summary>
    <published>2013-05-25T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2013/05/26/gentoo-eth0.html</id>
    <title>Gentooでネットワークインターフェースがeth0にならない件</title>
    <updated>2013-05-26T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;Gentooでネットワークインターフェースがeth0にならない件
最近インストールしたAMDのオンボードEtherと、MacBookAirのUsb
Etherが共にeth0にならなかった。
AMD機では、/etc/init.d/net.eth0 startが失敗するのでなんでかと思ったら違う名前になっていた。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2013/05/26/gentoo-eth0.html" rel="alternate"/>
    <summary>Gentooでネットワークインターフェースがeth0にならない件
最近インストールしたAMDのオンボードEtherと、MacBookAirのUsb
Etherが共にeth0にならなかった。
AMD機では、/etc/init.d/net.eth0 startが失敗するのでなんでかと思ったら違う名前になっていた。</summary>
    <published>2013-05-26T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2013/05/27/gentoo-bluetooth.html</id>
    <title>GentooでBluetooth</title>
    <updated>2013-05-27T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;GentooでBluetooth
Gentooでbluetoothを使う。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2013/05/27/gentoo-bluetooth.html" rel="alternate"/>
    <summary>GentooでBluetooth
Gentooでbluetoothを使う。</summary>
    <published>2013-05-27T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2013/06/17/irrlicht_msgpackrpc.html</id>
    <title>IrrlichtにMsgPackRPCを仕込む</title>
    <updated>2013-06-17T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;IrrlichtにMsgPackRPCを仕込む
Oculusの通販ステータスが早くもProcessingに変わって届くのが楽しみな今日この頃。
レンダリングエンジンにはIrrlichtを選択したのであるが、
そのままだとシーンを構築するとか諸々の作業がC++直叩きになる。
これだとさすがに大変なのでMsgPackRPCでラップして外部のツールから
操作しようと構想しておったのだが始めてみると早速問題に突き当たった。
オブジェクトを生成してそのメソッドをコールするのにどうすればいいのか。
こういう場合だ。
IMesh *mesh=CreateMesh(&amp;quot;miku.pmd&amp;quot;);
mesh-&amp;gt;SetPosition(0, 0, 5);&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2013/06/17/irrlicht_msgpackrpc.html" rel="alternate"/>
    <summary>IrrlichtにMsgPackRPCを仕込む
Oculusの通販ステータスが早くもProcessingに変わって届くのが楽しみな今日この頃。
レンダリングエンジンにはIrrlichtを選択したのであるが、
そのままだとシーンを構築するとか諸々の作業がC++直叩きになる。
これだとさすがに大変なのでMsgPackRPCでラップして外部のツールから
操作しようと構想しておったのだが始めてみると早速問題に突き当たった。
オブジェクトを生成してそのメソッドをコールするのにどうすればいいのか。
こういう場合だ。
IMesh *mesh=CreateMesh("miku.pmd");
mesh-&gt;SetPosition(0, 0, 5);</summary>
    <published>2013-06-17T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2013/10/29/variant.html</id>
    <title>wafでdebugとreleaseの設定を記述する(variant)</title>
    <updated>2013-10-29T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;wafでdebugとreleaseの設定を記述する(variant)
wafでdebug版とrelease版の出力を分けるにはvariantなる機能を使う。
+hello
+hello.cpp
+waf
+wscript&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2013/10/29/variant.html" rel="alternate"/>
    <summary>wafでdebugとreleaseの設定を記述する(variant)
wafでdebug版とrelease版の出力を分けるにはvariantなる機能を使う。
+hello
+hello.cpp
+waf
+wscript</summary>
    <published>2013-10-29T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2013/12/08/use_cmake.html</id>
    <title>cmakeを使ってみる(Windowsかつコマンドラインで)</title>
    <updated>2013-12-08T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;ArUcoを使おうとしたら、msvcpdのvc10版を要求されてvc12でデバッグビルドが動かなかった。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2013/12/08/use_cmake.html" rel="alternate"/>
    <summary>ArUcoを使おうとしたら、msvcpdのvc10版を要求されてvc12でデバッグビルドが動かなかった。</summary>
    <published>2013-12-08T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2013/12/08/cmake.html</id>
    <title>cmakeを使ってみる(Windowsかつコマンドラインで)</title>
    <updated>2013-12-08T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;cmakeを使ってみる(Windowsかつコマンドラインで)
ArUcoを使おうとしたら、msvcpdのvc10版を要求されてvc12でデバッグビルドが動かなかった。
最新版のOpenCV-2.4.7をゲットしてきたところvc10とvc11は含まれて居るのだが、vc12ビルドは含まれていなかった(vc2013は早すぎたかw)。
仕方ないので自前ビルドすることにした。
ということでcmakeの使い方を調べてみる。
ついでに、cmakeでビルドしたライブラリを特定のディレクトリを基準にインストールする方法を調べてみる。
練習にzlibをビルドしてインストールしてみる
以下のようなディレクトリ構成で運用してみることを目標に作業開始。
local_vc12&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2013/12/08/cmake.html" rel="alternate"/>
    <summary>cmakeを使ってみる(Windowsかつコマンドラインで)
ArUcoを使おうとしたら、msvcpdのvc10版を要求されてvc12でデバッグビルドが動かなかった。
最新版のOpenCV-2.4.7をゲットしてきたところvc10とvc11は含まれて居るのだが、vc12ビルドは含まれていなかった(vc2013は早すぎたかw)。
仕方ないので自前ビルドすることにした。
ということでcmakeの使い方を調べてみる。
ついでに、cmakeでビルドしたライブラリを特定のディレクトリを基準にインストールする方法を調べてみる。
練習にzlibをビルドしてインストールしてみる
以下のようなディレクトリ構成で運用してみることを目標に作業開始。
local_vc12</summary>
    <published>2013-12-08T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2015/11/21/mondo_crud.html</id>
    <title>MongoDBでCRUD</title>
    <updated>2015-11-21T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;“シングルページWebアプリケーション”に説明されている
mongodbをバックエンドに、node.js + expressをフロントエンドにする構成のおさらい。
MongoDB &amp;lt;-&amp;gt; node.js Express &amp;lt;-&amp;gt; Browser&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2015/11/21/mondo_crud.html" rel="alternate"/>
    <summary>“シングルページWebアプリケーション”に説明されている
mongodbをバックエンドに、node.js + expressをフロントエンドにする構成のおさらい。
MongoDB &lt;-&gt; node.js Express &lt;-&gt; Browser</summary>
    <published>2015-11-21T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2015/12/24/heroku_sokcetio.html</id>
    <title>Node.jsでSocket.IOなアプリをHerokuにデプロイ</title>
    <updated>2015-12-24T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;Socket.IOサーバーとしてHerokuを使ってみよう。
実験中
https://shielded-caverns-4913.herokuapp.com/
Heroku練習
以前作ったユーザーが生きていたので改めてチュートリアルを実践。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2015/12/24/heroku_sokcetio.html" rel="alternate"/>
    <summary>Socket.IOサーバーとしてHerokuを使ってみよう。
実験中
https://shielded-caverns-4913.herokuapp.com/
Heroku練習
以前作ったユーザーが生きていたので改めてチュートリアルを実践。</summary>
    <published>2015-12-24T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2016/01/10/unity_shader.html</id>
    <title>UnityのUsePassを追う</title>
    <updated>2016-01-10T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;下記のUnityの半透明シェーダーがいったいどういうメカニズムなのかを調べる。
Shaderの元ネタはこちら&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2016/01/10/unity_shader.html" rel="alternate"/>
    <summary>下記のUnityの半透明シェーダーがいったいどういうメカニズムなのかを調べる。
Shaderの元ネタはこちら</summary>
    <published>2016-01-10T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2017/04/boost_python.html</id>
    <title>Boost.Pythonのリンク周り</title>
    <updated>2017-04-22T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;mmdbridgeのビルドで必要になったBoost.Python周り。
どうやら、OpenEXR界隈では結構使われている様子。
AlembicとかUSDとか。
しかしWindows版のBoost.Pythonはリンク周りにはまり要素が多いので、記録しといた。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2017/04/boost_python.html" rel="alternate"/>
    <summary>mmdbridgeのビルドで必要になったBoost.Python周り。
どうやら、OpenEXR界隈では結構使われている様子。
AlembicとかUSDとか。
しかしWindows版のBoost.Pythonはリンク周りにはまり要素が多いので、記録しといた。</summary>
    <published>2017-04-22T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2017/05/cmake_compileoptions.html</id>
    <title>cmakeチートシート</title>
    <updated>2017-05-28T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;すぐ忘れるのでここをチートシート化しよう。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2017/05/cmake_compileoptions.html" rel="alternate"/>
    <summary>すぐ忘れるのでここをチートシート化しよう。</summary>
    <published>2017-05-28T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2017/06/cpp11_rpc.html</id>
    <title>C++でMessagePack-RPCを実装する</title>
    <updated>2017-06-03T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;最近のC++(-std=c++14)でMessagePack-RPCを再実装してみる。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2017/06/cpp11_rpc.html" rel="alternate"/>
    <summary>最近のC++(-std=c++14)でMessagePack-RPCを再実装してみる。</summary>
    <published>2017-06-03T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2017/06/python_asyncio.html</id>
    <title>Python3のasyncioについてのメモ</title>
    <updated>2017-06-10T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;PythonのVersion3.4から始まったasyncio周りについてのメモ。
環境は、Windows10上のpython3.6(64bit)。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2017/06/python_asyncio.html" rel="alternate"/>
    <summary>PythonのVersion3.4から始まったasyncio周りについてのメモ。
環境は、Windows10上のpython3.6(64bit)。</summary>
    <published>2017-06-10T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2017/07/cmake_find_package.html</id>
    <title>cmakeのfind_package</title>
    <updated>2017-07-20T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;cmakeのFIND_PACKAGEわかりずらいよ。もやもやするものがある。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2017/07/cmake_find_package.html" rel="alternate"/>
    <summary>cmakeのFIND_PACKAGEわかりずらいよ。もやもやするものがある。</summary>
    <published>2017-07-20T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2017/07/imgui_python.html</id>
    <title>PythonでImGuiする</title>
    <updated>2017-07-31T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;PythonでImGuiするのがよさげな気がしたのでやってみた。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2017/07/imgui_python.html" rel="alternate"/>
    <summary>PythonでImGuiするのがよさげな気がしたのでやってみた。</summary>
    <published>2017-07-31T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2017/08/distutils_msvccompiler.html</id>
    <title>distutilsでcl.exeが見つからない</title>
    <updated>2017-08-06T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;PythonじゃなくてVisualStudio側の問題のようなのだけど、setup.pyでネイティブモジュールをビルドするときに顕在化したので。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2017/08/distutils_msvccompiler.html" rel="alternate"/>
    <summary>PythonじゃなくてVisualStudio側の問題のようなのだけど、setup.pyでネイティブモジュールをビルドするときに顕在化したので。</summary>
    <published>2017-08-06T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2017/boost_python3.html</id>
    <title>Boost.PythonのPython3でのstd::string、std::wstringのふるまい</title>
    <updated>2017-08-10T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;ちょっと気になったので確認。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2017/boost_python3.html" rel="alternate"/>
    <summary>ちょっと気になったので確認。</summary>
    <category term="[&quot;cpp&quot;" label="[&quot;cpp&quot;"/>
    <category term="&quot;python&quot;]" label="&quot;python&quot;]"/>
    <published>2017-08-10T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2017/08/usd.html</id>
    <title>PixarのUniversal Scene Descriptionをビルドしてみる</title>
    <updated>2017-08-14T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;20170902。実はビルドスクリプトがあって、簡単になっていた。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2017/08/usd.html" rel="alternate"/>
    <summary>20170902。実はビルドスクリプトがあって、簡単になっていた。</summary>
    <published>2017-08-14T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2017/gentoo_install.html</id>
    <title>久しぶりにGentooインストール</title>
    <updated>2017-09-04T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;Linux成分が不足してきたので久しぶりにデスクトップを構築してみる。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2017/gentoo_install.html" rel="alternate"/>
    <summary>Linux成分が不足してきたので久しぶりにデスクトップを構築してみる。</summary>
    <published>2017-09-04T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2017/gentoo_xorg.html</id>
    <title>GentooでX11を設定する</title>
    <updated>2017-09-05T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;デスクトップの構築メモ。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2017/gentoo_xorg.html" rel="alternate"/>
    <summary>デスクトップの構築メモ。</summary>
    <published>2017-09-05T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2017/com_wrl.html</id>
    <title>WRLを使った最近のComプログラミング</title>
    <updated>2017-09-08T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;古のATLのWindows8以降？版のWRLを使ってみる。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2017/com_wrl.html" rel="alternate"/>
    <summary>古のATLのWindows8以降？版のWRLを使ってみる。</summary>
    <published>2017-09-08T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2017/python_logger.html</id>
    <title>Pythonのlogger</title>
    <updated>2017-10-09T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;Pythonのロガーの設定をどうすればいいのか。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2017/python_logger.html" rel="alternate"/>
    <summary>Pythonのロガーの設定をどうすればいいのか。</summary>
    <category term="[&quot;python&quot;]" label="[&quot;python&quot;]"/>
    <published>2017-10-09T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2017/mypy.html</id>
    <title>mypyでPythonい型チェックを取り入れる</title>
    <updated>2017-10-15T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;Pythonの型Annotationで型チェックする件について。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2017/mypy.html" rel="alternate"/>
    <summary>Pythonの型Annotationで型チェックする件について。</summary>
    <category term="[&quot;python&quot;]" label="[&quot;python&quot;]"/>
    <published>2017-10-15T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2019/python_clang.html</id>
    <title>pythonモジュール clang で C++ ヘッダーを変換する</title>
    <updated>2019-04-18T07:10:34+00:00</updated>
    <content type="html">&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;d3d11.h&lt;/span&gt;&lt;/code&gt; を &lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;d3d11.d&lt;/span&gt;&lt;/code&gt; に変換したいのでやる。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2019/python_clang.html" rel="alternate"/>
    <summary>d3d11.h を d3d11.d に変換したいのでやる。</summary>
    <category term="[&quot;clang&quot;" label="[&quot;clang&quot;"/>
    <category term="&quot;python&quot;" label="&quot;python&quot;"/>
    <category term="&quot;cpp&quot;" label="&quot;cpp&quot;"/>
    <category term="&quot;dlang&quot;" label="&quot;dlang&quot;"/>
    <category term="&quot;com&quot;]" label="&quot;com&quot;]"/>
    <published>2019-04-18T16:10:34+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2019/vim_lsp.html</id>
    <title>vim で LSP</title>
    <updated>2019-04-19T16:32:35+00:00</updated>
    <content type="html">&lt;p&gt;Non-consecutive header level increase; 0 to 2 [myst.header]&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2019/vim_lsp.html" rel="alternate"/>
    <summary>Non-consecutive header level increase; 0 to 2 [myst.header]</summary>
    <published>2019-04-20T01:32:35+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2019/logging.html</id>
    <title>python の logger</title>
    <updated>2019-04-30T14:19:20+00:00</updated>
    <content type="html">&lt;p&gt;loggerメモ&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2019/logging.html" rel="alternate"/>
    <summary>loggerメモ</summary>
    <category term="[&quot;python&quot;]" label="[&quot;python&quot;]"/>
    <published>2019-04-30T23:19:20+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2019/import.html</id>
    <title>pythonのmoduleとpackage周り</title>
    <updated>2019-04-30T15:47:39+00:00</updated>
    <content type="html">&lt;p&gt;&lt;code class="docutils literal notranslate"&gt;&lt;span class="pre"&gt;ImportError:&lt;/span&gt; &lt;span class="pre"&gt;attempted&lt;/span&gt; &lt;span class="pre"&gt;relative&lt;/span&gt; &lt;span class="pre"&gt;import&lt;/span&gt; &lt;span class="pre"&gt;with&lt;/span&gt; &lt;span class="pre"&gt;no&lt;/span&gt; &lt;span class="pre"&gt;known&lt;/span&gt; &lt;span class="pre"&gt;parent&lt;/span&gt; &lt;span class="pre"&gt;package&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2019/import.html" rel="alternate"/>
    <summary>ImportError: attempted relative import with no known parent package</summary>
    <category term="[&quot;python&quot;]" label="[&quot;python&quot;]"/>
    <published>2019-05-01T00:47:39+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2019/wyam-start.html</id>
    <title>wyam ことはじめ</title>
    <updated>2019-08-17T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;ソースの方のリポジトリがハードディスククラッシュで失われて
更新できなくなっていたので、サイトを作りなおし。
&lt;a class="reference external" href="https://wyam.io/"&gt;wyam&lt;/a&gt;を使ってみる。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2019/wyam-start.html" rel="alternate"/>
    <summary>ソースの方のリポジトリがハードディスククラッシュで失われて
更新できなくなっていたので、サイトを作りなおし。
wyamを使ってみる。</summary>
    <published>2019-08-17T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2019/wyam-theme.html</id>
    <title>wyam のテーマをカスタマイズする</title>
    <updated>2019-08-17T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;cssとかの調整。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2019/wyam-theme.html" rel="alternate"/>
    <summary>cssとかの調整。</summary>
    <published>2019-08-17T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2019/restart_pyopengl.html</id>
    <title>pyopengl</title>
    <updated>2019-08-24T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;久しぶりのpyopengl&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2019/restart_pyopengl.html" rel="alternate"/>
    <summary>久しぶりのpyopengl</summary>
    <category term="[&quot;python&quot;" label="[&quot;python&quot;"/>
    <category term="&quot;opengl&quot;]" label="&quot;opengl&quot;]"/>
    <published>2019-08-24T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2019/vim_colorscheme.html</id>
    <title>Vimのカラースキーム</title>
    <updated>2019-08-25T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;Non-consecutive header level increase; 0 to 2 [myst.header]&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2019/vim_colorscheme.html" rel="alternate"/>
    <summary>Non-consecutive header level increase; 0 to 2 [myst.header]</summary>
    <published>2019-08-25T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2019/python_gis.html</id>
    <title>pythonでGIS</title>
    <updated>2019-08-27T00:00:00+00:00</updated>
    <content type="html">&lt;p&gt;Windows10。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2019/python_gis.html" rel="alternate"/>
    <summary>Windows10。</summary>
    <category term="[&quot;python&quot;]" label="[&quot;python&quot;]"/>
    <published>2019-08-27T00:00:00+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2020/hugo-github-pages.html</id>
    <title>Github Pages の種類</title>
    <updated>2020-07-20T13:50:17+00:00</updated>
    <content type="html">&lt;p&gt;https://docs.github.com/ja/github/working-with-github-pages/about-github-pages&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2020/hugo-github-pages.html" rel="alternate"/>
    <summary>https://docs.github.com/ja/github/working-with-github-pages/about-github-pages</summary>
    <published>2020-07-20T22:50:17+00:00</published>
  </entry>
  <entry>
    <id>https://ousttrue.github.io/posts/2020/w3m-mod.html</id>
    <title>w3m改造</title>
    <updated>2020-07-25T14:59:50+00:00</updated>
    <content type="html">&lt;p&gt;以前にも何度かやったことがあるのだけど立ち消えになっていた、 &lt;a class="reference external" href="http://w3m.sourceforge.net/index.ja.html"&gt;w3m&lt;/a&gt; の改造を試みている。
w3m はわりと好きなテキストブラウザなのだが、 2011 年くらいの 0.5.3 で開発が終了している様子。&lt;/p&gt;
</content>
    <link href="https://ousttrue.github.io/posts/2020/w3m-mod.html" rel="alternate"/>
    <summary>以前にも何度かやったことがあるのだけど立ち消えになっていた、 w3m の改造を試みている。
w3m はわりと好きなテキストブラウザなのだが、 2011 年くらいの 0.5.3 で開発が終了している様子。</summary>
    <published>2020-07-25T23:59:50+00:00</published>
  </entry>
</feed>
