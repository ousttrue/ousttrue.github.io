"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2978],{2170:function(o,e,r){r.r(e);var n=r(1151),i=r(7294);function C(o){const e=Object.assign({p:"p",pre:"pre",code:"code"},(0,n.ah)(),o.components);return i.createElement(i.Fragment,null,i.createElement(e.p,null,"python によるビルドスクリプト waf を使い始めた\npython によるビルドシステム waf を使ってみた。\n使ってみた感触では vc と gcc 両方でビルドするとかそういうのに向いていそうなので、要するにわしのニーズに合っているように思える。"),"\n",i.createElement(e.pre,null,i.createElement(e.code,null,"https://code.google.com/p/waf/\n前から気にはなっていたのだけれどどうにも取っ付きが悪くて使えるところまでたどりつけていなかったのだが、やっと最初の一歩を踏み出すことができたのでメモを残す。\n早速実践から行く。\n+hello/\n  +hello.cpp\n\nhello.cpp\n#include <iostream>\n\nint main(int argc, char **argv)\n{\n    std::cout << \"hello waf !\" << std::endl;\n    return 0;\n}\n\nというプロジェクトを作ったとする。\nhttps://code.google.com/p/waf/downloads/detail?name=waf-1.7.13\nからwaf(python\nscriptの圧縮されたもの)をダウンロードしてwscriptを記述する。\n+hello/\n  +hello.cpp\n  +waf\n  +wscript\n\nwscriptは以下のようにする。\nAPPNAME='hello'\nVERSION='1.0.0'\n\n\ndef configure(conf):\n    conf.env['MSVC_TARGETS'] = ['x86']\n    conf.load('msvc')\n    conf.env.CXXFLAGS = ['/nologo', '/EHsc']\n\ndef build(bld):\n    bld.program(\n            source='hello.cpp',\n            target=APPNAME\n            )\n\n初回とwscriptのconfigureを修正する度にconfigureする。\n> python waf configure\nSetting top to                           : C:\\work\\_waf\\hello\nSetting out to                           : C:\\work\\_waf\\hello\\build\nChecking for program CL                  : C:\\Program Files (x86)\\Microsoft Visual Studio 9.0\\VC\\Bin\\amd64\\CL.exe\nChecking for program CL                  : C:\\Program Files (x86)\\Microsoft Visual Studio 9.0\\VC\\Bin\\CL.exe\nChecking for program CL                  : C:\\Program Files (x86)\\Microsoft Visual Studio 9.0\\VC\\Bin\\x86_IA64\\CL.exe\nChecking for program CL                  : C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\bin\\CL.exe\nChecking for program CL                  : C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\bin\\CL.exe\nChecking for program CL                  : C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\bin\\CL.exe\nChecking for program CL                  : C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\bin\\CL.exe\nChecking for program CL                  : c:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\Bin\\CL.exe\nChecking for program CL                  : C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\bin\\CL.exe\nChecking for program CL                  : C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\bin\\CL.exe\nChecking for program CL                  : C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\bin\\CL.exe\nChecking for program CL                  : C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\bin\\CL.exe\nChecking for program CL                  : C:\\Program Files (x86)\\Microsoft Visual Studio 9.0\\VC\\BIN\\CL.exe\nChecking for program CL                  : C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\bin\\CL.exe\nChecking for program CL                  : C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\bin\\CL.exe\nChecking for program CL                  : C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\bin\\CL.exe\nChecking for program CL                  : C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\bin\\CL.exe\nChecking for program CL                  : c:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN\\CL.exe\nChecking for program CL                  : C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\bin\\CL.exe\nChecking for program CL                  : C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\bin\\CL.exe\nChecking for program CL                  : C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\bin\\CL.exe\nChecking for program CL                  : C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\bin\\CL.exe\nChecking for program CL                  : C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\bin\\CL.exe\nChecking for program CL                  : c:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN\\CL.exe\nChecking for program CL                  : C:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\bin\\CL.exe\nChecking for program CL                  : c:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN\\CL.exe\nChecking for program LINK                : c:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN\\LINK.exe\nChecking for program LIB                 : c:\\Program Files (x86)\\Microsoft Visual Studio 10.0\\VC\\BIN\\LIB.exe\nChecking for program MT                  : C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\bin\\MT.exe\nChecking for program RC                  : C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.0A\\bin\\RC.exe\n'configure' finished successfully (6.219s)\n\nビルドする。\n> python waf build\nWaf: Entering directory `C:\\work\\_waf\\hello\\build'\n[1/2] cxx: hello.cpp -> build\\hello.cpp.1.o\nhello.cpp\n[2/2] cxxprogram: build\\hello.cpp.1.o -> build\\hello.exe build\\hello.exe.manifest\nWaf: Leaving directory `C:\\work\\_waf\\hello\\build'\n'build' finished successfully (1.138s)\n\n実行してみる。\n> .\\build\\hello.exe\nhello waf !\n\nということでvcでexeをビルドするスクリプトができた。\n何もパスの設定をしなくてもvcのコンパイラを勝手に探してビルドできるのは意外だった。\nとはいえ、これだけではwafの嬉しさは発揮されないのでこれからwscriptを拡張していく。\n次回、debugとrelease, 32bitビルドと64bitビルドの管理について書く予定。\n")))}e.default=function(o){void 0===o&&(o={});const{wrapper:e}=Object.assign({},(0,n.ah)(),o.components);return e?i.createElement(e,o,i.createElement(C,o)):C(o)}},1151:function(o,e,r){r.d(e,{ah:function(){return C}});var n=r(7294);const i=n.createContext({});function C(o){const e=n.useContext(i);return n.useMemo((()=>"function"==typeof o?o(e):{...e,...o}),[e,o])}}}]);
//# sourceMappingURL=component---content-posts-2013-10-29-waf-md-5881e12388232a67af87.js.map