"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[530],{1329:function(e,n,t){t.r(n),t.d(n,{default:function(){return o}});var l=t(1151),r=t(7294);function a(e){const n=Object.assign({p:"p",h2:"h2",code:"code",pre:"pre"},(0,l.ah)(),e.components);return r.createElement(r.Fragment,null,r.createElement(n.p,null,"https://docs.github.com/ja/github/working-with-github-pages/about-github-pages"),"\n",r.createElement(n.h2,null,"プロジェクトサイト (gh-pages)"),"\n",r.createElement(n.p,null,"各プロジェクトに作れる。"),"\n",r.createElement(n.p,null,"URLは、",r.createElement(n.code,null,"http(s)://<user>.github.io/<repository>")),"\n",r.createElement(n.p,null,"各リポジトリの、 ",r.createElement(n.code,null,"gh-pages")," ブランチでサイトをホストする。\nhugo で運用するなら、\n",r.createElement(n.code,null,"master")," ブランチに hugo project を commit する。\nhugo のビルド結果を ",r.createElement(n.code,null,"gh-pages")," に commit する。\n手間を省くために ",r.createElement(n.code,null,"master")," への push をトリガーに ",r.createElement(n.code,null,"travis-CI")," 等で自動でビルドして、結果を gh-pages に push する。"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-yml"},"# .travis.yml\ndeploy:\n  provider: pages\n  skip_cleanup: true\n  github_token: $GITHUB_TOKEN  # Set in the settings page of your repository, as a secure variable\n  keep_history: true\n  target_branch: gh-pages # default\n  local-dir: public\n  on:\n    branch: master # master branch が push されたのをトリガーに public フォルダを gh-pages ブランチに pushする\n")),"\n",r.createElement(n.h2,null,"ユーザーサイト"),"\n",r.createElement(n.p,null,"ユーザー毎にひとつだけ作ることのできるリポジトリ。"),"\n",r.createElement(n.p,null,"URLは、",r.createElement(n.code,null,"http(s)://<user>.github.io")," 。"),"\n",r.createElement(n.p,null,"これ、",r.createElement(n.code,null,"gh-pages")," と URL が重複するときがありそうな。"),"\n",r.createElement(n.p,null,"repository ",r.createElement(n.code,null,"${user_name}.github.io")," の場合 ",r.createElement(n.code,null,"master")," が ",r.createElement(n.code,null,"gh-pages")," の役割を果たす。\nこの名前にすると、サイトをホストする用の特殊なリポジトリになる様子。"),"\n",r.createElement(n.p,null,"hugo で運用するなら ",r.createElement(n.code,null,"gh-pages")," ブランチ運用と逆になる。"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-yml"},"deploy:\n  provider: pages\n  skip_cleanup: true\n  github_token: $GITHUB_TOKEN  # Set in the settings page of your repository, as a secure variable\n  keep_history: true\n  target_branch: master\n  local_dir: public\n  on:\n    branch: hugo # hugo branch が push されたのをトリガーに public フォルダを master ブランチにpushする\n")),"\n",r.createElement(n.p,null,"default branch を hugo の方に変えてから、git clone すると作業しやすい。"))}var c=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,l.ah)(),e.components);return n?r.createElement(n,e,r.createElement(a,e)):a(e)};t(8678);function u(e){let{data:n,children:t}=e;return r.createElement(r.Fragment,null,r.createElement("h1",null,n.mdx.frontmatter.title),r.createElement(l.Zo,null,t))}function o(e){return r.createElement(u,e,r.createElement(c,e))}},8678:function(e,n,t){t(7294)},1151:function(e,n,t){t.d(n,{Zo:function(){return u},ah:function(){return a}});var l=t(7294);const r=l.createContext({});function a(e){const n=l.useContext(r);return l.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const c={};function u({components:e,children:n,disableParentContext:t}){let u;return u=t?"function"==typeof e?e({}):e||c:a(e),l.createElement(r.Provider,{value:u},n)}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2020-hugo-github-pages-md-11a4d21e7e8eb125fa06.js.map