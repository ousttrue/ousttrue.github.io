"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2614],{56:function(e,t,n){n.r(t),n.d(t,{default:function(){return m}});var a=n(1151),r=n(7294);function l(e){const t=Object.assign({span:"span"},(0,a.ah)(),e.components);return r.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">前から写経しながら読んでいる\n「シングルページWebアプリケーション」がようやく終盤に差し掛かってきた。\nSocket.IOで接続するところがあるのだけど、独自にgulpからbrowserSyncを使っていてWebSocketがupgradeできずにはまる。\nFirefoxのconsoleにエラーが出て気になる気になる。\ngulpfile.js\ngulp.task(\'server\', [\'nodemon\'], function () {\n    browser.init(null, {\n        proxy: \'http://localhost:7000\',\n        port: 3000,\n        ws: true // &lt;- これが無いとTransportがpollingからupgradeできない\n    });\n});\n\nなかなか気付けなかった。\nその前に、socket.ioのnamespaceの指定でもはまってたのだが・・・。\nしかし、この本は実にいい本だ。自分のWebの知識レベルにちょうどあっていて、昨今の技術をキャッチアップして行く足がかりに\nすごく役にたった。\nこの本が提唱する、\nmongodb -> node.js + express + socket.IO -> JQuery\nな構成をベースにgulpによる開発環境と、typescript、mithril、bootstrapなんかを盛って行く路線で\n寄り道しながら修行中。</code></pre></div>'}})}var s=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,a.ah)(),e.components);return t?r.createElement(t,e,r.createElement(l,e)):l(e)},c=n(8678),o=n(4160),u=n(8736);const p={code:e=>{let{children:t,className:n}=e;return n?r.createElement(u.Z,{className:n},t):r.createElement("code",null,t)}};function i(e){let{data:t,children:n}=e;const l=t.mdx.frontmatter;return r.createElement(c.Z,null,r.createElement("h1",null,l.title),r.createElement("div",{className:"tags-index"},l.tags&&l.tags.length>0&&l.tags.map((e=>r.createElement(o.rU,{to:"/tags/"+e+"/",itemProp:"url"},r.createElement("button",null,e))))),r.createElement(a.Zo,{components:p},n))}function m(e){return r.createElement(i,e,r.createElement(s,e))}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-content-posts-2015-11-15-websocket-upgrade-md-a2f8a9a1ad489a416f7d.js.map