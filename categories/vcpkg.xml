<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>三次元日誌 (vcpkgについての記事)</title><link>https://ousttrue.github.io/</link><description></description><atom:link href="https://ousttrue.github.io/categories/vcpkg.xml" rel="self" type="application/rss+xml"></atom:link><language>ja</language><copyright>Contents © 2022 &lt;a href="mailto:ousttrue@gmail.com"&gt;ousttrue&lt;/a&gt; </copyright><lastBuildDate>Sat, 14 May 2022 17:17:55 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Windows で USD ことはじめ</title><link>https://ousttrue.github.io/qiita/windows-de-usd-kotohazime/</link><dc:creator>ousttrue</dc:creator><description>&lt;p&gt;&lt;a href="https://qiita.com/ousttrue/items/b5f34e0f2441ca74467e"&gt;https://qiita.com/ousttrue/items/b5f34e0f2441ca74467e&lt;/a&gt;&lt;/p&gt;</description><category>c++</category><category>pixarusd</category><category>python</category><category>qiita</category><category>usd</category><category>vcpkg</category><guid>https://ousttrue.github.io/qiita/windows-de-usd-kotohazime/</guid><pubDate>Sun, 20 Sep 2020 05:07:09 GMT</pubDate></item><item><title>VCPKGを利用して、Windows上でgrpc_cppする</title><link>https://ousttrue.github.io/qiita/vcpkgwoli-yong-shite-windowsshang-degrpc_cppsuru/</link><dc:creator>ousttrue</dc:creator><description>&lt;p&gt;&lt;a href="https://qiita.com/ousttrue/items/0b28def0d03925117705"&gt;https://qiita.com/ousttrue/items/0b28def0d03925117705&lt;/a&gt;&lt;/p&gt;</description><category>c++</category><category>cmake</category><category>grpc</category><category>qiita</category><category>vcpkg</category><category>vscode</category><guid>https://ousttrue.github.io/qiita/vcpkgwoli-yong-shite-windowsshang-degrpc_cppsuru/</guid><pubDate>Wed, 06 May 2020 02:46:34 GMT</pubDate></item><item><title>AzureKinect の opencv-kinfu-samples をビルドする</title><link>https://ousttrue.github.io/qiita/azurekinect-no-opencv-kinfu-samples-wobirudosuru/</link><dc:creator>ousttrue</dc:creator><description>&lt;p&gt;&lt;a href="https://qiita.com/ousttrue/items/daea793638850965b43f"&gt;https://qiita.com/ousttrue/items/daea793638850965b43f&lt;/a&gt;&lt;/p&gt;</description><category>azurekinect</category><category>opencv</category><category>qiita</category><category>vcpkg</category><guid>https://ousttrue.github.io/qiita/azurekinect-no-opencv-kinfu-samples-wobirudosuru/</guid><pubDate>Tue, 28 Apr 2020 00:37:45 GMT</pubDate></item><item><title>vcpkgでchcp 65001が必要な件</title><link>https://ousttrue.github.io/posts/2017/08/vcpkg_chcp65001/</link><dc:creator>ousttrue</dc:creator><description>&lt;p&gt;うちの環境では必要。非英語Windowsで散見される。わしも、ロシア？の人の書き込みで分かった。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;buildtrees/XXX/config-x86-windows-rel-err.log&lt;/code&gt; に以下のような &lt;code&gt;rules.ninja&lt;/code&gt; を含むメッセージが見つかった場合はこれ。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;CMake Error at D:/vcpkg/downloads/cmake-3.9.0-win32-x86/share/cmake-3.9/Modules/CMakeTestCCompiler.cmake:51 &lt;span class="o"&gt;(&lt;/span&gt;message&lt;span class="o"&gt;)&lt;/span&gt;:
  The C compiler &lt;span class="s2"&gt;"C:/Program Files (x86)/Microsoft Visual&lt;/span&gt;
&lt;span class="s2"&gt;  Studio/2017/Community/VC/Tools/MSVC/14.10.25017/bin/HostX64/x86/cl.exe"&lt;/span&gt; is
  not able to compile a simple &lt;span class="nb"&gt;test&lt;/span&gt; program.

  It fails with the following output:

   Change Dir: D:/vcpkg/buildtrees/opensubdiv/x86-windows-rel/CMakeFiles/CMakeTmp



  Run Build Command:&lt;span class="s2"&gt;"D:/vcpkg/downloads/tools/ninja/ninja-1.7.2/ninja.exe"&lt;/span&gt;
  &lt;span class="s2"&gt;"cmTC_f5b9f"&lt;/span&gt;

  ninja: error: build.ninja:30: loading &lt;span class="s1"&gt;'rules.ninja'&lt;/span&gt;:
  指定されたファイルが見つかりません。






  include rules.ninja



                     ^ near here






  CMake will not be able to correctly generate this project.
Call Stack &lt;span class="o"&gt;(&lt;/span&gt;most recent call first&lt;span class="o"&gt;)&lt;/span&gt;:
  CMakeLists.txt:25 &lt;span class="o"&gt;(&lt;/span&gt;project&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;対処法はプロンプトの文字コードをutf-8にすること。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;gt; chcp 65001&lt;/code&gt;&lt;/p&gt;</description><category>vcpkg</category><guid>https://ousttrue.github.io/posts/2017/08/vcpkg_chcp65001/</guid><pubDate>Wed, 30 Aug 2017 15:00:00 GMT</pubDate></item><item><title>vcpkgのOpenSubdivパッケージを作ってみる</title><link>https://ousttrue.github.io/posts/2017/08/vcpkg_opensubdiv/</link><dc:creator>ousttrue</dc:creator><description>&lt;p&gt;CEDEC2017のセッションを聞いてUSDビルドする気が戻ってきた。部品のひとつ、OpenSubdivのvcpkg版ビルドに取り組んでみる。&lt;/p&gt;
&lt;p&gt;packageを作る
POWERSHELLを開いてvcpkgディレクトリに移動。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;PS&amp;gt; .&lt;span class="se"&gt;\v&lt;/span&gt;cpkg.exe create opensubdiv https://github.com/PixarAnimationStudios/OpenSubdiv/archive/v3_3_0.tar.gz
-- Generated portfile: vcpkg&lt;span class="se"&gt;\p&lt;/span&gt;orts&lt;span class="se"&gt;\o&lt;/span&gt;pensubdiv&lt;span class="se"&gt;\p&lt;/span&gt;ortfile.cmake
-- Generated CONTROL: vcpkg&lt;span class="se"&gt;\p&lt;/span&gt;orts&lt;span class="se"&gt;\o&lt;/span&gt;pensubdiv&lt;span class="se"&gt;\C&lt;/span&gt;ONTROL
-- To launch an editor &lt;span class="k"&gt;for&lt;/span&gt; these new files, run
--     .&lt;span class="se"&gt;\v&lt;/span&gt;cpkg edit opensubdiv

ports/opensubdiv/CONTROL
Source: opensubdiv
Version: &lt;span class="m"&gt;3&lt;/span&gt;.3.0
Description: An Open-Source subdivision surface library.
Build-Depends: tbb, glew, ptex
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;ports/opensubdiv/portfile.cmake&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;最低限、展開するアーカイブのパスを指定。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;set(SOURCE_PATH ${CURRENT_BUILDTREES_DIR}/src/OpenSubdiv-3_3_0)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;ビルドしてみる
さすがにエラーになる。vcpkg の &lt;code&gt;buildtree/opensubdiv&lt;/code&gt; に潜ってビルド手順を調べてみる。
手動ビルド
OpenSubdivのビルドシステムはCMakeだった。
早速、CmakeGUIでやってみる。
&lt;code&gt;CMAKE_INSTALL_PREFIX=VCPKG_DIR/installed/x64-windows&lt;/code&gt; だけ設定して様子を見る。&lt;/p&gt;
&lt;p&gt;CUDAとかOpenCLとかそっち方面の依存がある様子。
NO_CUDAとNO_OPENCLにチェックを入れてみる。
あとNO_DOCも。
SolutionをGenerateしてビルドしてみる。
Debug版だけtbb_debug.libが見つからないエラーが出た。
DEBUG版のFIND_PACKAGEの修正&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="err"&gt;OpenSubdiv-3_3_0/cmake/FindTBB.cmake&lt;/span&gt;
    &lt;span class="nb"&gt;find_library&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;TBB_&lt;/span&gt;&lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;TBB_LIB&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;_LIBRARY&lt;/span&gt;
        &lt;span class="s"&gt;NAMES&lt;/span&gt;
            &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;TBB_LIB&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="s"&gt;HINTS&lt;/span&gt;
            &lt;span class="s2"&gt;"${TBB_LOCATION}/lib"&lt;/span&gt;
            &lt;span class="s2"&gt;"${TBB_LOCATION}/bin"&lt;/span&gt;
            &lt;span class="s2"&gt;"$ENV{TBB_LOCATION}/lib"&lt;/span&gt;
            &lt;span class="s2"&gt;"$ENV{TBB_LOCATION}/bin"&lt;/span&gt;
            &lt;span class="s2"&gt;"$ENV{PROGRAMFILES}/TBB/lib"&lt;/span&gt;
            &lt;span class="s"&gt;/usr/lib&lt;/span&gt;
            &lt;span class="s"&gt;/usr/lib/w32api&lt;/span&gt;
            &lt;span class="s"&gt;/usr/local/lib&lt;/span&gt;
            &lt;span class="s"&gt;/usr/X11R6/lib&lt;/span&gt;
        &lt;span class="s"&gt;PATH_SUFFIXES&lt;/span&gt;
            &lt;span class="s2"&gt;"${TBB_LIB_ARCH}"&lt;/span&gt;
            &lt;span class="s2"&gt;"${TBB_LIB_ARCH}/${TBB_COMPILER}"&lt;/span&gt;
            &lt;span class="s2"&gt;"${TBB_LIB_ARCH}/gcc4.4"&lt;/span&gt;
            &lt;span class="s2"&gt;"${TBB_LIB_ARCH}/gcc4.1"&lt;/span&gt;
        &lt;span class="s"&gt;DOC&lt;/span&gt; &lt;span class="s2"&gt;"Intel's Threading Building Blocks library"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;vcpkgでは、&lt;code&gt;VCPKG_DIR/installed/x64-windows/debug/lib/tbb_debug.lib&lt;/code&gt; にあるので見つかりませんね。
&lt;code&gt;TBB_LOCATION=VCPKG_DIR/installed/x64-windows/debug&lt;/code&gt; を指定したらうまくいった。&lt;/p&gt;
&lt;p&gt;portfile.cmakeに反映
ports/opensubdiv/portfile.cmake
こうなった。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="nb"&gt;vcpkg_configure_cmake&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;SOURCE_PATH&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;SOURCE_PATH&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="c"&gt;#PREFER_NINJA # Disable this option if project cannot be built with Ninja&lt;/span&gt;
    &lt;span class="s"&gt;OPTIONS&lt;/span&gt;
        &lt;span class="c"&gt;#-DNO_LIB=1&lt;/span&gt;
        &lt;span class="s"&gt;-DNO_CUDA=1&lt;/span&gt;
        &lt;span class="s"&gt;-DNO_DOC=1&lt;/span&gt;
        &lt;span class="s"&gt;-DNO_OPENCL=1&lt;/span&gt;
        &lt;span class="s"&gt;-DNO_OPENGL=1&lt;/span&gt;
        &lt;span class="s"&gt;-DNO_METAL=1&lt;/span&gt;
        &lt;span class="s"&gt;-DNO_DX=1&lt;/span&gt;
        &lt;span class="c"&gt;#-DNO_OMP=1&lt;/span&gt;
        &lt;span class="s"&gt;-DNO_TESTS=1&lt;/span&gt;
        &lt;span class="s"&gt;-DNO_EXAMPLES=1&lt;/span&gt;
        &lt;span class="s"&gt;-DNO_TUTORIALS=1&lt;/span&gt;
        &lt;span class="s"&gt;-DNO_REGRESSION=1&lt;/span&gt;
        &lt;span class="s"&gt;-DNO_GLTESTS=1&lt;/span&gt;
        &lt;span class="c"&gt;# for tbb_debug.lib&lt;/span&gt;
        &lt;span class="s"&gt;-DTBB_LOCATION=&lt;/span&gt;&lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CURRENT_INSTALLED_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/debug&lt;/span&gt;
    &lt;span class="c"&gt;# OPTIONS_RELEASE -DOPTIMIZE=1&lt;/span&gt;
    &lt;span class="c"&gt;# OPTIONS_DEBUG -DDEBUGGABLE=1&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;package
VCPKG_DIR/packages/opensubdiv_x86-windows
packageの調整
エラーメッセージの指示に従って。&lt;/p&gt;
&lt;p&gt;```ports/opensubdiv/portfile.cmake
vcpkg_install_cmake()
vcpkg_copy_pdbs()&lt;/p&gt;
&lt;p&gt;file(REMOVE_RECURSE ${CURRENT_PACKAGES_DIR}/debug/include)&lt;/p&gt;
&lt;h2&gt;Handle copyright&lt;/h2&gt;
&lt;p&gt;file(COPY ${CURRENT_BUILDTREES_DIR}/src/OpenSubdiv-3_3_0/LICENSE.txt DESTINATION ${CURRENT_PACKAGES_DIR}/share/opensubdiv)
file(RENAME ${CURRENT_PACKAGES_DIR}/share/opensubdiv/LICENSE.txt ${CURRENT_PACKAGES_DIR}/share/opensubdiv/copyright)&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="err"&gt;以下のようになった。&lt;/span&gt;

&lt;span class="err"&gt;```&lt;/span&gt;&lt;span class="n"&gt;shell&lt;/span&gt;
&lt;span class="o"&gt;+---&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;   \&lt;span class="o"&gt;---&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;           &lt;span class="n"&gt;osdCPU&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+---&lt;/span&gt;&lt;span class="n"&gt;include&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;   \&lt;span class="o"&gt;---&lt;/span&gt;&lt;span class="n"&gt;opensubdiv&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;   &lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;+---&lt;/span&gt;&lt;span class="n"&gt;far&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;error&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;patchDescriptor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;patchMap&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;patchParam&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;patchTable&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;patchTableFactory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;primvarRefiner&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;ptexIndices&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;stencilTable&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;stencilTableFactory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;topologyDescriptor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;topologyLevel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;topologyRefiner&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;topologyRefinerFactory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;types&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;+---&lt;/span&gt;&lt;span class="n"&gt;hbr&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;allocator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;bilinear&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;catmark&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;cornerEdit&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;creaseEdit&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;face&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;faceEdit&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;fvarData&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;fvarEdit&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;halfedge&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;hierarchicalEdit&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;holeEdit&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;loop&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;mesh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;subdivision&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;vertex&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;vertexEdit&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;+---&lt;/span&gt;&lt;span class="n"&gt;osd&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;bufferDescriptor&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;cpuEvaluator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;cpuPatchTable&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;cpuVertexBuffer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;mesh&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;nonCopyable&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;ompEvaluator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;ompKernel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;opengl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;tbbEvaluator&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;tbbKernel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;types&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;+---&lt;/span&gt;&lt;span class="n"&gt;sdc&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;bilinearScheme&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;catmarkScheme&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;crease&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;loopScheme&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;scheme&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;types&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       \&lt;span class="o"&gt;---&lt;/span&gt;&lt;span class="n"&gt;vtr&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;               &lt;span class="n"&gt;array&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;               &lt;span class="n"&gt;componentInterfaces&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;               &lt;span class="n"&gt;fvarLevel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;               &lt;span class="n"&gt;fvarRefinement&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;               &lt;span class="n"&gt;level&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;               &lt;span class="n"&gt;refinement&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;               &lt;span class="n"&gt;sparseSelector&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;               &lt;span class="n"&gt;stackBuffer&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;               &lt;span class="n"&gt;types&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;
&lt;span class="o"&gt;+---&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;       &lt;span class="n"&gt;osdCPU&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lib&lt;/span&gt;
&lt;span class="o"&gt;|&lt;/span&gt;
\&lt;span class="o"&gt;---&lt;/span&gt;&lt;span class="n"&gt;share&lt;/span&gt;
    \&lt;span class="o"&gt;---&lt;/span&gt;&lt;span class="n"&gt;opensubdiv&lt;/span&gt;
            &lt;span class="n"&gt;copyright&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;OpenSubdivにはdllのビルドは無いみたい。ライブラリ構成もtemplate classを主体とするもののようだ。&lt;/p&gt;</description><category>usd</category><category>vcpkg</category><guid>https://ousttrue.github.io/posts/2017/08/vcpkg_opensubdiv/</guid><pubDate>Wed, 30 Aug 2017 15:00:00 GMT</pubDate></item><item><title>SimpleAbcViewerをビルドしてみる</title><link>https://ousttrue.github.io/posts/2017/07/simpleabcviewer/</link><dc:creator>ousttrue</dc:creator><description>&lt;p&gt;alembic-1.7.1に無かったので、alembic-1.5.8から発掘してビルドしてみた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;https://github.com/ousttrue/SimpleAbcViewer&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;CMakeLists.txtを再構成して、ビルド・動作を確認できた。
SimpleAbcViewerが消えたのは、SimpleじゃないAbcViewができて分離したからぽい。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;https://github.com/alembic/abcview&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;こっちはQt4を使っていてWindowsではシンプルじゃなかったので、ビルドを断念したのであった・・・。
SimpleAbcViewerのAbcOpenGLを読めばAlembicのAPI(読む方)が分かりそう。
書く方は、mmdbridgeを読むのがよさげ。
タコのサンプルを表示。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;https://code.google.com/archive/p/alembic/downloads?page=2&lt;/li&gt;
&lt;/ul&gt;</description><category>cg</category><category>vcpkg</category><guid>https://ousttrue.github.io/posts/2017/07/simpleabcviewer/</guid><pubDate>Thu, 27 Jul 2017 15:00:00 GMT</pubDate></item><item><title>vcpkgのAlembicパッケージ(USE_HDF5)を作ってみる</title><link>https://ousttrue.github.io/posts/2017/07/vcpkg_alembic/</link><dc:creator>ousttrue</dc:creator><description>&lt;p&gt;mmdbridgeのvcpkgを使ったビルド手順を作ったついでにAlembicのvcpkg向けパッケージを作ってみる。&lt;/p&gt;
&lt;p&gt;情報収集&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;https://github.com/Microsoft/vcpkg/blob/master/docs/examples/packaging-zlib.md&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;読んだ。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vcpkg create url&lt;/code&gt; で雛形が作れる。&lt;/p&gt;
&lt;p&gt;実験&lt;/p&gt;
&lt;pre class="code literal-block"&gt;.&lt;span class="se"&gt;\v&lt;/span&gt;cpkg.exe create alembic https://github.com/alembic/alembic/archive/1.7.1.tar.gz
CMake Error at scripts/ports.cmake:101 &lt;span class="o"&gt;(&lt;/span&gt;message&lt;span class="o"&gt;)&lt;/span&gt;:
  Portfile already exists: &lt;span class="s1"&gt;'D:\vcpkg\ports\alembic\portfile.cmake'&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;すでにあるだと！？
最近できたらしい。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;https://github.com/Microsoft/vcpkg/tree/master/ports/alembic&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;しかし、hdf非対応みたいなので作ってみる。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;.&lt;span class="se"&gt;\v&lt;/span&gt;cpkg.exe create alembic-hdf https://github.com/alembic/alembic/archive/1.7.1.tar.gz

VCPKG_DIR
    ports
        alembic-hdf
            CONTROL
            portfile.cmake
&lt;/pre&gt;
&lt;p&gt;ができた。
簡単なCONTROLから。
こっちはパッケージ情報を決めるだけなのでさくっと。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;Source: alembic-hdf
Version: &lt;span class="m"&gt;1&lt;/span&gt;.7.1
Description: alembic with hdf5
Build-Depends: hdf5
&lt;/pre&gt;
&lt;p&gt;本題のportfile.cmake。
そのままだとエラーになるの。最低限以下が必要なようだ。
アーカイブを展開パスの指定。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;SOURCE_PATH&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CURRENT_BUILDTREES_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/src/1.7.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c"&gt;# ↓ 修正する&lt;/span&gt;

&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;SOURCE_PATH&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CURRENT_BUILDTREES_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/src/alembic-1.7.1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;実行してみる。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&amp;gt; ./vcpkg install alembic-hdf:x64-windows
The following packages will be built and installed:
    alembic-hdf:x64-windows
Building package alembic-hdf:x64-windows...
-- &lt;span class="nv"&gt;CURRENT_INSTALLED_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;D:/vcpkg/installed/x64-windows
-- &lt;span class="nv"&gt;DOWNLOADS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;D:/vcpkg/downloads
-- &lt;span class="nv"&gt;CURRENT_PACKAGES_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;D:/vcpkg/packages/alembic-hdf_x64-windows
-- &lt;span class="nv"&gt;CURRENT_BUILDTREES_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;D:/vcpkg/buildtrees/alembic-hdf
-- &lt;span class="nv"&gt;CURRENT_PORT_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;D:/vcpkg/ports/alembic-hdf/.
-- Using cached D:/vcpkg/downloads/1.7.1.tar.gz
-- Testing integrity of cached file...
-- Testing integrity of cached file... OK
-- Extracting &lt;span class="k"&gt;done&lt;/span&gt;
-- Configuring x64-windows-rel
-- Configuring x64-windows-rel &lt;span class="k"&gt;done&lt;/span&gt;
-- Configuring x64-windows-dbg
PS D:&lt;span class="se"&gt;\v&lt;/span&gt;cpkg&amp;gt; .&lt;span class="se"&gt;\v&lt;/span&gt;cpkg.exe install alembic-hdf:x64-windows
The following packages will be built and installed:
    alembic-hdf:x64-windows
Building package alembic-hdf:x64-windows...
-- &lt;span class="nv"&gt;CURRENT_INSTALLED_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;D:/vcpkg/installed/x64-windows
-- &lt;span class="nv"&gt;DOWNLOADS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;D:/vcpkg/downloads
-- &lt;span class="nv"&gt;CURRENT_PACKAGES_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;D:/vcpkg/packages/alembic-hdf_x64-windows
-- &lt;span class="nv"&gt;CURRENT_BUILDTREES_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;D:/vcpkg/buildtrees/alembic-hdf
-- &lt;span class="nv"&gt;CURRENT_PORT_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;D:/vcpkg/ports/alembic-hdf/.
-- Using cached D:/vcpkg/downloads/1.7.1.tar.gz
-- Testing integrity of cached file...
-- Testing integrity of cached file... OK
-- Extracting &lt;span class="k"&gt;done&lt;/span&gt;
-- Configuring x64-windows-rel
-- Configuring x64-windows-rel &lt;span class="k"&gt;done&lt;/span&gt;
-- Configuring x64-windows-dbg
-- Configuring x64-windows-dbg &lt;span class="k"&gt;done&lt;/span&gt;
-- Package x64-windows-rel
-- Package x64-windows-rel &lt;span class="k"&gt;done&lt;/span&gt;
-- Package x64-windows-dbg
-- Package x64-windows-dbg &lt;span class="k"&gt;done&lt;/span&gt;
-- Performing post-build validation
Include files should not be duplicated into the /debug/include directory. If this cannot be disabled &lt;span class="k"&gt;in&lt;/span&gt; the project cmake, use
    file&lt;span class="o"&gt;(&lt;/span&gt;REMOVE_RECURSE &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CURRENT_PACKAGES_DIR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/debug/include&lt;span class="o"&gt;)&lt;/span&gt;
The /lib/cmake folder should be merged with /debug/lib/cmake and moved to /share/alembic-hdf/cmake.
The following cmake files were found outside /share/alembic-hdf. Please place cmake files &lt;span class="k"&gt;in&lt;/span&gt; /share/alembic-hdf.

    D:/vcpkg/packages/alembic-hdf_x64-windows/lib/cmake/Alembic/AlembicConfig.cmake
    D:/vcpkg/packages/alembic-hdf_x64-windows/lib/cmake/Alembic/AlembicConfigVersion.cmake
    D:/vcpkg/packages/alembic-hdf_x64-windows/lib/cmake/Alembic/AlembicTargets-release.cmake
    D:/vcpkg/packages/alembic-hdf_x64-windows/lib/cmake/Alembic/AlembicTargets.cmake
    D:/vcpkg/packages/alembic-hdf_x64-windows/debug/lib/cmake/Alembic/AlembicConfig.cmake
    D:/vcpkg/packages/alembic-hdf_x64-windows/debug/lib/cmake/Alembic/AlembicConfigVersion.cmake
    D:/vcpkg/packages/alembic-hdf_x64-windows/debug/lib/cmake/Alembic/AlembicTargets-debug.cmake
    D:/vcpkg/packages/alembic-hdf_x64-windows/debug/lib/cmake/Alembic/AlembicTargets.cmake

The /debug/lib/cmake folder should be merged with /lib/cmake into /share/alembic-hdf

The following dlls were found &lt;span class="k"&gt;in&lt;/span&gt; /lib or /debug/lib. Please move them to /bin or /debug/bin, respectively.

    D:/vcpkg/packages/alembic-hdf_x64-windows/lib/Alembic.dll


The following dlls were found &lt;span class="k"&gt;in&lt;/span&gt; /lib or /debug/lib. Please move them to /bin or /debug/bin, respectively.

    D:/vcpkg/packages/alembic-hdf_x64-windows/debug/lib/Alembic.dll

The software license must be available at &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CURRENT_PACKAGES_DIR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/share/alembic-hdf/copyright

    file&lt;span class="o"&gt;(&lt;/span&gt;COPY &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CURRENT_BUILDTREES_DIR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/src/alembic-1.7.1/LICENSE.txt DESTINATION &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CURRENT_PACKAGES_DIR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/share/alembic-hdf&lt;span class="o"&gt;)&lt;/span&gt;
    file&lt;span class="o"&gt;(&lt;/span&gt;RENAME &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CURRENT_PACKAGES_DIR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/share/alembic-hdf/LICENSE.txt &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CURRENT_PACKAGES_DIR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;/share/alembic-hdf/copyright&lt;span class="o"&gt;)&lt;/span&gt;
The following EXEs were found &lt;span class="k"&gt;in&lt;/span&gt; /bin or /debug/bin. EXEs are not valid distribution targets.

    D:/vcpkg/packages/alembic-hdf_x64-windows/bin/abcdiff.exe
    D:/vcpkg/packages/alembic-hdf_x64-windows/bin/abcecho.exe
    D:/vcpkg/packages/alembic-hdf_x64-windows/bin/abcechobounds.exe
    D:/vcpkg/packages/alembic-hdf_x64-windows/bin/abcls.exe
    D:/vcpkg/packages/alembic-hdf_x64-windows/bin/abcstitcher.exe
    D:/vcpkg/packages/alembic-hdf_x64-windows/bin/abctree.exe

The following EXEs were found &lt;span class="k"&gt;in&lt;/span&gt; /bin or /debug/bin. EXEs are not valid distribution targets.

    D:/vcpkg/packages/alembic-hdf_x64-windows/debug/bin/abcdiff.exe
    D:/vcpkg/packages/alembic-hdf_x64-windows/debug/bin/abcecho.exe
    D:/vcpkg/packages/alembic-hdf_x64-windows/debug/bin/abcechobounds.exe
    D:/vcpkg/packages/alembic-hdf_x64-windows/debug/bin/abcls.exe
    D:/vcpkg/packages/alembic-hdf_x64-windows/debug/bin/abcstitcher.exe
    D:/vcpkg/packages/alembic-hdf_x64-windows/debug/bin/abctree.exe

Found &lt;span class="m"&gt;9&lt;/span&gt; error&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt;. Please correct the portfile:
    D:&lt;span class="se"&gt;\v&lt;/span&gt;cpkg&lt;span class="se"&gt;\p&lt;/span&gt;orts&lt;span class="se"&gt;\a&lt;/span&gt;lembic-hdf&lt;span class="se"&gt;\p&lt;/span&gt;ortfile.cmake
-- Performing post-build validation &lt;span class="k"&gt;done&lt;/span&gt;
Error: Building package alembic-hdf:x64-windows failed with: POST_BUILD_CHECKS_FAILED
Please ensure you&lt;span class="err"&gt;'&lt;/span&gt;re using the latest portfiles with &lt;span class="sb"&gt;`&lt;/span&gt;.&lt;span class="se"&gt;\v&lt;/span&gt;cpkg update&lt;span class="sb"&gt;`&lt;/span&gt;, &lt;span class="k"&gt;then&lt;/span&gt;
submit an issue at https://github.com/Microsoft/vcpkg/issues including:
  Package: alembic-hdf:x64-windows
  Vcpkg version: &lt;span class="m"&gt;0&lt;/span&gt;.0.81-144d3718c4197b101c7d61ee6a258200371fb1ab

Additionally, attach any relevant sections from the log files above.
&lt;/pre&gt;
&lt;p&gt;という感じになった。
エラーメッセージがすごく親切。
あと、NINJAビルド速い。
エラーにはなるがビルド結果は以下のように出力された。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;VCPKG_DIR/packages/alembic-hdf_x64-windows
│  BUILD_INFO
│
├─bin
│      abcdiff.exe
│      abcecho.exe
│      abcechobounds.exe
│      abcls.exe
│      abcstitcher.exe
│      abctree.exe
│
├─debug
│  ├─bin
│  │      abcdiff.exe
│  │      abcecho.exe
│  │      abcechobounds.exe
│  │      abcls.exe
│  │      abcstitcher.exe
│  │      abctree.exe
│  │
│  ├─include
│  │  └─Alembic
│  │      ├─Abc
│  │      │      *.h
│  │      │
│  │      ├─AbcCollection
│  │      │      *.h
│  │      │
│  │      ├─AbcCoreAbstract
│  │      │      *.h
│  │      │
│  │      ├─AbcCoreFactory
│  │      │      *.h
│  │      │
│  │      ├─AbcCoreLayer
│  │      │      *.h
│  │      │
│  │      ├─AbcCoreOgawa
│  │      │      *.h
│  │      │
│  │      ├─AbcGeom
│  │      │      *.h
│  │      │
│  │      ├─AbcMaterial
│  │      │      *.h
│  │      │
│  │      └─Util
│  │              *.h
│  │
│  └─lib
│      │  Alembic.dll
│      │  Alembic.lib
│      │
│      └─cmake
│          └─Alembic
│                  AlembicConfig.cmake
│                  AlembicConfigVersion.cmake
│                  AlembicTargets-debug.cmake
│                  AlembicTargets.cmake
│
├─include
│  └─Alembic
│      ├─Abc
│      │      *.h
│      │
│      ├─AbcCollection
│      │      *.h
│      │
│      ├─AbcCoreAbstract
│      │      *.h
│      │
│      ├─AbcCoreFactory
│      │      *.h
│      │
│      ├─AbcCoreLayer
│      │      *.h
│      │
│      ├─AbcCoreOgawa
│      │      *.h
│      │
│      ├─AbcGeom
│      │      *.h
│      │
│      ├─AbcMaterial
│      │      *.h
│      │
│      └─Util
│              *.h
│
└─lib
    │  Alembic.dll
    │  Alembic.lib
    │
    └─cmake
        └─Alembic
                AlembicConfig.cmake
                AlembicConfigVersion.cmake
                AlembicTargets-release.cmake
                AlembicTargets.cmake
&lt;/pre&gt;
&lt;p&gt;ここから不要なものを削除したり、場所の違うものを移動したりすることで完成できそう。
エラーメッセージに沿って修正してみる&lt;/p&gt;
&lt;p&gt;&lt;code&gt;debug/include&lt;/code&gt; 不要&lt;/p&gt;
&lt;p&gt;エラーメッセージに含まれるとおりに。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;REMOVE_RECURSE&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CURRENT_PACKAGES_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/debug/include&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="err"&gt;lib/cmake/Alembic/*.cmakeをshare/alembic-hdfに移動するべし&lt;/span&gt;
&lt;span class="err"&gt;debug/lib/cmake/Alembicを統合するべし。&lt;/span&gt;
&lt;span class="nb"&gt;vcpkg_fixup_cmake_targets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;CONFIG_PATH&lt;/span&gt; &lt;span class="s2"&gt;"lib/cmake/Alembic"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;ぽい。 &lt;code&gt;alembic/portfile.cmake&lt;/code&gt; を参考にした&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="err"&gt;lib/Alembic.dllをbin/Alembic.dllに移動せよ&lt;/span&gt;
&lt;span class="err"&gt;debug/lib/Alembic.dllも。&lt;/span&gt;
&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;RENAME&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CURRENT_PACKAGES_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/lib/Alembic.dll&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CURRENT_PACKAGES_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/bin/Alembic.dll&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;RENAME&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CURRENT_PACKAGES_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/debug/lib/Alembic.dll&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CURRENT_PACKAGES_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/debug/bin/Alembic.dll&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;alembic/portfile.cmake&lt;/code&gt; を参考にした&lt;/p&gt;
&lt;p&gt;ライセンスファイルをコピーせよ
エラーメッセージに含まれるとおりに。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;COPY&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CURRENT_BUILDTREES_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/src/alembic-1.7.1/LICENSE.txt&lt;/span&gt; &lt;span class="s"&gt;DESTINATION&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CURRENT_PACKAGES_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/share/alembic-hdf&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;RENAME&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CURRENT_PACKAGES_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/share/alembic-hdf/LICENSE.txt&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CURRENT_PACKAGES_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/share/alembic-hdf/copyright&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;exeを削除せよ&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;GLOB&lt;/span&gt; &lt;span class="s"&gt;EXE&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CURRENT_PACKAGES_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/bin/*.exe&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;GLOB&lt;/span&gt; &lt;span class="s"&gt;DEBUG_EXE&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CURRENT_PACKAGES_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/debug/bin/*.exe&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;REMOVE&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;EXE&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;REMOVE&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;DEBUG_EXE&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;alembic/portfile.cmakeを参考にした
おまけ: debug用にpdbをコピー
alembic/portfile.cmakeを参考にした
vcpkg_copy_pdbs()&lt;/p&gt;
&lt;p&gt;vcpkg_install_cmakeより下を抜粋。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="nb"&gt;vcpkg_install_cmake&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c"&gt;# Remove debug/include&lt;/span&gt;
&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;REMOVE_RECURSE&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CURRENT_PACKAGES_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/debug/include&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;# fix *.cmake&lt;/span&gt;
&lt;span class="nb"&gt;vcpkg_fixup_cmake_targets&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;CONFIG_PATH&lt;/span&gt; &lt;span class="s2"&gt;"lib/cmake/Alembic"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;# Rename dll&lt;/span&gt;
&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;RENAME&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CURRENT_PACKAGES_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/lib/Alembic.dll&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CURRENT_PACKAGES_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/bin/Alembic.dll&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;RENAME&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CURRENT_PACKAGES_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/debug/lib/Alembic.dll&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CURRENT_PACKAGES_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/debug/bin/Alembic.dll&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;# Handle copyright&lt;/span&gt;
&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;COPY&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CURRENT_BUILDTREES_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/src/alembic-1.7.1/LICENSE.txt&lt;/span&gt; &lt;span class="s"&gt;DESTINATION&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CURRENT_PACKAGES_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/share/alembic-hdf&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;RENAME&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CURRENT_PACKAGES_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/share/alembic-hdf/LICENSE.txt&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CURRENT_PACKAGES_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/share/alembic-hdf/copyright&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;# Remove exe files&lt;/span&gt;
&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;GLOB&lt;/span&gt; &lt;span class="s"&gt;EXE&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CURRENT_PACKAGES_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/bin/*.exe&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;GLOB&lt;/span&gt; &lt;span class="s"&gt;DEBUG_EXE&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CURRENT_PACKAGES_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/debug/bin/*.exe&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;REMOVE&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;EXE&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;REMOVE&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;DEBUG_EXE&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;# Copy pdb&lt;/span&gt;
&lt;span class="nb"&gt;vcpkg_copy_pdbs&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;再度ビルド。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;gt; vcpkg install alembic-hdf:x64-windows&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;うまくいった。
USE_HDF5を有効にする
portfileの修正
CONTROLに依存追加。
Build-Depends: ilmbase, hdf5&lt;/p&gt;
&lt;p&gt;USE_HDF5を有効に。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="nb"&gt;vcpkg_configure_cmake&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;SOURCE_PATH&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;SOURCE_PATH&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="s"&gt;PREFER_NINJA&lt;/span&gt; &lt;span class="c"&gt;# Disable this option if project cannot be built with Ninja&lt;/span&gt;
    &lt;span class="s"&gt;OPTIONS&lt;/span&gt; &lt;span class="s"&gt;-DUSE_HDF5=ON&lt;/span&gt;
    &lt;span class="c"&gt;# OPTIONS_RELEASE -DOPTIMIZE=1&lt;/span&gt;
    &lt;span class="c"&gt;# OPTIONS_DEBUG -DDEBUGGABLE=1&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;ビルドあんどエラー
ビルドしてみるがエラーになる。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;VCPKG_DIR\buildtrees\alembic-hdf\package-x64-windows-rel-out.log&lt;/code&gt; を見て原因を探る。&lt;/p&gt;
&lt;p&gt;hdf5に対するlinkが無くて、hdf5関連のシンボルが見つからん。
パッチ
alembic-1.7.1/lib/Alembic/CMakeLists.txtを修正したいのでやり方を調べる。
パッチの当て方&lt;/p&gt;
&lt;p&gt;portfile.cmakeに記述する。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="err"&gt;vcpkg_extract_source_archiveよりあと、vcpkg_install_cmakeより前。&lt;/span&gt;
&lt;span class="nb"&gt;vcpkg_apply_patches&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;SOURCE_PATH&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;SOURCE_PATH&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
    &lt;span class="s"&gt;PATCHES&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CMAKE_CURRENT_LIST_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/fix-hdf5link.patch&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;パッチの作り方&lt;/p&gt;
&lt;p&gt;https://github.com/Microsoft/vcpkg/blob/master/docs/examples/patching-libpng.md#patching-the-code-to-improve-compatibility&lt;/p&gt;
&lt;p&gt;なるほど。
gitを準備して・・・&lt;/p&gt;
&lt;pre class="code literal-block"&gt;vcpkg&amp;gt; &lt;span class="nb"&gt;cd&lt;/span&gt; ./buildtrees/alembic-hdf/src/alembic-1.7.1/
vcpkg/buildtrees/alembic-hdf/src/alembic-1.7.1&amp;gt; git init
vcpkg/buildtrees/alembic-hdf/src/alembic-1.7.1&amp;gt; git add .
vcpkg/buildtrees/alembic-hdf/src/alembic-1.7.1&amp;gt; git commit -m &lt;span class="s2"&gt;"temp"&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;修正
alembic-1.7.1/lib/Alembic/CMakeLists.txtを修正。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&amp;gt; git diff
&lt;span class="gd"&gt;--git a/lib/Alembic/CMakeLists.txt b/lib/Alembic/CMakeLists.txt&lt;/span&gt;
&lt;span class="gh"&gt;index 5028c91..1f81d50 100644&lt;/span&gt;
&lt;span class="gd"&gt;--- a/lib/Alembic/CMakeLists.txt&lt;/span&gt;
&lt;span class="gi"&gt;+++ b/lib/Alembic/CMakeLists.txt&lt;/span&gt;
&lt;span class="gu"&gt;@@ -49,6 +49,12 @@ ADD_SUBDIRECTORY(AbcMaterial)&lt;/span&gt;
 ADD_SUBDIRECTORY(Ogawa)

 ADD_LIBRARY(Alembic ${LIB_TYPE} ${CXX_FILES})
&lt;span class="gi"&gt;+IF (USE_HDF5)&lt;/span&gt;
&lt;span class="gi"&gt;+    TARGET_LINK_LIBRARIES(Alembic&lt;/span&gt;
&lt;span class="gi"&gt;+        ${HDF5_LIBRARIES}&lt;/span&gt;
&lt;span class="gi"&gt;+        )&lt;/span&gt;
&lt;span class="gi"&gt;+    ADD_DEFINITIONS(-DH5_BUILT_AS_DYNAMIC_LIB)&lt;/span&gt;
&lt;span class="gi"&gt;+ENDIF()&lt;/span&gt;

 TARGET_INCLUDE_DIRECTORIES(Alembic
     PUBLIC
&lt;/pre&gt;
&lt;p&gt;gitでpatchを作成&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;gt; git diff | out-file -enc ascii ..\..\..\..\ports\alembic-hdf\fix-hdf5link.patch&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;ビルド&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&amp;gt; .&lt;span class="se"&gt;\v&lt;/span&gt;cpkg.exe install alembic-hdf:x64-windows
Installing package alembic-hdf:x64-windows... &lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;VCPKG_DIR/installed/x64-windows/bin/Alembic.dllをdependencywalkerで見てみるとばっちりhdf5.dllへのリンクが含まれている。作業完了。
はじめてで調べながらでもわりとさくさく作業が進んだ。エラーメッセージの出し方とか、フォルダの構成とかvcpkgなかなかレベルが高いな。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;ports
ports/alembic-hdf/CONTROL
Source: alembic-hdf
Version: &lt;span class="m"&gt;1&lt;/span&gt;.7.1
Description: alembic with hdf5
Build-Depends: ilmbase, hdf5
&lt;/pre&gt;
&lt;p&gt;```ports/alembic-hdf/portfile.cmake&lt;/p&gt;
&lt;h2&gt;Common Ambient Variables:&lt;/h2&gt;
&lt;h2&gt;CURRENT_BUILDTREES_DIR    = ${VCPKG_ROOT_DIR}\buildtrees\${PORT}&lt;/h2&gt;
&lt;h2&gt;CURRENT_PACKAGES_DIR      = ${VCPKG_ROOT_DIR}\packages\${PORT}_${TARGET_TRIPLET}&lt;/h2&gt;
&lt;h2&gt;CURRENT_PORT_DIR          = ${VCPKG_ROOT_DIR}\ports\${PORT}&lt;/h2&gt;
&lt;h2&gt;PORT                      = current port name (zlib, etc)&lt;/h2&gt;
&lt;h2&gt;TARGET_TRIPLET            = current triplet (x86-windows, x64-windows-static, etc)&lt;/h2&gt;
&lt;h2&gt;VCPKG_CRT_LINKAGE         = C runtime linkage type (static, dynamic)&lt;/h2&gt;
&lt;h2&gt;VCPKG_LIBRARY_LINKAGE     = target library linkage type (static, dynamic)&lt;/h2&gt;
&lt;h2&gt;VCPKG_ROOT_DIR            = &lt;c:&gt;&lt;/c:&gt;&lt;/h2&gt;
&lt;h2&gt;VCPKG_TARGET_ARCHITECTURE = target architecture (x64, x86, arm)&lt;/h2&gt;
&lt;h2&gt;&lt;/h2&gt;
&lt;p&gt;include(vcpkg_common_functions)
set(SOURCE_PATH ${CURRENT_BUILDTREES_DIR}/src/alembic-1.7.1)
vcpkg_download_distfile(ARCHIVE
    URLS "https://github.com/alembic/alembic/archive/1.7.1.tar.gz"
    FILENAME "1.7.1.tar.gz"
    SHA512 89e30b681a76eaf79b20ebeff62c495971b0eb64b28f249a14bbcf3bdb40df7eda93b0ede299dd5511bd4587a2cc2d4ebd851fb89bf999fdccc31fee3cffbba2
)
vcpkg_extract_source_archive(${ARCHIVE})&lt;/p&gt;
&lt;p&gt;vcpkg_apply_patches(
    SOURCE_PATH ${SOURCE_PATH}
    PATCHES ${CMAKE_CURRENT_LIST_DIR}/fix-hdf5link.patch
)&lt;/p&gt;
&lt;p&gt;vcpkg_configure_cmake(
    SOURCE_PATH ${SOURCE_PATH}
    PREFER_NINJA # Disable this option if project cannot be built with Ninja
    OPTIONS -DUSE_HDF5=ON
    # OPTIONS_RELEASE -DOPTIMIZE=1
    # OPTIONS_DEBUG -DDEBUGGABLE=1
)&lt;/p&gt;
&lt;p&gt;vcpkg_install_cmake()&lt;/p&gt;
&lt;h2&gt;Remove debug/include&lt;/h2&gt;
&lt;p&gt;file(REMOVE_RECURSE ${CURRENT_PACKAGES_DIR}/debug/include)&lt;/p&gt;
&lt;h2&gt;fix *.cmake&lt;/h2&gt;
&lt;p&gt;vcpkg_fixup_cmake_targets(CONFIG_PATH "lib/cmake/Alembic")&lt;/p&gt;
&lt;h2&gt;Rename dll&lt;/h2&gt;
&lt;p&gt;file(RENAME ${CURRENT_PACKAGES_DIR}/lib/Alembic.dll ${CURRENT_PACKAGES_DIR}/bin/Alembic.dll)
file(RENAME ${CURRENT_PACKAGES_DIR}/debug/lib/Alembic.dll ${CURRENT_PACKAGES_DIR}/debug/bin/Alembic.dll)&lt;/p&gt;
&lt;h2&gt;Handle copyright&lt;/h2&gt;
&lt;p&gt;file(COPY ${CURRENT_BUILDTREES_DIR}/src/alembic-1.7.1/LICENSE.txt DESTINATION ${CURRENT_PACKAGES_DIR}/share/alembic-hdf)
file(RENAME ${CURRENT_PACKAGES_DIR}/share/alembic-hdf/LICENSE.txt ${CURRENT_PACKAGES_DIR}/share/alembic-hdf/copyright)&lt;/p&gt;
&lt;h2&gt;Remove exe files&lt;/h2&gt;
&lt;p&gt;file(GLOB EXE ${CURRENT_PACKAGES_DIR}/bin/&lt;em&gt;.exe)
file(GLOB DEBUG_EXE ${CURRENT_PACKAGES_DIR}/debug/bin/&lt;/em&gt;.exe)
file(REMOVE ${EXE})
file(REMOVE ${DEBUG_EXE})&lt;/p&gt;
&lt;h2&gt;Copy pdb&lt;/h2&gt;
&lt;p&gt;vcpkg_copy_pdbs()&lt;/p&gt;
&lt;pre class="code literal-block"&gt;```ports/alembic-hdf/fix-hdf5link.patch
diff --git a/lib/Alembic/CMakeLists.txt b/lib/Alembic/CMakeLists.txt
index 5028c91..1f81d50 100644
--- a/lib/Alembic/CMakeLists.txt
+++ b/lib/Alembic/CMakeLists.txt
@@ -49,6 +49,12 @@ ADD_SUBDIRECTORY(AbcMaterial)
 ADD_SUBDIRECTORY(Ogawa)

 ADD_LIBRARY(Alembic &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;LIB_TYPE&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt; &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;CXX_FILES&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;)
+IF (USE_HDF5)
+    TARGET_LINK_LIBRARIES(Alembic 
+        &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;HDF5_LIBRARIES&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;
+        )
+    ADD_DEFINITIONS(-DH5_BUILT_AS_DYNAMIC_LIB)
+ENDIF()

 TARGET_INCLUDE_DIRECTORIES(Alembic
     PUBLIC
&lt;/pre&gt;
&lt;p&gt;vcpkgにPR送った
採用されたので上記の作業は必要なくなったのが、cmake-3.9.0の更新でFindHDF5が壊れるという事態が発生したので対応中…。&lt;/p&gt;</description><category>cg</category><category>vcpkg</category><guid>https://ousttrue.github.io/posts/2017/07/vcpkg_alembic/</guid><pubDate>Mon, 17 Jul 2017 15:00:00 GMT</pubDate></item><item><title>vcpkgでopencvの開発環境を作る</title><link>https://ousttrue.github.io/posts/2017/07/cmake_2017/</link><dc:creator>ousttrue</dc:creator><description>&lt;p&gt;Windowsでcmakeを使う場合に外部ライブラリの解決がわりと困難。&lt;/p&gt;
&lt;p&gt;cmakeのfind_packageがうまくうごかないのである。Unix系であれば &lt;code&gt;CMAKE_INSTALL_PREFIX(/usr/local)&lt;/code&gt; にインストールされた依存プロジェクトを発見できるし、足りなければインストールすることもできる。それに、&lt;code&gt;apt-get&lt;/code&gt; とか &lt;code&gt;pacman&lt;/code&gt; とかあるので、自分で全部ビルドするということはあまり必要なかったりする今日この頃です。Windowsにはそういうのがなかった(CMAKE_INSTALL_PREFIXはどこなのか)のだけど、最近出てきたvcpkgがそれをやってくれる。&lt;/p&gt;
&lt;p&gt;ArUcoをvcpkgとcmakeでビルドする
ということでvcpkgで外部ライブラリを構築し、一部をソースごとプロジェクトにコピーする方法でArUco(OpenCV)のビルドをやってみる。ArUcoのデバッグ版にアタッチしたり改造したりするつもりなので、opencvのモジュール版ArUcoではなく単体の方を使う。環境は、Windows10(64bit)にVisualStudio2017(C++)。
vcpkgを準備&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;https://github.com/Microsoft/vcpkg&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class="code literal-block"&gt;&amp;gt; git clone https://github.com/Microsoft/vcpkg.git
&amp;gt; &lt;span class="nb"&gt;cd&lt;/span&gt; vcpkg
vcpkg&amp;gt; .&lt;span class="se"&gt;\b&lt;/span&gt;ootstrap-vcpkg.bat

vcpkgで64bit版のopencvをインストール
vcpkg&amp;gt; .&lt;span class="se"&gt;\v&lt;/span&gt;cpkg.exe install opencv:x64-windows

vcpkg/installed/x64-windowsにinclude, lib, bin等がインストールされる。
vcpkgで64bit版のfreeglutをインストール
vcpkg&amp;gt; .&lt;span class="se"&gt;\v&lt;/span&gt;cpkg.exe install freeglut:x64-windows
&lt;/pre&gt;
&lt;p&gt;arucoのソースを入手
OpenCVのモジュール&lt;/p&gt;
&lt;p&gt;http://docs.opencv.org/trunk/d9/d6d/tutorial_table_of_content_aruco.html&lt;/p&gt;
&lt;p&gt;ではなくてこっち。&lt;/p&gt;
&lt;p&gt;http://www.uco.es/investiga/grupos/ava/node/26
https://sourceforge.net/projects/aruco/files/&lt;/p&gt;
&lt;p&gt;aruco-2.0.19.zipを手に入れた。
とりあえずビルドしてみる
vcpkgはd:/vcpkgにインストールされている。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;aruco-2.0.19&amp;gt; mkdir build
aruco-2.0.19/build&amp;gt; cmake -D &lt;span class="nv"&gt;CMAKE_INSTALL_PREFIX&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;d:/vcpkg/installed/x64-windows -D &lt;span class="nv"&gt;OpenCVDir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;d:/vcpkg/installed/x64-windows/share/opencv -D &lt;span class="nv"&gt;BUILD_GLSAMPLES&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt; -G &lt;span class="s2"&gt;"Visual Studio 15 2017 Win64"&lt;/span&gt; ..
&lt;/pre&gt;
&lt;p&gt;aruco_test_glとaruco_test_markermap_glのビルドでエラーが出るのでちょっとコードを修正する。
gl.hより先にWindows.hをincludeしてあげる。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="cp"&gt;#ifdef __APPLE__&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;GLUT/glut.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#elif defined(_MSC_VER)&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;Windows.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;GL/glut.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="cp"&gt;#else&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;GL/gl.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="cpf"&gt;&amp;lt;GL/glut.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#endif&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;あとfreeglutのリンクををdebug, release振り分けのために、
CMakeLists.txtをちょっと改造。だいたいこういう感じ。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="nb"&gt;IF&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;GLUT_FOUND&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;STRING&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;REPLACE&lt;/span&gt; &lt;span class="s"&gt;lib/freeglut.lib&lt;/span&gt; &lt;span class="s"&gt;debug/lib/freeglutd.lib&lt;/span&gt; &lt;span class="s"&gt;GLUT_glut_DEBUG_LIBRARY&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GLUT_glut_LIBRARY&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;MESSAGE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;STATUS&lt;/span&gt; &lt;span class="s2"&gt;"GLUT_glut_DEBUG_LIBRARY=${GLUT_glut_DEBUG_LIBRARY}"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;OPENGL_LIBS&lt;/span&gt;  &lt;span class="s"&gt;general&lt;/span&gt;
        &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;OPENGL_gl_LIBRARY&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;OPENGL_glu_LIBRARY&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="s"&gt;optimized&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GLUT_glut_LIBRARY&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="s"&gt;debug&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GLUT_glut_DEBUG_LIBRARY&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;ENDIF&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;この部分と連携する。
TARGET_LINK_LIBRARIES(aruco_test_gl ${OPENGL_LIBS})&lt;/p&gt;
&lt;p&gt;これで、CMAKE_INSTALL_PREFIX/binにパスを通せばプログラムは動作する。
arucoのテストデータを入手してwebcamで動作確認
テストデータを入手する。&lt;/p&gt;
&lt;p&gt;https://sourceforge.net/projects/aruco/files/&lt;/p&gt;
&lt;p&gt;aruco-test-data-2.0.zipを手に入れた。
この中のintrinsics.ymlを引数にして実行する(本来は、カメラキャリブレーションをしてintrinsics.ymlを自分のカメラ用に作成する必要がある)。
aruco_test_gl.exe "live" "path_to_intrinsics.yml" 0.05
aruco_test_glとarucoの入った小さいプロジェクト
ArUcoを改造する予定。&lt;/p&gt;
&lt;p&gt;intrinsics.ymlを省略したり簡略化したい(fovyとaspectratioだけにするなど)
左手系(DirectXやUnity)に対応&lt;/p&gt;
&lt;p&gt;ということで、arucoのソースを含めている。&lt;/p&gt;
&lt;pre class="code literal-block"&gt;aruco_test

  + CMakeLists.txt

  + aruco_test_gl
    + CMakeLists.txt
    + aruco_test_gl.cpp&lt;span class="o"&gt;(&lt;/span&gt;aruco-2.0.19/utils_gl/aruco_test_gl.cppをコピー&lt;span class="o"&gt;)&lt;/span&gt;

  + src&lt;span class="o"&gt;(&lt;/span&gt;aruco-2.0.19/srcをコピー&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="nb"&gt;CMAKE_MINIMUM_REQUIRED&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;VERSION&lt;/span&gt; &lt;span class="s"&gt;2.8&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;PROJECT&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;aruco&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;FIND_PACKAGE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;OpenCV&lt;/span&gt; &lt;span class="s"&gt;REQUIRED&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;SET&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;ARUCO_REQUIRED_LIBRARIES&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;OpenCV_LIBS&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;INCLUDE_DIRECTORIES&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;OpenCV_INCLUDE_DIRS&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;FIND_PACKAGE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;OpenGL&lt;/span&gt; &lt;span class="s"&gt;REQUIRED&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;FIND_PACKAGE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;GLUT&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;MESSAGE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;STATUS&lt;/span&gt; &lt;span class="s2"&gt;"GLUT_glut_LIBRARY=${GLUT_glut_LIBRARY}"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;STRING&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;REPLACE&lt;/span&gt; &lt;span class="s"&gt;lib/freeglut.lib&lt;/span&gt; &lt;span class="s"&gt;debug/lib/freeglutd.lib&lt;/span&gt; &lt;span class="s"&gt;GLUT_glut_DEBUG_LIBRARY&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GLUT_glut_LIBRARY&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;MESSAGE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;STATUS&lt;/span&gt; &lt;span class="s2"&gt;"GLUT_glut_DEBUG_LIBRARY=${GLUT_glut_DEBUG_LIBRARY}"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;IF&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;GLUT_FOUND&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;set&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;OPENGL_LIBS&lt;/span&gt;  &lt;span class="s"&gt;general&lt;/span&gt;
        &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;OPENGL_gl_LIBRARY&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;OPENGL_glu_LIBRARY&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="s"&gt;optimized&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GLUT_glut_LIBRARY&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="s"&gt;debug&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GLUT_glut_DEBUG_LIBRARY&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;ENDIF&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="nb"&gt;ADD_DEFINITIONS&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;-D_SCL_SECURE_NO_WARNINGS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;SET&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;CMAKE_CXX_FLAGS&lt;/span&gt; &lt;span class="s2"&gt;"/wd4819 /EHsc"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;ADD_SUBDIRECTORY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;src&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;ADD_SUBDIRECTORY&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;utils_gl&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="err"&gt;aruco_test_gl/CMakeLists.txt&lt;/span&gt;
&lt;span class="nb"&gt;INCLUDE_DIRECTORIES&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PROJECT_SOURCE_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/src&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;GNULIBS_INCLUDE_DIR&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;LINK_LIBRARIES&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;PROJECT_NAME&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;REQUIRED_LIBRARIES&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt; &lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;IF&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;OPENGL_LIBS&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;ADD_EXECUTABLE&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;aruco_test_gl&lt;/span&gt;
        &lt;span class="s"&gt;aruco_test_gl.cpp&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;TARGET_LINK_LIBRARIES&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;aruco_test_gl&lt;/span&gt; &lt;span class="o"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;OPENGL_LIBS&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;以上で、arucoを例にvcpkgでopencvとfreeglutdを外部管理してcmakeでプロジェクトを取り廻す例を作った。
作業例。&lt;/p&gt;
&lt;p&gt;https://github.com/ousttrue/aruco_test&lt;/p&gt;</description><category>opencv</category><category>vcpkg</category><guid>https://ousttrue.github.io/posts/2017/07/cmake_2017/</guid><pubDate>Fri, 30 Jun 2017 15:00:00 GMT</pubDate></item><item><title>boostから独立したasio</title><link>https://ousttrue.github.io/posts/2017/05/asio/</link><dc:creator>ousttrue</dc:creator><description>&lt;p&gt;vcpkgを眺めていたらnot boostなasioを発見した。&lt;/p&gt;
&lt;p&gt;asioをBoostに含まれているオフィシャル感のあるクロスプラットフォームな通信ライブラリととらえていたのだけど、c++11でboostのよく使う部分がc++にかなり取り込まれて肥大化する一方のboostを避ける気持ちが生まれていた。&lt;/p&gt;
&lt;p&gt;&lt;a href="http://think-async.com/Asio/AsioAndBoostAsio"&gt;http://think-async.com/Asio/AsioAndBoostAsio&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;読んでみるとついにヘッダオンリー化を果たしたらしい。boostの外に出ないとヘッダオンリー化が難しそうではある。たしか、asioはsocket周りじゃなくてerror周りのクラスがコンパイル対象なのに引きずられてasioを使うにはコンパイルを強いられるということがあった。技術的にはだいぶ前からヘッダオンリー化は可能であったのだろうがついにやってくれたか。素晴らしい。解凍するとギガ単位になる最近のboostはいかがなものかと思ってた。
稀に使われているぽい、拙作のmsgpack-asioもヘッダオンリーのasioを使って近代化したいなぁ。あと、msgpackの実装も
&lt;a href="https://github.com/nlohmann/json"&gt;https://github.com/nlohmann/json&lt;/a&gt;
に切り替えたい。
c++11以降、c++界隈が活性化しているような気がするな。&lt;/p&gt;</description><category>asio</category><category>cpp</category><category>vcpkg</category><guid>https://ousttrue.github.io/posts/2017/05/asio/</guid><pubDate>Thu, 04 May 2017 15:00:00 GMT</pubDate></item><item><title>vc向けのメタビルドツールvcpkgを発見</title><link>https://ousttrue.github.io/posts/2017/05/vcpkg/</link><dc:creator>ousttrue</dc:creator><description>&lt;p&gt;uwp向けのlibpngのビルドのエラーを修正する過程でvcpkgを見つけた。
vc向けのメタビルドツールの予感。&lt;/p&gt;
&lt;p&gt;cloneして&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;git clone https://github.com/Microsoft/vcpkg.git&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;buildする&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;cd vcpkg
vcpkg&amp;gt; ./bootstrap.bat&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;UWP版のpackageインストール
vcpkg&amp;gt; ./vcpkg install libpng:x86-uwp&lt;/p&gt;
&lt;p&gt;なるほど。
OpenCVのUWP版はあるかな・・・。
vcpkg&amp;gt; ./vcpkg install opencv:x86-uwp&lt;/p&gt;
&lt;p&gt;あった。
最新版のopencv-3.2.0もビルドできるやん。
一瞬にして作り始めていた、
https://github.com/ousttrue/bldproc/tree/master/procs
がオワコンになった。
検索してみたら日本語の紹介記事が一つあった。&lt;/p&gt;
&lt;p&gt;【速報】Vcpkg: Windowsの公式C++ライブラリ管理ツール&lt;/p&gt;
&lt;p&gt;desktopビルドできた&lt;/p&gt;
&lt;p&gt;ffpmeg(msys2をダウンロードして使っていた。わかる)&lt;/p&gt;
&lt;p&gt;uwpビルドできた&lt;/p&gt;
&lt;p&gt;opencv
openssl&lt;/p&gt;
&lt;p&gt;uwpビルドできなかった&lt;/p&gt;
&lt;p&gt;cairo。途中でpeclのビルドに失敗する(pixmanはビルドできたのでオプション外せばいけそう)。
bullet3。ちょっと修正が要るか&lt;/p&gt;</description><category>vcpkg</category><guid>https://ousttrue.github.io/posts/2017/05/vcpkg/</guid><pubDate>Wed, 03 May 2017 15:00:00 GMT</pubDate></item></channel></rss>