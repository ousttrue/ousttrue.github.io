<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>三次元日誌 (threejsについての記事)</title><link>https://ousttrue.github.io/</link><description></description><atom:link href="https://ousttrue.github.io/categories/threejs.xml" rel="self" type="application/rss+xml"></atom:link><language>ja</language><copyright>Contents © 2022 &lt;a href="mailto:ousttrue@gmail.com"&gt;ousttrue&lt;/a&gt; </copyright><lastBuildDate>Sat, 14 May 2022 17:22:19 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Three.jsのJSONモデルフォーマット</title><link>https://ousttrue.github.io/posts/2015/12/07/threejs_04/</link><dc:creator>ousttrue</dc:creator><description>&lt;p&gt;source
外部のJSONに記述されたモデルを読み込む機能がある。
External models in Three.js
を見てやってみた。
OnLoad(geometry: THREE.Geometry, materials: THREE.Material[]) {
    // create a mesh with models geometry and material
    var material = new THREE.MeshPhongMaterial(materials[0]);
    var mesh = new THREE.Mesh(
        geometry,
        material
    );&lt;/p&gt;
&lt;pre class="code literal-block"&gt;mesh.rotation.y = -Math.PI / 5;

this.scene.add(mesh);
this.Render();
&lt;/pre&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;OnProgress(event: any) {
    console.log('OnProgress: ', event);
}&lt;/p&gt;
&lt;p&gt;OnError(event: any) {
    console.log('OnError: ', event);
}&lt;/p&gt;
&lt;p&gt;AddModelFromJson(path: string) {
    var loader = new THREE.JSONLoader(); // init the loader util&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;init&lt;/span&gt; &lt;span class="n"&gt;loading&lt;/span&gt;
&lt;span class="n"&gt;loader&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OnLoad&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OnProgress&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OnError&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bind&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;}&lt;/p&gt;
&lt;p&gt;JSONLoaderクラスを初期化してloadをコール、loadは非同期に完了してOnLoadコールバックでMeshを組み立ててシーンに追加するという流れ。
OnLoadにMeshが返ってくればいいと思うのだが・・・
モデルはサンプルファイルを探したのだが見つからなかったので、
Three.js の JSONLoader のメモ
を見てBlenderのThree.js exporterでお猿さんを作ってみました。
一応、茶色いマテリアルをつけたのだけどうまくいかず。
フォーマットはどうなっているのか？
cubeもエクスポートしてみた。
cube.json
{
    "faces": [35,2,0,1,3,0,0,1,2,3,35,3,7,6,2,0,3,4,5,0,35,7,5,4,6,0,4,6,7,5,35,0,4,5,1,0,1,7,6,2,35,0,2,6,4,0,1,0,5,7,35,5,7,3,1,0,6,4,3,2],
    "name": "CubeGeometry.1",
    "metadata": {
        "generator": "io_three",
        "vertices": 8,
        "type": "Geometry",
        "uvs": 0,
        "version": 3,
        "faces": 6,
        "materials": 1,
        "normals": 8
    },
    "vertices": [-1,-1,1,-1,1,1,-1,-1,-1,-1,1,-1,1,-1,1,1,1,1,1,-1,-1,1,1,-1],
    "materials": [{
        "depthWrite": true,
        "colorDiffuse": [0,0.64,0.040691],
        "depthTest": true,
        "specularCoef": 50,
        "blending": "NormalBlending",
        "shading": "phong",
        "colorEmissive": [0,0,0],
        "opacity": 1,
        "transparent": false,
        "DbgIndex": 0,
        "visible": true,
        "wireframe": false,
        "colorSpecular": [0.5,0.5,0.5],
        "colorAmbient": [0,0.64,0.040691],
        "DbgName": "Material",
        "DbgColor": 15658734
    }],
    "uvs": [],
    "normals": [-0.577349,-0.577349,-0.577349,-0.577349,-0.577349,0.577349,-0.577349,0.577349,0.577349,-0.577349,0.577349,-0.577349,0.577349,0.577349,-0.577349,0.577349,-0.577349,-0.577349,0.577349,0.577349,0.577349,0.577349,-0.577349,0.577349]
}&lt;/p&gt;
&lt;p&gt;JSON Model format 3 (Soon to be deprecated)
これっぽいですな。
なるほど。なるほど。&lt;/p&gt;</description><category>threejs</category><guid>https://ousttrue.github.io/posts/2015/12/07/threejs_04/</guid><pubDate>Sun, 06 Dec 2015 15:00:00 GMT</pubDate></item></channel></rss>