{"version":3,"file":"component---src-templates-post-template-js-content-file-path-content-posts-2022-1121-build-prefix-md-6d6906d143941842b54c.js","mappings":"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","sources":["webpack:///./content/posts/2022/1121-build-prefix.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"GStreamer をビルドする過程で \", React.createElement(_components.code, null, \"meson\"), \" を調べたら、存外に良かった。\\npython なので、CMake と比べてデバッガをアタッチできるのが圧倒的に楽。\\nCMake はステップ実行とかできないからね。\"), \"\\n\", React.createElement(_components.p, null, \"成り行きで GStreamer に続いて、 Gtk4, PyGObject とかをビルドしていたら、\\nGtk4 もわりと面白そうなことがわかった。\\n昔、Windows では扱いが面倒だった GLArea がさくっと動いた。\\nさらに Gtk4 で新しくできた Gsk 層が 2D の SceneGraph ぽくて、\\nPyOpenGL と連携して遊べるかもしれない。\\nNodeEditor とか Timeline(KeyFrame) Editor 作れないかなぁ。\\nPyGObject まわりは、gir(xml) から Python の型ヒント(pyi stub) を生成することで、\\nLanguageServer のインテリセンスをそれなりに効かせることができた。\\n最近の python では、 \", React.createElement(_components.code, null, \"Qt\"), \" とか \", React.createElement(_components.code, null, \"bpy\"), \" といった \", React.createElement(_components.code, null, \"native extension\"), \" の方が、\\n素の python モジュールより型情報が無くなるという逆転現象が起きているのだが、\\nPyGObject はほぼ gir(xml) そのままなので、わりといい感じになる。\"), \"\\n\", React.createElement(_components.p, null, \"Gtk のビルドが短時間でできることがわかったので、\\nGUI 層は自前ビルドでいけそうな気がしてきた。\\nつまり、Linux と Windows 両方を gtk4 でなるべく同じツールを使ってみる。\\nGentoo をクリーンインストールして下の層だけ \", React.createElement(_components.code, null, \"emerge\"), \" で入れた。\\nGentoo は USE フラグで \", React.createElement(_components.code, null, \"-gtk -glib -qt\"), \" などとすることで、依存が連鎖することを止めることができる。\"), \"\\n\", React.createElement(_components.p, null, \"ついでに \", React.createElement(_components.code, null, \"wayland\"), \" に手を出したところ、\", React.createElement(_components.code, null, \"wayland\"), \" 界隈もビルドツールに\\n\", React.createElement(_components.code, null, \"meson\"), \" が導入されているのを発見。\\n\", React.createElement(_components.code, null, \"download/clone\"), \" => \", React.createElement(_components.code, null, \"meson\"), \" を自動化する python スクリプトの作成に着手した。\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/ousttrue/toprefix\"), \"\\n\", React.createElement(_components.p, null, \"プロトタイプとしてはまぁまぁの使い勝手。\\n\", React.createElement(_components.code, null, \"gentoo\"), \" と \", React.createElement(_components.code, null, \"Windows\"), \" 共用で \", React.createElement(_components.code, null, \"gtk4\"), \" などをさくっと展開できるようになる。予定。\"), \"\\n\", React.createElement(_components.p, null, \"さらに \", React.createElement(_components.code, null, \"dotfiles\"), \" の管理でやっている \", React.createElement(_components.code, null, \"neovim\"), \" のビルドも合流。\\ngo 系の \", React.createElement(_components.code, null, \"ghq\"), \", \", React.createElement(_components.code, null, \"fzf\"), \" などの展開や、\\nrust 系の \", React.createElement(_components.code, null, \"wezterm\"), \", \", React.createElement(_components.code, null, \"stylua\"), \", \", React.createElement(_components.code, null, \"ripgrep\"), \" の展開もこっちに移そうかなと。\\nわりと処理のパターンは決まっていて次のうちのどれかになる事が多い。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">download => extract => build => install: tar ball\\ndownload => extract          => install: ビルド済み tar ball\\n              clone => build => install: repository</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"これにパッチ当てが追加になることがある。\"), \"\\n\", React.createElement(_components.p, null, \"ついでに、\\n以前作った \", React.createElement(_components.code, null, \"blender\"), \" の \", React.createElement(_components.code, null, \"bpy\"), \" モジュール生成スクリプトなんかも合流することを画策。\\n\", React.createElement(_components.code, null, \"svn\"), \" なしで \", React.createElement(_components.code, null, \"blender\"), \" ビルドできんかね。\\nとなると \", React.createElement(_components.code, null, \"pixar usd\"), \" も \", React.createElement(_components.code, null, \"llvm\"), \" もビルドしたいわね。\\n\", React.createElement(_components.code, null, \"pyxar usd\"), \" は \", React.createElement(_components.code, null, \"boost\"), \" の除去したいけどね。\\nTUI と Desktop のツール系は自前ビルドで遊べるようにしていく。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2022/1121-build-prefix.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  const frontmatter = data.mdx.frontmatter;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"div\", {\n    className: \"tags-index\"\n  }, frontmatter.tags && frontmatter.tags.length > 0 && frontmatter.tags.map(tag => {\n    return React.createElement(Link, {\n      to: `/tags/${tag}/`,\n      itemProp: \"url\"\n    }, React.createElement(\"button\", null, tag));\n  })), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        tags\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","code","span","_provideComponents","components","React","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","frontmatter","mdx","Layout","title","tags","length","map","tag","Link","to","itemProp","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}