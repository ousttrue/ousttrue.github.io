{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2015-12-12-threejs-control-md-715d1023b2357c656937.js","mappings":"+JAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,KAAM,SACLC,EAAAA,EAAAA,MAAsBN,EAAMO,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,2JAA0K,KAAMI,EAAAA,cAAoBP,EAAYI,KAAM,CAC9SI,wBAAyB,CACvBC,OAAQ,8iFAER,KAAMF,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,iEACrD,CAKA,MAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOW,QAASC,GAAaV,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOK,EAAYJ,EAAAA,cAAoBI,EAAWZ,EAAOQ,EAAAA,cAAoBT,EAAmBC,IAAUD,EAAkBC,EAC9H,E,8BCVA,MAAMO,EAAa,CACjBM,KAAMC,IAA2B,IAA1B,SAACC,EAAQ,UAAEC,GAAUF,EAC1B,OAAOE,EAAYR,EAAAA,cAAoBS,EAAAA,EAAsB,CAC3DD,UAAWA,GACVD,GAAYP,EAAAA,cAAoB,OAAQ,KAAMO,EAAS,GAG9D,SAASG,EAAYC,GAAmB,IAAlB,KAACC,EAAI,SAAEL,GAASI,EACpC,MAAME,EAAcD,EAAKE,IAAID,YAC7B,OAAOb,EAAAA,cAAoBe,EAAAA,EAAQ,KAAMf,EAAAA,cAAoB,KAAM,KAAMa,EAAYG,OAAQhB,EAAAA,cAAoB,MAAO,CACtHQ,UAAW,cACVK,EAAYI,MAAQJ,EAAYI,KAAKC,OAAS,GAAKL,EAAYI,KAAKE,KAAIC,GAClEpB,EAAAA,cAAoBqB,EAAAA,GAAM,CAC/BC,GAAI,SAASF,EAAG,IAChBG,SAAU,OACTvB,EAAAA,cAAoB,SAAU,KAAMoB,OACpCpB,EAAAA,cAAoBwB,EAAAA,GAAa,CACpCzB,WAAYA,GACXQ,GACL,CACe,SAASkB,EAAiBjC,GACvC,OAAOQ,EAAAA,cAAoBU,EAAclB,EAAOQ,EAAAA,cAAoB0B,EAAqBlC,GAC3F,C","sources":["webpack:///./content/posts/2015/12/12/threejs_control.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"\\\"W\\\" translate | \\\"E\\\" rotate | \\\"R\\\" scale | \\\"+\\\" increase size | \\\"-\\\" decrease size\\nPress \\\"Q\\\" to toggle world/local space, keep \\\"Ctrl\\\" down to snap to grid\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">source\\n今回は、本家サイトのサンプル\\nhttp://threejs.org/examples/#misc_controls_transform\\nをやってみよう。\\nまず、TransformControlsのtypescriptインターフェースを用意する。\\nというか書きながら作った。\\nTransformControls.d.ts。モジュールの細かいところがよくわからん・・・\\ndeclare module THREE {\\n    export class TransformControls extends THREE.Mesh {\\n        constructor(camera: THREE.Camera, element: Element);\\n        update():void;\\n        addEventListener(event: string, callback: Function): void;\\n        attach(mesh: THREE.Mesh): void;\\n\\n        setSpace(space: string): void;\\n        setTranslationSnap(snap: number): void;\\n        setRotationSnap(radians: number): void;\\n        setMode(mode: string): void;\\n        setSize(size: number): void;\\n\\n        space: string;\\n        size: number;\\n    }\\n}\\n\\nTransformControlsを初期化する。カメラとhtmlノードを渡して初期化する\\nCreateTransformControl(mesh: THREE.Mesh) {\\n    this.transform = new THREE.TransformControls(this.camera, this.renderer.domElement);\\n    this.transform.addEventListener('change', () => this.Render());\\n    this.transform.attach(mesh);\\n    this.scene.add(this.transform);\\n\\n    window.addEventListener('keydown', (event: KeyboardEvent) => {\\n\\n        switch (event.keyCode) {\\n\\n            case 81: // Q\\n                this.transform.setSpace(this.transform.space === \\\"local\\\" ? \\\"world\\\" : \\\"local\\\");\\n                break;\\n\\n            case 17: // Ctrl\\n                this.transform.setTranslationSnap(100);\\n                this.transform.setRotationSnap(THREE.Math.degToRad(15));\\n                break;\\n\\n            case 87: // W\\n                this.transform.setMode(\\\"translate\\\");\\n                break;\\n\\n            case 69: // E\\n                this.transform.setMode(\\\"rotate\\\");\\n                break;\\n\\n            case 82: // R\\n                this.transform.setMode(\\\"scale\\\");\\n                break;\\n\\n            case 187:\\n            case 107: // +, =, num+\\n                this.transform.setSize(this.transform.size + 0.1);\\n                break;\\n\\n            case 189:\\n            case 109: // -, _, num-\\n                this.transform.setSize(Math.max(this.transform.size - 0.1, 0.1));\\n                break;\\n\\n        }\\n    });\\n\\n    window.addEventListener('keyup', (event: KeyboardEvent) => {\\n\\n        switch (event.keyCode) {\\n\\n            case 17: // Ctrl\\n                this.transform.setTranslationSnap(null);\\n                this.transform.setRotationSnap(null);\\n                break;\\n\\n        }\\n\\n    });\\n}</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"マウスイベントを監視する Html ノードと、マウスの動きをどのように解釈するかを知るためにカメラが必要ということですね。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2015/12/12/threejs_control.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  const frontmatter = data.mdx.frontmatter;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"div\", {\n    className: \"tags-index\"\n  }, frontmatter.tags && frontmatter.tags.length > 0 && frontmatter.tags.map(tag => {\n    return React.createElement(Link, {\n      to: `/tags/${tag}/`,\n      itemProp: \"url\"\n    }, React.createElement(\"button\", null, tag));\n  })), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        tags\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","span","_provideComponents","components","React","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","frontmatter","mdx","Layout","title","tags","length","map","tag","Link","to","itemProp","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}