{"version":3,"file":"component---content-posts-2022-0101-rawtypes-md-0993d9c907a96bc0032d.js","mappings":"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","sources":["webpack:///./content/posts/2022/0101-rawtypes.md","webpack:///./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    pre: \"pre\",\n    ul: \"ul\",\n    li: \"li\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"rawtypes 作ってみる\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"cython\"), \" から \", React.createElement(_components.code, null, \"pybind11\"), \" に乗り換えを試みたのだが、\\n一歩目で躓いた。\"), \"\\n\", React.createElement(_components.p, null, \"不完全型のポインタをそのまま返す方法がわからん。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-c++\"\n  }, \"ImGuiContext* CreateContext(ImFontAtlas* shared_font_atlas = NULL);\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"ImGuiContext\"), \" は前方宣言なのです。\"), \"\\n\", React.createElement(_components.p, null, \"自分でやろうと思った。\\n\", React.createElement(_components.code, null, \"ctypes\"), \" と併用することを前提にした省機能のバインダー、名付けて \", React.createElement(_components.code, null, \"rawtypes\"), \" を作ってみよう。\\n\", React.createElement(_components.code, null, \"c++\"), \" の関数呼び出しのちょっとしたコード生成をする。\\n基本的に \", React.createElement(_components.code, null, \"ctypes.c_void_p\"), \" で済ます。\\n型の宣言が必要なところは、 \", React.createElement(_components.code, null, \"ctypes.Structure\"), \" により \", React.createElement(_components.code, null, \"python\"), \" 側で宣言。\\n\", React.createElement(_components.code, null, \"c++\"), \" から返す時には、キャストする。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"return ctypes.cast(p, ctypes.POINTER(CTYPES_TYPE))[0]\\n\")), \"\\n\", React.createElement(_components.p, null, \"object の所有権 はまじめに探求しない。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"python で作って、python で開放する(cypte.Struct object)\"), \"\\n\", React.createElement(_components.li, null, \"c++ で作ったのを cast して python に渡すが参照のみ(cast された ctypes.Struct)。無効なものにアクセスしないようにプログラマがー注意する\"), \"\\n\", React.createElement(_components.li, null, \"それ以外は値渡し\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"これで十分。\\n主要な狙いは、\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"static library のリンク\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"c++\"), \" 関数の呼び出し\"), \"\\n\", React.createElement(_components.li, null, \"構造体の値渡しを \", React.createElement(_components.code, null, \"c++\"), \" でラップする\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"で、 \", React.createElement(_components.code, null, \"ctypes\"), \" の苦手なところだけをやる。\\n\", React.createElement(_components.code, null, \"luajit ffi\"), \" に倣ったスタイルでまいる。\"), \"\\n\", React.createElement(_components.h2, null, \"動いた\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/ousttrue/pydear\"), \"\\n\", React.createElement(_components.p, null, \"ImGui ひととおりできた。\\nもうちっとパッケージング(sdist, wheel)を整理したら形が整う。\\n\", React.createElement(_components.code, null, \"github action\"), \" で \", React.createElement(_components.code, null, \"wheel\"), \" をビルドする技もできた(\", React.createElement(_components.code, null, \"windows-64bit + python-3.10\"), \" のみ実験)。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"str\"), \" と \", React.createElement(_components.code, null, \"bytes\"), \" の切りわけも \", React.createElement(_components.code, null, \"C-API\"), \" で書けたし、慣れれば直接 \", React.createElement(_components.code, null, \"C-API\"), \" を使った方が便利そう。\\n\", React.createElement(_components.code, null, \"Py_INCREF\"), \" \", React.createElement(_components.code, null, \"Py_DECREF\"), \" による参照管理と、\", React.createElement(_components.code, null, \"PyErr_Clear\"), \" 等のエラーハンドリングなど\\nを抑えればよさそう。\"), \"\\n\", React.createElement(_components.h2, null, \"pypi\"), \"\\n\", React.createElement(_components.p, null, \"https://pypi.org/project/pydear/\"), \"\\n\", React.createElement(_components.p, null, \"github actions で wheel をビルドして、 pypi にアップロードするところまでできた。\\nあと、 \", React.createElement(_components.code, null, \"sdist\"), \" も作る。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"pip install pydear\"), \" して使えるようになった。\\n使いながら整備していこう。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"pyi\"), \" が含まれているので、ある程度のインテリセンスが効くところがよい。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"[ ] rawtypes をライブラリとして分離する\"), \"\\n\", React.createElement(_components.li, null, \"[ ] clang.cindex でコード生成した結果を \", React.createElement(_components.code, null, \"sdist\"), \" に含める\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","code","pre","ul","li","h2","_provideComponents","components","React","className","wrapper","MDXLayout","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}