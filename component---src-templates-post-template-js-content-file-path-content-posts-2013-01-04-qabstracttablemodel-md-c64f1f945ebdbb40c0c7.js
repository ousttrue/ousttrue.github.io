"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4287],{831:function(n,s,a){a.r(s),a.d(s,{default:function(){return r}});var t=a(1151),p=a(7294);function o(n){const s=Object.assign({p:"p",span:"span"},(0,t.ah)(),n.components);return p.createElement(p.Fragment,null,p.createElement(s.p,null,"ディレクトリ表示をする専用のウィジェットがあったような気がするが、練習のため実装。"),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="python"><pre class="language-python"><code class="language-python"><span class="token comment"># !/usr/bin/env python</span>\n<span class="token comment"># coding: utf-8</span>\n\n\n<span class="token keyword">import</span> re <span class="token keyword">import</span> operator <span class="token keyword">import</span> os <span class="token keyword">import</span> sys <span class="token keyword">import</span> stat <span class="token keyword">from</span>\nPyQt4<span class="token punctuation">.</span>QtCore <span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">from</span> PyQt4<span class="token punctuation">.</span>QtGui <span class="token keyword">import</span> <span class="token operator">*</span>\n\n<span class="token keyword">class</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\nheader<span class="token operator">=</span><span class="token punctuation">[</span>\n\n‘<span class="token builtin">type</span>’<span class="token punctuation">,</span> ‘name’<span class="token punctuation">,</span> ‘size’<span class="token punctuation">,</span> ‘mtime’ <span class="token punctuation">]</span>\n<span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">:</span>\nself<span class="token punctuation">.</span>path<span class="token operator">=</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>abspath<span class="token punctuation">(</span>path<span class="token punctuation">)</span> self<span class="token punctuation">.</span>data<span class="token operator">=</span><span class="token punctuation">[</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span>\n<span class="token boolean">None</span><span class="token punctuation">]</span> s<span class="token operator">=</span>os<span class="token punctuation">.</span>stat<span class="token punctuation">(</span>path<span class="token punctuation">)</span> mode<span class="token operator">=</span>s<span class="token punctuation">[</span>stat<span class="token punctuation">.</span>ST_MODE<span class="token punctuation">]</span> <span class="token keyword">if</span>\nstat<span class="token punctuation">.</span>S_ISDIR<span class="token punctuation">(</span>mode<span class="token punctuation">)</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span>‘<span class="token builtin">dir</span>’ <span class="token keyword">elif</span>\nstat<span class="token punctuation">.</span>S_ISLNK<span class="token punctuation">(</span>mode<span class="token punctuation">)</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span>‘link’ <span class="token keyword">elif</span>\nstat<span class="token punctuation">.</span>S_ISREG<span class="token punctuation">(</span>mode<span class="token punctuation">)</span><span class="token punctuation">:</span> self<span class="token punctuation">.</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span>‘<span class="token builtin">file</span>’ <span class="token keyword">else</span><span class="token punctuation">:</span>\nself<span class="token punctuation">.</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span>‘unknown’ self<span class="token punctuation">.</span>data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>basename<span class="token punctuation">(</span>path<span class="token punctuation">)</span>\nself<span class="token punctuation">.</span>data<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span>s<span class="token punctuation">[</span>stat<span class="token punctuation">.</span>ST_SIZE<span class="token punctuation">]</span>\nself<span class="token punctuation">.</span>data<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">=</span>s<span class="token punctuation">[</span>stat<span class="token punctuation">.</span>ST_MTIME<span class="token punctuation">]</span>\n<span class="token keyword">def</span> <span class="token function">__str__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>\n<span class="token keyword">return</span> “<span class="token operator">&lt;</span><span class="token operator">%</span>s <span class="token operator">%</span>s<span class="token operator">></span>” <span class="token operator">%</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token keyword">def</span> <span class="token function">__getitem__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">:</span>\n<span class="token keyword">return</span> self<span class="token punctuation">.</span>data<span class="token punctuation">[</span>key<span class="token punctuation">]</span>\n<span class="token keyword">def</span> <span class="token function">is_dir</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>\n<span class="token keyword">return</span> self<span class="token punctuation">.</span>data<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">==</span>‘<span class="token builtin">dir</span>’\n\n<span class="token keyword">class</span> <span class="token class-name">MyTableModel</span><span class="token punctuation">(</span>QAbstractTableModel<span class="token punctuation">)</span><span class="token punctuation">:</span>\n<span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> parent<span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">:</span>\n\n<span class="token builtin">super</span><span class="token punctuation">(</span>MyTableModel<span class="token punctuation">,</span> self<span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>parent<span class="token punctuation">)</span> <span class="token keyword">def</span>\nget_stat<span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">:</span> f<span class="token operator">=</span>File<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>path<span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> f\nself<span class="token punctuation">.</span>data<span class="token operator">=</span><span class="token punctuation">[</span>get_stat<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>path<span class="token punctuation">,</span> “<span class="token punctuation">.</span><span class="token punctuation">.</span>”<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span>get_stat<span class="token punctuation">(</span>e<span class="token punctuation">)</span>\n<span class="token keyword">for</span> e <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">]</span>\n<span class="token keyword">def</span> <span class="token function">rowCount</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> parent<span class="token punctuation">)</span><span class="token punctuation">:</span>\n<span class="token keyword">return</span> <span class="token builtin">len</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>data<span class="token punctuation">)</span>\n<span class="token keyword">def</span> <span class="token function">columnCount</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> parent<span class="token punctuation">)</span><span class="token punctuation">:</span>\n<span class="token keyword">return</span> <span class="token builtin">len</span><span class="token punctuation">(</span>File<span class="token punctuation">.</span>header<span class="token punctuation">)</span>\n<span class="token keyword">def</span> <span class="token function">data</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> index<span class="token punctuation">,</span> role<span class="token punctuation">)</span><span class="token punctuation">:</span>\n<span class="token keyword">if</span> <span class="token keyword">not</span> index<span class="token punctuation">.</span>isValid<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n\n<span class="token keyword">return</span> <span class="token boolean">None</span>\n<span class="token keyword">elif</span> role <span class="token operator">!=</span> Qt<span class="token punctuation">.</span>DisplayRole<span class="token punctuation">:</span>\n<span class="token keyword">return</span> <span class="token boolean">None</span>\n\n<span class="token keyword">return</span> self<span class="token punctuation">.</span>data<span class="token punctuation">[</span>index<span class="token punctuation">.</span>row<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span>index<span class="token punctuation">.</span>column<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>\n<span class="token keyword">def</span> <span class="token function">headerData</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> col<span class="token punctuation">,</span> orientation<span class="token punctuation">,</span> role<span class="token punctuation">)</span><span class="token punctuation">:</span>\n<span class="token keyword">if</span> orientation <span class="token operator">==</span> Qt<span class="token punctuation">.</span>Horizontal <span class="token keyword">and</span> role <span class="token operator">==</span> Qt<span class="token punctuation">.</span>DisplayRole<span class="token punctuation">:</span>\n\n<span class="token keyword">return</span> File<span class="token punctuation">.</span>header<span class="token punctuation">[</span>col<span class="token punctuation">]</span>\n\n<span class="token keyword">return</span> <span class="token boolean">None</span>\n<span class="token keyword">def</span> <span class="token function">sort</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> Ncol<span class="token punctuation">,</span> order<span class="token punctuation">)</span><span class="token punctuation">:</span>\n”““Sort table by given column number<span class="token punctuation">.</span>\n“”” self<span class="token punctuation">.</span>emit<span class="token punctuation">(</span>SIGNAL<span class="token punctuation">(</span>“layoutAboutToBeChanged<span class="token punctuation">(</span><span class="token punctuation">)</span>”<span class="token punctuation">)</span><span class="token punctuation">)</span> self<span class="token punctuation">.</span>data <span class="token operator">=</span>\n<span class="token builtin">sorted</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>data<span class="token punctuation">,</span>\nkey<span class="token operator">=</span>operator<span class="token punctuation">.</span>itemgetter<span class="token punctuation">(</span>Ncol<span class="token punctuation">)</span><span class="token punctuation">,</span> reverse<span class="token operator">=</span><span class="token punctuation">(</span>order<span class="token operator">!=</span>Qt<span class="token punctuation">.</span>DescendingOrder<span class="token punctuation">)</span><span class="token punctuation">)</span>\nself<span class="token punctuation">.</span>emit<span class="token punctuation">(</span>SIGNAL<span class="token punctuation">(</span>“layoutChanged<span class="token punctuation">(</span><span class="token punctuation">)</span>”<span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token keyword">def</span> <span class="token function">getRow</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> index<span class="token punctuation">)</span><span class="token punctuation">:</span>\n<span class="token keyword">return</span> self<span class="token punctuation">.</span>data<span class="token punctuation">[</span>index<span class="token punctuation">]</span>\n\n<span class="token keyword">class</span> <span class="token class-name">MyWindow</span><span class="token punctuation">(</span>QWidget<span class="token punctuation">)</span><span class="token punctuation">:</span>\n<span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token operator">*</span>args<span class="token punctuation">)</span><span class="token punctuation">:</span> QWidget<span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>self<span class="token punctuation">,</span><span class="token operator">*</span>args<span class="token punctuation">)</span>\n\n<span class="token comment"># create the view self.tv = QTableView() # hide</span>\ngrid self<span class="token punctuation">.</span>tv<span class="token punctuation">.</span>setShowGrid<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span> <span class="token comment"># hide vertical header vh</span>\n<span class="token operator">=</span> self<span class="token punctuation">.</span>tv<span class="token punctuation">.</span>verticalHeader<span class="token punctuation">(</span><span class="token punctuation">)</span> vh<span class="token punctuation">.</span>setVisible<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span> <span class="token comment"># set</span>\nhorizontal header properties hh <span class="token operator">=</span> self<span class="token punctuation">.</span>tv<span class="token punctuation">.</span>horizontalHeader<span class="token punctuation">(</span><span class="token punctuation">)</span>\nhh<span class="token punctuation">.</span>setStretchLastSection<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span> <span class="token comment"># set column width to fit</span>\ncontents self<span class="token punctuation">.</span>tv<span class="token punctuation">.</span>resizeColumnsToContents<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># enable</span>\nsorting self<span class="token punctuation">.</span>tv<span class="token punctuation">.</span>setSortingEnabled<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span> <span class="token comment"># layout layout</span>\n<span class="token operator">=</span> QVBoxLayout<span class="token punctuation">(</span><span class="token punctuation">)</span> layout<span class="token punctuation">.</span>addWidget<span class="token punctuation">(</span>self<span class="token punctuation">.</span>tv<span class="token punctuation">)</span> self<span class="token punctuation">.</span>setLayout<span class="token punctuation">(</span>layout<span class="token punctuation">)</span>\n<span class="token comment"># double</span>\nclick self<span class="token punctuation">.</span>tv<span class="token punctuation">.</span>doubleClicked<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>self<span class="token punctuation">.</span>onDoubleClick<span class="token punctuation">)</span>\n\n<span class="token keyword">def</span> <span class="token function">chdir</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">:</span>\n\nself<span class="token punctuation">.</span>tm <span class="token operator">=</span> MyTableModel<span class="token punctuation">(</span>self<span class="token punctuation">,</span> path<span class="token punctuation">)</span> <span class="token comment"># set the table</span>\nmodel self<span class="token punctuation">.</span>tv<span class="token punctuation">.</span>setModel<span class="token punctuation">(</span>self<span class="token punctuation">.</span>tm<span class="token punctuation">)</span>\n<span class="token keyword">def</span> <span class="token function">onDoubleClick</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> event<span class="token punctuation">)</span><span class="token punctuation">:</span>\nitem<span class="token operator">=</span>self<span class="token punctuation">.</span>tm<span class="token punctuation">.</span>getRow<span class="token punctuation">(</span>event<span class="token punctuation">.</span>row<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">if</span> <span class="token keyword">not</span> item<span class="token punctuation">.</span>is_dir<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\n<span class="token keyword">return</span> self<span class="token punctuation">.</span>chdir<span class="token punctuation">(</span>item<span class="token punctuation">.</span>path<span class="token punctuation">)</span>\n\n<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>\napp <span class="token operator">=</span> QApplication<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">)</span> w <span class="token operator">=</span> MyWindow<span class="token punctuation">(</span><span class="token punctuation">)</span> w<span class="token punctuation">.</span>chdir<span class="token punctuation">(</span>“<span class="token punctuation">.</span>”<span class="token punctuation">)</span> w<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span>\nsys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span>app<span class="token punctuation">.</span>exec_<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token keyword">if</span> __name__ <span class="token operator">==</span> “__main__“<span class="token punctuation">:</span>\nmain<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"ToDo"),"\n",p.createElement(s.p,null,"種類毎のアイコン表示\n日付の表示\n数字カラムの右寄せ\n行選択\nFilterProxyModel"))}var e=function(n){void 0===n&&(n={});const{wrapper:s}=Object.assign({},(0,t.ah)(),n.components);return s?p.createElement(s,n,p.createElement(o,n)):o(n)},c=a(8678),u=a(4160),l=a(8736);const k={code:n=>{let{children:s,className:a}=n;return a?p.createElement(l.Z,{className:a},s):p.createElement("code",null,s)}};function i(n){let{data:s,children:a}=n;const o=s.mdx.frontmatter;return p.createElement(c.Z,null,p.createElement("h1",null,o.title),p.createElement("div",{className:"tags-index"},o.tags&&o.tags.length>0&&o.tags.map((n=>p.createElement(u.rU,{to:"/tags/"+n+"/",itemProp:"url"},p.createElement("button",null,n))))),p.createElement(t.Zo,{components:k},a))}function r(n){return p.createElement(i,n,p.createElement(e,n))}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-content-posts-2013-01-04-qabstracttablemodel-md-c64f1f945ebdbb40c0c7.js.map