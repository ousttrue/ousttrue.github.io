{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2017-sphinx-in-hugo-md-2631488b7db3bf0acc45.js","mappings":"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","sources":["webpack:///./content/posts/2017/sphinx_in_hugo.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\",\n    h1: \"h1\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"MarkdownできるらしいのでSphinxを入れてみる。\"), \"\\n\", React.createElement(_components.p, null, \"テストページ\"), \"\\n\", React.createElement(_components.p, null, \"Sphinx install\\npyenvでpython-3.6.2を導入した。\\n$ pyenv global 3.6.2\\n$ python -V\\nPython 3.6.2\\n$ pip install sphinx\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"http://www.sphinx-doc.org/en/stable/markdown.html\"\n  }, \"http://www.sphinx-doc.org/en/stable/markdown.html\")), \"\\n\", React.createElement(_components.p, null, \"ドキュメントを作ってみる\"), \"\\n\", React.createElement(_components.p, null, \"project_name\\nauthor_name\\nversion\"), \"\\n\", React.createElement(_components.p, null, \"は必須で作る時に決めなければならない。\\n$ sphinx-quickstart\"), \"\\n\", React.createElement(_components.p, null, \"いろいろ質問が出てくるが面倒なのでリターン連打。\\nウイザード方式ではなくコマンドラインで一息に入力する方式だとこんな感じか。\\n$ sphinx-quickstart -q -p project_name -a author_name -v 1.0 --sep directory_name\\nCreating file directory_name↲/source/conf.py.\\nCreating file directory_name↲/source/index.rst.\\nCreating file directory_name↲/Makefile.\\nCreating file directory_name↲/make.bat.\"), \"\\n\", React.createElement(_components.p, null, \"Finished: An initial directory structure has been created.\"), \"\\n\", React.createElement(_components.p, null, \"You should now populate your master file directory_name↲/source/index.rst and create other documentation\\nsource files. Use the Makefile to build the docs, like so:\\nmake builder\\nwhere \\\"builder\\\" is one of the supported builders, e.g. html, latex or linkcheck.\"), \"\\n\", React.createElement(_components.p, null, \"ディレクトリ構成はこんな感じに。\\ndirectory_name\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"souce\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"conf.py\"), \"\\n\", React.createElement(_components.li, null, \"index.rst\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"Makefile\"), \"\\n\", React.createElement(_components.li, null, \"build\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"html # make htmlの出力\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"hugoのサブフォルダにビルド結果をコピーする\\nhugoroot\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"sphinxroot\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"build\\n+html\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"public\\nsphinx # ../sphinxroot/build/html/*をコピーする\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"hugosite$ sphinx-quickstart -q -p project_name -a author_name -v 1.0 --sep sphinxroot\\nhugosite$ hugo\\nhugosite$ pushd shphinxroot\\nhugosite/sphinxroot$ make html\\nhugosite/sphinxroot$ rsync -av build/html ../public/sphinx\\nsending incremental file list\\ncreated directory ../public/sphinx\\nhtml/\\nhtml/.buildinfo\\nhtml/genindex.html\\nhtml/index.html\\nhtml/objects.inv\\nhtml/search.html\\nhtml/searchindex.js\\nhtml/_sources/\\nhtml/_sources/index.rst.txt\\nhtml/_static/\\nhtml/_static/ajax-loader.gif\\nhtml/_static/alabaster.css\\nhtml/_static/basic.css\\nhtml/_static/comment-bright.png\\nhtml/_static/comment-close.png\\nhtml/_static/comment.png\\nhtml/_static/custom.css\\nhtml/_static/doctools.js\\nhtml/_static/down-pressed.png\\nhtml/_static/down.png\\nhtml/_static/file.png\\nhtml/_static/jquery-3.1.0.js\\nhtml/_static/jquery.js\\nhtml/_static/minus.png\\nhtml/_static/plus.png\\nhtml/_static/pygments.css\\nhtml/_static/searchtools.js\\nhtml/_static/underscore-1.3.1.js\\nhtml/_static/underscore.js\\nhtml/_static/up-pressed.png\\nhtml/_static/up.png\\nhtml/_static/websupport.js\\nhugosite/sphinxroot$ popd\"), \"\\n\", React.createElement(_components.p, null, \"rsyncの呼び方変更。ソースの指定の最後を/にすることでディレクトリそのものではなく中身を送る意味になる。\\n$ rsync -av build/html/ ../public/sphinx\\nsending incremental file list\\ncreated directory ../public/sphinx\\n./\\n.buildinfo\\ngenindex.html\\nindex.html\\nobjects.inv\\nsearch.html\\nsearchindex.js\\n_sources/\\n_sources/index.rst.txt\\n_static/\\n_static/ajax-loader.gif\\n_static/alabaster.css\\n_static/basic.css\\n_static/comment-bright.png\\n_static/comment-close.png\\n_static/comment.png\\n_static/custom.css\\n_static/doctools.js\\n_static/down-pressed.png\\n_static/down.png\\n_static/file.png\\n_static/jquery-3.1.0.js\\n_static/jquery.js\\n_static/minus.png\\n_static/plus.png\\n_static/pygments.css\\n_static/searchtools.js\\n_static/underscore-1.3.1.js\\n_static/underscore.js\\n_static/up-pressed.png\\n_static/up.png\\n_static/websupport.js\"), \"\\n\", React.createElement(_components.p, null, \"hugosite/public$ python -m http.server\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"http://localhost:8000/sphinx/\"\n  }, \"http://localhost:8000/sphinx/\"), \"\\nで生成したサイトが表示できた。\\nlivereloadで自動更新サーバー\"), \"\\n\", React.createElement(_components.p, null, \"Python Livereload を使って Sphinx でドキュメントを書く\\n\", React.createElement(_components.a, {\n    href: \"https://pypi.python.org/pypi/livereload\"\n  }, \"https://pypi.python.org/pypi/livereload\")), \"\\n\", React.createElement(_components.p, null, \"#!/usr/bin/env python\\nimport os\"), \"\\n\", React.createElement(_components.p, null, \"os.system('make html')\"), \"\\n\", React.createElement(_components.p, null, \"from livereload import Server, shell\"), \"\\n\", React.createElement(_components.p, null, \"server = Server()\\nserver.watch('source/\", React.createElement(_components.strong, null, \"/*.rst', shell('make html'))\\nserver.watch('source/\"), \"/*.md', shell('make html'))\\nserver.serve(\\nopen_url=False,\\nroot='build/html',\\nport=8080,\\nhost='0.0.0.0'\\n)\"), \"\\n\", React.createElement(_components.p, null, \"markdownを使う\"), \"\\n\", React.createElement(_components.p, null, \"Markdownを使う\\n\", React.createElement(_components.a, {\n    href: \"http://www.sphinx-doc.org/en/stable/markdown.html\"\n  }, \"http://www.sphinx-doc.org/en/stable/markdown.html\")), \"\\n\", React.createElement(_components.p, null, \"ImportError: cannot import name DocParser\"), \"\\n\", React.createElement(_components.p, null, \"SphinxでMarkdownを使うときに注意すること\"), \"\\n\", React.createElement(_components.p, null, \"バージョン固定\\nいろいろエラーが出る。\\nTypeError: 'NoneType' object is not callable\"), \"\\n\", React.createElement(_components.p, null, \"documented that 1.6 breaks recommonmark\\nSphinx 1.5.x was the last working version for recommonmark 0.4.0\"), \"\\n\", React.createElement(_components.p, null, \"$ pip install recommonmark==0.4.0\\n$ pip install sphix==1.5\"), \"\\n\", React.createElement(_components.p, null, \"1.5にすると・・・\\nAttributeError: module 'locale' has no attribute 'normalize'\"), \"\\n\", React.createElement(_components.p, null, \"localeがsphinx.localeで置き換えられとる。\\n仕方ないので\\n強制的に再インポートするコードを入れた。\\nsite-packages/sphinx/\", React.createElement(_components.strong, null, \"init\"), \".py\\ndef main(argv=sys.argv):\"), \"\\n\", React.createElement(_components.h1, null, \"reimport locale\"), \"\\n\", React.createElement(_components.p, null, \"if 'locale' in sys.modules:\\ndel sys.modules['locale']\\nif sys.path[0].find('sphinx')!=-1:↲\\nhead=sys.path.pop(0)↲\\nimport locale↲\"), \"\\n\", React.createElement(_components.p, null, \"if sys.argv[1:2] == ['-M']:↲\\nsys.exit(make_main(argv))↲\\nelse:↲\\nsys.exit(build_main(argv))↲\"), \"\\n\", React.createElement(_components.p, null, \"とりあえず動くようになった。ぐぬぬ・・・\\nTOC\\nAutoStructifyでできると書いてあるがバージョンを0.4.0に固定したからかうまく動かぬ。\\neval_rstで。\\n'''eval_rst\\n.. toctree::\"), \"\\n\", React.createElement(_components.p, null, \"item\\n'''\"), \"\\n\", React.createElement(_components.p, null, \"エラー\\nTOCツリーにこの指定を入れるとエラーになる\\n.. toctree::\\n:caption: Contents:↲\"), \"\\n\", React.createElement(_components.p, null, \"themeを変える\"), \"\\n\", React.createElement(_components.p, null, \"見やすいテーマを設定する\"), \"\\n\", React.createElement(_components.p, null, \"日本語\"), \"\\n\", React.createElement(_components.p, null, \"日本語セクションにアンカーが貼られるようにする\"), \"\\n\", React.createElement(_components.p, null, \"github\\n.nojekyllでいいらしいがうまくいかなかったので。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/michaeljones/sphinx-to-github\"\n  }, \"https://github.com/michaeljones/sphinx-to-github\")), \"\\n\", React.createElement(_components.p, null, \"python3だと修正が要る。python2では試していない。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2017/sphinx_in_hugo.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  const frontmatter = data.mdx.frontmatter;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"div\", {\n    className: \"tags-index\"\n  }, frontmatter.tags && frontmatter.tags.length > 0 && frontmatter.tags.map(tag => {\n    return React.createElement(Link, {\n      to: `/tags/${tag}/`,\n      itemProp: \"url\"\n    }, React.createElement(\"button\", null, tag));\n  })), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        tags\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","ul","li","strong","h1","_provideComponents","components","React","href","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","frontmatter","mdx","Layout","title","tags","length","map","tag","Link","to","itemProp","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}