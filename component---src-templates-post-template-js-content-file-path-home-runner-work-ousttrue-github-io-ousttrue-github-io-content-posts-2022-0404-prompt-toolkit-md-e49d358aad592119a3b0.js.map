{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2022-0404-prompt-toolkit-md-e49d358aad592119a3b0.js","mappings":"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","sources":["webpack:///./content/posts/2022/0404-prompt-toolkit.md","webpack:///./src/templates/post-template.js","webpack:///./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"prompt-toolkit の fullscreen アプリケーション\"), \"\\n\", React.createElement(_components.h2, null, \"Buffer\"), \"\\n\", React.createElement(_components.p, null, \"しばらく試行錯誤していたのだがやっと使い方が分かってきた。\\n\", React.createElement(_components.code, null, \"Window\"), \" + \", React.createElement(_components.code, null, \"BufferControl\"), \" が基本形で edit する場合向け。\\n\", React.createElement(_components.code, null, \"Window\"), \" + \", React.createElement(_components.code, null, \"FormatedTextControl\"), \" が readonly の装飾済みのテキストに向いていそう。\"), \"\\n\", React.createElement(_components.p, null, \"Lexer で基本的な装飾を施して、Preprocess でフォーカスやホバーのUI的な装飾をするという使い分けがよさそう。\\n\", React.createElement(_components.code, null, \"FormattedTextControl\"), \" の場合は初期化時にスタイル適用済みのテキストを渡してしまう。\"), \"\\n\", React.createElement(_components.h2, null, \"example\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/prompt-toolkit の、\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/prompt-toolkit/pyvim\"), \"\\n\", React.createElement(_components.li, null, \"https://github.com/prompt-toolkit/pymux\"), \"\\n\", React.createElement(_components.li, null, \"https://github.com/prompt-toolkit/pyterm\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"が \", React.createElement(_components.code, null, \"prompt-toolkit2\"), \" のままになっているのだが、\\nちょっと手直しすることで、 \", React.createElement(_components.code, null, \"prompt-toolkit3\"), \" で動作させることができた。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"ptterm\"), \" の \", React.createElement(_components.code, null, \"prompt-toolkit3\"), \" 化に PR を送ってみた。\\n主に \", React.createElement(_components.code, null, \"pipe\"), \" 周りの非同期入力を \", React.createElement(_components.code, null, \"asyncio\"), \" に適合させてやることで動く。\\nhttps://github.com/prompt-toolkit/ptterm/pull/9\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"pymux\"), \" も \", React.createElement(_components.code, null, \"fork\"), \" しない \", React.createElement(_components.code, null, \"standalone\"), \" 引き数付きならば \", React.createElement(_components.code, null, \"Windows\"), \" + \", React.createElement(_components.code, null, \"prompt-toolkit3\"), \" でも動かすことができた。\"), \"\\n\", React.createElement(_components.p, null, \"prompt-toolkit3 では積極的に \", React.createElement(_components.code, null, \"asyncio\"), \" を活用していくのがよさそう。\"), \"\\n\", React.createElement(_components.h2, null, \"prompt-toolkit で任意のエスケープシーケンスを入れる\"), \"\\n\", React.createElement(_components.p, null, \"prompt-toolkit で \", React.createElement(_components.code, null, \"sixel\"), \" 画像を表示させたい。\\nUIControl が UIContent を生成していて、このとき styled text のデータ構造に対して特殊なスタイル \", React.createElement(_components.code, null, \"[ZeroWidthEscape]\"), \" を指定することでエスケープシーケンスを直接出力できることがわかった。諸々の調整が必要になるが、ここに \", React.createElement(_components.code, null, \"sixel\"), \" のシーケンスを入れることで表示できる。\\n処理順の癖に対応するために、\\n画像の高さ分の改行を \", React.createElement(_components.code, null, \"sixel\"), \" のエスケープシーケンスに先行させる必要があった。\\n\", React.createElement(_components.code, null, \"prompt-toolkit\"), \" + \", React.createElement(_components.code, null, \"wezterm\"), \" 固有の問題かもしれない。\"), \"\\n\", React.createElement(_components.h2, null, \"Windows/Linux 共用で console アプリを動かす\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"prompt-toolkit3\"), \" でかなりできそう。\\nフレームワークの構成を理解するまでとっつきが悪いのだが、\\n\", React.createElement(_components.code, null, \"pypager\"), \", \", React.createElement(_components.code, null, \"pyvim\"), \", \", React.createElement(_components.code, null, \"ptterm\"), \", \", React.createElement(_components.code, null, \"pymux\"), \" を研究してやっとわかってきた。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"nerdfont\"), \" で賑やかしを入れて、 \", React.createElement(_components.code, null, \"sixel\"), \" で画像表示ができるおもちゃを企画している。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"vim ぽい lsp/dap の実験アプリ\"), \"\\n\", React.createElement(_components.li, null, \"w3m ぽい ブラウザ\"), \"\\n\", React.createElement(_components.li, null, \"tmux ぽいやつ\"), \"\\n\", React.createElement(_components.li, null, \"ranger ぽいやつ\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2022/0404-prompt-toolkit.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nfunction PostTempalte({data, children}) {\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, null, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","h2","p","code","ul","li","_provideComponents","components","React","wrapper","MDXLayout","PostTempalte","_ref","data","children","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}