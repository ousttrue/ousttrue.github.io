"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2629],{1786:function(e,n,t){t.r(n),t.d(n,{default:function(){return s}});var l=t(1151),a=t(7294);function c(e){const n=Object.assign({h1:"h1",p:"p",h2:"h2",span:"span",ul:"ul",li:"li",h3:"h3"},(0,l.ah)(),e.components);return a.createElement(a.Fragment,null,a.createElement(n.h1,null,"gizmo のライブラリを整備したい"),"\n",a.createElement(n.p,null,"去年手を付けたのだが、放棄されていたのを発掘した。"),"\n",a.createElement(n.p,null,"https://github.com/ousttrue/gizmesh"),"\n",a.createElement(n.p,null,"tiny gizmo を改造しようとしてて、動かなくなっている。"),"\n",a.createElement(n.h1,null,"既存の gizmo libraries"),"\n",a.createElement(n.h2,null,"tinygizmo"),"\n",a.createElement(n.p,null,"https://github.com/ddiakopoulos/tinygizmo"),"\n",a.createElement(n.p,null,a.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">minalg.h</code>'}}),". https://github.com/sgorsten/linalg の改造版"),"\n",a.createElement(n.h2,null,"im3d"),"\n",a.createElement(n.p,null,"https://github.com/john-chapman/im3d"),"\n",a.createElement(n.p,null,a.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">im3d_math.h</code>'}})," 300行くらいでシンプル。"),"\n",a.createElement(n.h2,null,"ImGuizmo"),"\n",a.createElement(n.p,null,"https://github.com/CedricGuillemet/ImGuizmo"),"\n",a.createElement(n.p,null,"ImGui のDrawListに相乗りするぽい。"),"\n",a.createElement(n.h1,null,"memo"),"\n",a.createElement(n.h2,null,"2021 0921"),"\n",a.createElement(n.p,null,"tinygizmo の改造を最初からやりなおし"),"\n",a.createElement(n.p,null,"https://github.com/ousttrue/tinygizmo/tree/custom"),"\n",a.createElement(n.p,null,"example を整理する。"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"glfw 依存を最小化して、 include が伝わらないように隔離"),"\n",a.createElement(n.li,null,"gizmo と OpenGL を分離"),"\n"),"\n",a.createElement(n.h2,null,"2021 1225"),"\n",a.createElement(n.p,null,"続き。\ncython から使えるようにインターフェース改修。\n",a.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">c++</code>'}})," 視点で型が増えないように、",a.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">std::array</code>'}}),", ",a.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">std::tuple</code>'}})," 等を多用する書き方をしていたのだけど、\n",a.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">cython</code>'}})," 視点では使いにくかった。"),"\n",a.createElement(n.h3,null,"TODO"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"[x] ",a.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">examples/gl3</code>'}})," と ",a.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">examples/dx11</code>'}})," を共通化する"),"\n",a.createElement(n.li,null,"[x] rendertarget への描画"),"\n"),"\n",a.createElement(n.h2,null,"2021 1226"),"\n",a.createElement(n.p,null,"マウス操作でモデルにポーズを付けられるところを目標に。"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"[ ] 小さい数学ライブラリ"),"\n",a.createElement(n.li,null,"[ ] TRS node hierarchy"),"\n",a.createElement(n.li,null,"[ ] AABB node selector"),"\n",a.createElement(n.li,null,"[ ] gizmo hover"),"\n",a.createElement(n.li,null,"[ ] logger / imgui ですべてのステート(mode etc)を表示する"),"\n"))}var r=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,l.ah)(),e.components);return n?a.createElement(n,e,a.createElement(c,e)):c(e)},m=(t(8678),t(8838));const u={code:e=>{let{children:n,className:t}=e;return t?a.createElement(m.Z,{className:t},n):a.createElement("code",null,n)}};function o(e){let{data:n,children:t}=e;return a.createElement(a.Fragment,null,a.createElement("h1",null,n.mdx.frontmatter.title),a.createElement(l.Zo,{components:u},t))}function s(e){return a.createElement(o,e,a.createElement(r,e))}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2021-fall-gizmo-md-c14c71ea12ed3a9218e7.js.map