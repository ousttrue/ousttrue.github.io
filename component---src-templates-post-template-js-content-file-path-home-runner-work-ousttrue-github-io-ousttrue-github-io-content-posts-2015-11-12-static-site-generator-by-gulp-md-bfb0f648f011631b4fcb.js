"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1163],{5771:function(e,n,t){t.r(n),t.d(n,{default:function(){return p}});var r=t(1151),l=t(7294);function c(e){const n=Object.assign({p:"p"},(0,r.ah)(),e.components);return l.createElement(n.p,null,"gulpで静的サイト生成\n１年ほど放置していたけれどまた戻ってきた。\nhtml生成システムをOctpress, Tinkererと渡り歩いてきたが今度はgulp上に\nシステムを構築中。\nしばらく、node.js周りの作業記録とかを書いてみようと思う。\n当初、node.js上の静的サイト生成システムを物色してて\nHubPress, Harp, Metalsmithが候補にあがって、\nMetalsmithかなぁという感じだったのだけれど\nFrom Jekyll to Gulp.js\nを発見して「これだ。」と思いgulpの修行を兼ねてごにょごにょやっているところです。\nOctpressやTinkererはなんだかんだでブラックボックス感を払拭できなかったのだけれど\n今回のこのシステムは流石にわかりやすい。\ngulpストリームのtransformを手作りする中でnode.jsのストリームAPIの理解が\n進んだのもありがたい。\nひとまず白いサイトができたのでbootstrapを入れて今風の見てくれにしたいなぁ。\nあと、vscodeはnode.jsで遊ぶにはすごくいい。\nmarkdownエディタとしても。")}var s=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?l.createElement(n,e,l.createElement(c,e)):c(e)},a=t(8678),o=t(8838);const u={code:e=>{let{children:n,className:t}=e;return t?l.createElement(o.Z,{className:t},n):l.createElement("code",null,n)}};function m(e){let{data:n,children:t}=e;return l.createElement(a.Z,null,l.createElement("h1",null,n.mdx.frontmatter.title),l.createElement(r.Zo,{components:u},t))}function p(e){return l.createElement(m,e,l.createElement(s,e))}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2015-11-12-static-site-generator-by-gulp-md-bfb0f648f011631b4fcb.js.map