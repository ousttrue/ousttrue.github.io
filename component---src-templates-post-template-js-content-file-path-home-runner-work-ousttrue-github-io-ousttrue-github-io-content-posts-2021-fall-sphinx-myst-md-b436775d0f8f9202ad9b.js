"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5673],{8974:function(e,n,t){t.r(n),t.d(n,{default:function(){return u}});var l=t(1151),a=t(7294);function r(e){const n=Object.assign({p:"p",code:"code",h1:"h1",a:"a",ul:"ul",li:"li",pre:"pre"},(0,l.ah)(),e.components);return a.createElement(a.Fragment,null,a.createElement(n.p,null,"Gizmo を作る過程で GeometryShader からやりなおしていたら、記憶が飛んでいたので\n忘れてもいいように記録しておくことにした。"),"\n",a.createElement(n.p,null,"旧 ",a.createElement(n.code,null,"MinTriangle")," リポジトリを作り直し。"),"\n",a.createElement(n.p,null,"http://ousttrue.github.io/d3d11_samples/"),"\n",a.createElement(n.h1,null,"MyST なかなかよい"),"\n",a.createElement(n.p,null,a.createElement(n.code,null,"reStructuredText")," わりと苦手なので ",a.createElement(n.code,null,"sphinx")," でも Markdown を使いたい派なのだが、\n",a.createElement(n.a,{href:"https://myst-parser.readthedocs.io/en/latest/index.html"},"MyST")," なる Sphinx 向け markdown 拡張ができていた。"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,a.createElement(n.a,{href:"https://qiita.com/Tachy_Pochy/items/53866eea43d0ad93ea1d"},"Sphinx で使える Markdown 方言 'MyST'")),"\n"),"\n",a.createElement(n.p,null,"sphinx directive の指定の仕方がシンプルで下のような感じ。markdown のシンタックスハイライトやフォーマッターに乗れるのでよい。"),"\n",a.createElement("pre",null,a.createElement(n.pre,null,a.createElement(n.code,{className:"language-{image}"},":width: 320px\n:height: 320px\n")),a.createElement(n.pre,null,a.createElement(n.code,{className:"language-{toctree}"},"basic/create_window\nbasic/create_device\nbasic/create_swapchain\nbasic/render_target\nbasic/compile_shader\nbasic/basic_pipeline\n"))),"\n",a.createElement(n.p,null,a.createElement(n.code,null,"sphinx-autobuild")," と github-actions による ",a.createElement(n.code,null,"gh-pages")," デプロイを仕込んだらかなりよくなった。"),"\n",a.createElement(n.h1,null,"memo"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"https://github.com/wpilibsuite/sphinxext-remoteliteralinclude"),"\n"),"\n",a.createElement(n.p,null,"git の revision と path 指定して include できないかしら。\nサンプルコードにちょこちょこっと解説を書きたいのだが、サンプルコードが進化する場合に ",a.createElement(n.code,null,"literalinclude")," だと場所がずれるのだ。"))}var c=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,l.ah)(),e.components);return n?a.createElement(n,e,a.createElement(r,e)):r(e)};t(8678);function i(e){let{data:n,children:t}=e;return a.createElement(a.Fragment,null,a.createElement("h1",null,n.mdx.frontmatter.title),a.createElement(l.Zo,null,t))}function u(e){return a.createElement(i,e,a.createElement(c,e))}},8678:function(e,n,t){t(7294)},1151:function(e,n,t){t.d(n,{Zo:function(){return i},ah:function(){return r}});var l=t(7294);const a=l.createContext({});function r(e){const n=l.useContext(a);return l.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const c={};function i({components:e,children:n,disableParentContext:t}){let i;return i=t?"function"==typeof e?e({}):e||c:r(e),l.createElement(a.Provider,{value:i},n)}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2021-fall-sphinx-myst-md-b436775d0f8f9202ad9b.js.map