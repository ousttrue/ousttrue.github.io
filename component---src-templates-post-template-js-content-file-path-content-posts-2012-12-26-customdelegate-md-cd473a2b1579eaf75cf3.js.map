{"version":3,"file":"component---src-templates-post-template-js-content-file-path-content-posts-2012-12-26-customdelegate-md-cd473a2b1579eaf75cf3.js","mappings":"+JAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,KAAM,SACLC,EAAAA,EAAAA,MAAsBL,EAAMM,YAC/B,OAAOC,EAAAA,cAAoBN,EAAYG,KAAM,CAC3CI,wBAAyB,CACvBC,OAAQ,2yEAGd,CAKA,MAJA,SAAoBT,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOU,QAASC,GAAaT,OAAOC,OAAO,CAAC,GAAGE,EAAAA,EAAAA,MAAsBL,EAAMM,YAC3E,OAAOK,EAAYJ,EAAAA,cAAoBI,EAAWX,EAAOO,EAAAA,cAAoBR,EAAmBC,IAAUD,EAAkBC,EAC9H,E,8BCTA,MAAMM,EAAa,CACjBM,KAAMC,IAA2B,IAA1B,SAACC,EAAQ,UAAEC,GAAUF,EAC1B,OAAOE,EAAYR,EAAAA,cAAoBS,EAAAA,EAAsB,CAC3DD,UAAWA,GACVD,GAAYP,EAAAA,cAAoB,OAAQ,KAAMO,EAAS,GAG9D,SAASG,EAAYC,GAAmB,IAAlB,KAACC,EAAI,SAAEL,GAASI,EACpC,MAAME,EAAcD,EAAKE,IAAID,YAC7B,OAAOb,EAAAA,cAAoBe,EAAAA,EAAQ,KAAMf,EAAAA,cAAoB,KAAM,KAAMa,EAAYG,OAAQhB,EAAAA,cAAoB,MAAO,CACtHQ,UAAW,cACVK,EAAYI,MAAQJ,EAAYI,KAAKC,OAAS,GAAKL,EAAYI,KAAKE,KAAIC,GAClEpB,EAAAA,cAAoBqB,EAAAA,GAAM,CAC/BC,GAAI,SAASF,EAAG,IAChBG,SAAU,OACTvB,EAAAA,cAAoB,SAAU,KAAMoB,OACpCpB,EAAAA,cAAoBwB,EAAAA,GAAa,CACpCzB,WAAYA,GACXQ,GACL,CACe,SAASkB,EAAiBhC,GACvC,OAAOO,EAAAA,cAAoBU,EAAcjB,EAAOO,EAAAA,cAAoB0B,EAAqBjC,GAC3F,C","sources":["webpack:///./content/posts/2012/12/26/customdelegate.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">C++のQt4と平行してPyQt4を使い始めた。大概の用途にはこっちで十分な気がする。\\n\\npyqtのチュートリアルには、\\n\\nhttp://zetcode.com/tutorials/pyqt4/\\n\\nがいい。wxWidgetsとかgtkでも世話になったが、ここのチュートリアルはサンプルが小さいので助かる。\\nビューのアイテム表示をカスタマイズするデリゲートについて調査中。\\n# !/usr/bin/python\\n# -*- coding: utf-8 -*-\\n\\nimport sys from PyQt4 import QtGui, QtCore from random import randint\\n\\nclass CustomDelegate(QtGui.QItemDelegate):\\n\\n  def \\\\_\\\\_init\\\\_\\\\_(self, parent = None):\\n\\n  :   super(CustomDelegate, self).\\\\_\\\\_init\\\\_\\\\_(parent) self.editor\\n      = QtGui.QSpinBox()\\n\\n  \\\\# 編集時\\n  ---------\\n\\n  \\\\# create widget def createEditor(self, parent, styleOption, index):\\n  editor = QtGui.QSpinBox(parent) return editor\\n\\n  \\\\# model to editor def setEditorData(self, editor, index):\\n  data=index.model().data(index, QtCore.Qt.EditRole)\\n  editor.setValue(data.toInt()\\\\[0\\\\])\\n\\n  \\\\# editor to model def setModelData(self, editor, model, index):\\n  model.setData(index, editor.value())\\n\\n  def updateEditorGeometry(self, editor, option, index):\\n\\n  :   editor.setGeometry(option.rect)\\n\\n  \\\\# 通常時\\n  ---------\\n\\n  \\\\# item render def paint(self, painter, option, index): widget =\\n  QtGui.QLabel() \\\\#widget = QtGui.QSpinBox()\\n  data=index.model().data(index, QtCore.Qt.EditRole)\\n  widget.setText(data.toString()\\\\[0\\\\])\\n  \\\\#widget.setValue(data.toInt()\\\\[0\\\\]) widget.setGeometry(option.rect)\\n  \\\\# border ? point=QtCore.QPoint(option.rect.left()+2,\\n  option.rect.top()+2) widget.render(painter, point)\\n\\n  \\\\# item一個分の大きさ\\n  ---------------------\\n\\n  def sizeHint(self, option, index):\\n\\n  :   self.editor.setGeometry(option.rect)\\n      return self.editor.sizeHint()\\n\\ndef main():\\n\\n:   app = QtGui.QApplication(sys.argv)\\n\\n    \\\\# setup model model = QtGui.QStandardItemModel() for n in\\n    range(10): item = QtGui.QStandardItem('%s' % randint(1, 100))\\n    model.appendRow(item)\\n\\n    view = QtGui.QListView()\\n    view.setModel(model) view.setItemDelegate(CustomDelegate())\\n    view.show()\\n\\n    sys.exit(app.exec\\\\_())\\n\\nif \\\\_\\\\_name\\\\_\\\\_ == '\\\\_\\\\_main\\\\_\\\\_':\\n\\n:   main()\\n\\n\\nQItemDelegateは非編集時のアイテム描画にpaintメソッドを使い、編集時の描画にcreateEditor,\\nsetEditorData, setModelData,\\nupdateEditorGeometryを使う。カスタムデリゲートにするとアイテムの大きさが変わりそうなのでsizeHintも実装するとよさげ。</code></pre></div>\"\n    }\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2012/12/26/customdelegate.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  const frontmatter = data.mdx.frontmatter;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"div\", {\n    className: \"tags-index\"\n  }, frontmatter.tags && frontmatter.tags.length > 0 && frontmatter.tags.map(tag => {\n    return React.createElement(Link, {\n      to: `/tags/${tag}/`,\n      itemProp: \"url\"\n    }, React.createElement(\"button\", null, tag));\n  })), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        tags\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","span","_provideComponents","components","React","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","frontmatter","mdx","Layout","title","tags","length","map","tag","Link","to","itemProp","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}