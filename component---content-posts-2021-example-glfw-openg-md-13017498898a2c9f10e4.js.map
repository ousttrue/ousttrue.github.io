{"version":3,"file":"component---content-posts-2021-example-glfw-openg-md-13017498898a2c9f10e4.js","mappings":"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","sources":["webpack:///./content/posts/2021/example_glfw_openg.md","webpack:///./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    h1: \"h1\",\n    pre: \"pre\",\n    blockquote: \"blockquote\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"https://github.com/ousttrue/limgui/blob/master/imgui_ffi/cdef/imgui.lua\"), \"\\n\", React.createElement(_components.p, null, \"Window System は \", React.createElement(_components.code, null, \"GLFW\"), \"、3D API は \", React.createElement(_components.code, null, \"OpenGL3\"), \" を選択。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"SDL2 は、 \", React.createElement(_components.code, null, \"HWND\"), \" を取得周りが FFI では面倒なことが分かっていたのと、\", React.createElement(_components.code, null, \"SDL-Image\"), \" などの関連ライブラリ無しで行くつもりだった\"), \"\\n\", React.createElement(_components.li, null, \"D3D11 のバインディングを作っているとまた時間がかかる。\", React.createElement(_components.code, null, \"COM\"), \" は C の範囲で実装できるので後でやりたい\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"ということから、楽そうなものを選択したらそうなった。\"), \"\\n\", React.createElement(_components.h1, null, \"メンバー関数呼び出し\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"ImFont\"), \", \", React.createElement(_components.code, null, \"ImFontAtlas\"), \" のみ何故か \", React.createElement(_components.code, null, \"c++\"), \" 色が強く、メンバ関数呼び出しがあったりするのでなんとかしたい。\\ncdecl で FFI 記述できるんだっけ？\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-c++\"\n  }, \"//io.Fonts->AddFontDefault();\\n//io.Fonts->AddFontFromFileTTF(\\\"../../misc/fonts/Roboto-Medium.ttf\\\", 16.0f);\\n//io.Fonts->AddFontFromFileTTF(\\\"../../misc/fonts/Cousine-Regular.ttf\\\", 15.0f);\\n//io.Fonts->AddFontFromFileTTF(\\\"../../misc/fonts/DroidSans.ttf\\\", 16.0f);\\n//io.Fonts->AddFontFromFileTTF(\\\"../../misc/fonts/ProggyTiny.ttf\\\", 10.0f);\\n//ImFont* font = io.Fonts->AddFontFromFileTTF(\\\"c:\\\\\\\\Windows\\\\\\\\Fonts\\\\\\\\ArialUni.ttf\\\", 18.0f, NULL, io.Fonts->GetGlyphRangesJapanese());\\n\")), \"\\n\", React.createElement(_components.p, null, \"第1引数に this に相当する引数を追加してやればいけた。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-lua\"\n  }, \"ffi.cdef[[\\n// 適当に名前を付け替える\\nstruct ImFont* ImFontAtlas_AddFontFromFileTTF(\\n    struct ImFontAtlas* this,\\n    const char* filename,\\n    float size_pixels,\\n    const struct ImFontConfig* font_cfg,\\n    ImWchar* glyph_ranges\\n) asm(\\\"?AddFontFromFileTTF@ImFontAtlas@@QEAAPEAUImFont@@PEBDMPEBUImFontConfig@@PEBG@Z\\\");\\n]]\\n\")), \"\\n\", React.createElement(_components.h1, null, \"C++ デフォルト引数\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"ImGui\"), \" の \", React.createElement(_components.code, null, \"API\"), \" は基本的にほぼ C になるように配慮されていて、C++ の機能は限定的にしか使っていない。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"関数オーバーロード\"), \"\\n\", React.createElement(_components.li, null, \"デフォルト引数\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"である。\\nで、このデフォルト引数がないと \", React.createElement(_components.code, null, \"imgui\"), \" の使い勝手が著しく下がる。\\nリファレンスを確認して、デフォルト値を当ててやる必要が出るので。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-c++\"\n  }, \"// 例\\nIMGUI_API bool Begin(const char* name, bool* p_open = NULL, ImGuiWindowFlags flags = 0);\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"NULL\"), \" は \", React.createElement(_components.code, null, \"nil\"), \" だし、 \", React.createElement(_components.code, null, \"0\"), \" はそのまま \", React.createElement(_components.code, null, \"0\"), \" なので、簡単なところだけでも対応する。\\n最悪、インテリセンスに出るようにすることで調べる手間は回避できるのだけど\\n\", React.createElement(_components.code, null, \"const &ImVec2 v = ImVec2(0, 0)\"), \" とかはめんどくさいです。\\nFFI 境界の \", React.createElement(_components.code, null, \"struct の value 渡し\"), \", \", React.createElement(_components.code, null, \"デフォルト引数\"), \" は解決できない場合が多いが、コード生成側で努力する価値はある。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"rust\"), \" はここができなくて、故にラッパー側で API を builder パターンに変更していたりするのだけど、\\n\", React.createElement(_components.code, null, \"rust\"), \" の \", React.createElement(_components.code, null, \"imgui\"), \" ラッパーの API を使いたいのではなくて、生の \", React.createElement(_components.code, null, \"imgui\"), \" が使いたいのだ。\\n\", React.createElement(_components.code, null, \"luajit\"), \" の FFI はちょっとラップすることで簡単に解決できる(遅くなるかもしれないが)。\"), \"\\n\", React.createElement(_components.p, null, \"ラッパーを自動で生成するようにできた。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-lua\"\n  }, \"    -- lua では nil と false のみが 偽 である\\n\\n    -- wrapper\\n    Begin = function(name, p_open, flags)\\n        -- p_open が供給されない場合、デフォルト nil になり、NULL として解釈される\\n        flags = flags or 0\\n        -- ffi 呼び出し\\n        return imgui.Begin(name, p_open, flags)\\n    end,\\n\\n    -- wrapper\\n    Button = function(label, size)\\n        -- 引数なしの `ffi.new` は zero 詰めする。 `ImVec2(0, 0)` になる。\\n        size = size or ffi.new('struct ImVec2')\\n        -- ffi 呼び出し\\n        return imgui.Button(label, size)\\n    end,\\n\")), \"\\n\", React.createElement(_components.h1, null, \"可変長引数\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-c++\"\n  }, \"IMGUI_API void Text(const char* fmt, ...)\\n\")), \"\\n\", React.createElement(_components.p, null, \"luajit ffi ではそのまま \", React.createElement(_components.code, null, \"...\"), \" を扱うことができた。\"), \"\\n\", React.createElement(_components.p, null, \"ただし、\", React.createElement(_components.code, null, \"%d\"), \" のときは、\\n\", React.createElement(_components.code, null, \"LL\"), \" をつけて \", React.createElement(_components.code, null, \"integer\"), \" を渡す。\\n\", React.createElement(_components.code, null, \"number\"), \" だとうまくいかない。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-lua\"\n  }, \"local count = 1LL -- 64bit int. UL もある\\nimgui.Text(\\\"counter = %d\\\", counter)\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"LL\"), \" と \", React.createElement(_components.code, null, \"UL\"), \" は luajit の拡張らしい。\\nhttps://luajit.org/ext_ffi_api.html\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Extensions to the Lua Parser\"), \"\\n\", React.createElement(_components.p, null, \"numeric literals with the suffixes LL or ULL as signed or unsigned 64 bit integers\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"だがしかし、この記法使うと \", React.createElement(_components.code, null, \"stylua\"), \" がエラーになる。そりゃ、そうだ。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-lua\"\n  }, \"local count = ffi.new('long long[1]') -- 32bit だとうまくいかない\\nimgui.Text(\\\"counter = %d\\\", counter[0])\\n\")), \"\\n\", React.createElement(_components.p, null, \"を使うのがよさそう。\"), \"\\n\", React.createElement(_components.h1, null, \"template class のごまかし\"), \"\\n\", React.createElement(_components.p, null, \"T を pointer としてしか使わない場合は、\\n\", React.createElement(_components.code, null, \"T*\"), \" を除去して \", React.createElement(_components.code, null, \"void*\"), \" にすれば動く。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-c++\"\n  }, \"template<typename T>\\nstruct ImVector{\\n    int Size;\\n    int Capacity;\\n    T* Data;\\n};    \\n\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-lua\"\n  }, \"ffi.cdef[[\\nstruct ImVector{\\n    int Size;\\n    int Capacity;\\n    void* Data;\\n};    \\n]]\\n\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","code","ul","li","h1","pre","blockquote","_provideComponents","components","React","className","wrapper","MDXLayout","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}