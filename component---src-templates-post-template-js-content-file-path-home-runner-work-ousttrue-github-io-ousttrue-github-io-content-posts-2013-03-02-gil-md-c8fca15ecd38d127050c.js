"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4864],{7314:function(e,t,n){n.r(t),n.d(t,{default:function(){return p}});var a=n(1151),l=n(7294);function o(e){const t=Object.assign({p:"p",span:"span"},(0,a.ah)(),e.components);return l.createElement(l.Fragment,null,l.createElement(t.p,null,"Boost.GIL 再学習"),"\n",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">Boost.GILを再学習。\n{% include_code boost gil practice lang:cpp gil_practice.cpp %}\n前半はオレオレImageクラスの記述で画像の読み書きにboost/gil/extension/ioを使うのを避けるために用意した。boost.gilのioはlibpng,\nligjpegとのリンクが必要になるのでWindowsではめんどくさすぎる。実戦では、QImageとかcv::Matrixといった組み込むアプリの持つ画像クラスと組み合わせて使うことが想定されるので既存の画像からviewを作るやり方を使った。\n{% img /images/gil_practice.png “ImageA” %}\nこんな感じでbitblt的な処理などを簡単に記述できる。\nmemo\n\nhttps://sites.google.com/site/twinkleofsilence/japanese-translation-of-gil-tutorial\nhttp://stlab.adobe.com/gil/html/group___image_view_algorithm.html\n\noctopress\n\nhttp://octopress.org/docs/plugins/image-tag/\nhttp://octopress.org/docs/blogging/code/</code></pre></div>'}}))}var c=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,a.ah)(),e.components);return t?l.createElement(t,e,l.createElement(o,e)):o(e)},s=n(8678),r=n(8838);const i={code:e=>{let{children:t,className:n}=e;return n?l.createElement(r.Z,{className:n},t):l.createElement("code",null,t)}};function g(e){let{data:t,children:n}=e;return l.createElement(s.Z,null,l.createElement("h1",null,t.mdx.frontmatter.title),l.createElement(a.Zo,{components:i},n))}function p(e){return l.createElement(g,e,l.createElement(c,e))}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2013-03-02-gil-md-c8fca15ecd38d127050c.js.map