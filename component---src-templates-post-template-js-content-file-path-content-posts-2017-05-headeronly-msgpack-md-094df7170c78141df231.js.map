{"version":3,"file":"component---src-templates-post-template-js-content-file-path-content-posts-2017-05-headeronly-msgpack-md-094df7170c78141df231.js","mappings":"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","sources":["webpack:///./content/posts/2017/05/headeronly_msgpack.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"車輪の再発明的だけどmessagepackのc++実装をまた作った。\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/ousttrue/msgpackpp\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"refrange\"), \" と \", React.createElement(_components.code, null, \"osaru\"), \" の知見を基に実装というか、編集した。\\n実装のシンプルさと使いやすさを優先して、パフォーマンスと汎用性にあまり配慮していない。\", React.createElement(_components.code, null, \"refrange\"), \" のAPIがダメダメなのを反省し、\", React.createElement(_components.code, null, \"osaru\"), \" で \", React.createElement(_components.code, null, \"serializer/deserializer\"), \" のレイヤーと \", React.createElement(_components.code, null, \"formatter/parser\"), \" のレイヤーを分けた設計を踏襲。なかなかよいのではないか。で、本家の \", React.createElement(_components.code, null, \"messagepack\"), \" を見たらバージョンが結構進んでいて、\", React.createElement(_components.code, null, \"c++11\"), \" 版ならヘッダーオンリーあるよと書いてあった。あったのかー。知ってたような気もするが、カスタムのオレオレ車輪でいく。\\nあと、ついでに \", React.createElement(_components.code, null, \"msgpackpp-rpc-asio\"), \" も更新した。githubで地味に★をいただくので、微妙に需要があるらしい。今回の更新で、この前発見した \", React.createElement(_components.code, null, \"asio standalone\"), \" を組み込んで \", React.createElement(_components.code, null, \"boost::test\"), \" を \", React.createElement(_components.code, null, \"catch\"), \" で置き換えて、 \", React.createElement(_components.code, null, \"boost::thread\"), \" を \", React.createElement(_components.code, null, \"std::thead\"), \" に置き換えるなどして、 \", React.createElement(_components.code, null, \"boost\"), \" への依存を取り除いた。ちょっとした機能ならばヘッダオンリーなのが最近の潮流ですな。もう少し手を入れて\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"msgpack\"), \" 部分を \", React.createElement(_components.code, null, \"msgpackpp\"), \" で置き換え\\n可変長テンプレート引数\\nメッセージを \", React.createElement(_components.code, null, \"std::cout\"), \" じゃなくて \", React.createElement(_components.code, null, \"plog\"), \" に出力\\nヘッダオンリー\"), \"\\n\", React.createElement(_components.p, null, \"という感じにしようか。\", React.createElement(_components.code, null, \"websocketpp\"), \" と組み合わせて使うのに便利な形にしたい。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2017/05/headeronly_msgpack.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  const frontmatter = data.mdx.frontmatter;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"div\", {\n    className: \"tags-index\"\n  }, frontmatter.tags && frontmatter.tags.length > 0 && frontmatter.tags.map(tag => {\n    return React.createElement(Link, {\n      to: `/tags/${tag}/`,\n      itemProp: \"url\"\n    }, React.createElement(\"button\", null, tag));\n  })), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        tags\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","code","_provideComponents","components","React","wrapper","MDXLayout","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","frontmatter","mdx","Layout","title","tags","length","map","tag","Link","to","itemProp","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}