{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2013-10-29-variant-md-2c16684033bc072879c3.js","mappings":"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","sources":["webpack:///./content/posts/2013/10/29/variant.md","webpack:///./src/templates/post-template.js","webpack:///./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h1: \"h1\",\n    blockquote: \"blockquote\",\n    code: \"code\",\n    strong: \"strong\",\n    em: \"em\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"wafでdebugとreleaseの設定を記述する(variant)\\nwafでdebug版とrelease版の出力を分けるにはvariantなる機能を使う。\\n+hello\\n+hello.cpp\\n+waf\\n+wscript\"), \"\\n\", React.createElement(_components.p, null, \"と前回と同様のプロジェクト。 wscriptを以下のように記述する。\"), \"\\n\", React.createElement(_components.h1, null, \"coding: utf-8\"), \"\\n\", React.createElement(_components.p, null, \"APPNAME='hello'\\nVERSION='1.0.0'\"), \"\\n\", React.createElement(_components.p, null, \"def configure(conf):\"), \"\\n\", React.createElement(_components.h1, null, \"config 'debug'を作る\"), \"\\n\", React.createElement(_components.p, null, \"conf.setenv('debug')\"), \"\\n\", React.createElement(_components.h1, null, \"debugの設定\"), \"\\n\", React.createElement(_components.p, null, \"conf.env['MSVC_TARGETS'] = ['x86']\\nconf.load('msvc')\\nconf.env.CXXFLAGS = ['/nologo', '/EHsc']\"), \"\\n\", React.createElement(_components.h1, null, \"PDBやNDEBUG等の設定をきっちり書く必要がある\"), \"\\n\", React.createElement(_components.h1, null, \"config 'release'を作る。debugの設定は引き継がない\"), \"\\n\", React.createElement(_components.p, null, \"conf.setenv('release')\"), \"\\n\", React.createElement(_components.h1, null, \"releaseの設定\"), \"\\n\", React.createElement(_components.p, null, \"conf.env['MSVC_TARGETS'] = ['x86']\\nconf.load('msvc')\\nconf.env.CXXFLAGS = ['/nologo', '/EHsc']\"), \"\\n\", React.createElement(_components.h1, null, \"BuildContextの設定\"), \"\\n\", React.createElement(_components.p, null, \"def build(bld):\\nbld.program(\\nsource='hello.cpp',\\ntarget=APPNAME\\n)\"), \"\\n\", React.createElement(_components.p, null, \"from waflib.Build import BuildContext\"), \"\\n\", React.createElement(_components.h1, null, \"BuildContextを使うコマンド\"), \"\\n\", React.createElement(_components.p, null, \"class BuildDebug(BuildContext):\"), \"\\n\", React.createElement(_components.h1, null, \"config 'debug' を使うvariant\"), \"\\n\", React.createElement(_components.h1, null, \"出力ディレクトリがbuild/debugに変わる\"), \"\\n\", React.createElement(_components.p, null, \"variant = \\\"debug\\\"\"), \"\\n\", React.createElement(_components.h1, null, \"呼び出しコマンドはbuild_debug\"), \"\\n\", React.createElement(_components.p, null, \"cmd = \\\"build_debug\\\"\"), \"\\n\", React.createElement(_components.h1, null, \"BuildContextを使うコマンド\"), \"\\n\", React.createElement(_components.p, null, \"class BuildRelease(BuildContext):\"), \"\\n\", React.createElement(_components.h1, null, \"config 'release' を使うvariant\"), \"\\n\", React.createElement(_components.h1, null, \"出力ディレクトリがbuild/releaseに変わる\"), \"\\n\", React.createElement(_components.p, null, \"variant = \\\"release\\\"\"), \"\\n\", React.createElement(_components.h1, null, \"呼び出しコマンドはbuild_release\"), \"\\n\", React.createElement(_components.p, null, \"cmd = \\\"build_release\\\"\"), \"\\n\", React.createElement(_components.p, null, \"variantという概念を使う。\\nhttp://docs.waf.googlecode.com/git/book_17/single.html の 6.2.2.\\nChanging the output directory Configuration sets for variants\\nに記述がある。\\n使う\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"python waf --help\\nwaf [commands] [options]\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Main commands (example: ./waf build -j4)\\nbuild        : executes the build\\nbuild_debug  :\\nbuild_release:\\n:\\n:\\n省略\"), \"\\n\", React.createElement(_components.p, null, \"という感じでbuild_debug, build_releaseが増える。\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"python waf build_debug\\nWaf: Entering directory \", React.createElement(_components.code, null, \"C:\\\\work\\\\_waf\\\\debug_release\\\\build\\\\debug' [1/2] cxx: hello.cpp -> build\\\\debug\\\\hello.cpp.1.o hello.cpp [2/2] cxxprogram: build\\\\debug\\\\hello.cpp.1.o -> build\\\\debug\\\\hello.exe build\\\\debug\\\\hello.exe.manifest Waf: Leaving directory \"), \"C:\\\\work_waf\\\\debug_release\\\\build\\\\debug'\\n'build_debug' finished successfully (0.487s)\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"素のビルドはエラーになった。たぶん対象になる名無しのconfigが存在しないため。\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"python waf build\\nWaf: Entering directory \", React.createElement(_components.code, null, \"C:\\\\work\\\\_waf\\\\debug_release\\\\build' [1/2] cxx: hello.cpp -> build\\\\hello.cpp.1.o Waf: Leaving directory \"), \"C:\\\\work_waf\\\\debug_release\\\\build'\\nBuild failed\\n:\\n:\\n省略\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"ということで素のビルドの時にメッセージを表示して止めるようにする。\\nbuildメソッドの先頭にwaf book通りの記述を入れる。\"), \"\\n\", React.createElement(_components.h1, null, \"BuildContextの設定\"), \"\\n\", React.createElement(_components.p, null, \"def build(bld):\\nif not bld.variant:\\nbld.fatal('call \\\"waf build_debug\\\" or \\\"waf build_release\\\", and try \\\"waf --help\\\"')\\nbld.program(\\nsource='hello.cpp',\\ntarget=APPNAME\\n)\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"python waf build\\nWaf: Entering directory `C:\\\\work_waf\\\\debug_release\\\\build'\\ncall \\\"waf build_debug\\\" or \\\"waf build_release\\\", and try \\\"waf --help\\\"\\npython waf clean\\ncall \\\"waf build_debug\\\" or \\\"waf build_release\\\", and try \\\"waf --help\\\"\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"build以外にもbuildメソッド(BuildContext)を使うコマンドがあって、\\nhttp://docs.waf.googlecode.com/git/book_17/single.html の 12.1.2.\\nContext classes のクラス図によると ListContext, CleanContext,\\nStepContext, InstallContext, UninstallContext\\nがBuildContextを継承しているのでこれに対応するコマンド\\nそれぞれにdebug版、release版を定義してやる必要がある。\\nwaf bookに書いてあるようにコマンドclassの記述を変える。\\nfrom waflib.Build import BuildContext, ListContext, CleanContext, StepContext, InstallContext, UninstallContext\"), \"\\n\", React.createElement(_components.p, null, \"CONTEXTS=[BuildContext, ListContext, CleanContext, StepContext, InstallContext, UninstallContext]\\nVARIANTS=['debug', 'release']\"), \"\\n\", React.createElement(_components.p, null, \"for context in CONTEXTS:\\nfor variant_name in VARIANTS:\\nname = context.\", React.createElement(_components.strong, null, \"name\"), \".replace('Context','').lower()\\nclass tmp(context):\\ncmd = name + '_' + variant_name\\nvariant = variant_name\"), \"\\n\", React.createElement(_components.p, null, \"helpを見ると大量に定義したコマンドが増える。\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"python waf --help\\nwaf [commands] [options]\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Main commands (example: ./waf build -j4)\\nbuild            : executes the build\\nbuild_debug      :\\nbuild_release    :\\nclean            : cleans the project\\nclean_debug      :\\nclean_release    :\\nconfigure        : configures the project\\ndist             : makes a tarball for redistributing the sources\\ndistcheck        : checks if the project compiles (tarball from 'dist')\\ndistclean        : removes the build directory\\ninstall          : installs the targets on the system\\ninstall_debug    :\\ninstall_release  :\\nlist             : lists the targets to execute\\nlist_debug       :\\nlist_release     :\\nstep             : executes tasks in a step-by-step fashion, for debugging\\nstep_debug       :\\nstep_release     :\\nuninstall        : removes the targets installed\\nuninstall_debug  :\\nuninstall_release:\\nupdate           : updates the plugins from the \", React.createElement(_components.em, null, \"waflib/extras\"), \" directory\\n:\\n:\\n省略\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"python waf clean_debug build_debug\\n'clean_debug' finished successfully (0.087s)\\nWaf: Entering directory \", React.createElement(_components.code, null, \"C:\\\\work\\\\_waf\\\\debug_release\\\\build\\\\debug' [1/2] cxx: hello.cpp -> build\\\\debug\\\\hello.cpp.1.o hello.cpp [2/2] cxxprogram: build\\\\debug\\\\hello.cpp.1.o -> build\\\\debug\\\\hello.exe build\\\\debug\\\\hello.exe.manifest Waf: Leaving directory \"), \"C:\\\\work_waf\\\\debug_release\\\\build\\\\debug'\\n'build_debug' finished successfully (0.451s)\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"これでdebug, releaseの使い分けはできるようになった。\\nvariantを追加する\\n64bitビルドや、gccのvariantを追加してみた。\"), \"\\n\", React.createElement(_components.h1, null, \"coding: utf-8\"), \"\\n\", React.createElement(_components.p, null, \"APPNAME='hello'\\nVERSION='1.0.0'\"), \"\\n\", React.createElement(_components.p, null, \"VARIANTS=[\\n'vc_debug', 'vc_release', 'vc64_debug', 'vc64_release',\\n'gcc_debug', 'gcc_release',\\n]\"), \"\\n\", React.createElement(_components.p, null, \"def configure(conf):\"), \"\\n\", React.createElement(_components.h1, null, \"config 'debug'を作る\"), \"\\n\", React.createElement(_components.p, null, \"conf.setenv('debug')\"), \"\\n\", React.createElement(_components.h1, null, \"debugの設定\"), \"\\n\", React.createElement(_components.p, null, \"conf.env['MSVC_VERSIONS'] = ['msvc 10.0']\\nconf.env['MSVC_TARGETS'] = ['x86']\\nconf.load('msvc')\\nconf.env.CXXFLAGS = ['/nologo', '/EHsc']\"), \"\\n\", React.createElement(_components.h1, null, \"PDBやNDEBUG等の設定をきっちり書く必要がある\"), \"\\n\", React.createElement(_components.h1, null, \"config 'release'を作る。debugの設定は引き継がない\"), \"\\n\", React.createElement(_components.p, null, \"conf.setenv('release')\"), \"\\n\", React.createElement(_components.h1, null, \"releaseの設定\"), \"\\n\", React.createElement(_components.p, null, \"conf.env['MSVC_VERSIONS'] = ['msvc 10.0']\\nconf.env['MSVC_TARGETS'] = ['x86']\\nconf.load('msvc')\\nconf.env.CXXFLAGS = ['/nologo', '/EHsc']\"), \"\\n\", React.createElement(_components.h1, null, \"config 'debug'を作る\"), \"\\n\", React.createElement(_components.p, null, \"conf.setenv('vc64_debug')\"), \"\\n\", React.createElement(_components.h1, null, \"debugの設定\"), \"\\n\", React.createElement(_components.p, null, \"conf.env['MSVC_VERSIONS'] = ['msvc 10.0']\\nconf.env['MSVC_TARGETS'] = ['x64']\\nconf.load('msvc')\\nconf.env.CXXFLAGS = ['/nologo', '/EHsc']\"), \"\\n\", React.createElement(_components.h1, null, \"PDBやNDEBUG等の設定をきっちり書く必要がある\"), \"\\n\", React.createElement(_components.h1, null, \"config 'release'を作る。debugの設定は引き継がない\"), \"\\n\", React.createElement(_components.p, null, \"conf.setenv('vc64_release')\"), \"\\n\", React.createElement(_components.h1, null, \"releaseの設定\"), \"\\n\", React.createElement(_components.p, null, \"conf.env['MSVC_VERSIONS'] = ['msvc 10.0']\\nconf.env['MSVC_TARGETS'] = ['x64']\\nconf.load('msvc')\\nconf.env.CXXFLAGS = ['/nologo', '/EHsc']\"), \"\\n\", React.createElement(_components.h1, null, \"config 'debug'を作る\"), \"\\n\", React.createElement(_components.p, null, \"conf.setenv('gcc_debug')\"), \"\\n\", React.createElement(_components.h1, null, \"debugの設定\"), \"\\n\", React.createElement(_components.p, null, \"conf.load('gxx')\\nconf.env.CXXFLAGS = ['-g']\\nconf.env.LINKFLAGS = ['-g']\"), \"\\n\", React.createElement(_components.h1, null, \"config 'release'を作る。debugの設定は引き継がない\"), \"\\n\", React.createElement(_components.p, null, \"conf.setenv('gcc_release')\"), \"\\n\", React.createElement(_components.h1, null, \"releaseの設定\"), \"\\n\", React.createElement(_components.p, null, \"conf.load('gxx')\\nconf.env.CXXFLAGS = ['-O2']\"), \"\\n\", React.createElement(_components.h1, null, \"BuildContextの設定\"), \"\\n\", React.createElement(_components.p, null, \"def build(bld):\\nif not bld.variant:\\nbld.fatal('call \\\"waf build_debug\\\" or \\\"waf build_release\\\", and try \\\"waf --help\\\"')\\nbld.program(\\nsource='hello.cpp',\\ntarget=APPNAME\\n)\"), \"\\n\", React.createElement(_components.p, null, \"from waflib.Build import BuildContext, ListContext, CleanContext, StepContext, InstallContext, UninstallContext\"), \"\\n\", React.createElement(_components.p, null, \"CONTEXTS=[BuildContext, ListContext, CleanContext, StepContext, InstallContext, UninstallContext]\"), \"\\n\", React.createElement(_components.p, null, \"for context in CONTEXTS:\\nfor variant_name in VARIANTS:\\nname = context.\", React.createElement(_components.strong, null, \"name\"), \".replace('Context','').lower()\\nclass tmp(context):\\ncmd = name + '_' + variant_name\\nvariant = variant_name\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2013/10/29/variant.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nfunction PostTempalte({data, children}) {\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, null, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h1","blockquote","code","strong","em","_provideComponents","components","React","wrapper","MDXLayout","PostTempalte","_ref","data","children","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}