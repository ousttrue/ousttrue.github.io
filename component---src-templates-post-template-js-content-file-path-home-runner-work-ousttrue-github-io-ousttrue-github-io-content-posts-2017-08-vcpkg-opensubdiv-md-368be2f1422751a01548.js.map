{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2017-08-vcpkg-opensubdiv-md-368be2f1422751a01548.js","mappings":"+JAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,KAAM,SACLC,EAAAA,EAAAA,MAAsBN,EAAMO,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,2EAA4E,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,6CAA8C,KAAMI,EAAAA,cAAoBP,EAAYI,KAAM,CAC7SI,wBAAyB,CACvBC,OAAQ,y/BAER,KAAMF,EAAAA,cAAoBP,EAAYG,EAAG,KAAMI,EAAAA,cAAoBP,EAAYI,KAAM,CACvFI,wBAAyB,CACvBC,OAAQ,yEAEP,KAAMF,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,wBAAyB,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAMI,EAAAA,cAAoBP,EAAYI,KAAM,CAChKI,wBAAyB,CACvBC,OAAQ,yGAEP,KAAMF,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,+BAAgCI,EAAAA,cAAoBP,EAAYI,KAAM,CACxHI,wBAAyB,CACvBC,OAAQ,6DAER,+EAAgFF,EAAAA,cAAoBP,EAAYI,KAAM,CACxHI,wBAAyB,CACvBC,OAAQ,6FAER,iBAAkB,KAAMF,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,qKAAsK,KAAMI,EAAAA,cAAoBP,EAAYI,KAAM,CACrRI,wBAAyB,CACvBC,OAAQ,07EAER,KAAMF,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,WAAYI,EAAAA,cAAoBP,EAAYI,KAAM,CACnGI,wBAAyB,CACvBC,OAAQ,gGAER,oBAAqBF,EAAAA,cAAoBP,EAAYI,KAAM,CAC7DI,wBAAyB,CACvBC,OAAQ,2FAER,kBAAmB,KAAMF,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,8DAA+D,KAAMI,EAAAA,cAAoBP,EAAYI,KAAM,CAC/KI,wBAAyB,CACvBC,OAAQ,mjDAER,KAAMF,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,oFAAqF,KAAMI,EAAAA,cAAoBP,EAAYI,KAAM,CAClLI,wBAAyB,CACvBC,OAAQ,kkBAER,KAAMF,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,cAAe,KAAMI,EAAAA,cAAoBP,EAAYI,KAAM,CAC5GI,wBAAyB,CACvBC,OAAQ,0qOAER,KAAMF,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,iEACrD,CAKA,MAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOW,QAASC,GAAaV,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOK,EAAYJ,EAAAA,cAAoBI,EAAWZ,EAAOQ,EAAAA,cAAoBT,EAAmBC,IAAUD,EAAkBC,EAC9H,E,oBCnDA,MAAMO,EAAa,CACjBM,KAAMC,IAA2B,IAA1B,SAACC,EAAQ,UAAEC,GAAUF,EAC1B,OAAOE,EAAYR,EAAAA,cAAoBS,EAAAA,EAAsB,CAC3DD,UAAWA,GACVD,GAAYP,EAAAA,cAAoB,OAAQ,KAAMO,EAAS,GAG9D,SAASG,EAAYC,GAAmB,IAAlB,KAACC,EAAI,SAAEL,GAASI,EACpC,OAAOX,EAAAA,cAAoBa,EAAAA,EAAQ,KAAMb,EAAAA,cAAoB,KAAM,KAAMY,EAAKE,IAAIC,YAAYC,OAAQhB,EAAAA,cAAoBiB,EAAAA,GAAa,CACrIlB,WAAYA,GACXQ,GACL,CACe,SAASW,EAAiB1B,GACvC,OAAOQ,EAAAA,cAAoBU,EAAclB,EAAOQ,EAAAA,cAAoBmB,EAAqB3B,GAC3F,C","sources":["webpack:///./content/posts/2017/08/vcpkg_opensubdiv.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"CEDEC2017のセッションを聞いてUSDビルドする気が戻ってきた。部品のひとつ、OpenSubdivのvcpkg版ビルドに取り組んでみる。\"), \"\\n\", React.createElement(_components.p, null, \"packageを作る\\nPOWERSHELLを開いてvcpkgディレクトリに移動。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"shell\\\"><pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">PS<span class=\\\"token operator\\\">></span> .<span class=\\\"token punctuation\\\">\\\\</span>vcpkg.exe create opensubdiv https://github.com/PixarAnimationStudios/OpenSubdiv/archive/v3_3_0.tar.gz\\n-- Generated portfile: vcpkg<span class=\\\"token punctuation\\\">\\\\</span>ports<span class=\\\"token punctuation\\\">\\\\</span>opensubdiv<span class=\\\"token punctuation\\\">\\\\</span>portfile.cmake\\n-- Generated CONTROL: vcpkg<span class=\\\"token punctuation\\\">\\\\</span>ports<span class=\\\"token punctuation\\\">\\\\</span>opensubdiv<span class=\\\"token punctuation\\\">\\\\</span>CONTROL\\n-- To launch an editor <span class=\\\"token keyword\\\">for</span> these new files, run\\n--     .<span class=\\\"token punctuation\\\">\\\\</span>vcpkg edit opensubdiv\\n\\nports/opensubdiv/CONTROL\\nSource: opensubdiv\\nVersion: <span class=\\\"token number\\\">3.3</span>.0\\nDescription: An Open-Source subdivision surface library.\\nBuild-Depends: tbb, glew, ptex</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">ports/opensubdiv/portfile.cmake</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.p, null, \"最低限、展開するアーカイブのパスを指定。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">set(SOURCE_PATH ${CURRENT_BUILDTREES_DIR}/src/OpenSubdiv-3_3_0)</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.p, null, \"ビルドしてみる\\nさすがにエラーになる。vcpkg の \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">buildtree/opensubdiv</code>\"\n    }\n  }), \" に潜ってビルド手順を調べてみる。\\n手動ビルド\\nOpenSubdivのビルドシステムはCMakeだった。\\n早速、CmakeGUIでやってみる。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">CMAKE_INSTALL_PREFIX=VCPKG_DIR/installed/x64-windows</code>\"\n    }\n  }), \" だけ設定して様子を見る。\"), \"\\n\", React.createElement(_components.p, null, \"CUDAとかOpenCLとかそっち方面の依存がある様子。\\nNO_CUDAとNO_OPENCLにチェックを入れてみる。\\nあとNO_DOCも。\\nSolutionをGenerateしてビルドしてみる。\\nDebug版だけtbb_debug.libが見つからないエラーが出た。\\nDEBUG版のFIND_PACKAGEの修正\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"cmake\\\"><pre class=\\\"language-cmake\\\"><code class=\\\"language-cmake\\\">OpenSubdiv-3_3_0/cmake/FindTBB.cmake\\n    <span class=\\\"token keyword\\\">find_library</span><span class=\\\"token punctuation\\\">(</span>TBB_<span class=\\\"token punctuation\\\">${</span>TBB_LIB<span class=\\\"token punctuation\\\">}</span>_LIBRARY\\n        NAMES\\n            <span class=\\\"token punctuation\\\">${</span>TBB_LIB<span class=\\\"token punctuation\\\">}</span>\\n        HINTS\\n            <span class=\\\"token string\\\">\\\"<span class=\\\"token interpolation\\\"><span class=\\\"token punctuation\\\">${</span><span class=\\\"token variable\\\">TBB_LOCATION</span><span class=\\\"token punctuation\\\">}</span></span>/lib\\\"</span>\\n            <span class=\\\"token string\\\">\\\"<span class=\\\"token interpolation\\\"><span class=\\\"token punctuation\\\">${</span><span class=\\\"token variable\\\">TBB_LOCATION</span><span class=\\\"token punctuation\\\">}</span></span>/bin\\\"</span>\\n            <span class=\\\"token string\\\">\\\"$ENV{TBB_LOCATION}/lib\\\"</span>\\n            <span class=\\\"token string\\\">\\\"$ENV{TBB_LOCATION}/bin\\\"</span>\\n            <span class=\\\"token string\\\">\\\"$ENV{PROGRAMFILES}/TBB/lib\\\"</span>\\n            /usr/lib\\n            /usr/lib/w32api\\n            /usr/local/lib\\n            /usr/X11R6/lib\\n        PATH_SUFFIXES\\n            <span class=\\\"token string\\\">\\\"<span class=\\\"token interpolation\\\"><span class=\\\"token punctuation\\\">${</span><span class=\\\"token variable\\\">TBB_LIB_ARCH</span><span class=\\\"token punctuation\\\">}</span></span>\\\"</span>\\n            <span class=\\\"token string\\\">\\\"<span class=\\\"token interpolation\\\"><span class=\\\"token punctuation\\\">${</span><span class=\\\"token variable\\\">TBB_LIB_ARCH</span><span class=\\\"token punctuation\\\">}</span></span>/<span class=\\\"token interpolation\\\"><span class=\\\"token punctuation\\\">${</span><span class=\\\"token variable\\\">TBB_COMPILER</span><span class=\\\"token punctuation\\\">}</span></span>\\\"</span>\\n            <span class=\\\"token string\\\">\\\"<span class=\\\"token interpolation\\\"><span class=\\\"token punctuation\\\">${</span><span class=\\\"token variable\\\">TBB_LIB_ARCH</span><span class=\\\"token punctuation\\\">}</span></span>/gcc4.4\\\"</span>\\n            <span class=\\\"token string\\\">\\\"<span class=\\\"token interpolation\\\"><span class=\\\"token punctuation\\\">${</span><span class=\\\"token variable\\\">TBB_LIB_ARCH</span><span class=\\\"token punctuation\\\">}</span></span>/gcc4.1\\\"</span>\\n        DOC <span class=\\\"token string\\\">\\\"Intel's Threading Building Blocks library\\\"</span><span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"vcpkgでは、\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">VCPKG_DIR/installed/x64-windows/debug/lib/tbb_debug.lib</code>\"\n    }\n  }), \" にあるので見つかりませんね。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">TBB_LOCATION=VCPKG_DIR/installed/x64-windows/debug</code>\"\n    }\n  }), \" を指定したらうまくいった。\"), \"\\n\", React.createElement(_components.p, null, \"portfile.cmakeに反映\\nports/opensubdiv/portfile.cmake\\nこうなった。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"cmake\\\"><pre class=\\\"language-cmake\\\"><code class=\\\"language-cmake\\\"><span class=\\\"token function\\\">vcpkg_configure_cmake</span><span class=\\\"token punctuation\\\">(</span>\\n    SOURCE_PATH <span class=\\\"token punctuation\\\">${</span>SOURCE_PATH<span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token comment\\\">#PREFER_NINJA # Disable this option if project cannot be built with Ninja</span>\\n    OPTIONS\\n        <span class=\\\"token comment\\\">#-DNO_LIB=1</span>\\n        -DNO_CUDA=<span class=\\\"token number\\\">1</span>\\n        -DNO_DOC=<span class=\\\"token number\\\">1</span>\\n        -DNO_OPENCL=<span class=\\\"token number\\\">1</span>\\n        -DNO_OPENGL=<span class=\\\"token number\\\">1</span>\\n        -DNO_METAL=<span class=\\\"token number\\\">1</span>\\n        -DNO_DX=<span class=\\\"token number\\\">1</span>\\n        <span class=\\\"token comment\\\">#-DNO_OMP=1</span>\\n        -DNO_TESTS=<span class=\\\"token number\\\">1</span>\\n        -DNO_EXAMPLES=<span class=\\\"token number\\\">1</span>\\n        -DNO_TUTORIALS=<span class=\\\"token number\\\">1</span>\\n        -DNO_REGRESSION=<span class=\\\"token number\\\">1</span>\\n        -DNO_GLTESTS=<span class=\\\"token number\\\">1</span>\\n        <span class=\\\"token comment\\\"># for tbb_debug.lib</span>\\n        -DTBB_LOCATION=<span class=\\\"token punctuation\\\">${</span>CURRENT_INSTALLED_DIR<span class=\\\"token punctuation\\\">}</span>/debug\\n    <span class=\\\"token comment\\\"># OPTIONS_RELEASE -DOPTIMIZE=1</span>\\n    <span class=\\\"token comment\\\"># OPTIONS_DEBUG -DDEBUGGABLE=1</span>\\n<span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"package\\nVCPKG_DIR/packages/opensubdiv_x86-windows\\npackageの調整\\nエラーメッセージの指示に従って。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"ports/opensubdiv/portfile.cmake\\\"><pre class=\\\"language-ports/opensubdiv/portfile.cmake\\\"><code class=\\\"language-ports/opensubdiv/portfile.cmake\\\">vcpkg_install_cmake()\\nvcpkg_copy_pdbs()\\n\\nfile(REMOVE_RECURSE ${CURRENT_PACKAGES_DIR}/debug/include)\\n\\n# Handle copyright\\nfile(COPY ${CURRENT_BUILDTREES_DIR}/src/OpenSubdiv-3_3_0/LICENSE.txt DESTINATION ${CURRENT_PACKAGES_DIR}/share/opensubdiv)\\nfile(RENAME ${CURRENT_PACKAGES_DIR}/share/opensubdiv/LICENSE.txt ${CURRENT_PACKAGES_DIR}/share/opensubdiv/copyright)</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"以下のようになった。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"shell\\\"><pre class=\\\"language-shell\\\"><code class=\\\"language-shell\\\">+---debug\\n<span class=\\\"token operator\\\">|</span>   <span class=\\\"token punctuation\\\">\\\\</span>---lib\\n<span class=\\\"token operator\\\">|</span>           osdCPU.lib\\n<span class=\\\"token operator\\\">|</span>\\n+---include\\n<span class=\\\"token operator\\\">|</span>   <span class=\\\"token punctuation\\\">\\\\</span>---opensubdiv\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>   version.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>\\n<span class=\\\"token operator\\\">|</span>       +---far\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       error.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       patchDescriptor.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       patchMap.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       patchParam.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       patchTable.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       patchTableFactory.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       primvarRefiner.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       ptexIndices.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       stencilTable.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       stencilTableFactory.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       topologyDescriptor.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       topologyLevel.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       topologyRefiner.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       topologyRefinerFactory.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       types.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>\\n<span class=\\\"token operator\\\">|</span>       +---hbr\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       allocator.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       bilinear.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       catmark.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       cornerEdit.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       creaseEdit.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       face.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       faceEdit.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       fvarData.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       fvarEdit.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       halfedge.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       hierarchicalEdit.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       holeEdit.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       loop.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       mesh.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       subdivision.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       vertex.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       vertexEdit.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>\\n<span class=\\\"token operator\\\">|</span>       +---osd\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       bufferDescriptor.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       cpuEvaluator.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       cpuPatchTable.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       cpuVertexBuffer.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       mesh.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       nonCopyable.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       ompEvaluator.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       ompKernel.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       opengl.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       tbbEvaluator.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       tbbKernel.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       types.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>\\n<span class=\\\"token operator\\\">|</span>       +---sdc\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       bilinearScheme.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       catmarkScheme.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       crease.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       loopScheme.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       options.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       scheme.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>       types.h\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token operator\\\">|</span>\\n<span class=\\\"token operator\\\">|</span>       <span class=\\\"token punctuation\\\">\\\\</span>---vtr\\n<span class=\\\"token operator\\\">|</span>               array.h\\n<span class=\\\"token operator\\\">|</span>               componentInterfaces.h\\n<span class=\\\"token operator\\\">|</span>               fvarLevel.h\\n<span class=\\\"token operator\\\">|</span>               fvarRefinement.h\\n<span class=\\\"token operator\\\">|</span>               level.h\\n<span class=\\\"token operator\\\">|</span>               refinement.h\\n<span class=\\\"token operator\\\">|</span>               sparseSelector.h\\n<span class=\\\"token operator\\\">|</span>               stackBuffer.h\\n<span class=\\\"token operator\\\">|</span>               types.h\\n<span class=\\\"token operator\\\">|</span>\\n+---lib\\n<span class=\\\"token operator\\\">|</span>       osdCPU.lib\\n<span class=\\\"token operator\\\">|</span>\\n<span class=\\\"token punctuation\\\">\\\\</span>---share\\n    <span class=\\\"token punctuation\\\">\\\\</span>---opensubdiv\\n            copyright</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"OpenSubdivにはdllのビルドは無いみたい。ライブラリ構成もtemplate classを主体とするもののようだ。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2017/08/vcpkg_opensubdiv.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","span","_provideComponents","components","React","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","Layout","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}