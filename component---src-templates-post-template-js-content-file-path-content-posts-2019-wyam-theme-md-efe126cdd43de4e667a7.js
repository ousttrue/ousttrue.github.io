"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2200],{2122:function(e,n,t){t.r(n),t.d(n,{default:function(){return i}});var l=t(1151),a=t(7294);function s(e){const n=Object.assign({p:"p",h2:"h2",ul:"ul",li:"li",code:"code",span:"span",a:"a",blockquote:"blockquote",strong:"strong",h3:"h3"},(0,l.ah)(),e.components);return a.createElement(a.Fragment,null,a.createElement(n.p,null,"cssとかの調整。"),"\n",a.createElement(n.h2,null,"調べる"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"https://wyam.io/docs/","\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"https://wyam.io/recipes/blog/themes/"),"\n",a.createElement(n.li,null,"https://wyam.io/docs/extensibility/creating-a-theme"),"\n",a.createElement(n.li,null,"https://wyam.io/docs/extensibility/customizing-themes"),"\n"),"\n"),"\n"),"\n",a.createElement(n.p,null,"ローカルにファイルを配置することでテーマをオーバーライドできると書いてあるのだが、\nどのように配置するか正確なところがわからん。"),"\n",a.createElement(n.p,null,"試行錯誤したところ、"),"\n",a.createElement(n.p,null,a.createElement(n.code,null,"input")," にテーマのファイルを直接コピーしたら反映された。"),"\n",a.createElement(n.p,null,a.createElement(n.code,null,"theme")," フォルダでもよさそうなのだけど、 ",a.createElement(n.code,null,"input")," しか ",a.createElement(n.code,null,"--watch")," の対象にならないので、\n",a.createElement(n.code,null,"input")," に入れてしまうのがよさそう。"),"\n",a.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">input\n  + assets\n  + _Layout.cshtml</code></pre></div>'}}),"\n",a.createElement(n.h2,null,"レイアウトの構成"),"\n",a.createElement(n.p,null,"ASP.Net のtemplateエンジン、 ",a.createElement(n.a,{href:"https://docs.microsoft.com/en-us/aspnet/core/mvc/views/razor?view=aspnetcore-2.2"},"Razor")," で構成されていて拡張子は、 ",a.createElement(n.code,null,"cshtml")," 。"),"\n",a.createElement(n.p,null,"ファイル名は、",a.createElement(n.a,{href:"https://wyam.io/recipes/blog/overview"},"Blog Recipe"),"が規定している。"),"\n",a.createElement(n.p,null,"サイトのルート(index), 各記事(post), 記事一覧(archive, tag), タグ一覧(tags)などがある。単純な例はこれ。"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"https://github.com/Wyamio/Wyam/tree/develop/themes/Blog/BlogTemplate"),"\n"),"\n",a.createElement(n.h2,null,"テーマを作ってみる"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"https://github.com/Wyamio/Wyam.git"),"\n"),"\n",a.createElement(n.p,null,"をクローンして、",a.createElement(n.code,null,"themes/Blog/BlogTemplate/*")," を ",a.createElement(n.code,null,"input")," にコピーする。\nconfig.yml も ",a.createElement(n.code,null,"#theme BlogTemplate")," とする。"),"\n",a.createElement(n.p,null,"共通のレイアウトが ",a.createElement(n.code,null,"_Layout.cshtml")," 。 その中の、 ",a.createElement(n.code,null,"@RenderBody()")," にルート(_Index.cshtml), 記事(_PostLayout.cshtml), 記事一覧(_Archive.cshtml, _Tag.cshtml), タグ一覧(_Tags.cshtml)がはめ込まれる様子。"),"\n",a.createElement(n.p,null,a.createElement(n.code,null,"_PostIndex.cshtml")," は廃止されたので使われない。"),"\n",a.createElement(n.blockquote,null,"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,a.createElement(n.strong,null,"[Breaking Change]"),"[Refactoring] Moved Blog recipe theme file ",a.createElement(n.code,null,"/_PostIndex.cshtml")," to ",a.createElement(n.code,null,"/_Archive.cshtml"),", no other changes should be needed to this file in themes other than to move it - sorry for the rename (again), the first name was kind of dumb, this one is better"),"\n"),"\n"),"\n",a.createElement(n.p,null,"日本語が文字化けするので、 ",a.createElement(n.code,null,"_Layout.cshtml")," に ",a.createElement(n.code,null,'<meta charset="UTF-8">')," だけ足す。\nあとは適当にやってみる。"),"\n",a.createElement(n.h2,null,"cshtml からアクセスできる変数"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"Model"),"\n",a.createElement(n.li,null,"Context"),"\n"),"\n",a.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="cshtml"><pre class="language-cshtml"><code class="language-cshtml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">Context<span class="token punctuation">.</span><span class="token function">GetLink</span><span class="token punctuation">(</span>Context<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>BlogKeys<span class="token punctuation">.</span>PostsPath<span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Back To posts<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre></div>'}}),"\n",a.createElement(n.h2,null,"作業メモ"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"scss(wyamが対応している)"),"\n",a.createElement(n.li,null,"highlight.js (phantom themeからコピー)"),"\n",a.createElement(n.li,null,"旧記事を雑に復旧"),"\n",a.createElement(n.li,null,"locale https://wyam.io/docs/advanced/setting-the-culture"),"\n"),"\n",a.createElement(n.h3,null,"ToDo"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"404頁"),"\n",a.createElement(n.li,null,"一覧をpageで分割"),"\n",a.createElement(n.li,null,"記事内のTOC","\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"https://github.com/Wyamio/Wyam/issues/29"),"\n",a.createElement(n.li,null,"https://blog.kabrt.cz/posts/2018-11-wyam-blog"),"\n"),"\n"),"\n",a.createElement(n.li,null,"https://konpa.github.io/devicon/"),"\n",a.createElement(n.li,null,"http://fizzed.com/oss/font-mfizz"),"\n",a.createElement(n.li,null,"https://www.digitaltapestry.net/posts/poshwyam"),"\n"),"\n",a.createElement(n.h2,null,"動作"),"\n",a.createElement(n.p,null,"複数のパイプラインが登録してあって(Recipe)、ひとつずつ実行する"),"\n",a.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">public IReadOnlyList&lt;IDocument> Execute(ExecutionContext context, IEnumerable&lt;IModule> modules, ImmutableArray&lt;IDocument> inputDocuments\n\nforeach(var pipeline in pipelines)\n{\n  ExecutionPipeline.Execute\n}</code></pre></div>'}}))}var c=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,l.ah)(),e.components);return n?a.createElement(n,e,a.createElement(s,e)):s(e)},o=t(8678),u=t(4160),r=t(8736);const m={code:e=>{let{children:n,className:t}=e;return t?a.createElement(r.Z,{className:t},n):a.createElement("code",null,n)}};function p(e){let{data:n,children:t}=e;const s=n.mdx.frontmatter;return a.createElement(o.Z,null,a.createElement("h1",null,s.title),a.createElement("div",{className:"tags-index"},s.tags&&s.tags.length>0&&s.tags.map((e=>a.createElement(u.rU,{to:"/tags/"+e+"/",itemProp:"url"},a.createElement("button",null,e))))),a.createElement(l.Zo,{components:m},t))}function i(e){return a.createElement(p,e,a.createElement(c,e))}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-content-posts-2019-wyam-theme-md-efe126cdd43de4e667a7.js.map