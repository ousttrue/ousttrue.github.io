{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2021-winter-ablog-md-02cb3eb16454438afe2d.js","mappings":"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","sources":["webpack:///./content/posts/2021/winter/ablog.md","webpack:///./src/templates/post-template.js","webpack:///./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\",\n    code: \"code\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"ABlog にシステムを変更\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://getnikola.com/\"\n  }, \"nikola\"), \" は使いこなせなくて短命に終わってしまった。\\n\", React.createElement(_components.a, {\n    href: \"https://pydoit.org/\"\n  }, \"doit\"), \" は面白いと思うのだが。\"), \"\\n\", React.createElement(_components.p, null, \"ということで、 \", React.createElement(_components.code, null, \"sphinx\"), \" プラグインの \", React.createElement(_components.a, {\n    href: \"https://ablog.readthedocs.io/en/latest/\"\n  }, \"ABlog\"), \" です。\"), \"\\n\", React.createElement(_components.h2, null, \"はまり1: Sphinx のキャッシュ\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"python -m sphinx content build\"), \" にデバッガをアタッチして試行錯誤するのだけど、\\nキャッシュされて処理されなかった。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"python -m sphinx content build -E -v\"), \" とする。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"-E: 全処理(キャッシュを使わない)\"), \"\\n\", React.createElement(_components.li, null, \"-v: 詳細メッセージ\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"はまり2: ablog が timezone の有無で日付の比較に失敗する\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"can't compare offset-naive and offset-aware datetimes\\n\")), \"\\n\", React.createElement(_components.p, null, \"これは、既存記事の \", React.createElement(_components.code, null, \"frontmatter\"), \" の日付に \", React.createElement(_components.code, null, \"timezone\"), \" が付いていると\\n日付の比較に失敗する。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"# site-packages/ablog/blog.py:382\\nself.date = date = info[\\\"date\\\"].replace(tzinfo=None)\\n\")), \"\\n\", React.createElement(_components.p, null, \"と対処した。\"), \"\\n\", React.createElement(_components.h2, null, \"はまり3: myst-parser の toml frontmatter 対応\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"myst-parser\"), \" が \", React.createElement(_components.code, null, \"---\"), \" による \", React.createElement(_components.code, null, \"yaml\"), \" 形式の \", React.createElement(_components.code, null, \"frontmatter\"), \" にしか対応していない様子。\\n\", React.createElement(_components.a, {\n    href: \"https://gohugo.io/content-management/front-matter/\"\n  }, \"hugo の frontmatter\"), \" にある \", React.createElement(_components.code, null, \"toml\"), \" 様式に対応するべく改造したい。\"), \"\\n\", React.createElement(_components.h3, null, \"切り出し\"), \"\\n\", React.createElement(_components.p, null, \"どこで処理しているのか探索が難航した。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"site-packages/mdit_py_plugins/front_matter/index.py\"), \"\\nで処理している。\"), \"\\n\", React.createElement(_components.h3, null, \"Parse\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"site-packages/myst_parser/docutils_renderer.py\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"render_front_matter\"), \" で切り出した文字列を \", React.createElement(_components.code, null, \"yaml\"), \" でパースしている。\\n\", React.createElement(_components.code, null, \"except\"), \" 節で \", React.createElement(_components.code, null, \"toml\"), \" にリトライさせたら動いた。\"), \"\\n\", React.createElement(_components.h2, null, \"モンキーパッチ\"), \"\\n\", React.createElement(_components.p, null, \"とりあえず \", React.createElement(_components.code, null, \"conf.py\"), \" にて直接修正する。\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/ousttrue/ousttrue.github.io/blob/ablog/content/patch.py\"), \"\\n\", React.createElement(_components.p, null, \"後で PR 送ったりできるかな。\"), \"\\n\", React.createElement(_components.h2, null, \"ABlog は何をしているのか\"), \"\\n\", React.createElement(_components.h3, null, \"toctree無しのpost記事\"), \"\\n\", React.createElement(_components.p, null, \"特定の条件で、記事をブログ記事と見做して \", React.createElement(_components.code, null, \"toctree\"), \" 無しで辿れるようにする。\\n記事は、日付やタグでグループ化してくれる。\"), \"\\n\", React.createElement(_components.p, null, \"https://ablog.readthedocs.io/en/latest/manual/posting-and-listing/#posting-with-page-front-matter\"), \"\\n\", React.createElement(_components.p, null, \"パス指定。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"blog_post_pattern = \\\"posts/**/*.md\\\"\\n\")), \"\\n\", React.createElement(_components.p, null, \"条件。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"# .venv/lib/python3.9/site-packages/ablog/post.py\\n        if \\\"blogpost\\\" not in metadata and self.env.docname not in self.config.matched_blog_posts:\\n            return None\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"frontmatter\"), \" 等から最低限、日付の情報がとれないとトップページから辿る方法が無い状態になる。\"), \"\\n\", React.createElement(_components.p, null, \"あと \", React.createElement(_components.code, null, \"sphinx\"), \" なのでトップレベルの表題が本文側に必要かも。\\n\", React.createElement(_components.code, null, \"frontmatter\"), \" の \", React.createElement(_components.code, null, \"title\"), \" を反映できると便利そう。\"), \"\\n\", React.createElement(_components.h3, null, \"event: 'doctree-read'\"), \"\\n\", React.createElement(_components.p, null, \"doctree から \", React.createElement(_components.code, null, \"PostNode\"), \" を集める。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"alog/post#process_posts(app, doctree)\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"def process_posts(app, doctree):\\n    post_nodes = list(doctree.traverse(PostNode))\\n    if not post_nodes:\\n        # PostNode が必要\\n        return\\n\\n    # 省略\\n\\n    postinfo = {\\n        \\\"docname\\\": docname,\\n        \\\"section\\\": section_name,\\n        \\\"order\\\": order,\\n        \\\"date\\\": date,\\n        \\\"update\\\": max(update_dates + [date]),\\n        \\\"title\\\": title,\\n        \\\"excerpt\\\": excerpt,\\n        \\\"tags\\\": node[\\\"tags\\\"],\\n        \\\"author\\\": node[\\\"author\\\"],\\n        \\\"category\\\": node[\\\"category\\\"],\\n        \\\"location\\\": node[\\\"location\\\"],\\n        \\\"language\\\": node[\\\"language\\\"],\\n        \\\"redirect\\\": node[\\\"redirect\\\"],\\n        \\\"nocomments\\\": node[\\\"nocomments\\\"],\\n        \\\"image\\\": node[\\\"image\\\"],\\n        \\\"exclude\\\": node[\\\"exclude\\\"],\\n        \\\"doctree\\\": section_copy,\\n    }\\n\\n    if docname not in env.ablog_posts:\\n        env.ablog_posts[docname] = []\\n    env.ablog_posts[docname].append(postinfo)\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"class CheckFrontMatter(SphinxTransform):\\n    def apply():\\n        pass\\n\\ndef setup(app):\\n    app.add_transform(CheckFrontMatter)    \\n\")), \"\\n\", React.createElement(_components.h3, null, \"追加のページ生成\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"ablog/templates\"), \" に格納されている。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"# -- ABlog Sidebars -------------------------------------------------------\\n\\n# There are seven sidebars you can include in your HTML output.\\n# postcard.html provides information regarding the current post.\\n# recentposts.html lists most recent five posts. Others provide\\n# a link to a archive pages generated for each tag, category, and year.\\n# In addition, there are authors.html, languages.html, and locations.html\\n# sidebars that link to author and location archive pages.\\nhtml_sidebars = {\\n    '**': [\\n        'about.html',\\n        'postcard.html',\\n        'navigation.html',\\n        'recentposts.html',\\n        'tagcloud.html',\\n        'categories.html',\\n        'archives.html',\\n        'searchbox.html',\\n    ],\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"これらに対して追加のページ生成を行っている。\\n\", React.createElement(_components.code, null, \"genindex.html\"), \" などのように。\"), \"\\n\", React.createElement(_components.h2, null, \"ToDo\"), \"\\n\", React.createElement(_components.h3, null, \"✅ タグが変\"), \"\\n\", React.createElement(_components.p, null, \"toml 由来の tag の処理に失敗している。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"[\\\"python\\\", \\\"ssg\\\", \\\"sphinx\\\"]\")), \"\\n\", React.createElement(_components.p, null, \"が、\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"[\\\"python\\\"\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"\\\"ssg\\\"\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"\\\"sphinx\\\"]\")), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"になっちゃってる。\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/sunpy/ablog/pull/119\"), \"\\n\", React.createElement(_components.p, null, \"送ってみた。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"v0.10.22\"), \" で修正。👍\"), \"\\n\", React.createElement(_components.h3, null, \"✅ 日付のフォーマット\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"conf.py\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"post_date_format = r'%Y/%m/%d'\\npost_date_format_short = r'%Y/%m'\\n\")), \"\\n\", React.createElement(_components.h3, null, \"✅ 記事のURL\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://zenn.dev/attakei/articles/sphinx-make-dirhtml\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"✅ 記事タイトルは最初の見出しではなく、frontmatter の title にしたい\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"MystParser\"), \" を改造した。\\nわりと Sphinx わかってきた。\\n\", React.createElement(_components.code, null, \"python\"), \" でデバッガがアタッチできるとなんでもできる(慣れ)。\"), \"\\n\", React.createElement(_components.h3, null, \"[ ] tagの表記振れ\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"c++\"), \" と \", React.createElement(_components.code, null, \"C++\"), \"、\", React.createElement(_components.code, null, \"c#\"), \" と \", React.createElement(_components.code, null, \"csharp\"), \" などをたばねる。\"), \"\\n\", React.createElement(_components.h2, null, \"参考\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://water2litter.net/pisco/doc/ablog.html\"\n  }, \"Sphinxでブログをしてみよう\")), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2021/winter/ablog.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nfunction PostTempalte({data, children}) {\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, null, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","a","code","h2","ul","li","pre","h3","_provideComponents","components","React","href","className","wrapper","MDXLayout","PostTempalte","_ref","data","children","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}