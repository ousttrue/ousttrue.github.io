"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5787],{1386:function(n,e,t){t.r(e),t.d(e,{default:function(){return u}});var s=t(1151),o=t(7294);function i(n){const e=Object.assign({p:"p",span:"span"},(0,s.ah)(),n.components);return o.createElement(o.Fragment,null,o.createElement(e.p,null,"sphinx も入れてみる\nOctopress のサブディレクトリに Sphinx を入れた。\n今回のディレクトリ配置"),"\n",o.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">work\n  + octopress\n    + Rakefile\n    + _deploy\n  + sphinx\n    + Makefile\n    + source\n      + conf.py\n    + build\n  + sphihnx-to-github\n    + setup.py\n    + sphinxtogithub\n      + __init__.py\n\noctopressをメインにサブディレクトリにsphinxを導入してみる。\noctopressの外のディレクトリで、\n$ mkdir sphinx\n$ cd sphinx\n$ sphinx-quickstart\n\nとした。 Makefileに\noctopress: html\n    rm -rf ../octopress/_deploy/sphinx\n    cp -rp build/html ../octopress/_deploy/sphinx\n\nと追記。 さらにoctopress/Rakefileを改造。\n{% codeblock lang:ruby %} multitask :push do puts “## Deploying branch\nto Github Pages “ (Dir[“#{deploy_dir}/*“]).each { |f| case f when\n%r|.*/sphinx\\$| # donothing puts “skip #{f}” else rm_rf(f) end } {%\nendcodeblock %}\nとしてsphinxディレクトリをpush前にクリアしないようにした。\nこれでoctopressと共存できた。\n次はsphinxの見た目の問題。\noctopressと共存するので.nojekyllは使えないのでsphinx-to-githubを使う。\n$ pip install -e git+git://github.com/michaeljones/sphinx-to-github.git#egg=sphinx-to-github\n\nエラー\nerror import name setup\n\nとかそんな感じのエラー(うろ覚え)。\nいったんローカルにcloneして調べてみる。\n$ git clone https://github.com/michaeljones/sphinx-to-github.git\n$ cd sphinx-to-github\n$ sudo python setup.py install\n\nしばらく調べた結果、\npython3でモジュールimportの仕様が変わったのが原因と理解。直した。\n$ cd sphinx-to-github/sphinxtogithub\n$ mv sphinxtogithub.py __init__.py\n$ cd ..\n$ sudo python setup.py install\n\nsphinx/source/conf.pyに\nextensions = [\'sphinxtogithub\']\n\nと書いて\n$ Make octopress</code></pre></div>'}}),"\n",o.createElement(e.p,null,"でできあがり。"))}var p=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,s.ah)(),n.components);return e?o.createElement(e,n,o.createElement(i,n)):i(n)},l=t(8678),c=t(1883),r=t(8838);const a={code:n=>{let{children:e,className:t}=n;return t?o.createElement(r.Z,{className:t},e):o.createElement("code",null,e)}};function h(n){let{data:e,children:t}=n;const i=e.mdx.frontmatter;return o.createElement(l.Z,null,o.createElement("h1",null,i.title),o.createElement("div",{className:"tags-index"},i.tags&&i.tags.length>0&&i.tags.map((n=>o.createElement(c.rU,{to:"/tags/"+n+"/",itemProp:"url"},o.createElement("button",null,n))))),o.createElement(s.Zo,{components:a},t))}function u(n){return o.createElement(h,n,o.createElement(p,n))}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2013-02-28-sphinx-md-3ceea9cf68a7ac9a7644.js.map