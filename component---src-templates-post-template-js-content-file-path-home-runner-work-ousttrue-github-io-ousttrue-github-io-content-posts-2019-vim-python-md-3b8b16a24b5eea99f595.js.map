{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2019-vim-python-md-3b8b16a24b5eea99f595.js","mappings":"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","sources":["webpack:///./content/posts/2019/vim_python.md","webpack:///./src/templates/post-template.js","webpack:///./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"phthon2は使わないのでスルーで。\"), \"\\n\", React.createElement(_components.h2, null, \"vim組み込み\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"import vim\\n\")), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.code, null, \"PLUGIN_ROOT/python3\"), \" パス\"), \"\\n\", React.createElement(_components.p, null, \"モジュールとして自動で \", React.createElement(_components.code, null, \"import\"), \" されるぽい。\\nリロードは？\\n開発不便なのでは。\"), \"\\n\", React.createElement(_components.h3, null, \"py3file コマンド\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"so%\"), \" などを経由してリロードできる。\"), \"\\n\", React.createElement(_components.h3, null, \"py3 コマンド\"), \"\\n\", React.createElement(_components.p, null, \"インポート済みの関数呼び出しなど短い処理にとどめた方がよいと思う。\"), \"\\n\", React.createElement(_components.h2, null, \"リモートプラグイン\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"nvim\"), \" の機能で \", React.createElement(_components.code, null, \"msgpack-rpc\"), \" を通した別プロセスでの実行。\"), \"\\n\", React.createElement(_components.p, null, \"vim8 への移植版。 https://github.com/roxma/nvim-yarp\"), \"\\n\", React.createElement(_components.h3, null, React.createElement(_components.code, null, \"PLUGIN_ROOT/rplugin/python3\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"import neovim # msgpack-rpc で vim と通信する\\n\\n\\n@neovim.plugin\\nclass RemotePlugin:\\n\\n    def __init__(self, nvim):\\n        self.nvim = nvim\\n\\n    @neovim.command('HogeCommand') # vimのコマンドとして実行可能になる\\n    def hogee(self):\\n        pass\\n\")), \"\\n\", React.createElement(_components.h2, null, \"比べてみると\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"vim\"), \" もしくは \", React.createElement(_components.code, null, \"neovim\"), \" とやり取りする部分は、単体実行ができないような。\\nなるほど。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"GUIやVIM\\n+--------+     これを単体で開発する\\n|vim     |     +--------------+\\n|もしくは|---->|使うモジュール|\\n|neovim  |     +--------------+\\n|をimport|\\n+--------+\\n\")), \"\\n\", React.createElement(_components.h2, null, \"リモートプラグイン(GUI)\"), \"\\n\", React.createElement(_components.p, null, \"これは、\", React.createElement(_components.code, null, \"msgpack-rpc\"), \" を使うのだけど \", React.createElement(_components.code, null, \"GUI\"), \" から \", React.createElement(_components.code, null, \"nvim\"), \" を特定の作法で起動して \", React.createElement(_components.code, null, \"GUIイベントを受け取る\"), \" というものでちょっと違う。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2019/vim_python.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nfunction PostTempalte({data, children}) {\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, null, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h2","pre","code","h3","_provideComponents","components","React","className","wrapper","MDXLayout","PostTempalte","_ref","data","children","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}