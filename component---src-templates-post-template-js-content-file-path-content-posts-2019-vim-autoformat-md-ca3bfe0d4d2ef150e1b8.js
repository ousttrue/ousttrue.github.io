"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[822],{2080:function(e,n,t){t.r(n),t.d(n,{default:function(){return i}});var a=t(1151),l=t(7294);function s(e){const n=Object.assign({p:"p",code:"code",h2:"h2",span:"span"},(0,a.ah)(),e.components);return l.createElement(l.Fragment,null,l.createElement(n.p,null,"当初 ",l.createElement(n.code,null,"python")," 向けに ",l.createElement(n.code,null,"mindriot101/vim-yapf")," を使っていたが、\n全部まとめて ",l.createElement(n.code,null,"hiel92/vim-autoformat")," で設定してみる。"),"\n",l.createElement(n.p,null,"https://github.com/Chiel92/vim-autoformat"),"\n",l.createElement(n.p,null,"プラグインを設定したら特に個別に設定することなく、\nシステムにインストール済みの、"),"\n",l.createElement(n.p,null,l.createElement(n.code,null,"yapf"),", ",l.createElement(n.code,null,"clang-format")," が有効になった？"),"\n",l.createElement(n.p,null,"便利。"),"\n",l.createElement(n.h2,null,"Tomlのフォーマットがよろしくなかったり"),"\n",l.createElement(n.p,null,"dein.tomlのindentが悪くなってしまった😑"),"\n",l.createElement(n.p,null,"自動実行は、時期尚早。\n大丈夫そうなやつから拡張子指定した方がよさそう。"),"\n",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="vim"><pre class="language-vim"><code class="language-vim"><span class="token builtin">autocmd</span> BufWrite <span class="token operator">*</span><span class="token operator">.</span><span class="token keyword">py</span> <span class="token punctuation">:</span>Autoformat</code></pre></div>'}}),"\n",l.createElement(n.h2,null,"dのフォーマッターとか"),"\n",l.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="vim"><pre class="language-vim"><code class="language-vim"><span class="token keyword">let</span> g<span class="token punctuation">:</span>formatdef_my_custom_d <span class="token operator">=</span> <span class="token string">\'"dub run -q dfmt -- -i"\'</span>\n<span class="token keyword">let</span> g<span class="token punctuation">:</span>formatters_d <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'my_custom_d\'</span><span class="token punctuation">]</span></code></pre></div>'}}))}var c=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?l.createElement(n,e,l.createElement(s,e)):s(e)},r=t(8678),o=t(4160),p=t(8736);const m={code:e=>{let{children:n,className:t}=e;return t?l.createElement(p.Z,{className:t},n):l.createElement("code",null,n)}};function u(e){let{data:n,children:t}=e;const s=n.mdx.frontmatter;return l.createElement(r.Z,null,l.createElement("h1",null,s.title),l.createElement("div",{className:"tags-index"},s.tags&&s.tags.length>0&&s.tags.map((e=>l.createElement(o.rU,{to:"/tags/"+e+"/",itemProp:"url"},l.createElement("button",null,e))))),l.createElement(a.Zo,{components:m},t))}function i(e){return l.createElement(u,e,l.createElement(c,e))}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-content-posts-2019-vim-autoformat-md-ca3bfe0d4d2ef150e1b8.js.map