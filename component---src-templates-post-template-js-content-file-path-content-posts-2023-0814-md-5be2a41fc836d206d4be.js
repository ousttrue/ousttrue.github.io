"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7709],{3590:function(e,n,t){t.r(n),t.d(n,{default:function(){return i}});var l=t(1151),c=t(7294);function r(e){const n=Object.assign({p:"p",code:"code",span:"span"},(0,l.ah)(),e.components);return c.createElement(c.Fragment,null,c.createElement(n.p,null,"Windows の ",c.createElement(n.code,null,"conpty")," を使うことで、クロスプラットフォームな ",c.createElement(n.code,null,"tui")," 環境は整ってきた様子。\n要するに ",c.createElement(n.code,null,"curses")," への依存を除去して、 ",c.createElement(n.code,null,"POSIX API")," への依存を ",c.createElement(n.code,null,"Win32 API")," と付け変えできるようにすれば、\n",c.createElement(n.code,null,"Posix")," と ",c.createElement(n.code,null,"Windows")," 共用のコードにできる。\n",c.createElement(n.code,null,"go")," や ",c.createElement(n.code,null,"rust")," 界隈の ",c.createElement(n.code,null,"tui")," アプリ neovim、wezterm なんかで既に達成されている。"),"\n",c.createElement(n.p,null,c.createElement(n.code,null,"c++")," でも今風の ",c.createElement(n.code,null,"TUI")," を作りたいと思っていたのだが、",c.createElement(n.code,null,"libvterm")," と ",c.createElement(n.code,null,"FTXUI")," を併用することでできそうだ。\n",c.createElement(n.code,null,"libvterm"),", ",c.createElement(n.code,null,"FTXUI")," 共に ",c.createElement(n.code,null,"Windows")," ",c.createElement(n.code,null,"Unix")," 両方で動くコンパクトなライブラリだ。\n",c.createElement(n.code,null,"libvterm")," で vt100 escape sequence を ScreenGrid に翻訳して、 ",c.createElement(n.code,null,"FTXUI")," の Screen に描画する。\n",c.createElement(n.code,null,"FTXUI")," は ",c.createElement(n.code,null,"ScreenGrid")," の描画に加えて、",c.createElement(n.code,null,"Posix")," と ",c.createElement(n.code,null,"Windows")," の 入力、resize, mouse をさばくこともできる。"),"\n",c.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">          resize\nrawinput  stdin\n----+   +---+---\x3e+---+---\x3e+-------+\nTERM|--\x3e|APP|    |pty|    |process|\n    |   |   |    +---+&lt;---+-------+\n    |   |   |       ^|stdout\n    |   |   |       ||VT100 escape sequence\n    |   |   |       |v\n    |   |   |    +--------+\n    |&lt;--|   |&lt;---|libvterm|\n----+   +---+---\x3e+--------+\nvt100        resize\ndraw</code></pre></div>'}}),"\n",c.createElement(n.p,null,"上の図では、TERM が curses/terminfo で、process が posix であることが多い。\nresize 周りは、",c.createElement(n.code,null,"ioctrl.h")," 。\nvt100 parser と TERM への出力が分離されていない難解な塊だったりする。"),"\n",c.createElement(n.p,null,c.createElement(n.code,null,"process")," まわりは ",c.createElement(n.code,null,"conpty")," を使って手作りできる。"),"\n",c.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="c++"><pre class="language-c++"><code class="language-c++">struct Pty\n{\n  HPC Console; // conpty\n  HANDLE ReadPipe; // child process stdout reader\n  HANDLE WritePipe; // child process stdin writer\n};</code></pre></div>'}}),"\n",c.createElement(n.p,null,"https://github.com/microsoft/terminal/tree/main/samples/ConPTY/EchoCon"),"\n",c.createElement(n.p,null,"ReadPipe を thread で ReadFile し、\n別の thread で、hThread を WaitForSingleObject して終了を監視するのがよさそうだ。"),"\n",c.createElement(n.p,null,"あとは、 sixel とか試してみたのだが conpty は sixel を通してくれないみたい。\n",c.createElement(n.code,null,"chafa")," が ",c.createElement(n.code,null,"Windows")," でも動いたので、こっちで遊んでみる予定。"),"\n",c.createElement(n.p,null,c.createElement(n.code,null,"uim-fep")," から ",c.createElement(n.code,null,"posix")," をはがして、 ",c.createElement(n.code,null,"Windows")," でも動くようにできないか画策中..."))}var a=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,l.ah)(),e.components);return n?c.createElement(n,e,c.createElement(r,e)):r(e)},o=t(8678),s=t(4160),u=t(8736);const m={code:e=>{let{children:n,className:t}=e;return t?c.createElement(u.Z,{className:t},n):c.createElement("code",null,n)}};function d(e){let{data:n,children:t}=e;const r=n.mdx.frontmatter;return c.createElement(o.Z,null,c.createElement("h1",null,r.title),c.createElement("div",{className:"tags-index"},r.tags&&r.tags.length>0&&r.tags.map((e=>c.createElement(s.rU,{to:"/tags/"+e+"/",itemProp:"url"},c.createElement("button",null,e))))),c.createElement(l.Zo,{components:m},t))}function i(e){return c.createElement(d,e,c.createElement(a,e))}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-content-posts-2023-0814-md-5be2a41fc836d206d4be.js.map