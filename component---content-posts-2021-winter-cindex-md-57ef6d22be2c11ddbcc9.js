"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8228],{1590:function(e,l,n){n.r(l);var t=n(1151),u=n(7294);function c(e){const l=Object.assign({h1:"h1",ul:"ul",li:"li",p:"p",code:"code",a:"a",h2:"h2"},(0,t.ah)(),e.components);return u.createElement(u.Fragment,null,u.createElement(l.h1,null,"今まで試作したものたち"),"\n",u.createElement(l.ul,null,"\n",u.createElement(l.li,null,"\n",u.createElement(l.p,null,"(2019)https://github.com/ousttrue/pycpptool"),"\n",u.createElement(l.ul,null,"\n",u.createElement(l.li,null,u.createElement(l.code,null,"pip install clang")),"\n",u.createElement(l.li,null,u.createElement(l.a,{href:"/posts/2019/python_clang/"},"pythonモジュール clang で C++ ヘッダーを変換する")),"\n",u.createElement(l.li,null,"途中でデバッグが困難になった"),"\n"),"\n"),"\n",u.createElement(l.li,null,"\n",u.createElement(l.p,null,"(2020)https://github.com/ousttrue/regenerator"),"\n",u.createElement(l.ul,null,"\n",u.createElement(l.li,null,u.createElement(l.code,null,"D")," + ",u.createElement(l.code,null,"lua")," (text template によるコード生成部)"),"\n"),"\n"),"\n",u.createElement(l.li,null,"\n",u.createElement(l.p,null,"(2020)https://github.com/ousttrue/ClangCaster"),"\n",u.createElement(l.ul,null,"\n",u.createElement(l.li,null,u.createElement(l.code,null,"C#")),"\n",u.createElement(l.li,null,u.createElement(l.a,{href:"https://qiita.com/ousttrue/items/d878ec97483cb8834793"},"libclangでWindowsKitsをDllImportするライブラリを作った(ている)")),"\n"),"\n"),"\n",u.createElement(l.li,null,"\n",u.createElement(l.p,null,"(2020)https://github.com/ousttrue/clalua"),"\n",u.createElement(l.ul,null,"\n",u.createElement(l.li,null,u.createElement(l.code,null,"C++")," + ",u.createElement(l.code,null,"lua")," (text template によるコード生成部)"),"\n"),"\n"),"\n",u.createElement(l.li,null,"\n",u.createElement(l.p,null,"(2021)https://github.com/ousttrue/frame_factory/tree/master/clanggen"),"\n",u.createElement(l.ul,null,"\n",u.createElement(l.li,null,u.createElement(l.code,null,"rust")),"\n"),"\n"),"\n",u.createElement(l.li,null,"\n",u.createElement(l.p,null,"(2021)https://github.com/ousttrue/luajitffi/tree/master/clang/cdef"),"\n",u.createElement(l.ul,null,"\n",u.createElement(l.li,null,u.createElement(l.a,{href:"/posts/2019/luajitffi/"},"libclang で luajit 向けの FFI を生成する")),"\n",u.createElement(l.li,null,"imgui による cindex のパース結果のビューワーを作ってみたが動作が遅かった。","\n",u.createElement(l.ul,null,"\n",u.createElement(l.li,null,"https://github.com/ousttrue/luajitffi/tree/master/clangffi"),"\n",u.createElement(l.li,null,"https://github.com/ousttrue/limgui/blob/master/samples/clang_viewer.lua"),"\n"),"\n"),"\n"),"\n"),"\n"),"\n",u.createElement(l.p,null,"ものによるのだけど、 ",u.createElement(l.code,null,"d3d11.h")," をパースしたりすると\n要素が数万とかになる巨大なツリーを構築するので練習に良い。\n同じものを作りすぎである。"),"\n",u.createElement(l.h2,null,"imgui.h"),"\n",u.createElement(l.p,null,"限定的にだが ",u.createElement(l.code,null,"c++")," の機能を使っているので、言語によっては気持ちよくラップできない。"),"\n",u.createElement(l.ul,null,"\n",u.createElement(l.li,null,"関数オーバーロードとデフォルト引き数","\n",u.createElement(l.ul,null,"\n",u.createElement(l.li,null,"mangling は libclang で対処できる"),"\n",u.createElement(l.li,null,u.createElement(l.code,null,"rust")," などオーバーロードが無いものは厳しい。"),"\n",u.createElement(l.li,null,"あってもディスパッチするコードを生成するのが厳しい。"),"\n",u.createElement(l.li,null,u.createElement(l.code,null,"const ImVec2 &pos = ImVec2(0, 0)")," みたいなのが厳しい。"),"\n"),"\n"),"\n",u.createElement(l.li,null,"フォント設定とかのメンバー関数","\n",u.createElement(l.ul,null,"\n",u.createElement(l.li,null,u.createElement(l.code,null,"C")," の呼び出し関数を用意する必要があるかもしれない。"),"\n"),"\n"),"\n"),"\n",u.createElement(l.h2,null,"d3d11.h"),"\n",u.createElement(l.p,null,"COM の仮想関数テーブルを工夫すれば行ける。\nGC言語だとデストラクターの呼びだしが制御できないかも。"),"\n",u.createElement(l.h1,null,"cython"),"\n",u.createElement(l.p,null,"最近、 ",u.createElement(l.code,null,"C")," のライブラリーを ",u.createElement(l.code,null,"cython")," でラップするのに着目している。"),"\n",u.createElement(l.ul,null,"\n",u.createElement(l.li,null,"https://github.com/seung-lab/DracoPy"),"\n",u.createElement(l.li,null,"https://github.com/pyimgui/pyimgui"),"\n"),"\n",u.createElement(l.p,null,"練習に作ってみた。"),"\n",u.createElement(l.ul,null,"\n",u.createElement(l.li,null,"https://github.com/ousttrue/pymikktspace"),"\n"),"\n",u.createElement(l.h1,null,"予定"),"\n",u.createElement(l.p,null,u.createElement(l.code,null,"cindex")," で ",u.createElement(l.code,null,"cython")," 部分の自動生成をやってみる。\n更に、 ",u.createElement(l.code,null,".pyi")," を同時に生成すればコード補完の効くネイティブモジュールが作れるのでは。\nあと、 ",u.createElement(l.code,null,"cindex")," の使いかたについてのメモをまとめたい。"),"\n",u.createElement(l.ul,null,"\n",u.createElement(l.li,null,"https://github.com/ousttrue/cywrap"),"\n"),"\n",u.createElement(l.h2,null,"imgui"),"\n",u.createElement(l.ul,null,"\n",u.createElement(l.li,null,"https://github.com/ousttrue/cydeer"),"\n"),"\n",u.createElement(l.h2,null,"サブモジュールだけ cython にする"),"\n",u.createElement(l.ul,null,"\n",u.createElement(l.li,null,"https://github.com/AshleySetter/HowToPackageCythonAndCppFuncs"),"\n",u.createElement(l.li,null,"https://www.py4u.net/discuss/175142"),"\n"))}l.default=function(e){void 0===e&&(e={});const{wrapper:l}=Object.assign({},(0,t.ah)(),e.components);return l?u.createElement(l,e,u.createElement(c,e)):c(e)}},1151:function(e,l,n){n.d(l,{ah:function(){return c}});var t=n(7294);const u=t.createContext({});function c(e){const l=t.useContext(u);return t.useMemo((()=>"function"==typeof e?e(l):{...l,...e}),[l,e])}}}]);
//# sourceMappingURL=component---content-posts-2021-winter-cindex-md-57ef6d22be2c11ddbcc9.js.map