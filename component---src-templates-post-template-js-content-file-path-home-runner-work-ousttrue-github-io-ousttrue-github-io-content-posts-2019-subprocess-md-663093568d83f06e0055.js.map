{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2019-subprocess-md-663093568d83f06e0055.js","mappings":"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","sources":["webpack:///./content/posts/2019/subprocess.md","webpack:///./src/templates/post-template.js","webpack:///./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    h2: \"h2\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    h4: \"h4\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"https://docs.python.org/3/library/subprocess.html\"), \"\\n\", React.createElement(_components.p, null, \"こういうやつ\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"\\n      +-------+\\n      | child |\\n      |process|\\n      +-------+\\n   stdin ^ | stdout\\n         | v\\n      +-------+\\n      |process|\\n      +-------+\\n-> stdin     stdout ->\\n\")), \"\\n\", React.createElement(_components.h2, null, \"subprocess モジュール\"), \"\\n\", React.createElement(_components.p, null, \"subprocess は、\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"os.system\\nos.spawn*\\n\")), \"\\n\", React.createElement(_components.p, null, \"の置き換え。\"), \"\\n\", React.createElement(_components.h3, null, \"subprocess.run\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://docs.python.org/3/library/subprocess.html#subprocess.run\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"中でPopenして結果を集めて \", React.createElement(_components.code, null, \"CompletedProcess\"), \" として返す。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"# 抜粋\\ndef run(...):\\n    with Popen(*popenargs, **kwargs) as process:\\n        try:\\n            stdout, stderr = process.communicate(input, timeout=timeout) \\n\\n    return CompletedProcess(process.args, retcode, stdout, stderr)\\n\")), \"\\n\", React.createElement(_components.p, null, \"実行して結果の文字列を得て終わりというタイプの用途向け。\\n旧 \", React.createElement(_components.code, null, \"os.system\"), \" の代替になると思う。\"), \"\\n\", React.createElement(_components.h3, null, \"subprocess.Popen\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://docs.python.org/3/library/subprocess.html#popen-constructor\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"標準入力、標準出力を制御するのはこっち。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"subprocess.Popen(['cmd_name', 'arg0', 'arg1'...],\\n    stdin=subprocess.PIPE,\\n    stdout=subprocess.PIPE,\\n    stderr=subprocess.PIPE,\\n    cwd=None, env=None,\\n    text=False\\n    )\\n\")), \"\\n\", React.createElement(_components.p, null, \"Readループが一個しかない時はこれでいいんでないかな。\"), \"\\n\", React.createElement(_components.h2, null, \"今回のテーマ\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"\\n      +-------+\\n      | child |\\n      |process|\\n      +-------+\\n   stdin ^ | @stdout\\n         | v\\n      +-------+\\n      |process| ここでロギングして通信内容を確認したい\\n      +-------+\\n  @stdin ^ | stdout\\n         | v\\n      +-------+\\n      | parent|\\n      |process|\\n      +-------+\\n\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"@のところを常時読み込みにしたい(2つのReadループ)\"), \"\\n\", React.createElement(_components.li, null, \"@stdin をReadするとブロックして固まるのでつらい\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"つらいのだ。\"), \"\\n\", React.createElement(_components.h2, null, \"asyncio\"), \"\\n\", React.createElement(_components.p, null, \"２つのReaderを非同期で制御しようということで 。\"), \"\\n\", React.createElement(_components.h3, null, \"asyncio の基本\"), \"\\n\", React.createElement(_components.p, null, \"loop を露出させる。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  })), \"\\n\", React.createElement(_components.p, null, \"loop は暗黙。\\n基本的にこちらでよいと思う。\\n必要に応じて取得する。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  })), \"\\n\", React.createElement(_components.h4, null, \"asyncio.create_task で新しいスタックを開始する\"), \"\\n\", React.createElement(_components.p, null, \"新しいスタックなのでエラーハンドリングが無いことに注意。\"), \"\\n\", React.createElement(_components.h4, null, \"StreamReaderProtocol と StreamWriterProtocol\"), \"\\n\", React.createElement(_components.p, null, \"コールバックと Stream を結び付ける。\"), \"\\n\", React.createElement(_components.h3, null, \"Windowsの標準入出力はIOCPできない\"), \"\\n\", React.createElement(_components.p, null, \"IOCPできるハンドルは決まっていて、\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"通常のファイル\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"Socket\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"NamedPipe\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"https://tim.mcnamara.nz/post/176613307022/iocp-and-stdio\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h4, null, \"python3.7 で \", React.createElement(_components.code, null, \"asyncio.create_subprocess\"), \" ができた\"), \"\\n\", React.createElement(_components.p, null, \"child process 側はこれで助かった。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://docs.python.org/3/library/asyncio-subprocess.html\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"なんか、たまに \", React.createElement(_components.code, null, \"socket.exception\"), \" が出るので、\\ntcpのlocalhost接続にリダイレクトするとか謎の技使っているのかもしれぬ。\"), \"\\n\", React.createElement(_components.p, null, \"おかげで、子プロセスの標準入出力から \", React.createElement(_components.code, null, \"StreamReader\"), \" と \", React.createElement(_components.code, null, \"StreamWriter\"), \"\\nを楽に取得できる。\"), \"\\n\", React.createElement(_components.h4, null, \"重い NativeCoroutine は、ThreadPoolExecutorに逃がす\"), \"\\n\", React.createElement(_components.p, null, \"標準入力側\"), \"\\n\", React.createElement(_components.p, null, \"GILを回避して、別スレッドで待てるのではないか。\"), \"\\n\", React.createElement(_components.p, null, \"どんな処理が、NativeCoroutine なのか。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2019/subprocess.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nfunction PostTempalte({data, children}) {\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, null, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","pre","code","h2","h3","ul","li","h4","_provideComponents","components","React","className","wrapper","MDXLayout","PostTempalte","_ref","data","children","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}