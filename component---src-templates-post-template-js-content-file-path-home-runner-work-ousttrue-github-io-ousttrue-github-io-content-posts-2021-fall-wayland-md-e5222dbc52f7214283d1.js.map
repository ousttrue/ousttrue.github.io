{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2021-fall-wayland-md-e5222dbc52f7214283d1.js","mappings":"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","sources":["webpack:///./content/posts/2021/fall/wayland.md","webpack:///./src/templates/post-template.js","webpack:///./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    ul: \"ul\",\n    li: \"li\",\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"https://gitlab.freedesktop.org/wayland\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/wayland-project/wayland\"\n  }, \"Core Wayland protocol and libraries (mirror)\")), \"\\n\", React.createElement(_components.li, null, \"https://github.com/NilsBrause/waylandpp\"), \"\\n\", React.createElement(_components.li, null, \"https://github.com/danvd/wlroots-eglstreams\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"https://wayland-book.com/\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"(2021) \", React.createElement(_components.a, {\n    href: \"https://gihyo.jp/admin/serial/01/ubuntu-recipe/0666\"\n  }, \"Ubuntu Weekly Recipe\\n第666回　Waypipeを用いてWayland環境で「X転送 over SSH」っぽいことをしてみる\")), \"\\n\", React.createElement(_components.p, null, \"(2017) \", React.createElement(_components.a, {\n    href: \"https://qiita.com/maueki/items/34323b2762e3c3342c51\"\n  }, \"作って学ぶWayland\")), \"\\n\", React.createElement(_components.p, null, \"(2016) \", React.createElement(_components.a, {\n    href: \"https://qiita.com/naohikowatanabe/items/06a8b988b89b4b1ec899\"\n  }, \"Wayland の Client と Compositor の概念を理解する\")), \"\\n\", React.createElement(_components.h2, null, \"Waypipe\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://gitlab.freedesktop.org/mstoeckl/waypipe\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"(2019) \", React.createElement(_components.a, {\n    href: \"https://mstoeckl.com/notes/gsoc/blog.html\"\n  }, \"Network transparency with Wayland\")), \"\\n\", React.createElement(_components.h2, null, \"OpenGL ES\"), \"\\n\", React.createElement(_components.p, null, \"サンプルを試したら WSLg でも動作した。\\npyOpenGL からできる方法が分かるとよいのだが。\"), \"\\n\", React.createElement(_components.h2, null, \"python\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/flacjacket/pywayland\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"参考\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://wayland-book.com/introduction.html\"), \"\\n\", React.createElement(_components.li, null, \"https://aznote.jakou.com/prog/wayland/index.html\"), \"\\n\", React.createElement(_components.li, null, \"(2017)\", React.createElement(_components.a, {\n    href: \"https://qiita.com/maueki/items/34323b2762e3c3342c51\"\n  }, \"作って学ぶWayland\")), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2021/fall/wayland.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nfunction PostTempalte({data, children}) {\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, null, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","ul","li","p","a","h2","_provideComponents","components","React","href","wrapper","MDXLayout","PostTempalte","_ref","data","children","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}