{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2021-fall-msys-2-md-eb011d9deb2b6cf1d9b1.js","mappings":"8JAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,EAAG,IACHC,GAAI,KACJC,KAAM,OACNC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBZ,EAAYG,GAAI,KAAM,UAAW,KAAMS,EAAAA,cAAoBZ,EAAYI,EAAG,KAAMQ,EAAAA,cAAoBZ,EAAYK,EAAG,CACtLQ,KAAM,8DACL,eAAgB,KAAMD,EAAAA,cAAoBZ,EAAYM,GAAI,KAAM,QAAS,KAAMM,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,SAAU,KAAMQ,EAAAA,cAAoBZ,EAAYO,KAAM,CAC/KO,wBAAyB,CACvBC,OAAQ,mKAER,KAAMH,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,MAAO,KAAMQ,EAAAA,cAAoBZ,EAAYO,KAAM,CACpGO,wBAAyB,CACvBC,OAAQ,gJAER,KAAMH,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,KAAMI,EAAAA,cAAoBZ,EAAYS,GAAI,KAAM,cAAe,KAAMG,EAAAA,cAAoBZ,EAAYS,GAAI,KAAM,iBAAkB,MAAO,KAAMG,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,OAAQ,KAAMQ,EAAAA,cAAoBZ,EAAYO,KAAM,CAC7RO,wBAAyB,CACvBC,OAAQ,mJAER,KAAMH,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,KAAMI,EAAAA,cAAoBZ,EAAYS,GAAI,KAAM,aAAc,MAAO,KAAMG,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,YAAa,KAAMQ,EAAAA,cAAoBZ,EAAYO,KAAM,CAC/NO,wBAAyB,CACvBC,OAAQ,sJAER,KAAMH,EAAAA,cAAoBZ,EAAYG,GAAI,KAAM,cAAe,KAAMS,EAAAA,cAAoBZ,EAAYO,KAAM,CAC7GO,wBAAyB,CACvBC,OAAQ,mIAGd,CAKA,MAJA,SAAoBhB,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOiB,QAASC,GAAahB,OAAOC,OAAO,CAAC,GAAGQ,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOM,EAAYL,EAAAA,cAAoBK,EAAWlB,EAAOa,EAAAA,cAAoBd,EAAmBC,IAAUD,EAAkBC,EAC9H,E,oBClCA,MAAMY,EAAa,CACjBO,KAAMC,IAA2B,IAA1B,SAACC,EAAQ,UAAEC,GAAUF,EAC1B,OAAOE,EAAYT,EAAAA,cAAoBU,EAAAA,EAAsB,CAC3DD,UAAWA,GACVD,GAAYR,EAAAA,cAAoB,OAAQ,KAAMQ,EAAS,GAG9D,SAASG,EAAYC,GAAmB,IAAlB,KAACC,EAAI,SAAEL,GAASI,EACpC,OAAOZ,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoB,KAAM,KAAMa,EAAKC,IAAIC,YAAYC,OAAQhB,EAAAA,cAAoBiB,EAAAA,GAAa,CAC7IlB,WAAYA,GACXS,GACL,CACe,SAASU,EAAiB/B,GACvC,OAAOa,EAAAA,cAAoBW,EAAcxB,EAAOa,EAAAA,cAAoBmB,EAAqBhC,GAC3F,C","sources":["webpack:///./content/posts/2021/fall/msys2.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    a: \"a\",\n    h3: \"h3\",\n    span: \"span\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"pacman\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://qiita.com/MoriokaReimen/items/dbe1448ce6c0f80a6ac1\"\n  }, \"Pacmanの使い方\")), \"\\n\", React.createElement(_components.h3, null, \"Sync\"), \"\\n\", React.createElement(_components.p, null, \"イントール\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">$ pacman -S vim git tmux python3</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"更新\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">$ pacman -Syu</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"-y refresh\"), \"\\n\", React.createElement(_components.li, null, \"-u sysupgrade\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"サーチ\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">$ pacman -Ss pip</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"-s search\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"インストール済み\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">$ pacman -Qs python</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"/etc/fstab\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\"></code></pre></div>\"\n    }\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2021/fall/msys2.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","a","h3","span","ul","li","_provideComponents","components","React","href","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}