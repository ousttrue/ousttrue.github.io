{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2013-05-27-gentoo-bluetooth-md-f3760cbf0c724f45380a.js","mappings":"+JAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,KAAM,SACLC,EAAAA,EAAAA,MAAsBN,EAAMO,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,+CAAgD,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,yCAA0C,KAAMI,EAAAA,cAAoBP,EAAYI,KAAM,CAC7QI,wBAAyB,CACvBC,OAAQ,m9DAGd,CAKA,MAJA,SAAoBV,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOW,QAASC,GAAaV,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOK,EAAYJ,EAAAA,cAAoBI,EAAWZ,EAAOQ,EAAAA,cAAoBT,EAAmBC,IAAUD,EAAkBC,EAC9H,E,oBCXA,MAAMO,EAAa,CACjBM,KAAMC,IAA2B,IAA1B,SAACC,EAAQ,UAAEC,GAAUF,EAC1B,OAAOE,EAAYR,EAAAA,cAAoBS,EAAAA,EAAsB,CAC3DD,UAAWA,GACVD,GAAYP,EAAAA,cAAoB,OAAQ,KAAMO,EAAS,GAG9D,SAASG,EAAYC,GAAmB,IAAlB,KAACC,EAAI,SAAEL,GAASI,EACpC,OAAOX,EAAAA,cAAoBa,EAAAA,EAAQ,KAAMb,EAAAA,cAAoB,KAAM,KAAMY,EAAKE,IAAIC,YAAYC,OAAQhB,EAAAA,cAAoBiB,EAAAA,GAAa,CACrIlB,WAAYA,GACXQ,GACL,CACe,SAASW,EAAiB1B,GACvC,OAAOQ,EAAAA,cAAoBU,EAAclB,EAAOQ,EAAAA,cAAoBmB,EAAqB3B,GAC3F,C","sources":["webpack:///./content/posts/2013/05/27/gentoo-bluetooth.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Gentoo で Bluetooth\\nGentoo で bluetooth を使う。\"), \"\\n\", React.createElement(_components.p, null, \"http://wiki.gentoo.org/wiki/Bluetooth\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">dmesg\\n[22782.149236] Bluetooth: Core ver 2.16\\n[22782.149244] NET: Registered protocol family 31\\n[22782.149245] Bluetooth: HCI device and connection manager initialized\\n[22782.149252] Bluetooth: HCI socket layer initialized\\n[22782.149254] Bluetooth: L2CAP socket layer initialized\\n[22782.149255] Bluetooth: SCO socket layer initialized\\n[22782.151467] Bluetooth: BNEP (Ethernet Emulation) ver 1.3\\n[22782.151469] Bluetooth: BNEP filters: protocol multicast\\n[22782.151475] Bluetooth: BNEP socket layer initialized\\n\\nkernel\\nHCI USB driver (btusb) を有効にする。\\nUSE設定とツール\\n/etc/portage/make.conf\\nUSEにbluetoothを追加\\n\\n/etc/portage/package.use\\nnet-wireless/bluez test-programs # simple-agentに必要\\n\\nインストール\\n# emerge --ask --changed-use --deep @world\\n# /etc/init.d/bluetooth start\\n# rc-update add bluetooth default\\n\\nPairing\\n$ hcitools scan\\n        XX:XX:XX:XX:XX:XX       M-NV1BR Series\\n\\n$ simple-agent XX:XX:XX:XX:XX:XX\\nTraceback (most recent call last):\\n  File \\\"/usr/bin/simple-agent\\\", line 115, in &lt;module>\\n    path = manager.FindAdapter(args[0])\\n  File \\\"/usr/lib64/python2.7/site-packages/dbus/proxies.py\\\", line 70, in __call__\\n    return self._proxy_method(*args, **keywords)\\n  File \\\"/usr/lib64/python2.7/site-packages/dbus/proxies.py\\\", line 145, in __call__\\n    **keywords)\\n  File \\\"/usr/lib64/python2.7/site-packages/dbus/connection.py\\\", line 651, in call_blocking\\n    message, timeout)\\ndbus.exceptions.DBusException: org.bluez.Error.NoSuchAdapter: No such adapter\\n\\nここで頓挫。どうも埒が明かぬ。\\nと思ったらsimple-agentの引数が足りなかった。\\nbluetooth deviceのコネクトボタンを押す\\n\\n$ simple-agent hci0 XX:XX:XX:XX:XX:XX\\n$ bluez-test-device trusted XX:XX:XX:XX:XX:XX yes\\n$ bluez-test-input connect XX:XX:XX:XX:XX:XX\\n\\nとりあえず接続はできた。\\n複数接続登録タイプのキーボードとマウスを買ってきたのでそれを有効にしたいのだが、\\n今のところ切り替え時に毎回コネクトボタンを押さされている。\\n一瞬だけコネクトボタンなしでの切り替えができた時期があったのでなんか方法があるはずなのだが。\\nutility\\n# emerge -av blueman</code></pre></div>\"\n    }\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2013/05/27/gentoo-bluetooth.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","span","_provideComponents","components","React","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","Layout","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}