"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2192],{6717:function(e,n,t){t.r(n);var l=t(1151),a=t(7294);function r(e){const n=Object.assign({p:"p",h2:"h2",code:"code",pre:"pre"},(0,l.ah)(),e.components);return a.createElement(a.Fragment,null,a.createElement(n.p,null,"https://docs.github.com/ja/github/working-with-github-pages/about-github-pages"),"\n",a.createElement(n.h2,null,"プロジェクトサイト (gh-pages)"),"\n",a.createElement(n.p,null,"各プロジェクトに作れる。"),"\n",a.createElement(n.p,null,"URLは、",a.createElement(n.code,null,"http(s)://<user>.github.io/<repository>")),"\n",a.createElement(n.p,null,"各リポジトリの、 ",a.createElement(n.code,null,"gh-pages")," ブランチでサイトをホストする。\nhugo で運用するなら、\n",a.createElement(n.code,null,"master")," ブランチに hugo project を commit する。\nhugo のビルド結果を ",a.createElement(n.code,null,"gh-pages")," に commit する。\n手間を省くために ",a.createElement(n.code,null,"master")," への push をトリガーに ",a.createElement(n.code,null,"travis-CI")," 等で自動でビルドして、結果を gh-pages に push する。"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-yml"},"# .travis.yml\ndeploy:\n  provider: pages\n  skip_cleanup: true\n  github_token: $GITHUB_TOKEN  # Set in the settings page of your repository, as a secure variable\n  keep_history: true\n  target_branch: gh-pages # default\n  local-dir: public\n  on:\n    branch: master # master branch が push されたのをトリガーに public フォルダを gh-pages ブランチに pushする\n")),"\n",a.createElement(n.h2,null,"ユーザーサイト"),"\n",a.createElement(n.p,null,"ユーザー毎にひとつだけ作ることのできるリポジトリ。"),"\n",a.createElement(n.p,null,"URLは、",a.createElement(n.code,null,"http(s)://<user>.github.io")," 。"),"\n",a.createElement(n.p,null,"これ、",a.createElement(n.code,null,"gh-pages")," と URL が重複するときがありそうな。"),"\n",a.createElement(n.p,null,"repository ",a.createElement(n.code,null,"${user_name}.github.io")," の場合 ",a.createElement(n.code,null,"master")," が ",a.createElement(n.code,null,"gh-pages")," の役割を果たす。\nこの名前にすると、サイトをホストする用の特殊なリポジトリになる様子。"),"\n",a.createElement(n.p,null,"hugo で運用するなら ",a.createElement(n.code,null,"gh-pages")," ブランチ運用と逆になる。"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-yml"},"deploy:\n  provider: pages\n  skip_cleanup: true\n  github_token: $GITHUB_TOKEN  # Set in the settings page of your repository, as a secure variable\n  keep_history: true\n  target_branch: master\n  local_dir: public\n  on:\n    branch: hugo # hugo branch が push されたのをトリガーに public フォルダを master ブランチにpushする\n")),"\n",a.createElement(n.p,null,"default branch を hugo の方に変えてから、git clone すると作業しやすい。"))}n.default=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,l.ah)(),e.components);return n?a.createElement(n,e,a.createElement(r,e)):r(e)}},1151:function(e,n,t){t.d(n,{ah:function(){return r}});var l=t(7294);const a=l.createContext({});function r(e){const n=l.useContext(a);return l.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}}}]);
//# sourceMappingURL=component---content-posts-2020-hugo-github-pages-md-68fd1d6c254569d75176.js.map