"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7837],{3109:function(e,n,t){t.r(n),t.d(n,{default:function(){return i}});var a=t(1151),c=t(7294);function l(e){const n=Object.assign({p:"p",span:"span",a:"a"},(0,a.ah)(),e.components);return c.createElement(c.Fragment,null,c.createElement(n.p,null,"FPS カメラに Oculus 回転を仕込んだ\nIrrlicht の CSceneNodeAnimatorCameraFPS に Oculus を合体した。\nIrrlicht のカメラが思ったよりいろいろやっていたのと\nビュー行列を直接扱っていないのに手間取ったがとりあえず当初の目的を達成。\nどうにも都合が悪かったので本体をちょっと拡張した。"),"\n",c.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="cpp"><pre class="language-cpp"><code class="language-cpp"><span class="token keyword">class</span> <span class="token class-name">CSCameraSceneNode</span>\n<span class="token punctuation">{</span>\n    core<span class="token double-colon punctuation">::</span>marix4 LeftAffector<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",c.createElement(n.p,null,"レンダリング直前にビュー行列に乗算する行列をセットできるのだが\nこれが右からの乗算なので、\n左からの乗算を追加してこれに Oculus の回転を表す行列をセットできるようにした。\nこれを踏まえて CSceneNodeAnimatorCameraFPS をコピーして CSceneNodeAnimatorCameraOculusOnFPS を作った。\nこいつは FPS カメラのマウスの上下移動を無視するのと libOVR からの回転値取得と左行列を追加する機能をもつ。\nコードはこれなのだけど\n",c.createElement(n.a,{href:"https://github.com/ousttrue/onibi/blob/master/irrlicht/examples/HMDIrrlicht/CSceneNodeAnimatorCameraOculusOnFPS.cpp"},"https://github.com/ousttrue/onibi/blob/master/irrlicht/examples/HMDIrrlicht/CSceneNodeAnimatorCameraOculusOnFPS.cpp"),"\n日記に全部書くには長いし、サンプルが改造版の Irrlicht に依存するので紹介し辛い感じだなぁ。\nオフスクリーンレンダリングとシェーダーをサポートした今風の glut みたいなフレームワークがあるとよいのだけど。\n今度は mmd 表示周りに着手して表示途中までできた。\nしかし Irrlicht 界のスケーリングの基準がよくわからず。cm のような気もするがなんかもっと適当な値のような気もする。\n画像右側の身切れているのは Irrlicht サイズの Dwarf である。\nmmd 界はミクさんの身長 20 を基準とする統一単位なのだが何かしら基準を決めねばならぬ。\n物理の挙動の都合上スケーリングしたくないなーという事情がありどうしたものか。"),"\n",c.createElement(n.p,null,"スカイボックスも Oculus で見ると見違えるものがあるなー。\nテクスチャとライティングを解決する。 あと pmx。"))}var r=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,a.ah)(),e.components);return n?c.createElement(n,e,c.createElement(l,e)):l(e)},s=t(8678),o=t(1883),u=t(8838);const m={code:e=>{let{children:n,className:t}=e;return t?c.createElement(u.Z,{className:t},n):c.createElement("code",null,n)}};function p(e){let{data:n,children:t}=e;const l=n.mdx.frontmatter;return c.createElement(s.Z,null,c.createElement("h1",null,l.title),c.createElement("div",{className:"tags-index"},l.tags&&l.tags.length>0&&l.tags.map((e=>c.createElement(o.rU,{to:"/tags/"+e+"/",itemProp:"url"},c.createElement("button",null,e))))),c.createElement(a.Zo,{components:m},t))}function i(e){return c.createElement(p,e,c.createElement(r,e))}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2013-06-26-oculus-fps-md-9effc6599624e9cc9ac7.js.map