"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8872],{4213:function(n,s,a){a.r(s),a.d(s,{default:function(){return r}});var t=a(1151),p=a(7294);function e(n){const s=Object.assign({p:"p",span:"span"},(0,t.ah)(),n.components);return p.createElement(p.Fragment,null,p.createElement(s.p,null,"glBufferDataに数字のlistを渡す場合以下のように渡せるがどうゆう実装なのか。"),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="py"><pre class="language-py"><code class="language-py">vertices<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token comment"># x, y, z</span>\n\nglBufferData<span class="token punctuation">(</span>GL_ARRAY_BUFFER<span class="token punctuation">,</span> \n        <span class="token builtin">len</span><span class="token punctuation">(</span>vertices<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">,</span>  <span class="token comment"># byte size</span>\n        <span class="token punctuation">(</span>ctypes<span class="token punctuation">.</span>c_float<span class="token operator">*</span><span class="token builtin">len</span><span class="token punctuation">(</span>vertices<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token operator">*</span>vertices<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment"># 謎のctypes</span>\n        GL_STATIC_DRAW<span class="token punctuation">)</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"非常に読み辛かったがVisualStudioでステップ実行して動きを追ってみた。"),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="py"><pre class="language-py"><code class="language-py"><span class="token comment"># site-packages/OpenGL/GL/VERSION/GL_1_5.py</span>\n<span class="token decorator annotation punctuation">@_lazy</span><span class="token punctuation">(</span> glBufferData <span class="token punctuation">)</span>\n<span class="token keyword">def</span> <span class="token function">glBufferData</span><span class="token punctuation">(</span> baseOperation<span class="token punctuation">,</span> target<span class="token punctuation">,</span> size<span class="token punctuation">,</span> data<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> usage<span class="token operator">=</span><span class="token boolean">None</span> <span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token triple-quoted-string string">"""Copy given data into the currently bound vertex-buffer-data object\n\n    target -- the symbolic constant indicating which buffer type is intended\n    size -- if provided, the count-in-bytes of the array\n    data -- data-pointer to be used, may be None to initialize without\n        copying over a data-set\n    usage -- hint to the driver as to how to set up access to the buffer\n\n    Note: parameter "size" can be omitted, which makes the signature\n        glBufferData( target, data, usage )\n    instead of:\n        glBufferData( target, size, data, usage )\n    """</span>\n    <span class="token keyword">if</span> usage <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>\n        usage <span class="token operator">=</span> data\n        data <span class="token operator">=</span> size\n        size <span class="token operator">=</span> <span class="token boolean">None</span>\n    data <span class="token operator">=</span> ArrayDatatype<span class="token punctuation">.</span>asArray<span class="token punctuation">(</span> data <span class="token punctuation">)</span> <span class="token comment"># &lt;- ここでPythonの型をOpenGLに渡せるように変換</span>\n    <span class="token keyword">if</span> size <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>\n        size <span class="token operator">=</span> ArrayDatatype<span class="token punctuation">.</span>arrayByteCount<span class="token punctuation">(</span> data <span class="token punctuation">)</span>\n    <span class="token keyword">return</span> baseOperation<span class="token punctuation">(</span> target<span class="token punctuation">,</span> size<span class="token punctuation">,</span> data<span class="token punctuation">,</span> usage <span class="token punctuation">)</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"難関。デバッガ無しでは追えませんでした。"),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="py"><pre class="language-py"><code class="language-py"><span class="token comment"># site-packages/OpenGL/arrays/arraydatatype.py</span>\n<span class="token keyword">class</span> <span class="token class-name">HandlerRegistry</span><span class="token punctuation">(</span> <span class="token builtin">dict</span> <span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span> self<span class="token punctuation">,</span> plugin_match <span class="token punctuation">)</span><span class="token punctuation">:</span>\n        self<span class="token punctuation">.</span><span class="token keyword">match</span> <span class="token operator">=</span> plugin_match\n\n    <span class="token keyword">def</span> <span class="token function">__call__</span><span class="token punctuation">(</span> self<span class="token punctuation">,</span> value <span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># 4</span>\n        <span class="token triple-quoted-string string">"""Lookup of handler for given value"""</span>\n        <span class="token keyword">try</span><span class="token punctuation">:</span>\n            typ <span class="token operator">=</span> value<span class="token punctuation">.</span>__class__\n        <span class="token keyword">except</span> AttributeError <span class="token keyword">as</span> err<span class="token punctuation">:</span>\n            typ <span class="token operator">=</span> <span class="token builtin">type</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>\n        handler <span class="token operator">=</span> self<span class="token punctuation">.</span>get<span class="token punctuation">(</span> typ <span class="token punctuation">)</span>\n        <span class="token keyword">if</span> <span class="token keyword">not</span> handler<span class="token punctuation">:</span>\n            <span class="token keyword">if</span> <span class="token builtin">hasattr</span><span class="token punctuation">(</span> typ<span class="token punctuation">,</span> <span class="token string">\'__mro__\'</span> <span class="token punctuation">)</span><span class="token punctuation">:</span>\n                <span class="token keyword">for</span> base <span class="token keyword">in</span> typ<span class="token punctuation">.</span>__mro__<span class="token punctuation">:</span>\n                    handler <span class="token operator">=</span> self<span class="token punctuation">.</span>get<span class="token punctuation">(</span> base <span class="token punctuation">)</span>\n                    <span class="token keyword">if</span> <span class="token keyword">not</span> handler<span class="token punctuation">:</span>\n                        handler <span class="token operator">=</span> self<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span> base <span class="token punctuation">)</span> <span class="token comment"># 5</span>\n                        <span class="token keyword">if</span> handler<span class="token punctuation">:</span>\n                            handler <span class="token operator">=</span> handler<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token punctuation">)</span>\n                            <span class="token keyword">if</span> handler<span class="token punctuation">:</span>\n                                handler <span class="token operator">=</span> handler<span class="token punctuation">(</span><span class="token punctuation">)</span>\n                    <span class="token keyword">if</span> handler<span class="token punctuation">:</span>\n                        self<span class="token punctuation">[</span> typ <span class="token punctuation">]</span> <span class="token operator">=</span> handler\n                        <span class="token keyword">if</span> <span class="token builtin">hasattr</span><span class="token punctuation">(</span> handler<span class="token punctuation">,</span> <span class="token string">\'registerEquivalent\'</span> <span class="token punctuation">)</span><span class="token punctuation">:</span>\n                            handler<span class="token punctuation">.</span>registerEquivalent<span class="token punctuation">(</span> typ<span class="token punctuation">,</span> base <span class="token punctuation">)</span>\n                        <span class="token keyword">return</span> handler\n            <span class="token keyword">raise</span> TypeError<span class="token punctuation">(</span>\n                    <span class="token triple-quoted-string string">"""No array-type handler for type %s.%s (value: %s) registered"""</span><span class="token operator">%</span><span class="token punctuation">(</span>\n                        typ<span class="token punctuation">.</span>__module__<span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token punctuation">.</span>__name__<span class="token punctuation">,</span> <span class="token builtin">repr</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">50</span><span class="token punctuation">]</span>\n                        <span class="token punctuation">)</span>\n                    <span class="token punctuation">)</span>\n            <span class="token keyword">return</span> handler\n\nGLOBAL_REGISTRY <span class="token operator">=</span> HandlerRegistry<span class="token punctuation">(</span>\n    plugins<span class="token punctuation">.</span>FormatHandler<span class="token punctuation">.</span><span class="token keyword">match</span> <span class="token comment"># 6 -> plugins.pyに進む</span>\n    <span class="token punctuation">)</span> <span class="token comment"># 3</span>\n<span class="token keyword">class</span> <span class="token class-name">ArrayDatatype</span><span class="token punctuation">(</span> <span class="token builtin">object</span> <span class="token punctuation">)</span><span class="token punctuation">:</span>\n    getHandler <span class="token operator">=</span> GLOBAL_REGISTRY<span class="token punctuation">.</span>__call__ <span class="token comment"># 2</span>\n    <span class="token keyword">def</span> <span class="token function">asArray</span><span class="token punctuation">(</span> cls<span class="token punctuation">,</span> value<span class="token punctuation">,</span> typeCode<span class="token operator">=</span><span class="token boolean">None</span> <span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># 0 &lt;- glBufferDataから呼ばれる</span>\n        <span class="token triple-quoted-string string">"""Given a value, convert to preferred array representation"""</span>\n        <span class="token keyword">return</span> cls<span class="token punctuation">.</span>getHandler<span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span>asArray<span class="token punctuation">(</span> value<span class="token punctuation">,</span> typeCode <span class="token keyword">or</span> cls<span class="token punctuation">.</span>typeConstant <span class="token punctuation">)</span> <span class="token comment"># 1</span>\n    asArray <span class="token operator">=</span> <span class="token builtin">classmethod</span><span class="token punctuation">(</span> logs<span class="token punctuation">.</span>logOnFail<span class="token punctuation">(</span> asArray<span class="token punctuation">,</span> _log <span class="token punctuation">)</span> <span class="token punctuation">)</span></code></pre></div>'}}),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="py"><pre class="language-py"><code class="language-py"><span class="token comment"># site-packages/OpenGL/plugins.py</span>\n<span class="token keyword">class</span> <span class="token class-name">Plugin</span><span class="token punctuation">(</span> <span class="token builtin">object</span> <span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token triple-quoted-string string">"""Base class for plugins to be loaded"""</span>\n    loaded <span class="token operator">=</span> <span class="token boolean">False</span>\n    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span> self<span class="token punctuation">,</span> name<span class="token punctuation">,</span> import_path<span class="token punctuation">,</span> check <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token operator">**</span>named <span class="token punctuation">)</span><span class="token punctuation">:</span>\n        <span class="token triple-quoted-string string">"""Register the plug-in"""</span>\n        self<span class="token punctuation">.</span>registry<span class="token punctuation">.</span>append<span class="token punctuation">(</span> self <span class="token punctuation">)</span> <span class="token comment"># &lt;-  FormatHandlerのインスタンスが登録される</span>\n\n<span class="token keyword">class</span> <span class="token class-name">FormatHandler</span><span class="token punctuation">(</span> Plugin <span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token triple-quoted-string string">"""Data-type storage-format handler"""</span>\n    registry <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment"># &lt;- OpenGL/__init__.pyで初期化される</span>\n    <span class="token decorator annotation punctuation">@classmethod</span>\n    <span class="token keyword">def</span> <span class="token function">match</span><span class="token punctuation">(</span> cls<span class="token punctuation">,</span> value <span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># 7</span>\n        <span class="token triple-quoted-string string">"""Lookup appropriate handler based on value (a type)"""</span>\n        key <span class="token operator">=</span> <span class="token string">\'%s.%s\'</span><span class="token operator">%</span><span class="token punctuation">(</span> value<span class="token punctuation">.</span>__module__<span class="token punctuation">,</span> value<span class="token punctuation">.</span>__name__ <span class="token punctuation">)</span>\n        <span class="token keyword">for</span> plugin <span class="token keyword">in</span> cls<span class="token punctuation">.</span>registry<span class="token punctuation">:</span> <span class="token comment"># &lt;- ここにハンドラのリストがある</span>\n            <span class="token builtin">set</span> <span class="token operator">=</span> <span class="token builtin">getattr</span><span class="token punctuation">(</span> plugin<span class="token punctuation">,</span> <span class="token string">\'check\'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n            <span class="token keyword">if</span> <span class="token builtin">set</span> <span class="token keyword">and</span> key <span class="token keyword">in</span> <span class="token builtin">set</span><span class="token punctuation">:</span>\n                <span class="token keyword">return</span> plugin\n        <span class="token keyword">return</span> <span class="token boolean">None</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"これらがimport時にFormatHandlerとして登録される。"),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="py"><pre class="language-py"><code class="language-py"><span class="token comment"># site-packages/OpenGL/__init__.py</span>\nFormatHandler<span class="token punctuation">(</span> <span class="token string">\'none\'</span><span class="token punctuation">,</span> <span class="token string">\'OpenGL.arrays.nones.NoneHandler\'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span> _bi<span class="token operator">+</span><span class="token string">\'.NoneType\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>isOutput<span class="token operator">=</span><span class="token boolean">False</span> <span class="token punctuation">)</span>\n\n<span class="token keyword">if</span> sys<span class="token punctuation">.</span>version_info<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">:</span>\n    FormatHandler<span class="token punctuation">(</span> <span class="token string">\'str\'</span><span class="token punctuation">,</span> <span class="token string">\'OpenGL.arrays.strings.StringHandler\'</span><span class="token punctuation">,</span><span class="token punctuation">[</span>_bi<span class="token operator">+</span><span class="token string">\'.str\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> isOutput<span class="token operator">=</span><span class="token boolean">False</span> <span class="token punctuation">)</span>\n    FormatHandler<span class="token punctuation">(</span> <span class="token string">\'unicode\'</span><span class="token punctuation">,</span> <span class="token string">\'OpenGL.arrays.strings.UnicodeHandler\'</span><span class="token punctuation">,</span><span class="token punctuation">[</span>_bi<span class="token operator">+</span><span class="token string">\'.unicode\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> isOutput<span class="token operator">=</span><span class="token boolean">False</span> <span class="token punctuation">)</span>\n<span class="token keyword">else</span><span class="token punctuation">:</span>\n    FormatHandler<span class="token punctuation">(</span> <span class="token string">\'bytes\'</span><span class="token punctuation">,</span> <span class="token string">\'OpenGL.arrays.strings.StringHandler\'</span><span class="token punctuation">,</span><span class="token punctuation">[</span>_bi<span class="token operator">+</span><span class="token string">\'.bytes\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> isOutput<span class="token operator">=</span><span class="token boolean">False</span> <span class="token punctuation">)</span>\n    FormatHandler<span class="token punctuation">(</span> <span class="token string">\'str\'</span><span class="token punctuation">,</span> <span class="token string">\'OpenGL.arrays.strings.UnicodeHandler\'</span><span class="token punctuation">,</span><span class="token punctuation">[</span>_bi<span class="token operator">+</span><span class="token string">\'.str\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> isOutput<span class="token operator">=</span><span class="token boolean">False</span> <span class="token punctuation">)</span>\n    \nFormatHandler<span class="token punctuation">(</span> <span class="token string">\'list\'</span><span class="token punctuation">,</span> <span class="token string">\'OpenGL.arrays.lists.ListHandler\'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>\n    _bi<span class="token operator">+</span><span class="token string">\'.list\'</span><span class="token punctuation">,</span>\n    _bi<span class="token operator">+</span><span class="token string">\'.tuple\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">,</span> isOutput<span class="token operator">=</span><span class="token boolean">False</span> <span class="token punctuation">)</span>\nFormatHandler<span class="token punctuation">(</span> <span class="token string">\'numbers\'</span><span class="token punctuation">,</span> <span class="token string">\'OpenGL.arrays.numbers.NumberHandler\'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>\n    _bi<span class="token operator">+</span><span class="token string">\'.int\'</span><span class="token punctuation">,</span>\n    _bi<span class="token operator">+</span><span class="token string">\'.float\'</span><span class="token punctuation">,</span>\n    _bi<span class="token operator">+</span><span class="token string">\'.long\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">,</span> isOutput<span class="token operator">=</span><span class="token boolean">False</span> <span class="token punctuation">)</span>\nFormatHandler<span class="token punctuation">(</span>\n    <span class="token string">\'ctypesarrays\'</span><span class="token punctuation">,</span> <span class="token string">\'OpenGL.arrays.ctypesarrays.CtypesArrayHandler\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">[</span>\n        <span class="token string">\'_ctypes.ArrayType\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'_ctypes.PyCArrayType\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'_ctypes.Array\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'_ctypes.array.Array\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    isOutput<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span>\nFormatHandler<span class="token punctuation">(</span>\n    <span class="token string">\'ctypesparameter\'</span><span class="token punctuation">,</span>\n    <span class="token string">\'OpenGL.arrays.ctypesparameters.CtypesParameterHandler\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">[</span>\n        _bi<span class="token operator">+</span><span class="token string">\'.CArgObject\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'ctypes.c_uint\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'ctypes.c_int\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'ctypes.c_float\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'ctypes.c_double\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'ctypes.c_ulong\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'ctypes.c_long\'</span><span class="token punctuation">,</span>\n        <span class="token string">\'ctypes.c_longlong\'</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n    isOutput<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>\n<span class="token punctuation">)</span>\nFormatHandler<span class="token punctuation">(</span> <span class="token string">\'ctypespointer\'</span><span class="token punctuation">,</span> <span class="token string">\'OpenGL.arrays.ctypespointers.CtypesPointerHandler\'</span><span class="token punctuation">,</span><span class="token punctuation">[</span>\n    <span class="token string">\'ctypes.c_void_p\'</span><span class="token punctuation">,</span>\n    <span class="token string">\'_ctypes._Pointer\'</span><span class="token punctuation">,</span>\n    <span class="token string">\'ctypes.c_char_p\'</span><span class="token punctuation">,</span>\n    <span class="token string">\'_ctypes.pointer._Pointer\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">,</span>isOutput<span class="token operator">=</span><span class="token boolean">False</span> <span class="token punctuation">)</span>\nFormatHandler<span class="token punctuation">(</span> <span class="token string">\'numpy\'</span><span class="token punctuation">,</span> <span class="token string">\'OpenGL.arrays.numpymodule.NumpyHandler\'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>\n    <span class="token string">\'numpy.ndarray\'</span><span class="token punctuation">,</span>\n    <span class="token string">\'numpy.core.memmap.memmap\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">,</span>isOutput<span class="token operator">=</span><span class="token boolean">True</span> <span class="token punctuation">)</span>\nFormatHandler<span class="token punctuation">(</span> <span class="token string">\'buffer\'</span><span class="token punctuation">,</span> <span class="token string">\'OpenGL.arrays.buffers.BufferHandler\'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>\n    <span class="token string">\'OpenGL.arrays._buffers.Py_buffer\'</span><span class="token punctuation">,</span>\n    _bi<span class="token operator">+</span><span class="token string">\'.memoryview\'</span><span class="token punctuation">,</span>\n    _bi<span class="token operator">+</span><span class="token string">\'.bytearray\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">,</span>isOutput<span class="token operator">=</span><span class="token boolean">True</span> <span class="token punctuation">)</span>\nFormatHandler<span class="token punctuation">(</span> <span class="token string">\'vbo\'</span><span class="token punctuation">,</span> <span class="token string">\'OpenGL.arrays.vbo.VBOHandler\'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">\'OpenGL.arrays.vbo.VBO\'</span><span class="token punctuation">,</span><span class="token string">\'OpenGL_accelerate.vbo.VBO\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>isOutput<span class="token operator">=</span><span class="token boolean">False</span> <span class="token punctuation">)</span>\nFormatHandler<span class="token punctuation">(</span> <span class="token string">\'vbooffset\'</span><span class="token punctuation">,</span> <span class="token string">\'OpenGL.arrays.vbo.VBOOffsetHandler\'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">\'OpenGL.arrays.vbo.VBOOffset\'</span><span class="token punctuation">,</span><span class="token string">\'OpenGL_accelerate.vbo.VBOOffset\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>isOutput<span class="token operator">=</span><span class="token boolean">False</span> <span class="token punctuation">)</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"numpyとか定義されているね。なるほど。"),"\n",p.createElement(s.p,null,p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">(ctypes.c_float*len(vertices))(*vertices)</code>'}})," は ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">ctypes.c_float</code>'}})," にマッチして、",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">CtypesArrayHandler</code>'}})," によって処理される。\n一方、単なるPythonのlistであるverticesは、",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">OpenGL.arrays.lists.ListHandler</code>'}})," によって処理されて ",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">NotImplementedError</code>'}})," に落ちるのであった。"),"\n",p.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="py"><pre class="language-py"><code class="language-py"><span class="token keyword">class</span> <span class="token class-name">ListHandler</span><span class="token punctuation">(</span> formathandler<span class="token punctuation">.</span>FormatHandler <span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token decorator annotation punctuation">@classmethod</span>\n    <span class="token keyword">def</span> <span class="token function">asArray</span><span class="token punctuation">(</span> cls<span class="token punctuation">,</span> value<span class="token punctuation">,</span> typeCode<span class="token operator">=</span><span class="token boolean">None</span> <span class="token punctuation">)</span><span class="token punctuation">:</span>\n        <span class="token triple-quoted-string string">"""Convert given value to a ctypes array value of given typeCode\n        \n        This does a *lot* of work just to get the data into the correct\n        format.  It\'s not going to be anywhere near as fast as a numpy\n        or similar approach!\n        """</span>\n        <span class="token keyword">if</span> typeCode <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>\n            <span class="token keyword">raise</span> NotImplementedError<span class="token punctuation">(</span> <span class="token triple-quoted-string string">"""Haven\'t implemented type-inference for lists yet"""</span> <span class="token punctuation">)</span></code></pre></div>'}}),"\n",p.createElement(s.p,null,"確かにlistだと中身の型が決められんね。なるほど。"))}var o=function(n){void 0===n&&(n={});const{wrapper:s}=Object.assign({},(0,t.ah)(),n.components);return s?p.createElement(s,n,p.createElement(e,n)):e(n)},c=(a(8678),a(8838));const l={code:n=>{let{children:s,className:a}=n;return a?p.createElement(c.Z,{className:a},s):p.createElement("code",null,s)}};function u(n){let{data:s,children:a}=n;return p.createElement(p.Fragment,null,p.createElement("h1",null,s.mdx.frontmatter.title),p.createElement(t.Zo,{components:l},a))}function r(n){return p.createElement(u,n,p.createElement(o,n))}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2017-glbufferdata-md-ee9cba90099a26292109.js.map