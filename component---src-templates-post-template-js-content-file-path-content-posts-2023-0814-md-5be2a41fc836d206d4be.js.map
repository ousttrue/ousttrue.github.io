{"version":3,"file":"component---src-templates-post-template-js-content-file-path-content-posts-2023-0814-md-5be2a41fc836d206d4be.js","mappings":"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","sources":["webpack:///./content/posts/2023/0814.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Windows の \", React.createElement(_components.code, null, \"conpty\"), \" を使うことで、クロスプラットフォームな \", React.createElement(_components.code, null, \"tui\"), \" 環境は整ってきた様子。\\n要するに \", React.createElement(_components.code, null, \"curses\"), \" への依存を除去して、 \", React.createElement(_components.code, null, \"POSIX API\"), \" への依存を \", React.createElement(_components.code, null, \"Win32 API\"), \" と付け変えできるようにすれば、\\n\", React.createElement(_components.code, null, \"Posix\"), \" と \", React.createElement(_components.code, null, \"Windows\"), \" 共用のコードにできる。\\n\", React.createElement(_components.code, null, \"go\"), \" や \", React.createElement(_components.code, null, \"rust\"), \" 界隈の \", React.createElement(_components.code, null, \"tui\"), \" アプリ neovim、wezterm なんかで既に達成されている。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"c++\"), \" でも今風の \", React.createElement(_components.code, null, \"TUI\"), \" を作りたいと思っていたのだが、\", React.createElement(_components.code, null, \"libvterm\"), \" と \", React.createElement(_components.code, null, \"FTXUI\"), \" を併用することでできそうだ。\\n\", React.createElement(_components.code, null, \"libvterm\"), \", \", React.createElement(_components.code, null, \"FTXUI\"), \" 共に \", React.createElement(_components.code, null, \"Windows\"), \" \", React.createElement(_components.code, null, \"Unix\"), \" 両方で動くコンパクトなライブラリだ。\\n\", React.createElement(_components.code, null, \"libvterm\"), \" で vt100 escape sequence を ScreenGrid に翻訳して、 \", React.createElement(_components.code, null, \"FTXUI\"), \" の Screen に描画する。\\n\", React.createElement(_components.code, null, \"FTXUI\"), \" は \", React.createElement(_components.code, null, \"ScreenGrid\"), \" の描画に加えて、\", React.createElement(_components.code, null, \"Posix\"), \" と \", React.createElement(_components.code, null, \"Windows\"), \" の 入力、resize, mouse をさばくこともできる。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">          resize\\nrawinput  stdin\\n----+   +---+--->+---+--->+-------+\\nTERM|-->|APP|    |pty|    |process|\\n    |   |   |    +---+&lt;---+-------+\\n    |   |   |       ^|stdout\\n    |   |   |       ||VT100 escape sequence\\n    |   |   |       |v\\n    |   |   |    +--------+\\n    |&lt;--|   |&lt;---|libvterm|\\n----+   +---+--->+--------+\\nvt100        resize\\ndraw</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"上の図では、TERM が curses/terminfo で、process が posix であることが多い。\\nresize 周りは、\", React.createElement(_components.code, null, \"ioctrl.h\"), \" 。\\nvt100 parser と TERM への出力が分離されていない難解な塊だったりする。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"process\"), \" まわりは \", React.createElement(_components.code, null, \"conpty\"), \" を使って手作りできる。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c++\\\"><pre class=\\\"language-c++\\\"><code class=\\\"language-c++\\\">struct Pty\\n{\\n  HPC Console; // conpty\\n  HANDLE ReadPipe; // child process stdout reader\\n  HANDLE WritePipe; // child process stdin writer\\n};</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"https://github.com/microsoft/terminal/tree/main/samples/ConPTY/EchoCon\"), \"\\n\", React.createElement(_components.p, null, \"ReadPipe を thread で ReadFile し、\\n別の thread で、hThread を WaitForSingleObject して終了を監視するのがよさそうだ。\"), \"\\n\", React.createElement(_components.p, null, \"あとは、 sixel とか試してみたのだが conpty は sixel を通してくれないみたい。\\n\", React.createElement(_components.code, null, \"chafa\"), \" が \", React.createElement(_components.code, null, \"Windows\"), \" でも動いたので、こっちで遊んでみる予定。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"uim-fep\"), \" から \", React.createElement(_components.code, null, \"posix\"), \" をはがして、 \", React.createElement(_components.code, null, \"Windows\"), \" でも動くようにできないか画策中...\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2023/0814.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  const frontmatter = data.mdx.frontmatter;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"div\", {\n    className: \"tags-index\"\n  }, frontmatter.tags && frontmatter.tags.length > 0 && frontmatter.tags.map(tag => {\n    return React.createElement(Link, {\n      to: `/tags/${tag}/`,\n      itemProp: \"url\"\n    }, React.createElement(\"button\", null, tag));\n  })), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        tags\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","code","span","_provideComponents","components","React","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","frontmatter","mdx","Layout","title","tags","length","map","tag","Link","to","itemProp","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}