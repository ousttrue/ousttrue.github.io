{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2022-0115-pybullet-md-53463c697472b3e0330b.js","mappings":"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","sources":["webpack:///./content/posts/2022/0115-pybullet.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\",\n    span: \"span\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"ExampleBrowser を読んでいる\"), \"\\n\", React.createElement(_components.p, null, \"fork して改造しながら読んでいる。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/ousttrue/bullet3\"\n  }, \"https://github.com/ousttrue/bullet3\")), \"\\n\", React.createElement(_components.p, null, \"やっと構造がわかってきた。\\nコードはディレクトリに別れているのだけど、\\nCMake を整理しながら推進。\"), \"\\n\", React.createElement(_components.p, null, \"ざっくりとこんな感じか。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">rankdir=\\\"BT\\\"\\n\\nExampleBrowser -> SimpleOpenGL3App -> gwen -> \\\"Select DEMO\\\";\\n</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"で、この SimpleOpenGL3App を glfw に、gwen を imgui に置き換えてコードを単純化している。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">bulletphysic</code>\"\n    }\n  }), \" の マルチクライアント システム ぽい \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">SharedMemory</code>\"\n    }\n  }), \" を解読したい。\\n各 Demo は、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">CommonExampleInterface</code>\"\n    }\n  }), \" できれいに分離されている。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">SharedMemory</code>\"\n    }\n  }), \" と各クライアントの通信内容と \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">OpenGL</code>\"\n    }\n  }), \" の繋ぎの部分が知りたい。\"), \"\\n\", React.createElement(_components.p, null, \"この pybullet の下地の部分がシーン同期システムに使えないかと。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Unity</code>\"\n    }\n  }), \" とかだとノードに剛体をくっつけるのだけど、\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">bullet</code>\"\n    }\n  }), \" 的には、剛体に \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Mesh</code>\"\n    }\n  }), \" をつける考えになるような。\"), \"\\n\", React.createElement(_components.h2, null, \"20220118\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">各デモ</code>\"\n    }\n  }), \" と \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Physics</code>\"\n    }\n  }), \" と \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Renderer</code>\"\n    }\n  }), \" を分離できればよいのだが。\\nわりと規模が大きい。\"), \"\\n\", React.createElement(_components.h2, null, \"20220122\"), \"\\n\", React.createElement(_components.p, null, \"だいぶ読んだ。\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">GLInstancingRenderer</code>\"\n    }\n  }), \" がレンダラー本体。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">btIDebugDraw</code>\"\n    }\n  }), \" とは別に普通の Renderer が実装されていてこっちを解読したい。\\nbtIDebugDraw だと wireframe になるのかな。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2022/0115-pybullet.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  const frontmatter = data.mdx.frontmatter;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"div\", {\n    className: \"tags-index\"\n  }, frontmatter.tags && frontmatter.tags.length > 0 && frontmatter.tags.map(tag => {\n    return React.createElement(Link, {\n      to: `/tags/${tag}/`,\n      itemProp: \"url\"\n    }, React.createElement(\"button\", null, tag));\n  })), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        tags\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","a","span","h2","_provideComponents","components","React","href","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","frontmatter","mdx","Layout","title","tags","length","map","tag","Link","to","itemProp","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}