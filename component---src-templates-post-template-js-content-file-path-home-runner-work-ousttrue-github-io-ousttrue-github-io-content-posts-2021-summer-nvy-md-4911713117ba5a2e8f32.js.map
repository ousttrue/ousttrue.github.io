{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2021-summer-nvy-md-4911713117ba5a2e8f32.js","mappings":"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","sources":["webpack:///./content/posts/2021/summer/nvy.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    input: \"input\",\n    h1: \"h1\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"よさげなレポジトリを発見した。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/RMichelsen/Nvy\"\n  }, \"https://github.com/RMichelsen/Nvy\")), \"\\n\", React.createElement(_components.p, null, \"だいぶ前に作ろうとして頓挫した\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/ousttrue/nvim-dx\"\n  }, \"https://github.com/ousttrue/nvim-dx\")), \"\\n\", React.createElement(_components.p, null, \"の完成形。\\nどこがうまくいかなかったのか忘れてしまったが。\"), \"\\n\", React.createElement(_components.h2, null, \"改造\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/ousttrue/Nvy\"\n  }, \"https://github.com/ousttrue/Nvy\")), \"\\n\", React.createElement(_components.ul, {\n    className: \"contains-task-list\"\n  }, \"\\n\", React.createElement(_components.li, {\n    className: \"task-list-item\"\n  }, React.createElement(_components.input, {\n    type: \"checkbox\",\n    disabled: true\n  }), \" \", \"RenderTarget に対して Nvim をレンダリングする\"), \"\\n\", React.createElement(_components.li, {\n    className: \"task-list-item\"\n  }, React.createElement(_components.input, {\n    type: \"checkbox\",\n    checked: true,\n    disabled: true\n  }), \" \", \"nvim の IO を \", React.createElement(_components.a, {\n    href: \"https://think-async.com/Asio/#\"\n  }, \"https://think-async.com/Asio/#\"), \" にのせる\"), \"\\n\", React.createElement(_components.li, {\n    className: \"task-list-item\"\n  }, React.createElement(_components.input, {\n    type: \"checkbox\",\n    disabled: true\n  }), \" \", \"imgui と合体する\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"20210815\"), \"\\n\", React.createElement(_components.p, null, \"MsgPack-RPC のバックエンドに昔作った\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/ousttrue/msgpack-rpc-asio\"\n  }, \"https://github.com/ousttrue/msgpack-rpc-asio\")), \"\\n\", React.createElement(_components.p, null, \"におきかえる。\"), \"\\n\", React.createElement(_components.p, null, \"さらに、これのシリアライザーを自前の \", React.createElement(_components.a, {\n    href: \"https://github.com/ousttrue/msgpackpp\"\n  }, \"https://github.com/ousttrue/msgpackpp\"), \" におきかえる。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"CMake 化\"), \"\\n\", React.createElement(_components.li, null, \"RPC を \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">c++20</code>\"\n    }\n  }), \" 化 (co_await)\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"で、最初の nvim 初期化を\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c++\\\"><pre class=\\\"language-c++\\\"><code class=\\\"language-c++\\\">auto api_info = co_await rpc.request(&quot;nvim_get_api_info&quot;);\\nrpc.notity(&quot;nvim_set_var&quot;, &quot;nvy&quot;, 1);\\nauto path = co_await rpc.request(&quot;nvim_eval&quot;,&quot;stdpath(&#39;config&#39;)&quot;);\\n\\n// initialize\\n\\nrpc.notify(&quot;nvim_ui_attach&quot;);\\n\\nrpc.on_message(&amp;dispatcher);</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"のように書けるようにして整理する。\"), \"\\n\", React.createElement(_components.h1, null, \"20210829\"), \"\\n\", React.createElement(_components.ul, {\n    className: \"contains-task-list\"\n  }, \"\\n\", React.createElement(_components.li, {\n    className: \"task-list-item\"\n  }, React.createElement(_components.input, {\n    type: \"checkbox\",\n    checked: true,\n    disabled: true\n  }), \" \", \"MsgPack-RPC のバックエンドを置きかえた\"), \"\\n\", React.createElement(_components.li, {\n    className: \"task-list-item\"\n  }, React.createElement(_components.input, {\n    type: \"checkbox\",\n    checked: true,\n    disabled: true\n  }), \" \", \"logger に RPC の内容を JSON 化して表示\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"だいたいリファクタリングが終わって改造しやすい状態になった。\"), \"\\n\", React.createElement(_components.ul, {\n    className: \"contains-task-list\"\n  }, \"\\n\", React.createElement(_components.li, {\n    className: \"task-list-item\"\n  }, React.createElement(_components.input, {\n    type: \"checkbox\",\n    checked: true,\n    disabled: true\n  }), \" \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">&lt;C-/></code>\"\n    }\n  }), \" できるようにする。\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"を実装できた。\\n特定の VK が来たときに nvim のキーに変換するテーブルがあるので追加した。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"cpp\\\"><pre class=\\\"language-cpp\\\"><code class=\\\"language-cpp\\\">  <span class=\\\"token keyword\\\">case</span> VK_OEM_2<span class=\\\"token operator\\\">:</span>\\n    <span class=\\\"token keyword\\\">return</span> <span class=\\\"token string\\\">\\\"\\\"</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">[2,\\\"nvim_input\\\",[\\\"&lt;C-/>\\\"]]</code>\"\n    }\n  }), \" が送信される。\"), \"\\n\", React.createElement(_components.h2, null, \"修正が必要\"), \"\\n\", React.createElement(_components.p, null, \"非control時に\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">[2,\\\"nvim_input\\\",[\\\"&lt;/>\\\"]]</code>\"\n    }\n  }), \" が送信される。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"cpp\\\"><pre class=\\\"language-cpp\\\"><code class=\\\"language-cpp\\\">  <span class=\\\"token keyword\\\">case</span> VK_OEM_2<span class=\\\"token operator\\\">:</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">GetKeyState</span><span class=\\\"token punctuation\\\">(</span>VK_CONTROL<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token comment\\\">// C-/</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token string\\\">\\\"/\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"なるほど。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"@/posts/2021/summer/nvimtexture.md\"\n  }, \"NvimTexture\"), \" へ続く\"), \"\\n\", React.createElement(_components.h1, null, \"20210829  太字がずれる？\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2021/summer/nvy.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  const frontmatter = data.mdx.frontmatter;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"div\", {\n    className: \"tags-index\"\n  }, frontmatter.tags && frontmatter.tags.length > 0 && frontmatter.tags.map(tag => {\n    return React.createElement(Link, {\n      to: `/tags/${tag}/`,\n      itemProp: \"url\"\n    }, React.createElement(\"button\", null, tag));\n  })), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        tags\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","h2","ul","li","input","h1","span","_provideComponents","components","React","href","className","type","disabled","checked","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","code","_ref","children","PrismSyntaxHighlight","PostTempalte","_ref2","data","frontmatter","mdx","Layout","title","tags","length","map","tag","Link","to","itemProp","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}