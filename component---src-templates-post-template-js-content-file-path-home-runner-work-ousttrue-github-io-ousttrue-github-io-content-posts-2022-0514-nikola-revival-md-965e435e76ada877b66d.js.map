{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2022-0514-nikola-revival-md-965e435e76ada877b66d.js","mappings":"+JAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,EAAG,IACHC,GAAI,KACJC,KAAM,OACNC,GAAI,KACJC,OAAQ,WACPC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBZ,EAAYG,GAAI,KAAM,YAAa,KAAMS,EAAAA,cAAoBZ,EAAYI,EAAG,KAAMQ,EAAAA,cAAoBZ,EAAYK,EAAG,CACxLQ,KAAM,0BACL,UAAW,QAAS,KAAMD,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,4DAA6D,KAAMQ,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,UAAWQ,EAAAA,cAAoBZ,EAAYK,EAAG,CAC9NQ,KAAM,uBACL,QAAS,WAAYD,EAAAA,cAAoBZ,EAAYK,EAAG,CACzDQ,KAAM,+CACL,SAAU,2EAA4E,KAAMD,EAAAA,cAAoBZ,EAAYM,GAAI,KAAM,8BAA+B,KAAMM,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,YAAaQ,EAAAA,cAAoBZ,EAAYO,KAAM,CACxQO,wBAAyB,CACvBC,OAAQ,oDAER,wGAAyG,KAAMH,EAAAA,cAAoBZ,EAAYO,KAAM,CACvJO,wBAAyB,CACvBC,OAAQ,uPAER,KAAMH,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,uCAAwC,KAAMQ,EAAAA,cAAoBZ,EAAYM,GAAI,KAAM,MAAO,KAAMM,EAAAA,cAAoBZ,EAAYO,KAAM,CAC5LO,wBAAyB,CACvBC,OAAQ,i0BAER,KAAMH,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,wBAAyB,KAAMI,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,4FAA6FQ,EAAAA,cAAoBZ,EAAYS,OAAQ,KAAM,QAAS,YAAa,KAAMG,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,cAAe,KAAMQ,EAAAA,cAAoBZ,EAAYI,EAAG,KAAMQ,EAAAA,cAAoBZ,EAAYO,KAAM,CAC9aO,wBAAyB,CACvBC,OAAQ,+EAEP,KAAMH,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,oFAAqF,KAAMQ,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,iCAAkC,KAAMI,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,4FAA6FQ,EAAAA,cAAoBZ,EAAYS,OAAQ,KAAM,QAAS,YACha,CAKA,MAJA,SAAoBV,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOiB,QAASC,GAAahB,OAAOC,OAAO,CAAC,GAAGQ,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOM,EAAYL,EAAAA,cAAoBK,EAAWlB,EAAOa,EAAAA,cAAoBd,EAAmBC,IAAUD,EAAkBC,EAC9H,E,oBClCA,MAAMY,EAAa,CACjBO,KAAMC,IAA2B,IAA1B,SAACC,EAAQ,UAAEC,GAAUF,EAC1B,OAAOE,EAAYT,EAAAA,cAAoBU,EAAAA,EAAsB,CAC3DD,UAAWA,GACVD,GAAYR,EAAAA,cAAoB,OAAQ,KAAMQ,EAAS,GAG9D,SAASG,EAAYC,GAAmB,IAAlB,KAACC,EAAI,SAAEL,GAASI,EACpC,OAAOZ,EAAAA,cAAoBc,EAAAA,EAAQ,KAAMd,EAAAA,cAAoB,KAAM,KAAMa,EAAKE,IAAIC,YAAYC,OAAQjB,EAAAA,cAAoBkB,EAAAA,GAAa,CACrInB,WAAYA,GACXS,GACL,CACe,SAASW,EAAiBhC,GACvC,OAAOa,EAAAA,cAAoBW,EAAcxB,EAAOa,EAAAA,cAAoBoB,EAAqBjC,GAC3F,C","sources":["webpack:///./content/posts/2022/0514-nikola_revival.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    span: \"span\",\n    h3: \"h3\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Nikola復活\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://getnikola.com/\"\n  }, \"nikola\"), \" 復活。\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/ousttrue/dotfiles/blob/master/dodo.py\"), \"\\n\", React.createElement(_components.p, null, \"を作りながら \", React.createElement(_components.a, {\n    href: \"https://pydoit.org/\"\n  }, \"doit\"), \" を学んだし、 \", React.createElement(_components.a, {\n    href: \"https://jinja.palletsprojects.com/en/3.1.x/\"\n  }, \"jinja\"), \"\\nも少しやったので、前よりは読めそう。\\n使いながら、 nikola のコードを読んで、 doit のカスタムタスクの使い方を眺めてみたい。\"), \"\\n\", React.createElement(_components.h2, null, \"sphinx + ablog + myst との違い\"), \"\\n\", React.createElement(_components.p, null, \"nikola は \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">frontmatter</code>\"\n    }\n  }), \" で title を決めるが、 sphinx は 本文の先頭の見出しで決めるという違いがある。\\nnikola の方も title と 先頭の見出しを同じにする運用にすれば、だいたい同じになると思う。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">conf.py # nikola の設定\\ndocs\\n  + conf.py # sphinx の設定\\n  + posts # content. nikola と sphinx の ablog 両用\\n    + post.md</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"みたいな感じにしてもだいたい動く。\\n細かく違うところはあると思うが。\"), \"\\n\", React.createElement(_components.h2, null, \"動作\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"python\\\"><pre class=\\\"language-python\\\"><code class=\\\"language-python\\\">    site <span class=\\\"token operator\\\">=</span> Nikola<span class=\\\"token punctuation\\\">(</span><span class=\\\"token operator\\\">**</span>config<span class=\\\"token punctuation\\\">)</span>\\n    DN <span class=\\\"token operator\\\">=</span> DoitNikola<span class=\\\"token punctuation\\\">(</span>site<span class=\\\"token punctuation\\\">,</span> quiet<span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">if</span> _RETURN_DOITNIKOLA<span class=\\\"token punctuation\\\">:</span>\\n        <span class=\\\"token keyword\\\">return</span> DN\\n    _ <span class=\\\"token operator\\\">=</span> DN<span class=\\\"token punctuation\\\">.</span>run<span class=\\\"token punctuation\\\">(</span>oargs<span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h3, null, \"DoitNikola(DoitMain)\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/getnikola/nikola/blob/398d5722d78a27ac5233849e3057f9d787345561/nikola/\", React.createElement(_components.strong, null, \"main\"), \".py#L301\"), \"\\n\", React.createElement(_components.p, null, \"ここから入っていく。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">from doit.cmd_base import TaskLoader2</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.p, null, \"https://pydoit.org/extending.html?highlight=taskloader#doit.cmd_base.TaskLoader2\"), \"\\n\", React.createElement(_components.h3, null, \"NikolaTaskLoader(TaskLoader2)\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/getnikola/nikola/blob/398d5722d78a27ac5233849e3057f9d787345561/nikola/\", React.createElement(_components.strong, null, \"main\"), \".py#L257\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2022/0514-nikola_revival.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","a","h2","span","h3","strong","_provideComponents","components","React","href","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","Layout","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}