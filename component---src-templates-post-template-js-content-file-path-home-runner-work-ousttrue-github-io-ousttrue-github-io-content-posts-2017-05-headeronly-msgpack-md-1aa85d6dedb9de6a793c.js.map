{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2017-05-headeronly-msgpack-md-1aa85d6dedb9de6a793c.js","mappings":"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","sources":["webpack:///./content/posts/2017/05/headeronly_msgpack.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"車輪の再発明的だけどmessagepackのc++実装をまた作った。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/ousttrue/msgpackpp\"\n  }, \"https://github.com/ousttrue/msgpackpp\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">refrange</code>\"\n    }\n  }), \" と \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">osaru</code>\"\n    }\n  }), \" の知見を基に実装というか、編集した。\\n実装のシンプルさと使いやすさを優先して、パフォーマンスと汎用性にあまり配慮していない。\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">refrange</code>\"\n    }\n  }), \" のAPIがダメダメなのを反省し、\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">osaru</code>\"\n    }\n  }), \" で \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">serializer/deserializer</code>\"\n    }\n  }), \" のレイヤーと \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">formatter/parser</code>\"\n    }\n  }), \" のレイヤーを分けた設計を踏襲。なかなかよいのではないか。で、本家の \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">messagepack</code>\"\n    }\n  }), \" を見たらバージョンが結構進んでいて、\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">c++11</code>\"\n    }\n  }), \" 版ならヘッダーオンリーあるよと書いてあった。あったのかー。知ってたような気もするが、カスタムのオレオレ車輪でいく。\\nあと、ついでに \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">msgpackpp-rpc-asio</code>\"\n    }\n  }), \" も更新した。githubで地味に★をいただくので、微妙に需要があるらしい。今回の更新で、この前発見した \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">asio standalone</code>\"\n    }\n  }), \" を組み込んで \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">boost::test</code>\"\n    }\n  }), \" を \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">catch</code>\"\n    }\n  }), \" で置き換えて、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">boost::thread</code>\"\n    }\n  }), \" を \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">std::thead</code>\"\n    }\n  }), \" に置き換えるなどして、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">boost</code>\"\n    }\n  }), \" への依存を取り除いた。ちょっとした機能ならばヘッダオンリーなのが最近の潮流ですな。もう少し手を入れて\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">msgpack</code>\"\n    }\n  }), \" 部分を \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">msgpackpp</code>\"\n    }\n  }), \" で置き換え\\n可変長テンプレート引数\\nメッセージを \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">std::cout</code>\"\n    }\n  }), \" じゃなくて \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">plog</code>\"\n    }\n  }), \" に出力\\nヘッダオンリー\"), \"\\n\", React.createElement(_components.p, null, \"という感じにしようか。\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">websocketpp</code>\"\n    }\n  }), \" と組み合わせて使うのに便利な形にしたい。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2017/05/headeronly_msgpack.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  const frontmatter = data.mdx.frontmatter;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"div\", {\n    className: \"tags-index\"\n  }, frontmatter.tags && frontmatter.tags.length > 0 && frontmatter.tags.map(tag => {\n    return React.createElement(Link, {\n      to: `/tags/${tag}/`,\n      itemProp: \"url\"\n    }, React.createElement(\"button\", null, tag));\n  })), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        tags\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","span","_provideComponents","components","React","href","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","frontmatter","mdx","Layout","title","tags","length","map","tag","Link","to","itemProp","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}