"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7927],{3652:function(e,n,l){l.r(n),l.d(n,{default:function(){return E}});var t=l(1151),a=l(7294);function c(e){const n=Object.assign({p:"p",code:"code",ul:"ul",li:"li",h2:"h2",h3:"h3",h4:"h4",img:"img",span:"span",a:"a"},(0,t.ah)(),e.components);return a.createElement(a.Fragment,null,a.createElement(n.p,null,"常用エディタをvimに復古するべく環境を整備し始めた。\nせっかくなので ",a.createElement(n.code,null,"neovim")," も試してみる。"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"環境はWindows10"),"\n"),"\n",a.createElement(n.h2,null,"neovim"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"neovim本家サイトからダウンロード","\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"https://github.com/neovim/neovim/releases"),"\n",a.createElement(n.li,null,"nvim-win32.zip"),"\n"),"\n"),"\n",a.createElement(n.li,null,"python3の環境を作る","\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"python36-32を入れた(nvimのバージョンに合わせた)"),"\n",a.createElement(n.li,null,"環境変数PATHに ",a.createElement(n.code,null,"C:/Python36-32")," と ",a.createElement(n.code,null,"C:/Python36-32/Scripts")," を追加"),"\n",a.createElement(n.li,null,a.createElement(n.code,null,"pip install neovim")),"\n"),"\n"),"\n"),"\n",a.createElement(n.h3,null,"nvim-qt.exe (gui)"),"\n",a.createElement(n.p,null,"だいたい動く。"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"コピペはクリップボード経由で。",a.createElement(n.code,null,"set clipboard+=unnamed")),"\n",a.createElement(n.li,null,"color emojiは諦める"),"\n"),"\n",a.createElement(n.h3,null,"nvim.exe (cmd.exe)"),"\n",a.createElement(n.p,null,"だいたい動く。"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"コピペはクリップボード経由で。",a.createElement(n.code,null,"set clipboard+=unnamed")),"\n",a.createElement(n.li,null,a.createElement(n.code,null,"set termguicolors")," でフルカラー"),"\n"),"\n",a.createElement(n.h3,null,"Oni(Electron製)"),"\n",a.createElement(n.p,null,"意外と良かったが細かいところ(日本語の変換中の表示とか)が使いづらかった。\n",a.createElement(n.code,null,"oni2")," 作っているらしい。"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"emoji とか見た目はいい"),"\n"),"\n",a.createElement(n.h3,null,"$HOME/local/bin/nvim (wsl)"),"\n",a.createElement(n.p,null,a.createElement(n.code,null,"mintty")," が良くて、なかなか快適。"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"Windowsのプロセスを実行する系は諦める(",a.createElement(n.code,null,"!start .")," とか)"),"\n",a.createElement(n.li,null,"git とかさくさく動く"),"\n",a.createElement(n.li,null,"もろもろ、パッケージマネージャーで入れるだけなので楽"),"\n",a.createElement(n.li,null,"無ければ、ソースからビルドするのも楽"),"\n"),"\n",a.createElement(n.p,null,"既にWSLがインストール済みであるところから。\nわいは、"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"https://github.com/yuk7/ArchWSL"),"\n"),"\n",a.createElement(n.p,null,"入れてる。"),"\n",a.createElement(n.h4,null,"wslする端末を整備する"),"\n",a.createElement(n.p,null,"minttyのwsl向けのwslttyを使う。"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"https://github.com/mintty/wsltty"),"\n",a.createElement(n.li,null,"Cicaフォント"),"\n",a.createElement(n.li,null,"xterm-256"),"\n"),"\n",a.createElement(n.p,null,"color emoji を設定する。"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"https://github.com/mintty/wsltty/issues/93"),"\n",a.createElement(n.li,null,a.createElement(n.code,null,"%USERPROFILE%\\AppData\\Roaming\\wsltty")," フォルダに対して作業する"),"\n"),"\n",a.createElement(n.img,{src:"emoji.jpg",alt:"emoji"}),"\n",a.createElement(n.p,null,"複合文字とか複雑すぎなのでは・・・"),"\n",a.createElement(n.h4,null,"nvimを自前ビルドする"),"\n",a.createElement(n.p,null,"足りないパッケージを適宜追加でインストールしながら。"),"\n",a.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="sh"><pre class="language-sh"><code class="language-sh"><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> <span class="token environment constant">$HOME</span>/local/src\n<span class="token builtin class-name">cd</span> <span class="token environment constant">$HOME</span>/local/src\n<span class="token function">git</span> clone https://github.com/neovim/neovim.git\n<span class="token builtin class-name">cd</span> neovim\n<span class="token assign-left variable">CMAKE_INSTALL_PREFIX</span><span class="token operator">=</span><span class="token environment constant">$HOME</span>/local <span class="token function">make</span> <span class="token function">install</span> <span class="token comment"># $HOME/local/bin にインストールする</span></code></pre></div>'}}),"\n",a.createElement(n.p,null,"環境変数 ",a.createElement(n.code,null,"PATH")," に ",a.createElement(n.code,null,"$HOME/local/bin")," を足した"),"\n",a.createElement(n.h4,null,"python3"),"\n",a.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="sh"><pre class="language-sh"><code class="language-sh">pip <span class="token function">install</span> <span class="token parameter variable">--user</span> neovim</code></pre></div>'}}),"\n",a.createElement(n.h2,null,"vim8"),"\n",a.createElement(n.h3,null,"gvim"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,a.createElement(n.code,null,"emoji")," など難しいマルチバイト文字の入る文書を編集するときは最善でした"),"\n"),"\n",a.createElement(n.h2,null,"cmd.exe"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,a.createElement(n.a,{href:"https://mridgers.github.io/clink/"},"clink"),"を導入して、cmd.exeの苦しさを軽減する(c-p, c-n, tab)"),"\n",a.createElement(n.li,null,a.createElement(n.code,null,"Cica")," フォントなどを導入することで見た目はいい感じになる"),"\n",a.createElement(n.li,null,"color emojiは諦める(cmd.exeの制約)"),"\n",a.createElement(n.li,null,"一応、 ",a.createElement(n.code,null,"chcp 65001")," してから ",a.createElement(n.code,null,"vim")," で ",a.createElement(n.code,null,"set encoding=utf8")),"\n",a.createElement(n.li,null,"color thema","\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"https://github.com/Microsoft/console/tree/master/tools/ColorTool"),"\n"),"\n"),"\n"),"\n",a.createElement(n.p,null,"ptyが入ったらしい。近々いい感じになりそう。"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"\n",a.createElement(n.p,null,"https://devblogs.microsoft.com/commandline/windows-command-line-introducing-the-windows-pseudo-console-conpty/"),"\n"),"\n",a.createElement(n.li,null,"\n",a.createElement(n.p,null,"F1-F5は何故か、 ",a.createElement(n.code,null,"A, B, C, D, E")," のキーコードで来る。"),"\n"),"\n"),"\n",a.createElement(n.h2,null,"powershell"),"\n",a.createElement(n.p,null,"普通に、readlineの設定があるのを発見した。"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"一度だけ、管理者権限でps1の実行許可を設定する必要あり"),"\n",a.createElement(n.li,null,a.createElement(n.code,null,"%USERPROFILE%\\Documents\\WindowsPowerShell\\Microsoft.PowerShell_profile.ps1")," を自分で作る"),"\n"),"\n",a.createElement(n.p,null,"powershellの設定ファイルに下記のように設定すると、 ",a.createElement(n.code,null,"emacs")," 風コマンドラインになって使いやすくなる。"),"\n",a.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="ps1"><pre class="language-ps1"><code class="language-ps1">Set-PSReadlineKeyHandler -Key &#39;Ctrl+u&#39; -Function BackwardDeleteLine\nSet-PSReadlineKeyHandler -Key &#39;Ctrl+b&#39; -Function BackwardChar\nSet-PSReadlineKeyHandler -Key &#39;Ctrl+f&#39; -Function ForwardChar\nSet-PSReadlineKeyHandler -Key &#39;Ctrl+d&#39; -Function DeleteChar\nSet-PSReadlineKeyHandler -Key &#39;Ctrl+h&#39; -Function BackwardDeleteChar\nSet-PSReadlineKeyHandler -Key &#39;Ctrl+p&#39; -Function HistorySearchBackward\nSet-PSReadlineKeyHandler -Key &#39;Ctrl+n&#39; -Function HistorySearchForward\nSet-PSReadlineKeyHandler -Key &#39;Ctrl+a&#39; -Function BeginningOfLine\nSet-PSReadlineKeyHandler -Key &#39;Ctrl+e&#39; -Function EndOfLine\nSet-PSReadlineKeyHandler -Key &#39;Ctrl+m&#39; -Function AcceptLine\nSet-PSReadlineKeyHandler -Key &#39;Ctrl+k&#39; -Function ForwardDeleteLine</code></pre></div>'}}))}var r=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,t.ah)(),e.components);return n?a.createElement(n,e,a.createElement(c,e)):c(e)},m=l(8678),i=l(4160),s=l(8736);const u={code:e=>{let{children:n,className:l}=e;return l?a.createElement(s.Z,{className:l},n):a.createElement("code",null,n)}};function o(e){let{data:n,children:l}=e;const c=n.mdx.frontmatter;return a.createElement(m.Z,null,a.createElement("h1",null,c.title),a.createElement("div",{className:"tags-index"},c.tags&&c.tags.length>0&&c.tags.map((e=>a.createElement(i.rU,{to:"/tags/"+e+"/",itemProp:"url"},a.createElement("button",null,e))))),a.createElement(t.Zo,{components:u},l))}function E(e){return a.createElement(o,e,a.createElement(r,e))}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-content-posts-2019-vim-on-windows-md-5bdcde9cbfd5d4626dee.js.map