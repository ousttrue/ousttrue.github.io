"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2114],{9617:function(n,e,a){a.r(e),a.d(e,{default:function(){return i}});var t=a(1151),s=a(7294);function l(n){const e=Object.assign({h1:"h1",ul:"ul",li:"li",span:"span",p:"p",h2:"h2"},(0,t.ah)(),n.components);return s.createElement(s.Fragment,null,s.createElement(e.h1,null,"なんとなく gatsby やってみる"),"\n",s.createElement(e.ul,null,"\n",s.createElement(e.li,null,s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">mdx</code>'}})," はおもしろそう。カスタマイズはの記法は ",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">hugo</code>'}})," や ",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">jinja</code>'}})," よりも素直で簡単そうに見えた"),"\n",s.createElement(e.li,null,"GraphQL もわりと素直で簡単そうに見える"),"\n"),"\n",s.createElement(e.p,null,"が、既存の markdown がわりとエラーになる。"),"\n",s.createElement(e.ul,null,"\n",s.createElement(e.li,null,"frontmatter が yaml 必要。toml 食えない。"),"\n",s.createElement(e.li,null,s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">&lt;url> 記法</code>'}})," とか。エラーがあると全部失敗になる。"),"\n"),"\n",s.createElement(e.p,null,"ということで、 python のスクリプトで既存の markdown を改変して様式を合わせることにした。"),"\n",s.createElement(e.ul,null,"\n",s.createElement(e.li,null,"frontmatter の yaml 変換"),"\n",s.createElement(e.li,null,"正規表現で ",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">&lt;url> 記法</code>'}})," 除去"),"\n",s.createElement(e.li,null,"frontmatter.title が無い場合に先頭の見出しを title に付け替える(sphinx の myst 向けの記事？)"),"\n"),"\n",s.createElement(e.h1,null,"MDXRenderer 無くなっているぽい"),"\n",s.createElement(e.p,null,"breaking change w"),"\n",s.createElement(e.p,null,"gatsby-plugin-mdx が 3 から 4 になるときに変更があって、\nMDXRenderer が無くなって\nMDXprovider を使う方式に変わったぽい？"),"\n",s.createElement(e.ul,null,"\n",s.createElement(e.li,null,"https://www.gatsbyjs.com/plugins/gatsby-plugin-mdx"),"\n",s.createElement(e.li,null,"https://www.gatsbyjs.com/docs/how-to/routing/mdx/"),"\n"),"\n",s.createElement(e.p,null,"見よう見まねでセットアップしてなんとなく動いたのだが、\nちょっと変えたら動かなくなって、\n調べていくとどうも最近のバージョンで ",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">MDXRenderer</code>'}})," が無くなったぽい。"),"\n",s.createElement(e.ul,null,"\n",s.createElement(e.li,null,"https://stackoverflow.com/questions/74309351/how-to-render-mdx-with-gatsby-plugin-mdx-from-allmdx-query"),"\n"),"\n",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">Element type is invalid: expected a string</code></pre></div>'}}),"\n",s.createElement(e.p,null,"というエラーメッセージが出て全然意味がわからなかったのだが、\n",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">MDXRenderer</code>'}})," が無くなっていて、import 失敗の結果出たエラーだったぽい。\nわからねー。"),"\n",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="jsx"><pre class="language-jsx"><code class="language-jsx"><span class="token keyword">import</span> <span class="token punctuation">{</span> MDXRenderer <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">"gatsby-plugin-mdx"</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",s.createElement(e.p,null,"いまバージョンはどうも Rendering 済みの ",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">children</code>'}})," を引数で受ける作法になっているぽい。"),"\n",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="jsx"><pre class="language-jsx"><code class="language-jsx"><span class="token comment">// post template</span>\n<span class="token keyword">function</span> <span class="token function">PostTemplate</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span> mdx <span class="token punctuation">}</span><span class="token punctuation">,</span> children <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></code></pre></div>'}}),"\n",s.createElement(e.p,null,"chidren を受けるには ",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">createPages</code>'}})," を以下のようにする。"),"\n",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript"><span class="token comment">// gatsby-node.js</span>\ndata<span class="token punctuation">.</span>allMdx<span class="token punctuation">.</span>nodes<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  actions<span class="token punctuation">.</span><span class="token function">createPage</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    <span class="token literal-property property">path</span><span class="token operator">:</span> node<span class="token punctuation">.</span>frontmatter<span class="token punctuation">.</span>slug<span class="token punctuation">,</span>\n    <span class="token comment">// 👇 この記述により template に children を供給できるぽい</span>\n    <span class="token literal-property property">component</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>postTemplate<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">?__contentFilePath=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>node<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>contentFilePath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    <span class="token literal-property property">context</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">id</span><span class="token operator">:</span> node<span class="token punctuation">.</span>id<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",s.createElement(e.p,null,"要するにドキュメントに書いてあるとおりにする必要があるのだが、\n内容を理解していないのと、古い情報との混在で難航したのであった。"),"\n",s.createElement(e.h1,null,"gatsby-plugin-page-creator 無用"),"\n",s.createElement(e.p,null,"無くても動く。\nというか ",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">createPages</code>'}})," を変わりにやってくれるものぽい。"),"\n",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="javascript"><pre class="language-javascript"><code class="language-javascript">exports<span class="token punctuation">.</span><span class="token function-variable function">createPages</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> graphql<span class="token punctuation">,</span> actions <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",s.createElement(e.h1,null,"かくして、白いサイトに戻った。"),"\n",s.createElement(e.p,null,"はまったおかげで gatsby のデータの流れがわかってきた。\n適当に組み立てて行こう。"),"\n",s.createElement(e.h1,null,"prism-react-renderer (syntax highlight) 導入"),"\n",s.createElement(e.ul,null,"\n",s.createElement(e.li,null,"\n",s.createElement(e.p,null,"https://paulie.dev/posts/2022/08/syntax-highlighting-with-gatsby-mdx-and-prism-react-renderer/#mdx-2-rc-version"),"\n"),"\n",s.createElement(e.li,null,"\n",s.createElement(e.p,null,"install prism-react-renderer"),"\n"),"\n",s.createElement(e.li,null,"\n",s.createElement(e.p,null,"MDXProvider.components"),"\n"),"\n",s.createElement(e.li,null,"\n",s.createElement(e.p,null,"gatsby-browser.js"),"\n"),"\n"),"\n",s.createElement(e.p,null,"の３ステップ。\nこれも難航したが、",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">MDX v2</code>'}})," の情報を見分けることが重要。\n",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">MDXProvider</code>'}})," 探索するべし。"),"\n",s.createElement(e.h1,null,"layout"),"\n",s.createElement(e.h2,null,"list"),"\n",s.createElement(e.h2,null,"post"),"\n",s.createElement(e.h1,null,"tags"),"\n",s.createElement(e.ul,null,"\n",s.createElement(e.li,null,"https://www.gatsbyjs.com/docs/adding-tags-and-categories-to-blog-posts/"),"\n"),"\n",s.createElement(e.p,null,"tag できた。\ngatsby の component システム、",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">jinja</code>'}})," や ",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">hugo</code>'}})," の template と比べて\nわかりやすくてパワーがあるね。\n",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">nvim</code>'}})," で作業しているのだけど、 LanguageServer の支援が受けられてすごい快適だ。"))}var p=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,t.ah)(),n.components);return e?s.createElement(e,n,s.createElement(l,n)):l(n)},c=a(8678),o=a(8838);const r={code:n=>{let{children:e,className:a}=n;return a?s.createElement(o.Z,{className:a},e):s.createElement("code",null,e)}};function u(n){let{data:e,children:a}=n;return s.createElement(c.Z,null,s.createElement("h1",null,e.mdx.frontmatter.title),s.createElement(t.Zo,{components:r},a))}function i(n){return s.createElement(u,n,s.createElement(p,n))}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2023-0313-gatsby-md-82d199b0712cc098c0dd.js.map