{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2021-winter-ablog-md-3d7b67ac40017aea7b31.js","mappings":"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","sources":["webpack:///./content/posts/2021/winter/ablog.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\",\n    span: \"span\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    h3: \"h3\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"ABlog にシステムを変更\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://getnikola.com/\"\n  }, \"nikola\"), \" は使いこなせなくて短命に終わってしまった。\\n\", React.createElement(_components.a, {\n    href: \"https://pydoit.org/\"\n  }, \"doit\"), \" は面白いと思うのだが。\"), \"\\n\", React.createElement(_components.p, null, \"ということで、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">sphinx</code>\"\n    }\n  }), \" プラグインの \", React.createElement(_components.a, {\n    href: \"https://ablog.readthedocs.io/en/latest/\"\n  }, \"ABlog\"), \" です。\"), \"\\n\", React.createElement(_components.h2, null, \"はまり1: Sphinx のキャッシュ\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">python -m sphinx content build</code>\"\n    }\n  }), \" にデバッガをアタッチして試行錯誤するのだけど、\\nキャッシュされて処理されなかった。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">python -m sphinx content build -E -v</code>\"\n    }\n  }), \" とする。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"-E: 全処理(キャッシュを使わない)\"), \"\\n\", React.createElement(_components.li, null, \"-v: 詳細メッセージ\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"はまり2: ablog が timezone の有無で日付の比較に失敗する\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">can't compare offset-naive and offset-aware datetimes</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"これは、既存記事の \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">frontmatter</code>\"\n    }\n  }), \" の日付に \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">timezone</code>\"\n    }\n  }), \" が付いていると\\n日付の比較に失敗する。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"python\\\"><pre class=\\\"language-python\\\"><code class=\\\"language-python\\\"><span class=\\\"token comment\\\"># site-packages/ablog/blog.py:382</span>\\nself<span class=\\\"token punctuation\\\">.</span>date <span class=\\\"token operator\\\">=</span> date <span class=\\\"token operator\\\">=</span> info<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"date\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>replace<span class=\\\"token punctuation\\\">(</span>tzinfo<span class=\\\"token operator\\\">=</span><span class=\\\"token boolean\\\">None</span><span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"と対処した。\"), \"\\n\", React.createElement(_components.h2, null, \"はまり3: myst-parser の toml frontmatter 対応\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">myst-parser</code>\"\n    }\n  }), \" が \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">---</code>\"\n    }\n  }), \" による \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">yaml</code>\"\n    }\n  }), \" 形式の \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">frontmatter</code>\"\n    }\n  }), \" にしか対応していない様子。\\n\", React.createElement(_components.a, {\n    href: \"https://gohugo.io/content-management/front-matter/\"\n  }, \"hugo の frontmatter\"), \" にある \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">toml</code>\"\n    }\n  }), \" 様式に対応するべく改造したい。\"), \"\\n\", React.createElement(_components.h3, null, \"切り出し\"), \"\\n\", React.createElement(_components.p, null, \"どこで処理しているのか探索が難航した。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">site-packages/mdit_py_plugins/front_matter/index.py</code>\"\n    }\n  }), \"\\nで処理している。\"), \"\\n\", React.createElement(_components.h3, null, \"Parse\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">site-packages/myst_parser/docutils_renderer.py</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">render_front_matter</code>\"\n    }\n  }), \" で切り出した文字列を \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">yaml</code>\"\n    }\n  }), \" でパースしている。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">except</code>\"\n    }\n  }), \" 節で \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">toml</code>\"\n    }\n  }), \" にリトライさせたら動いた。\"), \"\\n\", React.createElement(_components.h2, null, \"モンキーパッチ\"), \"\\n\", React.createElement(_components.p, null, \"とりあえず \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">conf.py</code>\"\n    }\n  }), \" にて直接修正する。\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/ousttrue/ousttrue.github.io/blob/ablog/content/patch.py\"), \"\\n\", React.createElement(_components.p, null, \"後で PR 送ったりできるかな。\"), \"\\n\", React.createElement(_components.h2, null, \"ABlog は何をしているのか\"), \"\\n\", React.createElement(_components.h3, null, \"toctree無しのpost記事\"), \"\\n\", React.createElement(_components.p, null, \"特定の条件で、記事をブログ記事と見做して \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">toctree</code>\"\n    }\n  }), \" 無しで辿れるようにする。\\n記事は、日付やタグでグループ化してくれる。\"), \"\\n\", React.createElement(_components.p, null, \"https://ablog.readthedocs.io/en/latest/manual/posting-and-listing/#posting-with-page-front-matter\"), \"\\n\", React.createElement(_components.p, null, \"パス指定。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"python\\\"><pre class=\\\"language-python\\\"><code class=\\\"language-python\\\">blog_post_pattern <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"posts/**/*.md\\\"</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"条件。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"python\\\"><pre class=\\\"language-python\\\"><code class=\\\"language-python\\\"><span class=\\\"token comment\\\"># .venv/lib/python3.9/site-packages/ablog/post.py</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token string\\\">\\\"blogpost\\\"</span> <span class=\\\"token keyword\\\">not</span> <span class=\\\"token keyword\\\">in</span> metadata <span class=\\\"token keyword\\\">and</span> self<span class=\\\"token punctuation\\\">.</span>env<span class=\\\"token punctuation\\\">.</span>docname <span class=\\\"token keyword\\\">not</span> <span class=\\\"token keyword\\\">in</span> self<span class=\\\"token punctuation\\\">.</span>config<span class=\\\"token punctuation\\\">.</span>matched_blog_posts<span class=\\\"token punctuation\\\">:</span>\\n            <span class=\\\"token keyword\\\">return</span> <span class=\\\"token boolean\\\">None</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">frontmatter</code>\"\n    }\n  }), \" 等から最低限、日付の情報がとれないとトップページから辿る方法が無い状態になる。\"), \"\\n\", React.createElement(_components.p, null, \"あと \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">sphinx</code>\"\n    }\n  }), \" なのでトップレベルの表題が本文側に必要かも。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">frontmatter</code>\"\n    }\n  }), \" の \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">title</code>\"\n    }\n  }), \" を反映できると便利そう。\"), \"\\n\", React.createElement(_components.h3, null, \"event: 'doctree-read'\"), \"\\n\", React.createElement(_components.p, null, \"doctree から \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">PostNode</code>\"\n    }\n  }), \" を集める。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">alog/post#process_posts(app, doctree)</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"python\\\"><pre class=\\\"language-python\\\"><code class=\\\"language-python\\\"><span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">process_posts</span><span class=\\\"token punctuation\\\">(</span>app<span class=\\\"token punctuation\\\">,</span> doctree<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n    post_nodes <span class=\\\"token operator\\\">=</span> <span class=\\\"token builtin\\\">list</span><span class=\\\"token punctuation\\\">(</span>doctree<span class=\\\"token punctuation\\\">.</span>traverse<span class=\\\"token punctuation\\\">(</span>PostNode<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token keyword\\\">if</span> <span class=\\\"token keyword\\\">not</span> post_nodes<span class=\\\"token punctuation\\\">:</span>\\n        <span class=\\\"token comment\\\"># PostNode が必要</span>\\n        <span class=\\\"token keyword\\\">return</span>\\n\\n    <span class=\\\"token comment\\\"># 省略</span>\\n\\n    postinfo <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token string\\\">\\\"docname\\\"</span><span class=\\\"token punctuation\\\">:</span> docname<span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"section\\\"</span><span class=\\\"token punctuation\\\">:</span> section_name<span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"order\\\"</span><span class=\\\"token punctuation\\\">:</span> order<span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"date\\\"</span><span class=\\\"token punctuation\\\">:</span> date<span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"update\\\"</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token builtin\\\">max</span><span class=\\\"token punctuation\\\">(</span>update_dates <span class=\\\"token operator\\\">+</span> <span class=\\\"token punctuation\\\">[</span>date<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"title\\\"</span><span class=\\\"token punctuation\\\">:</span> title<span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"excerpt\\\"</span><span class=\\\"token punctuation\\\">:</span> excerpt<span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"tags\\\"</span><span class=\\\"token punctuation\\\">:</span> node<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"tags\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"author\\\"</span><span class=\\\"token punctuation\\\">:</span> node<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"author\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"category\\\"</span><span class=\\\"token punctuation\\\">:</span> node<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"category\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"location\\\"</span><span class=\\\"token punctuation\\\">:</span> node<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"location\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"language\\\"</span><span class=\\\"token punctuation\\\">:</span> node<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"language\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"redirect\\\"</span><span class=\\\"token punctuation\\\">:</span> node<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"redirect\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"nocomments\\\"</span><span class=\\\"token punctuation\\\">:</span> node<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"nocomments\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"image\\\"</span><span class=\\\"token punctuation\\\">:</span> node<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"image\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"exclude\\\"</span><span class=\\\"token punctuation\\\">:</span> node<span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"exclude\\\"</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">\\\"doctree\\\"</span><span class=\\\"token punctuation\\\">:</span> section_copy<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token keyword\\\">if</span> docname <span class=\\\"token keyword\\\">not</span> <span class=\\\"token keyword\\\">in</span> env<span class=\\\"token punctuation\\\">.</span>ablog_posts<span class=\\\"token punctuation\\\">:</span>\\n        env<span class=\\\"token punctuation\\\">.</span>ablog_posts<span class=\\\"token punctuation\\\">[</span>docname<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span>\\n    env<span class=\\\"token punctuation\\\">.</span>ablog_posts<span class=\\\"token punctuation\\\">[</span>docname<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">.</span>append<span class=\\\"token punctuation\\\">(</span>postinfo<span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"python\\\"><pre class=\\\"language-python\\\"><code class=\\\"language-python\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">CheckFrontMatter</span><span class=\\\"token punctuation\\\">(</span>SphinxTransform<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">apply</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n        <span class=\\\"token keyword\\\">pass</span>\\n\\n<span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">setup</span><span class=\\\"token punctuation\\\">(</span>app<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n    app<span class=\\\"token punctuation\\\">.</span>add_transform<span class=\\\"token punctuation\\\">(</span>CheckFrontMatter<span class=\\\"token punctuation\\\">)</span>    </code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h3, null, \"追加のページ生成\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">ablog/templates</code>\"\n    }\n  }), \" に格納されている。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"python\\\"><pre class=\\\"language-python\\\"><code class=\\\"language-python\\\"><span class=\\\"token comment\\\"># -- ABlog Sidebars -------------------------------------------------------</span>\\n\\n<span class=\\\"token comment\\\"># There are seven sidebars you can include in your HTML output.</span>\\n<span class=\\\"token comment\\\"># postcard.html provides information regarding the current post.</span>\\n<span class=\\\"token comment\\\"># recentposts.html lists most recent five posts. Others provide</span>\\n<span class=\\\"token comment\\\"># a link to a archive pages generated for each tag, category, and year.</span>\\n<span class=\\\"token comment\\\"># In addition, there are authors.html, languages.html, and locations.html</span>\\n<span class=\\\"token comment\\\"># sidebars that link to author and location archive pages.</span>\\nhtml_sidebars <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token string\\\">'**'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n        <span class=\\\"token string\\\">'about.html'</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">'postcard.html'</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">'navigation.html'</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">'recentposts.html'</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">'tagcloud.html'</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">'categories.html'</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">'archives.html'</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token string\\\">'searchbox.html'</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"これらに対して追加のページ生成を行っている。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">genindex.html</code>\"\n    }\n  }), \" などのように。\"), \"\\n\", React.createElement(_components.h2, null, \"ToDo\"), \"\\n\", React.createElement(_components.h3, null, \"✅ タグが変\"), \"\\n\", React.createElement(_components.p, null, \"toml 由来の tag の処理に失敗している。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">[\\\"python\\\", \\\"ssg\\\", \\\"sphinx\\\"]</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.p, null, \"が、\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">[\\\"python\\\"</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">\\\"ssg\\\"</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">\\\"sphinx\\\"]</code>\"\n    }\n  })), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"になっちゃってる。\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/sunpy/ablog/pull/119\"), \"\\n\", React.createElement(_components.p, null, \"送ってみた。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">v0.10.22</code>\"\n    }\n  }), \" で修正。👍\"), \"\\n\", React.createElement(_components.h3, null, \"✅ 日付のフォーマット\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">conf.py</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"python\\\"><pre class=\\\"language-python\\\"><code class=\\\"language-python\\\">post_date_format <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">r'%Y/%m/%d'</span>\\npost_date_format_short <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">r'%Y/%m'</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h3, null, \"✅ 記事のURL\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://zenn.dev/attakei/articles/sphinx-make-dirhtml\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"✅ 記事タイトルは最初の見出しではなく、frontmatter の title にしたい\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">MystParser</code>\"\n    }\n  }), \" を改造した。\\nわりと Sphinx わかってきた。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">python</code>\"\n    }\n  }), \" でデバッガがアタッチできるとなんでもできる(慣れ)。\"), \"\\n\", React.createElement(_components.h3, null, \"[ ] tagの表記振れ\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">c++</code>\"\n    }\n  }), \" と \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">C++</code>\"\n    }\n  }), \"、\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">c#</code>\"\n    }\n  }), \" と \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">csharp</code>\"\n    }\n  }), \" などをたばねる。\"), \"\\n\", React.createElement(_components.h2, null, \"参考\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://water2litter.net/pisco/doc/ablog.html\"\n  }, \"Sphinxでブログをしてみよう\")), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2021/winter/ablog.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","a","span","h2","ul","li","h3","_provideComponents","components","React","href","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","Layout","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}