{"version":3,"file":"component---content-posts-2019-python-clang-md-3e04f8d87b15087c9ec0.js","mappings":"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","sources":["webpack:///./content/posts/2019/python_clang.md","webpack:///./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, React.createElement(_components.code, null, \"d3d11.h\"), \" を \", React.createElement(_components.code, null, \"d3d11.d\"), \" に変換したいのでやる。\"), \"\\n\", React.createElement(_components.p, null, \"以前、少し手を出したときの記事。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://qiita.com/ousttrue/items/a4291fc996a063841bd7\"\n  }, \"D言語でD3D11してみる\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://qiita.com/ousttrue/items/26b399a691b5610d2678\"\n  }, \"D言語でComPtr\")), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"この時は手作業で \", React.createElement(_components.code, null, \"d3d11.h\"), \" をD言語向けに編集していたのだけど、\\nプログラムで自動変換します。\"), \"\\n\", React.createElement(_components.h2, null, \"環境整備\"), \"\\n\", React.createElement(_components.p, null, \"Windows10(64bit)\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"llvmインストール(32bit)\"), \"\\n\", React.createElement(_components.li, null, \"python36-32\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"pip install clang\")), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"TranslationUnit\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"typedef\"), \"\\n\", React.createElement(_components.li, null, \"enum\"), \"\\n\", React.createElement(_components.li, null, \"struct/union\"), \"\\n\", React.createElement(_components.li, null, \"function\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"プリプロセッサー情報を得る\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"include\"), \"\\n\", React.createElement(_components.li, null, \"define\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"ComのIIDを得る\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"unexposed\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"D向けに出力\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"extern \", React.createElement(_components.code, null, \"Windows\")), \"\\n\", React.createElement(_components.li, null, \"public import\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"&\"), \" を \", React.createElement(_components.code, null, \"*\"), \" に置換\"), \"\\n\", React.createElement(_components.li, null, \"interfaceに対するポインタの \", React.createElement(_components.code, null, \"*\"), \"をひとつ減らす\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"あとは愚直に粛々と前に進める\"), \"\\n\", React.createElement(_components.h2, null, \"python clang は強力\"), \"\\n\", React.createElement(_components.p, null, \"こいつがあると、C/C++のヘッダから各言語向けのバインディングを作成するなどの作業を半自動化できて便利。\\n例えば、\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/ousttrue/UnityCairo\"), \"\\n\", React.createElement(_components.p, null, \"元々、\"), \"\\n\", React.createElement(_components.p, null, \"http://andrestraks.github.io/BulletSharp/\"), \"\\n\", React.createElement(_components.p, null, \"が clang で bullet のヘッダーを変換しているぽかったので、そこから調べた。\"), \"\\n\", React.createElement(_components.h2, null, \"できたもの\"), \"\\n\", React.createElement(_components.p, null, \"なんとなく動くものができた。\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/ousttrue/pycpptool\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","code","ul","li","a","h2","_provideComponents","components","React","href","wrapper","MDXLayout","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}