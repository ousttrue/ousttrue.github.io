"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1341],{2334:function(e,t,n){n.r(t),n.d(t,{default:function(){return u}});var a=n(1151),l=n(7294);function s(e){const t=Object.assign({p:"p",span:"span"},(0,a.ah)(),e.components);return l.createElement(l.Fragment,null,l.createElement(t.p,null,"ページを部品に分解する Partial と BlockTemplate について。"),"\n",l.createElement(t.p,null,"PartialTemplate"),"\n",l.createElement(t.p,null,"https://gohugo.io/templates/partials/"),"\n",l.createElement(t.p,null,"layouts/_default/single.html"),"\n",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="html"><pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>\n  {{ partial "head.html" . }}\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>\n    {{ partial "header.html" . }} {{ .Content }} {{ partial "footer.html" . }}\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre></div>'}}),"\n",l.createElement(t.p,null,"のように一部を部品で置き換える。"),"\n",l.createElement(t.p,null,"layouts/partials/head.html\nlayouts/partials/header.html\nlayouts/partials/footer.html"),"\n",l.createElement(t.p,null,"BlockTemplate"),"\n",l.createElement(t.p,null,"https://gohugo.io/templates/blocks/"),"\n",l.createElement(t.p,null,"layouts/_default/single.html"),"\n",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">{{ define "title" }}\n  {{ .Title }} &amp;ndash; {{ .Site.Title }}\n{{ end }}\n\n{{ define "main" }}\n  {{ .Content }}\n{{ end }}</code></pre></div>'}}),"\n",l.createElement(t.p,null,"のように自分が部品になる。\nデフォルトでブロックテンプレート_default/baseof.html が選択される。"),"\n",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">&lt;html>\n&lt;head>\n&lt;title>{{ block "title" . }}\n  &lt;!-- Blocks may include default content. --\x3e\n  {{ .Site.Title }}\n{{ end }}&lt;/title>\n&lt;/head>\n&lt;body>\n{{ block "main" . }}\n&lt;!-- The part of the page that begins to differ between templates --\x3e\n{{ end }}\n&lt;/body></code></pre></div>'}}),"\n",l.createElement(t.p,null,"Partial よりも BlockTemplate の方がきれいに分割できる気がするね。実際には両方使う。"))}var c=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,a.ah)(),e.components);return t?l.createElement(t,e,l.createElement(s,e)):s(e)},p=(n(8678),n(8838));const o={code:e=>{let{children:t,className:n}=e;return n?l.createElement(p.Z,{className:n},t):l.createElement("code",null,t)}};function r(e){let{data:t,children:n}=e;return l.createElement(l.Fragment,null,l.createElement("h1",null,t.mdx.frontmatter.title),l.createElement(a.Zo,{components:o},n))}function u(e){return l.createElement(r,e,l.createElement(c,e))}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2017-05-hugo-partial-and-blocktemplate-md-3832e4308e1bf9c87640.js.map