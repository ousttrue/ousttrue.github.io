"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9137],{4041:function(n,a,s){s.r(a),s.d(a,{default:function(){return k}});var t=s(1151),e=s(7294);function p(n){const a=Object.assign({p:"p",a:"a",h1:"h1",span:"span"},(0,t.ah)(),n.components);return e.createElement(e.Fragment,null,e.createElement(a.p,null,"imgui bind がだいたいできて軌道に乗ったので、glTF viewer の作成にとりかかる。"),"\n",e.createElement(a.p,null,e.createElement(a.a,{href:"https://www.glfw.org/docs/latest/quick.html"},"https://www.glfw.org/docs/latest/quick.html")),"\n",e.createElement(a.p,null,"の回転アニメーション以外できた。"),"\n",e.createElement(a.h1,null,"luajit の cdef で頂点配列の定義が捗る"),"\n",e.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="c++"><pre class="language-c++"><code class="language-c++">static const struct\n{\n    float x, y;\n    float r, g, b;\n} vertices[3] =\n{\n    { -0.6f, -0.4f, 1.f, 0.f, 0.f },\n    {  0.6f, -0.4f, 0.f, 1.f, 0.f },\n    {   0.f,  0.6f, 0.f, 0.f, 1.f }\n};</code></pre></div>'}}),"\n",e.createElement(a.p,null,"が、"),"\n",e.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="lua"><pre class="language-lua"><code class="language-lua">ffi<span class="token punctuation">.</span><span class="token function">cdef</span><span class="token punctuation">(</span><span class="token string">[[\nstruct Vertex2DRGB\n{\n    float x, y;\n    float r, g, b;\n};\n]]</span><span class="token punctuation">)</span>\n\n<span class="token keyword">local</span> vertices <span class="token operator">=</span> ffi<span class="token punctuation">.</span><span class="token function">new</span><span class="token punctuation">(</span>\n    <span class="token string">"struct Vertex2DRGB[3]"</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> <span class="token operator">-</span><span class="token number">0.6</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.4</span><span class="token punctuation">,</span> <span class="token number">1.</span><span class="token punctuation">,</span> <span class="token number">0.</span><span class="token punctuation">,</span> <span class="token number">0.</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> <span class="token number">0.6</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.4</span><span class="token punctuation">,</span> <span class="token number">0.</span><span class="token punctuation">,</span> <span class="token number">1.</span><span class="token punctuation">,</span> <span class="token number">0.</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span> <span class="token number">0.</span><span class="token punctuation">,</span> <span class="token number">0.6</span><span class="token punctuation">,</span> <span class="token number">0.</span><span class="token punctuation">,</span> <span class="token number">0.</span><span class="token punctuation">,</span> <span class="token number">1.</span> <span class="token punctuation">}</span>\n<span class="token punctuation">)</span></code></pre></div>'}}),"\n",e.createElement(a.p,null,"などという書き方ができてしまう。luajit ffi 強い。"),"\n",e.createElement(a.h1,null,"ffi.metatype"),"\n",e.createElement(a.p,null,"luajit を活かした線形代数ライブラリを探索していて、"),"\n",e.createElement(a.p,null,e.createElement(a.a,{href:"https://github.com/bjornbytes/maf"},"https://github.com/bjornbytes/maf")),"\n",e.createElement(a.p,null,"を見つけた。"),"\n",e.createElement(a.p,null,"luajit ffi には便利関数"),"\n",e.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">ffi.metatype(ct, metatable)</code></pre></div>'}}),"\n",e.createElement(a.p,null,"があって、これを使うと ffi.cdef した C の struct に lua の metatable を合体できる。"),"\n",e.createElement(a.p,null,"線形代数ライブラリは、 ",e.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">ffi.metatype</code>'}})," を使って自作してみよう(mafにはvec3 と quaternion しかないのもあり)。\nついでに、lua の unittest を取り入れましょう。"),"\n",e.createElement(a.h1,null,"20210830"),"\n",e.createElement(a.p,null,e.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">mat4</code>'}})," を実装してみた。"),"\n",e.createElement(a.p,null,e.createElement(a.a,{href:"https://github.com/ousttrue/limgui/blob/master/lua/mafex.lua"},"https://github.com/ousttrue/limgui/blob/master/lua/mafex.lua")),"\n",e.createElement(a.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="c"><pre class="language-c"><code class="language-c">    <span class="token keyword">typedef</span> <span class="token keyword">union</span> <span class="token punctuation">{</span>\n        <span class="token keyword">struct</span> <span class="token punctuation">{</span>\n            <span class="token keyword">float</span> _11<span class="token punctuation">,</span> _12<span class="token punctuation">,</span> _13<span class="token punctuation">,</span> _14<span class="token punctuation">;</span>\n            <span class="token keyword">float</span> _21<span class="token punctuation">,</span> _22<span class="token punctuation">,</span> _23<span class="token punctuation">,</span> _24<span class="token punctuation">;</span>\n            <span class="token keyword">float</span> _31<span class="token punctuation">,</span> _32<span class="token punctuation">,</span> _33<span class="token punctuation">,</span> _34<span class="token punctuation">;</span>\n            <span class="token keyword">float</span> _41<span class="token punctuation">,</span> _42<span class="token punctuation">,</span> _43<span class="token punctuation">,</span> _44<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">;</span>\n        <span class="token keyword">float</span> array<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> mat4<span class="token punctuation">;</span></code></pre></div>'}}),"\n",e.createElement(a.p,null,"という定義で OpenGL の uniform 変数に直接渡せるので使いやすい。"))}var l=function(n){void 0===n&&(n={});const{wrapper:a}=Object.assign({},(0,t.ah)(),n.components);return a?e.createElement(a,n,e.createElement(p,n)):p(n)},c=s(8678),o=s(1883),u=s(8838);const r={code:n=>{let{children:a,className:s}=n;return s?e.createElement(u.Z,{className:s},a):e.createElement("code",null,a)}};function i(n){let{data:a,children:s}=n;const p=a.mdx.frontmatter;return e.createElement(c.Z,null,e.createElement("h1",null,p.title),e.createElement("div",{className:"tags-index"},p.tags&&p.tags.length>0&&p.tags.map((n=>e.createElement(o.rU,{to:"/tags/"+n+"/",itemProp:"url"},e.createElement("button",null,n))))),e.createElement(t.Zo,{components:r},s))}function k(n){return e.createElement(i,n,e.createElement(l,n))}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2021-summer-lua-opengl-md-7d35db5d6edc04b56bc9.js.map