{"version":3,"file":"component---content-posts-2021-luv-md-40f7509377150e5cc2b1.js","mappings":"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","sources":["webpack:///./content/posts/2021/luv.md","webpack:///./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h1: \"h1\",\n    pre: \"pre\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    blockquote: \"blockquote\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"main loop がブロックするので luv を取り入れてみる。\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/luvit/luv\"), \"\\n\", React.createElement(_components.h1, null, \"cmake で build\"), \"\\n\", React.createElement(_components.p, null, \"luv に CMake が付属しており簡単。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"$ cmake -S {LUV_DIR} -B {BUILD_DIR}\\n$ cmake --build {BUILD_DIR} --config Release\\n\")), \"\\n\", React.createElement(_components.h1, null, \"main loop を idle へ\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-lua\"\n  }, \"-- Main loop\\nwhile app:new_frame() do\\n    gui:update()\\n    app:render(gui.clear_color)\\nend\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-lua\"\n  }, \"local uv = require(\\\"luv\\\")\\n\\n-- Main loop\\nlocal idle = uv.new_idle()\\nidle:start(function()\\n    if not app:new_frame() then\\n        idle:stop()\\n    end\\n    gui:update()\\n    app:render(gui.clear_color)\\nend)\\n\\nuv.run(\\\"default\\\")\\n\")), \"\\n\", React.createElement(_components.h1, null, \"重い処理を thread へ\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-lua\"\n  }, \"    local ctx = uv.new_work(\\n        on_thread, --work,in threadpool\\n        on_end --after work, in loop thread\\n    )\\n    uv.queue_work(ctx, mp.pack({ ... }))\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"Error: thread arg not support type 'table' at 2Error: thread arg not support type table at 1Uncaught Error: attempt to call a nil value\\n\")), \"\\n\", React.createElement(_components.p, null, \"あ\"), \"\\n\", React.createElement(_components.h1, null, \"thread 間で受け渡しのできる型\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/luvit/luv/blob/master/docs.md#pseudo-types\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"threadargs: variable arguments (...) of type nil, boolean, number, string, or userdata\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"nvim ではそこで messagepack なわけか。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://tullio.hatenablog.com/entry/20121112/1352732239\"\n  }, \"Kyoto Tycoon+Lua-JIT拡張+MessagePack=無敵\"), \" 経由で \", React.createElement(_components.a, {\n    href: \"https://gist.github.com/catwell/2971290\"\n  }, \"The state of MessagePack in Lua\"), \" をたどり着く。\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"If you want pure LuaJIT -> luajit-msgpack-pure\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"たしかに、これだ。\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/catwell/luajit-msgpack-pure\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Windows なので \", React.createElement(_components.code, null, \"malloc\"), \", \", React.createElement(_components.code, null, \"free\"), \", \", React.createElement(_components.code, null, \"realloc\"), \" が cdef できなかったのを修正\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"function\"), \" と \", React.createElement(_components.code, null, \"cdata\"), \" を nil にしてスキップする処理を追加してみた\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"結果、巨大なテーブルの pack/unpack でブロックしてしまう。\\nあとスレッド側のエラーハンドリングをしてないので、デバッガはアタッチできないし、何もわからない。\\n\", React.createElement(_components.code, null, \"pcall\"), \" などでエラーメッセージを取得して、失敗した場合はエラーメッセージを投げるようにしてあげる必要がある。\"), \"\\n\", React.createElement(_components.p, null, \"なんとなく、使い方はわかった。\\n後で、アニメーションシステムを実装するときのインフラにも使えるかもしれない。\\nOpenGL のレンダースレッドと、シーン更新を分離する。\"), \"\\n\", React.createElement(_components.h1, null, \"関連\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://kimitok.hateblo.jp/entry/2014/04/16/223643\"\n  }, \"node.jsを支えるlibuvのチュートリアル\\\"uvbook\\\" :スレッド\")), \"\\n\", React.createElement(_components.li, null, \"https://nikhilm.github.io/uvbook/threads.html\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h1","pre","code","ul","li","blockquote","a","_provideComponents","components","React","className","href","wrapper","MDXLayout","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}