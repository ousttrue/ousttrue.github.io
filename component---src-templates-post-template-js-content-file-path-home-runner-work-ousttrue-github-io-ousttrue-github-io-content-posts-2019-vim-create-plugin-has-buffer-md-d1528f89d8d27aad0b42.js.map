{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2019-vim-create-plugin-has-buffer-md-d1528f89d8d27aad0b42.js","mappings":"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","sources":["webpack:///./content/posts/2019/vim_create_plugin_has_buffer.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    h3: \"h3\",\n    span: \"span\",\n    h4: \"h4\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"独自のバッファを持つpluginを作りたい\"), \"\\n\", React.createElement(_components.h2, null, \"BufferList読んでみる\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/vim-scripts/bufferlist.vim/blob/master/plugin/bufferlist.vim\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"273行\"), \"\\n\", React.createElement(_components.p, null, \"この量なら読める。\"), \"\\n\", React.createElement(_components.h3, null, \"インクルードガード\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"vim\\\"><pre class=\\\"language-vim\\\"><code class=\\\"language-vim\\\"><span class=\\\"token keyword\\\">if</span> <span class=\\\"token function\\\">exists</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'g:BufferListLoaded'</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token keyword\\\">finish</span>\\n<span class=\\\"token keyword\\\">endif</span>\\n<span class=\\\"token keyword\\\">let</span> g<span class=\\\"token punctuation\\\">:</span>BufferListLoaded <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">1</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h3, null, \"初期値決め\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"vim\\\"><pre class=\\\"language-vim\\\"><code class=\\\"language-vim\\\"><span class=\\\"token comment\\\">\\\" vimrcで先に値を決められるようにしている？</span>\\n<span class=\\\"token comment\\\">\\\" vimrc より plugin の方が後に実行されるからか？</span>\\n<span class=\\\"token keyword\\\">if</span> <span class=\\\"token operator\\\">!</span><span class=\\\"token function\\\">exists</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'g:BufferListWidth'</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token keyword\\\">let</span> g<span class=\\\"token punctuation\\\">:</span>BufferListWidth <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">20</span>\\n<span class=\\\"token keyword\\\">endif</span>\\n\\n<span class=\\\"token keyword\\\">if</span> <span class=\\\"token operator\\\">!</span><span class=\\\"token function\\\">exists</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'g:BufferListMaxWidth'</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token keyword\\\">let</span> g<span class=\\\"token punctuation\\\">:</span>BufferListMaxWidth <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">40</span>\\n<span class=\\\"token keyword\\\">endif</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h3, null, \"BufferList関数\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">__BUFFERLIST__</code>\"\n    }\n  }), \" という Buffer を専用のバッファとして扱う。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"vim\\\"><pre class=\\\"language-vim\\\"><code class=\\\"language-vim\\\"><span class=\\\"token comment\\\">\\\" toggled the buffer list on/off</span>\\n<span class=\\\"token keyword\\\">function</span><span class=\\\"token operator\\\">!</span> <span class=\\\"token function\\\">BufferList</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token comment\\\">\\\" if we get called and the list is open --> close it</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token function\\\">bufexists</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token function\\\">bufnr</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"__BUFFERLIST__\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token comment\\\">\\\" 既に開いていたら閉じる</span>\\n    exec <span class=\\\"token string\\\">':'</span> <span class=\\\"token operator\\\">.</span> <span class=\\\"token function\\\">bufnr</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"__BUFFERLIST__\\\"</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">.</span> <span class=\\\"token string\\\">'bwipeout'</span>\\n    <span class=\\\"token keyword\\\">return</span>\\n  <span class=\\\"token keyword\\\">endif</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">bufnr</code>\"\n    }\n  }), \" でバッファ名からバッファ番号を得て、\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">bufexists</code>\"\n    }\n  }), \" で存在を確認する。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">bufnr</code>\"\n    }\n  }), \" には特別な名前を指定出来て以下のような効果があるようだ。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"vim\\\"><pre class=\\\"language-vim\\\"><code class=\\\"language-vim\\\">  <span class=\\\"token keyword\\\">let</span> <span class=\\\"token keyword\\\">l</span><span class=\\\"token punctuation\\\">:</span>bufcount <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">bufnr</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'$'</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token keyword\\\">let</span> <span class=\\\"token keyword\\\">l</span><span class=\\\"token punctuation\\\">:</span>activebuf <span class=\\\"token operator\\\">=</span> <span class=\\\"token function\\\">bufnr</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h4, null, \"バッファを作る\"), \"\\n\", React.createElement(_components.p, null, \"作ったバッファがアクティブになり、以降の操作対象になる。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"vim\\\"><pre class=\\\"language-vim\\\"><code class=\\\"language-vim\\\">  <span class=\\\"token comment\\\">\\\" now, create the buffer &amp; set it up</span>\\n  exec <span class=\\\"token string\\\">'silent! '</span> <span class=\\\"token operator\\\">.</span> <span class=\\\"token keyword\\\">l</span><span class=\\\"token punctuation\\\">:</span>width <span class=\\\"token operator\\\">.</span> <span class=\\\"token string\\\">'vne __BUFFERLIST__'</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h4, null, \"色決め\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"vim\\\"><pre class=\\\"language-vim\\\"><code class=\\\"language-vim\\\">  <span class=\\\"token comment\\\">\\\" set up syntax highlighting</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token function\\\">has</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"syntax\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token builtin\\\">syn</span> clear\\n    <span class=\\\"token builtin\\\">syn</span> <span class=\\\"token keyword\\\">match</span> BufferNormal <span class=\\\"token operator\\\">/</span>  <span class=\\\"token operator\\\">.</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">/</span>\\n    <span class=\\\"token builtin\\\">syn</span> <span class=\\\"token keyword\\\">match</span> BufferSelected <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">.</span><span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">/</span>hs<span class=\\\"token operator\\\">=</span>s<span class=\\\"token operator\\\">+</span><span class=\\\"token number\\\">1</span>\\n    <span class=\\\"token builtin\\\">hi</span> <span class=\\\"token builtin\\\">def</span> BufferNormal ctermfg<span class=\\\"token operator\\\">=</span>black ctermbg<span class=\\\"token operator\\\">=</span>white\\n    <span class=\\\"token builtin\\\">hi</span> <span class=\\\"token builtin\\\">def</span> BufferSelected ctermfg<span class=\\\"token operator\\\">=</span>white ctermbg<span class=\\\"token operator\\\">=</span>black\\n  <span class=\\\"token keyword\\\">endif</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h4, null, \"Buffer構築\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">setlocal nomodifiable</code>\"\n    }\n  }), \" で編集不可に\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"vim\\\"><pre class=\\\"language-vim\\\"><code class=\\\"language-vim\\\">  <span class=\\\"token keyword\\\">setlocal</span> <span class=\\\"token builtin\\\">modifiable</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token keyword\\\">l</span><span class=\\\"token punctuation\\\">:</span>displayedbufs <span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">0</span>\\n    <span class=\\\"token comment\\\">\\\" input the buffer list, delete the trailing newline, &amp; fill with blank lines</span>\\n    <span class=\\\"token keyword\\\">put</span><span class=\\\"token operator\\\">!</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token keyword\\\">l</span><span class=\\\"token punctuation\\\">:</span>buflist\\n    <span class=\\\"token comment\\\">\\\" is there any way to NOT delete into a register? bummer...</span>\\n    <span class=\\\"token comment\\\">\\\"norm Gdd$</span>\\n    norm GkJ\\n    <span class=\\\"token keyword\\\">while</span> <span class=\\\"token function\\\">winheight</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">></span> <span class=\\\"token function\\\">line</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\".\\\"</span><span class=\\\"token punctuation\\\">)</span>\\n      <span class=\\\"token keyword\\\">put</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token keyword\\\">l</span><span class=\\\"token punctuation\\\">:</span>fill\\n    <span class=\\\"token keyword\\\">endwhile</span>\\n  <span class=\\\"token keyword\\\">else</span>\\n    <span class=\\\"token keyword\\\">let</span> <span class=\\\"token keyword\\\">l</span><span class=\\\"token punctuation\\\">:</span>i <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">0</span> | <span class=\\\"token keyword\\\">while</span> <span class=\\\"token keyword\\\">l</span><span class=\\\"token punctuation\\\">:</span>i <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token function\\\">winheight</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span> | <span class=\\\"token keyword\\\">let</span> <span class=\\\"token keyword\\\">l</span><span class=\\\"token punctuation\\\">:</span>i <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">l</span><span class=\\\"token punctuation\\\">:</span>i <span class=\\\"token operator\\\">+</span> <span class=\\\"token number\\\">1</span>\\n      <span class=\\\"token keyword\\\">put</span><span class=\\\"token operator\\\">!</span> <span class=\\\"token operator\\\">=</span><span class=\\\"token keyword\\\">l</span><span class=\\\"token punctuation\\\">:</span>fill\\n    <span class=\\\"token keyword\\\">endwhile</span>\\n    norm <span class=\\\"token number\\\">0</span>\\n  <span class=\\\"token keyword\\\">endif</span>\\n  <span class=\\\"token keyword\\\">setlocal</span> <span class=\\\"token builtin\\\">nomodifiable</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h4, null, \"操作を設定\"), \"\\n\", React.createElement(_components.p, null, \"バッファローカルに \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">map</code>\"\n    }\n  }), \" を設定する。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">map</code>\"\n    }\n  }), \" がキーボード・マウス入力へのコールバック設定になっているのか。なるほど。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"vim\\\"><pre class=\\\"language-vim\\\"><code class=\\\"language-vim\\\">  <span class=\\\"token comment\\\">\\\" set up the keymap</span>\\n  <span class=\\\"token builtin\\\">noremap</span> <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">silent</span><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">buffer</span><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">&lt;</span>CR<span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">:</span><span class=\\\"token keyword\\\">call</span> <span class=\\\"token function\\\">LoadBuffer</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">&lt;</span>CR<span class=\\\"token operator\\\">></span>\\n  map <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">silent</span><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">buffer</span><span class=\\\"token operator\\\">></span> <span class=\\\"token keyword\\\">q</span> <span class=\\\"token punctuation\\\">:</span><span class=\\\"token keyword\\\">bwipeout</span><span class=\\\"token operator\\\">&lt;</span>CR<span class=\\\"token operator\\\">></span> \\n  map <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">silent</span><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">buffer</span><span class=\\\"token operator\\\">></span> <span class=\\\"token keyword\\\">j</span> <span class=\\\"token punctuation\\\">:</span><span class=\\\"token keyword\\\">call</span> <span class=\\\"token function\\\">BufferListMove</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"down\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">&lt;</span>CR<span class=\\\"token operator\\\">></span>\\n  map <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">silent</span><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">buffer</span><span class=\\\"token operator\\\">></span> <span class=\\\"token keyword\\\">k</span> <span class=\\\"token punctuation\\\">:</span><span class=\\\"token keyword\\\">call</span> <span class=\\\"token function\\\">BufferListMove</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"up\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">&lt;</span>CR<span class=\\\"token operator\\\">></span>\\n  map <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">silent</span><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">buffer</span><span class=\\\"token operator\\\">></span> <span class=\\\"token keyword\\\">d</span> <span class=\\\"token punctuation\\\">:</span><span class=\\\"token keyword\\\">call</span> <span class=\\\"token function\\\">BufferListDeleteBuffer</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">&lt;</span>CR<span class=\\\"token operator\\\">></span>\\n  map <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">silent</span><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">buffer</span><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">&lt;</span>MouseDown<span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">:</span><span class=\\\"token keyword\\\">call</span> <span class=\\\"token function\\\">BufferListMove</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"up\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">&lt;</span>CR<span class=\\\"token operator\\\">></span>\\n  map <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">silent</span><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">buffer</span><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">&lt;</span>MouseUp<span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">:</span><span class=\\\"token keyword\\\">call</span> <span class=\\\"token function\\\">BufferListMove</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"down\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">&lt;</span>CR<span class=\\\"token operator\\\">></span>\\n  map <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">silent</span><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">buffer</span><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">&lt;</span>LeftDrag<span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">&lt;</span>Nop<span class=\\\"token operator\\\">></span>\\n  map <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">silent</span><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">buffer</span><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">&lt;</span>LeftRelease<span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">:</span><span class=\\\"token keyword\\\">call</span> <span class=\\\"token function\\\">BufferListMove</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"mouse\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">&lt;</span>CR<span class=\\\"token operator\\\">></span>\\n  map <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">silent</span><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">buffer</span><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token number\\\">2</span><span class=\\\"token operator\\\">-</span>LeftMouse<span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">:</span><span class=\\\"token keyword\\\">call</span> <span class=\\\"token function\\\">BufferListMove</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"mouse\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">&lt;</span>CR<span class=\\\"token operator\\\">></span>\\n    \\\\<span class=\\\"token punctuation\\\">:</span><span class=\\\"token keyword\\\">call</span> <span class=\\\"token function\\\">LoadBuffer</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">&lt;</span>CR<span class=\\\"token operator\\\">></span>\\n  map <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">silent</span><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">buffer</span><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">&lt;</span>Down<span class=\\\"token operator\\\">></span> <span class=\\\"token keyword\\\">j</span>\\n  map <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">silent</span><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">buffer</span><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">&lt;</span>Up<span class=\\\"token operator\\\">></span> <span class=\\\"token keyword\\\">k</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"左右への動きを封じてある\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"vim\\\"><pre class=\\\"language-vim\\\"><code class=\\\"language-vim\\\">  map <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">buffer</span><span class=\\\"token operator\\\">></span> <span class=\\\"token keyword\\\">h</span> <span class=\\\"token operator\\\">&lt;</span>Nop<span class=\\\"token operator\\\">></span>\\n  map <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">buffer</span><span class=\\\"token operator\\\">></span> <span class=\\\"token keyword\\\">l</span> <span class=\\\"token operator\\\">&lt;</span>Nop<span class=\\\"token operator\\\">></span>\\n  map <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">buffer</span><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">&lt;</span>Left<span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">&lt;</span>Nop<span class=\\\"token operator\\\">></span>\\n  map <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">buffer</span><span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">&lt;</span>Right<span class=\\\"token operator\\\">></span> <span class=\\\"token operator\\\">&lt;</span>Nop<span class=\\\"token operator\\\">></span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"その他編集系の機能を封じる\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"vim\\\"><pre class=\\\"language-vim\\\"><code class=\\\"language-vim\\\">  map <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">buffer</span><span class=\\\"token operator\\\">></span> i <span class=\\\"token operator\\\">&lt;</span>Nop<span class=\\\"token operator\\\">></span>\\n  map <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">buffer</span><span class=\\\"token operator\\\">></span> a <span class=\\\"token operator\\\">&lt;</span>Nop<span class=\\\"token operator\\\">></span>\\n  map <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">buffer</span><span class=\\\"token operator\\\">></span> I <span class=\\\"token operator\\\">&lt;</span>Nop<span class=\\\"token operator\\\">></span>\\n  map <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">buffer</span><span class=\\\"token operator\\\">></span> A <span class=\\\"token operator\\\">&lt;</span>Nop<span class=\\\"token operator\\\">></span>\\n  map <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">buffer</span><span class=\\\"token operator\\\">></span> <span class=\\\"token keyword\\\">o</span> <span class=\\\"token operator\\\">&lt;</span>Nop<span class=\\\"token operator\\\">></span>\\n  map <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token keyword\\\">buffer</span><span class=\\\"token operator\\\">></span> O <span class=\\\"token operator\\\">&lt;</span>Nop<span class=\\\"token operator\\\">></span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"移動\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">  map &lt;silent> &lt;buffer> &lt;Home> :call BufferListMove(1)&lt;CR>\\n  map &lt;silent> &lt;buffer> &lt;End> :call BufferListMove(line(\\\"$\\\"))&lt;CR></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"情報収集\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">:set nomodifiable</code>\"\n    }\n  }), \" で調べてみた\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"http://tyru.hatenablog.com/entry/20101107/modifiable_and_readonly\"), \"\\n\", React.createElement(_components.li, null, \"https://vimconf.org/2018/slides/Effective_Modern_Vim_scripting_at_vimconf2018_for_PDF.pdf\"), \"\\n\", React.createElement(_components.li, null, \"https://vi.stackexchange.com/questions/17140/how-to-create-a-buffer-like-a-fugitive-temporary-buffer\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">:set buftype=nofile</code>\"\n    }\n  }), \" が出てきた\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"http://leafcage.hateblo.jp/entry/2013/11/21/083830\"\n  }, \"'nobuflisted' なバッファの作り方\")), \"\\n\", React.createElement(_components.li, null, \"https://vi.stackexchange.com/questions/14832/how-to-create-a-buffer-with-customized-behavior-how-to-create-a-buffer-that-a\"), \"\\n\", React.createElement(_components.li, null, \"http://learnvimscriptthehardway.stevelosh.com/\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"NERDTree解読\"), \"\\n\", React.createElement(_components.h3, null, \"左側にどうやって \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">split</code>\"\n    }\n  }), \" して開くのか\"), \"\\n\", React.createElement(_components.h3, null, \"ファイルを選択して開くとき開き先をどうやって決めるのか\"), \"\\n\", React.createElement(_components.h2, null, \"pythonに移植できんやろか\"), \"\\n\", React.createElement(_components.p, null, \"つまり、Pythonでvimから見える関数を定義できれば勝つるのでは。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"http://candidtim.github.io/vim/2017/08/11/write-vim-plugin-in-python.html\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">vim.eval</code>\"\n    }\n  }), \" とかあるな・・・。いけるのでは？\"), \"\\n\", React.createElement(_components.p, null, \"慣れたら全部 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">vim script</code>\"\n    }\n  }), \" で書くようになりそうだけど、練習に移植してみよか。\"), \"\\n\", React.createElement(_components.p, null, \"nvimで、\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">:py3 import sys; print(sys.version)</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.p, null, \"としたら\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">3.6.8 (tags/v3.6.8:3c6b436a57, Dec 23 2018, 23:31:17) [MSC v.1916 32 bit (Intel)]</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.p, null, \"と返ってきた。なるほど。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"[Pythonでvim pluginを書く https://qiita.com/zakuro9715/items/98449dd4c6b9e1d61ef5]\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2019/vim_create_plugin_has_buffer.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h2","ul","li","h3","span","h4","a","_provideComponents","components","React","dangerouslySetInnerHTML","__html","href","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}