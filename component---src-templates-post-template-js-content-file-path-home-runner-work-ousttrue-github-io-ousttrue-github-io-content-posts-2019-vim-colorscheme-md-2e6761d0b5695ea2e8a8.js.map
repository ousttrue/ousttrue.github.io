{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2019-vim-colorscheme-md-2e6761d0b5695ea2e8a8.js","mappings":"+JAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,GAAI,KACJC,GAAI,KACJC,EAAG,IACHC,KAAM,SACLC,EAAAA,EAAAA,MAAsBV,EAAMW,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBX,EAAYG,GAAI,KAAM,aAAc,KAAMQ,EAAAA,cAAoBX,EAAYI,EAAG,KAAM,4BAA6B,KAAMO,EAAAA,cAAoBX,EAAYK,GAAI,KAAM,KAAMM,EAAAA,cAAoBX,EAAYM,GAAI,KAAM,8CAA+C,KAAMK,EAAAA,cAAoBX,EAAYM,GAAI,KAAMK,EAAAA,cAAoBX,EAAYO,EAAG,CACrZK,KAAM,gEACL,0BAA2B,MAAO,KAAMD,EAAAA,cAAoBX,EAAYQ,KAAM,CAC/EK,wBAAyB,CACvBC,OAAQ,kQAER,KAAMH,EAAAA,cAAoBX,EAAYI,EAAG,KAAM,kCAAmCO,EAAAA,cAAoBX,EAAYQ,KAAM,CAC1HK,wBAAyB,CACvBC,OAAQ,mDAER,gEAAiE,KAAMH,EAAAA,cAAoBX,EAAYG,GAAI,KAAM,MAAO,KAAMQ,EAAAA,cAAoBX,EAAYK,GAAI,KAAM,KAAMM,EAAAA,cAAoBX,EAAYM,GAAI,KAAM,+DAAgE,KAAMK,EAAAA,cAAoBX,EAAYM,GAAI,KAAMK,EAAAA,cAAoBX,EAAYO,EAAG,CAC7WK,KAAM,oDACL,iCAAkC,MACvC,CAKA,MAJA,SAAoBb,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOgB,QAASC,GAAaf,OAAOC,OAAO,CAAC,GAAGO,EAAAA,EAAAA,MAAsBV,EAAMW,YAC3E,OAAOM,EAAYL,EAAAA,cAAoBK,EAAWjB,EAAOY,EAAAA,cAAoBb,EAAmBC,IAAUD,EAAkBC,EAC9H,E,oBCvBA,MAAMW,EAAa,CACjBO,KAAMC,IAA2B,IAA1B,SAACC,EAAQ,UAAEC,GAAUF,EAC1B,OAAOE,EAAYT,EAAAA,cAAoBU,EAAAA,EAAsB,CAC3DD,UAAWA,GACVD,GAAYR,EAAAA,cAAoB,OAAQ,KAAMQ,EAAS,GAG9D,SAASG,EAAYC,GAAmB,IAAlB,KAACC,EAAI,SAAEL,GAASI,EACpC,OAAOZ,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoB,KAAM,KAAMa,EAAKC,IAAIC,YAAYC,OAAQhB,EAAAA,cAAoBiB,EAAAA,GAAa,CAC7IlB,WAAYA,GACXS,GACL,CACe,SAASU,EAAiB9B,GACvC,OAAOY,EAAAA,cAAoBW,EAAcvB,EAAOY,EAAAA,cAAoBmB,EAAqB/B,GAC3F,C","sources":["webpack:///./content/posts/2019/vim_colorscheme.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"カッコのハイライト\"), \"\\n\", React.createElement(_components.p, null, \"カーソル下の反対側のカッコが派手過ぎて気が散る。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://vim-jp.org/vimdoc-ja/pi_paren.html\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://qiita.com/mochizukikotaro/items/7829ab32e0353d49c185\"\n  }, \"Vimで括弧の反対側のハイライトを調節する\")), \"\\n\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"vim\\\"><pre class=\\\"language-vim\\\"><code class=\\\"language-vim\\\"><span class=\\\"token builtin\\\">hi</span> MatchParen ctermbg<span class=\\\"token operator\\\">=</span><span class=\\\"token number\\\">239</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"両方の色を指定できるとよかったのだけど、反対側のカッコの色を \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">MatchParen</code>\"\n    }\n  }), \" で指定してカーソルの下をそれの反転色にする様子。\\nほどほどにグレーで暗い色にして、カーソルがほぼ白になるようにした。\"), \"\\n\", React.createElement(_components.h2, null, \"参考\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://thinca.hatenablog.com/entry/I_expect_to_colorscheme\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"http://cohama.hateblo.jp/entry/2013/08/11/020849\"\n  }, \"Vim のカラースキームが微妙に気に食わないときの対処法\")), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2019/vim_colorscheme.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","ul","li","a","span","_provideComponents","components","React","href","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}