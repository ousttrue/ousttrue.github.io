{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2013-06-29-mingw-md-da4cf1ddb6a22a8727fc.js","mappings":"+JAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,GAAI,OACHC,EAAAA,EAAAA,MAAsBN,EAAMO,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,wXAAyX,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,uFAAwF,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,yUAA0U,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,gEAAiE,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAMI,EAAAA,cAAoBP,EAAYI,GAAI,KAAM,4FAA6F,oEAC3vC,CAKA,MAJA,SAAoBL,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOS,QAASC,GAAaR,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWV,EAAOQ,EAAAA,cAAoBT,EAAmBC,IAAUD,EAAkBC,EAC9H,E,oBCPA,MAAMO,EAAa,CACjBI,KAAMC,IAA2B,IAA1B,SAACC,EAAQ,UAAEC,GAAUF,EAC1B,OAAOE,EAAYN,EAAAA,cAAoBO,EAAAA,EAAsB,CAC3DD,UAAWA,GACVD,GAAYL,EAAAA,cAAoB,OAAQ,KAAMK,EAAS,GAG9D,SAASG,EAAYC,GAAmB,IAAlB,KAACC,EAAI,SAAEL,GAASI,EACpC,OAAOT,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoB,KAAM,KAAMU,EAAKC,IAAIC,YAAYC,OAAQb,EAAAA,cAAoBc,EAAAA,GAAa,CAC7If,WAAYA,GACXM,GACL,CACe,SAASU,EAAiBvB,GACvC,OAAOQ,EAAAA,cAAoBQ,EAAchB,EAAOQ,EAAAA,cAAoBgB,EAAqBxB,GAC3F,C","sources":["webpack:///./content/posts/2013/06/29/mingw.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    em: \"em\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"MinGW環境\\nIrrlichtで開発を進めるにあたって開発環境をVC2010ExpressEditionからMinGWに乗り換えることにした。\\n後々Linux上でもコンパイルが通るようにしておきたいのでこちらの方が都合がよい。\\n基本的にはVCでもビルドできる状態を維持する方針ではある。\\ntoolチェイン入手\\nMinGW本家ではなくTDM-GCCからgcc一式を入手する。\\nとりあえず32bit版を手に入れた。\\nbin/mingw32-make.exeをbin/make.exeにコピーしておいた。\\ncui整備\\ncygwinから使うとcygwinのincludeやlibを使われてややこしいのでDos窓ベースで開発する。\\n環境変数等をきっちり設定すればcygwin上でもできるのだけどやり方を忘れてしまったのでとりあえず。\"), \"\\n\", React.createElement(_components.p, null, \"http://www.nyaos.org/ Dos窓でcontrol-P,\\ncontrol-Nによる履歴検索やパスのデリミタに”/“を使えるようになって快適になる。\"), \"\\n\", React.createElement(_components.p, null, \"プロジェクト構成やソースの修正\\nスタティックリンクの順番の調整と、一部templateの仕様が違ってコンパイルが通らないところ、\\nboostのpragmaで自動リンクになっていたところを明示的に記述するなどを\\n地道に修正した。あとboostのMinGWビルドの生成。\\ngccの方がVCより制約が厳しい感触だった。typenameが必要な箇所とか、staticメンバ関数のラムダ内での呼び出しで\\nthisキャプチャが無いエラーが出るなど。\\n逆に、何故VCでコンパイルが通っていたのか判らないところもあったがとりあえず作業完了。\\nついでに、msgpack-rpc-asioの修正部分を更新。\\nあとでlibOVRのgcc作業をやる。\\n参考\"), \"\\n\", React.createElement(_components.p, null, \"http://anengineer.tumblr.com/post/13196592706/nyaos-bash-lua\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, \"nya “’ option histfilesize 3000 option savehistfile\\n%USERPROFILE%/.history bindkey CTRL\"), \"P vzlike-previous-history bindkey\\nCTRL_N vzlike-next-history “’\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2013/06/29/mingw.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","em","_provideComponents","components","React","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}