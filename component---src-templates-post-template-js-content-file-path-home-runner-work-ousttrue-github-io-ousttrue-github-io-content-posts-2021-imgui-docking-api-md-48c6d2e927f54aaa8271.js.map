{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2021-imgui-docking-api-md-48c6d2e927f54aaa8271.js","mappings":"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","sources":["webpack:///./content/posts/2021/imgui_docking_api.md","webpack:///./src/templates/post-template.js","webpack:///./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\",\n    h1: \"h1\",\n    ul: \"ul\",\n    li: \"li\",\n    h2: \"h2\",\n    a: \"a\",\n    pre: \"pre\",\n    img: \"img\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"https://github.com/ousttrue/limgui\"), \"\\n\", React.createElement(_components.p, null, \"ようやく \", React.createElement(_components.code, null, \"FFI\"), \" の整備ができたので、ImGui の API 調査に進む\"), \"\\n\", React.createElement(_components.h1, null, \"DockingBuilder\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"imgui_internal.h\"), \" に一連の \", React.createElement(_components.code, null, \"Docking\"), \" 向けの API がある。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/ocornut/imgui/issues/2109\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, React.createElement(_components.a, {\n    href: \"https://gist.github.com/PossiblyAShrub/0aea9511b84c34e191eaa90dd7225969\"\n  }, \"PossiblyAShrub/dock_builder_example.cpp\")), \"\\n\", React.createElement(_components.p, null, \"変数を流用していてわかりにくいのだが、おそらく下記のような感じだと思う。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"+----+----+\\n|    |    |\\n|Left|----|\\n|    |Down|\\n+----+----+\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-c++\"\n  }, \"auto root = ImGui::DockBuilderAddNode(dockspace_id, dockspace_flags | ImGuiDockNodeFlags_DockSpace);\\n                                                                         // 返り値と同じ Left  // 反対側 Right\\nImGuiID right;\\nauto left = ImGui::DockBuilderSplitNode(root, ImGuiDir_Left, 0.2f, nullptr, &right);\\n                                                                         // 返り値と同じ Down  // 反対側 Up\\nImGuiID up;\\nauto down = ImGui::DockBuilderSplitNode(right, ImGuiDir_Down, 0.25f, nullptr, &up);\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"# .imgui.ini\\n[Docking][Data]\\nDockSpace     ID=0x7CF2A649 Window=0x9A404470 Pos=0,30 Size=1200,870 Split=X\\n  DockNode    ID=0x00000001 Parent=0x7CF2A649 SizeRef=599,900 Selected=0xDA554856 => Left\\n  DockNode    ID=0x00000002 Parent=0x7CF2A649 SizeRef=599,900 Split=Y\\n    DockNode  ID=0x00000003 Parent=0x00000002 SizeRef=599,673 CentralNode=1\\n    DockNode  ID=0x00000004 Parent=0x00000002 SizeRef=599,225 Selected=0xBCCD3F05 => Down\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"[ ] central node\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"Tree\"), \"\\n\", React.createElement(_components.p, null, \"libclang のパース結果の \", React.createElement(_components.code, null, \"CXCursor\"), \" のツリー\"), \"\\n\", React.createElement(_components.img, {\n    src: \"%22tree.jpg%22\",\n    alt: \"image\"\n  }), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"[ ] selection\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"Table\"), \"\\n\", React.createElement(_components.p, null, \"glTF を表示してみた。さくさく書けてよさそう。\"), \"\\n\", React.createElement(_components.img, {\n    src: \"%22table.jpg%22\",\n    alt: \"image\"\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2021/imgui_docking_api.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nfunction PostTempalte({data, children}) {\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, null, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","code","h1","ul","li","h2","a","pre","img","_provideComponents","components","React","href","className","src","alt","wrapper","MDXLayout","PostTempalte","_ref","data","children","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}