{"version":3,"file":"component---content-posts-2022-0514-nikola-revival-md-97421bbf4b9239c32afe.js","mappings":"yHAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,EAAG,IACHC,GAAI,KACJC,KAAM,OACNC,IAAK,MACLC,GAAI,KACJC,OAAQ,WACPC,EAAAA,EAAAA,MAAsBZ,EAAMa,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,YAAa,KAAMU,EAAAA,cAAoBb,EAAYI,EAAG,KAAMS,EAAAA,cAAoBb,EAAYK,EAAG,CACxLS,KAAM,0BACL,UAAW,QAAS,KAAMD,EAAAA,cAAoBb,EAAYI,EAAG,KAAM,4DAA6D,KAAMS,EAAAA,cAAoBb,EAAYI,EAAG,KAAM,UAAWS,EAAAA,cAAoBb,EAAYK,EAAG,CAC9NS,KAAM,uBACL,QAAS,WAAYD,EAAAA,cAAoBb,EAAYK,EAAG,CACzDS,KAAM,+CACL,SAAU,2EAA4E,KAAMD,EAAAA,cAAoBb,EAAYM,GAAI,KAAM,8BAA+B,KAAMO,EAAAA,cAAoBb,EAAYI,EAAG,KAAM,YAAaS,EAAAA,cAAoBb,EAAYO,KAAM,KAAM,eAAgB,wGAAyG,KAAMM,EAAAA,cAAoBb,EAAYQ,IAAK,KAAMK,EAAAA,cAAoBb,EAAYO,KAAM,KAAM,2HAA4H,KAAMM,EAAAA,cAAoBb,EAAYI,EAAG,KAAM,uCAAwC,KAAMS,EAAAA,cAAoBb,EAAYM,GAAI,KAAM,MAAO,KAAMO,EAAAA,cAAoBb,EAAYQ,IAAK,KAAMK,EAAAA,cAAoBb,EAAYO,KAAM,CACr0BQ,UAAW,mBACV,0IAA2I,KAAMF,EAAAA,cAAoBb,EAAYS,GAAI,KAAM,wBAAyB,KAAMI,EAAAA,cAAoBb,EAAYI,EAAG,KAAM,4FAA6FS,EAAAA,cAAoBb,EAAYU,OAAQ,KAAM,QAAS,YAAa,KAAMG,EAAAA,cAAoBb,EAAYI,EAAG,KAAM,cAAe,KAAMS,EAAAA,cAAoBb,EAAYI,EAAG,KAAMS,EAAAA,cAAoBb,EAAYO,KAAM,KAAM,0CAA2C,KAAMM,EAAAA,cAAoBb,EAAYI,EAAG,KAAM,oFAAqF,KAAMS,EAAAA,cAAoBb,EAAYS,GAAI,KAAM,iCAAkC,KAAMI,EAAAA,cAAoBb,EAAYI,EAAG,KAAM,4FAA6FS,EAAAA,cAAoBb,EAAYU,OAAQ,KAAM,QAAS,YACtgC,CAKA,UAJA,SAAoBX,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOiB,QAASC,GAAahB,OAAOC,OAAO,CAAC,GAAGS,EAAAA,EAAAA,MAAsBZ,EAAMa,YAC3E,OAAOK,EAAYJ,EAAAA,cAAoBI,EAAWlB,EAAOc,EAAAA,cAAoBf,EAAmBC,IAAUD,EAAkBC,EAC9H,C,sECMO,MAAMmB,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBP,GAC/B,MAAMQ,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAfN,EACFA,EAAWQ,GAGb,IAAIA,KAAsBR,IAChC,CAACQ,EAAmBR,GACzB,C","sources":["webpack:///./content/posts/2022/0514-nikola_revival.md","webpack:///./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\",\n    h2: \"h2\",\n    code: \"code\",\n    pre: \"pre\",\n    h3: \"h3\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Nikola復活\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://getnikola.com/\"\n  }, \"nikola\"), \" 復活。\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/ousttrue/dotfiles/blob/master/dodo.py\"), \"\\n\", React.createElement(_components.p, null, \"を作りながら \", React.createElement(_components.a, {\n    href: \"https://pydoit.org/\"\n  }, \"doit\"), \" を学んだし、 \", React.createElement(_components.a, {\n    href: \"https://jinja.palletsprojects.com/en/3.1.x/\"\n  }, \"jinja\"), \"\\nも少しやったので、前よりは読めそう。\\n使いながら、 nikola のコードを読んで、 doit のカスタムタスクの使い方を眺めてみたい。\"), \"\\n\", React.createElement(_components.h2, null, \"sphinx + ablog + myst との違い\"), \"\\n\", React.createElement(_components.p, null, \"nikola は \", React.createElement(_components.code, null, \"frontmatter\"), \" で title を決めるが、 sphinx は 本文の先頭の見出しで決めるという違いがある。\\nnikola の方も title と 先頭の見出しを同じにする運用にすれば、だいたい同じになると思う。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"conf.py # nikola の設定\\ndocs\\n  + conf.py # sphinx の設定\\n  + posts # content. nikola と sphinx の ablog 両用\\n    + post.md\\n\")), \"\\n\", React.createElement(_components.p, null, \"みたいな感じにしてもだいたい動く。\\n細かく違うところはあると思うが。\"), \"\\n\", React.createElement(_components.h2, null, \"動作\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"    site = Nikola(**config)\\n    DN = DoitNikola(site, quiet)\\n    if _RETURN_DOITNIKOLA:\\n        return DN\\n    _ = DN.run(oargs)\\n\")), \"\\n\", React.createElement(_components.h3, null, \"DoitNikola(DoitMain)\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/getnikola/nikola/blob/398d5722d78a27ac5233849e3057f9d787345561/nikola/\", React.createElement(_components.strong, null, \"main\"), \".py#L301\"), \"\\n\", React.createElement(_components.p, null, \"ここから入っていく。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"from doit.cmd_base import TaskLoader2\")), \"\\n\", React.createElement(_components.p, null, \"https://pydoit.org/extending.html?highlight=taskloader#doit.cmd_base.TaskLoader2\"), \"\\n\", React.createElement(_components.h3, null, \"NikolaTaskLoader(TaskLoader2)\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/getnikola/nikola/blob/398d5722d78a27ac5233849e3057f9d787345561/nikola/\", React.createElement(_components.strong, null, \"main\"), \".py#L257\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","a","h2","code","pre","h3","strong","_provideComponents","components","React","href","className","wrapper","MDXLayout","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}