{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2023-0507-cpp-2-b-md-cbaa9fe62f4c45966f72.js","mappings":"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","sources":["webpack:///./content/posts/2023/0507-cpp2b.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    span: \"span\",\n    h1: \"h1\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"最近、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">c++2b</code>\"\n    }\n  }), \" などの新しいめの機能を試している。\\n機能ごとの感想など。\\nコンパイラは、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">gcc12</code>\"\n    }\n  }), \", \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">clang6</code>\"\n    }\n  }), \", \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">vc2022</code>\"\n    }\n  }), \" あたり。\"), \"\\n\", React.createElement(_components.h1, null, \"meson\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">cpp_std=c++2b</code>\"\n    }\n  }), \" を指定できない w\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">.local/lib/python3.10/site-packages/mesonbuild/compilers/cpp.py</code>\"\n    }\n  }), \" を改造する必要があり、\\n初手からつまずく。\\nなお vc の場合は、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">c++latest</code>\"\n    }\n  }), \" 指定が通るので使えてしまう。\\n使いわける必要があって不便。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">meson-1.1</code>\"\n    }\n  }), \" でまだ対応されていなかった。\"), \"\\n\", React.createElement(_components.h1, null, \"std::format(時期尚早)\"), \"\\n\", React.createElement(_components.p, null, \"vc は使えそう。 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">clang-7?</code>\"\n    }\n  }), \" に来たら使ってみよう。\\n来るまでは stringstream で細々と。\"), \"\\n\", React.createElement(_components.h1, null, \"std::expected\"), \"\\n\", React.createElement(_components.p, null, \"使えなくはないが、 and_then とかが来てなかった。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">std::optional</code>\"\n    }\n  }), \" は、 and_then, or_else, transform 使えそう。\"), \"\\n\", React.createElement(_components.h2, null, \"std::expected と std::optional の使いわけ\"), \"\\n\", React.createElement(_components.p, null, \"失敗しうる処理で、失敗の種類によってエラーハンドリングを分岐させる場合、\\nもしくは失敗原因のログが見たい場合に std::expected を使う。\\nそれ以外は std::optional で十分。\"), \"\\n\", React.createElement(_components.h1, null, \"concept\"), \"\\n\", React.createElement(_components.p, null, \"使えそう。\"), \"\\n\", React.createElement(_components.h1, null, \"LanguageServer(clangd-16)\"), \"\\n\", React.createElement(_components.p, null, \"ヘッダーに対するフォールバックが c++11 になることがある。\\n発生条件が微妙によくわからない。\\nあとは concept とか使うとうまく動かなくなりがち。\"), \"\\n\", React.createElement(_components.h1, null, \"charconv\"), \"\\n\", React.createElement(_components.p, null, \"vc は使えそう。\\njson のパースとかで float を使いたい。\"), \"\\n\", React.createElement(_components.h1, null, \"module\"), \"\\n\", React.createElement(_components.p, null, \"ちょっと規模が大きくなるとコンパイルを通せなかった。大変そう。\"), \"\\n\", React.createElement(_components.h1, null, \"coawait\"), \"\\n\", React.createElement(_components.p, null, \"あまり試していない。動くっぽい？\"), \"\\n\", React.createElement(_components.h1, null, \"range\"), \"\\n\", React.createElement(_components.p, null, \"あまり試していない。動くっぽい？\"), \"\\n\", React.createElement(_components.h1, null, \"c++20 以前の\"), \"\\n\", React.createElement(_components.p, null, \"std::optional, std::span,\\nstd::string_view, std::filesystem, std::u8string, std::u8string_view\\nは使ってもよさそう。\"), \"\\n\", React.createElement(_components.h1, null, \"集成型の初期化\"), \"\\n\", React.createElement(_components.p, null, \"win32 や d3d とか、 vulkan, openxr のような API の使い勝手がよくなる。\\n自作のちょっとした型の場合でも初期値の指定との合わせ技で、\\nコンストラクターよりこっちの方がよさそうと思えることがでてきた。\"), \"\\n\", React.createElement(_components.h1, null, \"関数テンプレートの定数にlambda由来の関数ポインタのアドレスを渡す\"), \"\\n\", React.createElement(_components.p, null, \"vc でできたのだが怪しかった。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2023/0507-cpp2b.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  const frontmatter = data.mdx.frontmatter;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"div\", {\n    className: \"tags-index\"\n  }, frontmatter.tags && frontmatter.tags.length > 0 && frontmatter.tags.map(tag => {\n    return React.createElement(Link, {\n      to: `/tags/${tag}/`,\n      itemProp: \"url\"\n    }, React.createElement(\"button\", null, tag));\n  })), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        tags\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","span","h1","h2","_provideComponents","components","React","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","frontmatter","mdx","Layout","title","tags","length","map","tag","Link","to","itemProp","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}