{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2021-imgui-docking-api-md-418a46e2fa8cd77c04d2.js","mappings":"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","sources":["webpack:///./content/posts/2021/imgui_docking_api.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    span: \"span\",\n    h1: \"h1\",\n    ul: \"ul\",\n    li: \"li\",\n    h2: \"h2\",\n    a: \"a\",\n    img: \"img\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"https://github.com/ousttrue/limgui\"), \"\\n\", React.createElement(_components.p, null, \"ようやく \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">FFI</code>\"\n    }\n  }), \" の整備ができたので、ImGui の API 調査に進む\"), \"\\n\", React.createElement(_components.h1, null, \"DockingBuilder\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">imgui_internal.h</code>\"\n    }\n  }), \" に一連の \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Docking</code>\"\n    }\n  }), \" 向けの API がある。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/ocornut/imgui/issues/2109\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, React.createElement(_components.a, {\n    href: \"https://gist.github.com/PossiblyAShrub/0aea9511b84c34e191eaa90dd7225969\"\n  }, \"PossiblyAShrub/dock_builder_example.cpp\")), \"\\n\", React.createElement(_components.p, null, \"変数を流用していてわかりにくいのだが、おそらく下記のような感じだと思う。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">+----+----+\\n|    |    |\\n|Left|----|\\n|    |Down|\\n+----+----+</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"c++\\\"><pre class=\\\"language-c++\\\"><code class=\\\"language-c++\\\">auto root = ImGui::DockBuilderAddNode(dockspace_id, dockspace_flags | ImGuiDockNodeFlags_DockSpace);\\n                                                                         // 返り値と同じ Left  // 反対側 Right\\nImGuiID right;\\nauto left = ImGui::DockBuilderSplitNode(root, ImGuiDir_Left, 0.2f, nullptr, &amp;right);\\n                                                                         // 返り値と同じ Down  // 反対側 Up\\nImGuiID up;\\nauto down = ImGui::DockBuilderSplitNode(right, ImGuiDir_Down, 0.25f, nullptr, &amp;up);</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\"># .imgui.ini\\n[Docking][Data]\\nDockSpace     ID=0x7CF2A649 Window=0x9A404470 Pos=0,30 Size=1200,870 Split=X\\n  DockNode    ID=0x00000001 Parent=0x7CF2A649 SizeRef=599,900 Selected=0xDA554856 => Left\\n  DockNode    ID=0x00000002 Parent=0x7CF2A649 SizeRef=599,900 Split=Y\\n    DockNode  ID=0x00000003 Parent=0x00000002 SizeRef=599,673 CentralNode=1\\n    DockNode  ID=0x00000004 Parent=0x00000002 SizeRef=599,225 Selected=0xBCCD3F05 => Down</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"[ ] central node\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"Tree\"), \"\\n\", React.createElement(_components.p, null, \"libclang のパース結果の \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">CXCursor</code>\"\n    }\n  }), \" のツリー\"), \"\\n\", React.createElement(_components.img, {\n    src: \"%22tree.jpg%22\",\n    alt: \"image\"\n  }), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"[ ] selection\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"Table\"), \"\\n\", React.createElement(_components.p, null, \"glTF を表示してみた。さくさく書けてよさそう。\"), \"\\n\", React.createElement(_components.img, {\n    src: \"%22table.jpg%22\",\n    alt: \"image\"\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2021/imgui_docking_api.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","span","h1","ul","li","h2","a","img","_provideComponents","components","React","dangerouslySetInnerHTML","__html","href","src","alt","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","Layout","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}