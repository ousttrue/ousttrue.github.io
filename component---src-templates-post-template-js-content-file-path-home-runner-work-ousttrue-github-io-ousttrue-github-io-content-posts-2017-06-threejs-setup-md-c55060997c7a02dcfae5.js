"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3810],{4316:function(e,n,t){t.r(n),t.d(n,{default:function(){return l}});var r=t(1151),o=t(7294);function s(e){const n=Object.assign({p:"p",code:"code",pre:"pre"},(0,r.ah)(),e.components);return o.createElement(o.Fragment,null,o.createElement(n.p,null,"threejs のソースを自前で、minimize する環境を模索する。"),"\n",o.createElement(n.p,null,"なんとなく webpack をメインに据えてみたい。\nnpm install -g xxx は適宜やるとして省略。\nes2015 メモ"),"\n",o.createElement(n.p,null,"const, let\n無名関数はアロー形式で()=>"," もしくは()=>expression\n文字テンプレート",o.createElement(n.code,null,"${expression}"),"\npromise, await"),"\n",o.createElement(n.p,null,"Project 作成\n$ mkdir app\n$ cd app\napp$ npm init"),"\n",o.createElement(n.p,null,"とりあえず git に登録しよう。\n.gitignore は、"),"\n",o.createElement(n.p,null,"https://github.com/github/gitignore/blob/master/Node.gitignore\nhttps://raw.githubusercontent.com/github/gitignore/master/Node.gitignore"),"\n",o.createElement(n.p,null,"をそのまま採用させていただきます。\napp$ git init\napp$ git add .\napp$ git commit -m init"),"\n",o.createElement(n.p,null,"WebSocketServer\napp$ npm install websocket --save"),"\n",o.createElement(n.p,null,"server.js"),"\n",o.createElement(n.pre,null,o.createElement(n.code,{className:"language-javascript"},'"use strict";\n\nconst http = require("http");\nconst WSServer = require("websocket").server;\nconst url = require("url");\nconst fs = require("fs");\n\nconst port = 8888;\n\nfunction onHttpRequest(req, res) {\n  fs.readFile("client.html", "utf8", (err, text) => {\n    res.writeHead(200, { "Content-Type": "text/html" });\n    res.end(text);\n  });\n}\nconst plainHttpServer = http.createServer(onHttpRequest).listen(port);\nconst webSocketServer = new WSServer({ httpServer: plainHttpServer });\n\nlet clients = [];\nfunction broadcast(message) {\n  clients.forEach((con, i) => {\n    con.send(message);\n  });\n}\n\nfunction onRequest(req) {\n  const websocket = req.accept(null, req.origin || "*");\n\n  clients.push(websocket);\n\n  websocket.send("welcome to this server");\n  broadcast(\n    `clients: [${clients.map((v, i) => v.remoteAddress[0]).join(", ")}]`\n  );\n\n  websocket.on("message", (msg) => {\n    console.log(`"${msg.utf8Data}" is recieved from ${req.origin} !`);\n    websocket.send(msg.utf8Data);\n  });\n\n  websocket.on("close", (code, desc) => {\n    console.log(`connection released!: ${code} - ${desc}`);\n\n    clients = clients.filter((v, i) => v != websocket);\n    broadcast(\n      `clients: [${clients.map((v, i) => v.remoteAddress[0]).join(", ")}]`\n    );\n  });\n}\n\nwebSocketServer.on("request", onRequest);\n\nconsole.log(`server start: ${port}`);\n')),"\n",o.createElement(n.p,null,"client.html"),"\n",o.createElement(n.pre,null,o.createElement(n.code,{className:"language-html"},'<html>\n  <head> </head>\n  <body>\n    <input id="message" type="text" /><button id="send">send</button>\n    <div id="output"></div>\n\n    <script>\n      "use strict";\n      let attempts = 1;\n      let ws = null;\n\n      const output = document.getElementById("output");\n      const sendmessage = document.getElementById("message");\n      sendmessage.addEventListener("keydown", (e) => {\n        if (e.keyCode == 13) {\n          send(sendmessage.value);\n        }\n      });\n      document\n        .getElementById("send")\n        .addEventListener("click", () => send(sendmessage.value));\n\n      function logger(msg) {\n        output.innerHTML += `<div>${msg}</div>`;\n      }\n      function send(msg) {\n        ws.send(msg);\n        logger(`send: ${msg}`);\n      }\n\n      function createWebSocket() {\n        logger(`connecting... ${attempts++}`);\n\n        ws = new WebSocket(`ws://${location.host}`);\n\n        ws.onopen = (e) => {\n          logger(`${e.type}: ${e.code || ""}`);\n\n          // reset the tries back to 1 since we have a new ws opened.\n          attempts = 1;\n\n          // ...Your app\'s logic...\n        };\n\n        ws.onclose = (e) => {\n          logger(`${e.type}: ${e.code || ""}`);\n          ws = null;\n\n          const time = generateInterval(attempts);\n\n          setTimeout(() => {\n            // Connection has closed so try to reconnect every 10 seconds.\n            createWebSocket();\n          }, time);\n        };\n\n        ws.onmessage = (e) => {\n          logger(`${e.type}: ${e.data}`);\n        };\n      }\n\n      function generateInterval(k) {\n        let maxInterval = (Math.pow(2, k) - 1) * 1000;\n\n        if (maxInterval > 30 * 1000) {\n          maxInterval = 30 * 1000; // If the generated interval is more than 30 seconds, truncate it down to 30 seconds.\n        }\n\n        // generate the interval to a random number between 0 and the maxInterval determined from above\n        return Math.random() * maxInterval;\n      }\n\n      window.addEventListener("DOMContentLoaded", () => createWebSocket());\n    <\/script>\n  </body>\n</html>\n')),"\n",o.createElement(n.p,null,"WebSocket を再接続するアルゴリズムの工夫"),"\n",o.createElement(n.p,null,"webpack"),"\n",o.createElement(n.p,null,"http://webpack.github.io/docs/tutorials/getting-started/"),"\n",o.createElement(n.p,null,"threejs"))}var c=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?o.createElement(n,e,o.createElement(s,e)):s(e)};t(8678);function a(e){let{data:n,children:t}=e;return o.createElement(o.Fragment,null,o.createElement("h1",null,n.mdx.frontmatter.title),o.createElement(r.Zo,null,t))}function l(e){return o.createElement(a,e,o.createElement(c,e))}},8678:function(e,n,t){t(7294)},1151:function(e,n,t){t.d(n,{Zo:function(){return a},ah:function(){return s}});var r=t(7294);const o=r.createContext({});function s(e){const n=r.useContext(o);return r.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const c={};function a({components:e,children:n,disableParentContext:t}){let a;return a=t?"function"==typeof e?e({}):e||c:s(e),r.createElement(o.Provider,{value:a},n)}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2017-06-threejs-setup-md-c55060997c7a02dcfae5.js.map