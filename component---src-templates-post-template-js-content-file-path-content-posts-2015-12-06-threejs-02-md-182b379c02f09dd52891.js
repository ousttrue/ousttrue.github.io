"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7894],{4511:function(n,e,r){r.r(e),r.d(e,{default:function(){return h}});var t=r(1151),a=r(7294);function o(n){const e=Object.assign({span:"span"},(0,t.ah)(),n.components);return a.createElement(e.span,{dangerouslySetInnerHTML:{__html:"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">\nsource\n今回は、TrackballControlsを導入します。\nTrackballControlsはThree.jsのライブラリ内に含まれるのではなくexamples扱いなので、\n直接コードを入手。\n使い方は、TrackballControlsのソースを見ると\n以下のようにするらしい。\ncontrols = new THREE.TrackballControls( camera );\n\ncontrols.rotateSpeed = 1.0;\ncontrols.zoomSpeed = 1.2;\ncontrols.panSpeed = 0.8;\n\ncontrols.noZoom = false;\ncontrols.noPan = false;\n\ncontrols.staticMoving = true;\ncontrols.dynamicDampingFactor = 0.3;\n\ncontrols.keys = [ 65, 83, 68 ];\n\ncontrols.addEventListener( 'change', render );\n\nもうひとつ更新用に以下のコードも必要。\nfunction animate() {\n    requestAnimationFrame( animate );\n    controls.update();\n}\n\nやってみよう。\nベースのレンダリングシーン\nシーンに適当にキューブを描画するコード。\n前回の記事をほぼ流用だけどいくつか変更点がある。\n\nnamespaceでかこって名前衝突から防衛\nCreateCameraを独立\nキューブがアニメーションする部分をオミット\n\nthreejs_02.ts\n/// &lt;reference path='../../../../typings/tsd.d.ts' />\n\n\nnamespace Renderer02 {\n\n    class Renderer {\n        $container: JQuery;\n        renderer: THREE.Renderer;\n\n        scene: THREE.Scene;\n        camera: THREE.Camera;\n        mesh: THREE.Mesh;\n\n        CreateRenderer($container: JQuery) {\n            this.$container = $container;\n\n            this.renderer = new THREE.WebGLRenderer();\n            this.renderer.setSize($container.width(), $container.height());\n            $container.append(this.renderer.domElement);\n        }\n\n        CreateCamera() {\n            this.camera = new THREE.PerspectiveCamera(75\n                , this.$container.width() / this.$container.height()\n                , 0.1, 1000);\n            this.camera.position.z = 5;\n        }\n\n        CreateScene() {\n            this.scene = new THREE.Scene();\n\n            var geometry = new THREE.BoxGeometry(1, 1, 1);\n            var material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n            this.mesh = new THREE.Mesh(geometry, material);\n            this.scene.add(this.mesh);\n        }\n\n        Render() {\n            // render\n            this.renderer.render(this.scene, this.camera);\n        }\n    }\n\n    var renderer = new Renderer();\n    export function initialize($container: JQuery) {\n\n        renderer.CreateRenderer($container);\n        renderer.CreateCamera();\n        renderer.CreateScene();\n\n        renderer.Render();\n    }\n}\n\n$(() => {\n    var $container = $('div#renderer');\n    Renderer02.initialize($container);\n});\n\n\nTypeScript定義を追加する\nまず、TrackballControlsの型定義を追加する。\ndeclare module THREE {\n    export class TrackballControls\n    {\n        constructor(camera: THREE.Camera);\n        rotateSpeed: number;\n        zoomSpeed: number;\n        panSpeed: number;\n        noZoom: boolean;\n        noPan: boolean;\n        staticMoving: boolean;\n        dynamicDampingFactor: number;\n        keys: number[];\n        addEventListener(event: string, callback: Function):void;\n        update():void;\n    }\n}\n\nTrackballControlsを初期化\n// Rendererのメソッドを修正\n    CreateCamera() {\n        this.camera = new THREE.PerspectiveCamera(75\n            , this.$container.width() / this.$container.height()\n            , 0.1, 1000);\n        this.camera.position.z = 5;\n\n        // 以下を追加\n        this.controls = new THREE.TrackballControls(this.camera);\n\n        this.controls.rotateSpeed = 1.0;\n        this.controls.zoomSpeed = 1.2;\n        this.controls.panSpeed = 0.8;\n\n        this.controls.noZoom = false;\n        this.controls.noPan = false;\n\n        this.controls.staticMoving = true;\n        this.controls.dynamicDampingFactor = 0.3;\n\n        this.controls.keys = [65, 83, 68];\n\n        // trackballに変化があった時だけ描画を呼ぶ\n        this.controls.addEventListener('change', this.Render.bind(this));\n    }\n\n// Rendererのメソッドを追加\n    Animate() {\n        requestAnimationFrame(this.Animate.bind(this));\n        this.controls.update();\n    }\n\n// Animate呼び出しを追加\n    export function initialize($container: JQuery) {\n\n        renderer.CreateRenderer($container);\n        renderer.CreateCamera();\n        renderer.CreateScene();\n\n        renderer.Render();\n        renderer.Animate(); // 追加\n    }\n\n動いたがWindow全体のマウスイベントが取られていてこれじゃない。\ncanvasの親になったdivをマウスイベントの対象にしたい。\ndiv#rendererを操作対象にする\nTrackballControls.jsを見てたら\nTHREE.TrackballControls = function ( object, domElement ) {\n}\n\nという記述を発見。第２引数にhtmlエレメントを渡せるらしい。\n定義を修正。\n// 定義\n    constructor(camera: THREE.Camera, element?: Element);\n\n// 呼び出し\n   this.controls = new THREE.TrackballControls(this.camera, this.$container[0]);\n\n想定した動きになった。\nマウスカーソルを変えてみる\ncssの話だけれど。\n&lt;div id=\"renderer\" style=\"width:300px;height:200px;cursor:pointer;\">&lt;/div>\n\n    $container\n        .mousedown(function(event) {\n            switch (event.button) {\n                case 0:\n                    $(this).css({ cursor: 'pointer' });\n                    break;\n\n                case 1:\n                    $(this).css({ cursor: 'n-resize' });\n                    break;\n\n                case 2:\n                    $(this).css({ cursor: 'move' });\n                    break;\n            }\n        })\n        .mouseup(function(event){\n            $(this).css({cursor: 'pointer'});\n        })\n    ;\n</code></pre></div>"}})}var s=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,t.ah)(),n.components);return e?a.createElement(e,n,a.createElement(o,n)):o(n)},c=r(8678),i=r(4160),l=r(8736);const d={code:n=>{let{children:e,className:r}=n;return r?a.createElement(l.Z,{className:r},e):a.createElement("code",null,e)}};function m(n){let{data:e,children:r}=n;const o=e.mdx.frontmatter;return a.createElement(c.Z,null,a.createElement("h1",null,o.title),a.createElement("div",{className:"tags-index"},o.tags&&o.tags.length>0&&o.tags.map((n=>a.createElement(i.rU,{to:"/tags/"+n+"/",itemProp:"url"},a.createElement("button",null,n))))),a.createElement(t.Zo,{components:d},r))}function h(n){return a.createElement(m,n,a.createElement(s,n))}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-content-posts-2015-12-06-threejs-02-md-182b379c02f09dd52891.js.map