{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2017-08-vcpkg-opensubdiv-md-0339959b89fe1b27707a.js","mappings":"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","sources":["webpack:///./content/posts/2017/08/vcpkg_opensubdiv.md","webpack:///./src/templates/post-template.js","webpack:///./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"CEDEC2017のセッションを聞いてUSDビルドする気が戻ってきた。部品のひとつ、OpenSubdivのvcpkg版ビルドに取り組んでみる。\"), \"\\n\", React.createElement(_components.p, null, \"packageを作る\\nPOWERSHELLを開いてvcpkgディレクトリに移動。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"PS> .\\\\vcpkg.exe create opensubdiv https://github.com/PixarAnimationStudios/OpenSubdiv/archive/v3_3_0.tar.gz\\n-- Generated portfile: vcpkg\\\\ports\\\\opensubdiv\\\\portfile.cmake\\n-- Generated CONTROL: vcpkg\\\\ports\\\\opensubdiv\\\\CONTROL\\n-- To launch an editor for these new files, run\\n--     .\\\\vcpkg edit opensubdiv\\n\\nports/opensubdiv/CONTROL\\nSource: opensubdiv\\nVersion: 3.3.0\\nDescription: An Open-Source subdivision surface library.\\nBuild-Depends: tbb, glew, ptex\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"ports/opensubdiv/portfile.cmake\")), \"\\n\", React.createElement(_components.p, null, \"最低限、展開するアーカイブのパスを指定。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"set(SOURCE_PATH ${CURRENT_BUILDTREES_DIR}/src/OpenSubdiv-3_3_0)\")), \"\\n\", React.createElement(_components.p, null, \"ビルドしてみる\\nさすがにエラーになる。vcpkg の \", React.createElement(_components.code, null, \"buildtree/opensubdiv\"), \" に潜ってビルド手順を調べてみる。\\n手動ビルド\\nOpenSubdivのビルドシステムはCMakeだった。\\n早速、CmakeGUIでやってみる。\\n\", React.createElement(_components.code, null, \"CMAKE_INSTALL_PREFIX=VCPKG_DIR/installed/x64-windows\"), \" だけ設定して様子を見る。\"), \"\\n\", React.createElement(_components.p, null, \"CUDAとかOpenCLとかそっち方面の依存がある様子。\\nNO_CUDAとNO_OPENCLにチェックを入れてみる。\\nあとNO_DOCも。\\nSolutionをGenerateしてビルドしてみる。\\nDebug版だけtbb_debug.libが見つからないエラーが出た。\\nDEBUG版のFIND_PACKAGEの修正\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-cmake\"\n  }, \"OpenSubdiv-3_3_0/cmake/FindTBB.cmake\\n    find_library(TBB_${TBB_LIB}_LIBRARY\\n        NAMES\\n            ${TBB_LIB}\\n        HINTS\\n            \\\"${TBB_LOCATION}/lib\\\"\\n            \\\"${TBB_LOCATION}/bin\\\"\\n            \\\"$ENV{TBB_LOCATION}/lib\\\"\\n            \\\"$ENV{TBB_LOCATION}/bin\\\"\\n            \\\"$ENV{PROGRAMFILES}/TBB/lib\\\"\\n            /usr/lib\\n            /usr/lib/w32api\\n            /usr/local/lib\\n            /usr/X11R6/lib\\n        PATH_SUFFIXES\\n            \\\"${TBB_LIB_ARCH}\\\"\\n            \\\"${TBB_LIB_ARCH}/${TBB_COMPILER}\\\"\\n            \\\"${TBB_LIB_ARCH}/gcc4.4\\\"\\n            \\\"${TBB_LIB_ARCH}/gcc4.1\\\"\\n        DOC \\\"Intel's Threading Building Blocks library\\\")\\n\")), \"\\n\", React.createElement(_components.p, null, \"vcpkgでは、\", React.createElement(_components.code, null, \"VCPKG_DIR/installed/x64-windows/debug/lib/tbb_debug.lib\"), \" にあるので見つかりませんね。\\n\", React.createElement(_components.code, null, \"TBB_LOCATION=VCPKG_DIR/installed/x64-windows/debug\"), \" を指定したらうまくいった。\"), \"\\n\", React.createElement(_components.p, null, \"portfile.cmakeに反映\\nports/opensubdiv/portfile.cmake\\nこうなった。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-cmake\"\n  }, \"vcpkg_configure_cmake(\\n    SOURCE_PATH ${SOURCE_PATH}\\n    #PREFER_NINJA # Disable this option if project cannot be built with Ninja\\n    OPTIONS\\n        #-DNO_LIB=1\\n        -DNO_CUDA=1\\n        -DNO_DOC=1\\n        -DNO_OPENCL=1\\n        -DNO_OPENGL=1\\n        -DNO_METAL=1\\n        -DNO_DX=1\\n        #-DNO_OMP=1\\n        -DNO_TESTS=1\\n        -DNO_EXAMPLES=1\\n        -DNO_TUTORIALS=1\\n        -DNO_REGRESSION=1\\n        -DNO_GLTESTS=1\\n        # for tbb_debug.lib\\n        -DTBB_LOCATION=${CURRENT_INSTALLED_DIR}/debug\\n    # OPTIONS_RELEASE -DOPTIMIZE=1\\n    # OPTIONS_DEBUG -DDEBUGGABLE=1\\n)\\n\")), \"\\n\", React.createElement(_components.p, null, \"package\\nVCPKG_DIR/packages/opensubdiv_x86-windows\\npackageの調整\\nエラーメッセージの指示に従って。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-ports/opensubdiv/portfile.cmake\"\n  }, \"vcpkg_install_cmake()\\nvcpkg_copy_pdbs()\\n\\nfile(REMOVE_RECURSE ${CURRENT_PACKAGES_DIR}/debug/include)\\n\\n# Handle copyright\\nfile(COPY ${CURRENT_BUILDTREES_DIR}/src/OpenSubdiv-3_3_0/LICENSE.txt DESTINATION ${CURRENT_PACKAGES_DIR}/share/opensubdiv)\\nfile(RENAME ${CURRENT_PACKAGES_DIR}/share/opensubdiv/LICENSE.txt ${CURRENT_PACKAGES_DIR}/share/opensubdiv/copyright)\\n\")), \"\\n\", React.createElement(_components.p, null, \"以下のようになった。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"+---debug\\n|   \\\\---lib\\n|           osdCPU.lib\\n|\\n+---include\\n|   \\\\---opensubdiv\\n|       |   version.h\\n|       |\\n|       +---far\\n|       |       error.h\\n|       |       patchDescriptor.h\\n|       |       patchMap.h\\n|       |       patchParam.h\\n|       |       patchTable.h\\n|       |       patchTableFactory.h\\n|       |       primvarRefiner.h\\n|       |       ptexIndices.h\\n|       |       stencilTable.h\\n|       |       stencilTableFactory.h\\n|       |       topologyDescriptor.h\\n|       |       topologyLevel.h\\n|       |       topologyRefiner.h\\n|       |       topologyRefinerFactory.h\\n|       |       types.h\\n|       |\\n|       +---hbr\\n|       |       allocator.h\\n|       |       bilinear.h\\n|       |       catmark.h\\n|       |       cornerEdit.h\\n|       |       creaseEdit.h\\n|       |       face.h\\n|       |       faceEdit.h\\n|       |       fvarData.h\\n|       |       fvarEdit.h\\n|       |       halfedge.h\\n|       |       hierarchicalEdit.h\\n|       |       holeEdit.h\\n|       |       loop.h\\n|       |       mesh.h\\n|       |       subdivision.h\\n|       |       vertex.h\\n|       |       vertexEdit.h\\n|       |\\n|       +---osd\\n|       |       bufferDescriptor.h\\n|       |       cpuEvaluator.h\\n|       |       cpuPatchTable.h\\n|       |       cpuVertexBuffer.h\\n|       |       mesh.h\\n|       |       nonCopyable.h\\n|       |       ompEvaluator.h\\n|       |       ompKernel.h\\n|       |       opengl.h\\n|       |       tbbEvaluator.h\\n|       |       tbbKernel.h\\n|       |       types.h\\n|       |\\n|       +---sdc\\n|       |       bilinearScheme.h\\n|       |       catmarkScheme.h\\n|       |       crease.h\\n|       |       loopScheme.h\\n|       |       options.h\\n|       |       scheme.h\\n|       |       types.h\\n|       |\\n|       \\\\---vtr\\n|               array.h\\n|               componentInterfaces.h\\n|               fvarLevel.h\\n|               fvarRefinement.h\\n|               level.h\\n|               refinement.h\\n|               sparseSelector.h\\n|               stackBuffer.h\\n|               types.h\\n|\\n+---lib\\n|       osdCPU.lib\\n|\\n\\\\---share\\n    \\\\---opensubdiv\\n            copyright\\n\")), \"\\n\", React.createElement(_components.p, null, \"OpenSubdivにはdllのビルドは無いみたい。ライブラリ構成もtemplate classを主体とするもののようだ。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2017/08/vcpkg_opensubdiv.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nfunction PostTempalte({data, children}) {\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, null, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","pre","code","_provideComponents","components","React","className","wrapper","MDXLayout","PostTempalte","_ref","data","children","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}