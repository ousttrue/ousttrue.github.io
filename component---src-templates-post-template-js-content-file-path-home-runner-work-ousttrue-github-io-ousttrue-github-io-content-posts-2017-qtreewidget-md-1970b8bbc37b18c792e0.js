"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7783],{4923:function(e,n,t){t.r(n),t.d(n,{default:function(){return o}});var r=t(1151),a=t(7294);function i(e){const n=Object.assign({p:"p",pre:"pre",code:"code"},(0,r.ah)(),e.components);return a.createElement(a.Fragment,null,a.createElement(n.p,null,"QTreeWigetの使い方"),"\n",a.createElement(n.p,null,"PyQt QTreeWidget サンプル\nPySide 編集可能なQTreeWidgetを作る"),"\n",a.createElement(n.p,null,"Sample"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-python"},"from logging import getLogger\nlogger = getLogger(__name__)\n\nimport sys\nfrom PySide import QtGui, QtCore\n\n\nclass TreeWindow(QtGui.QMainWindow):\n    def __init__(self):\n        super().__init__()\n        self.setWindowTitle('Main window')\n        self.treeWidget=self.createTreeWidget()\n        self.setCentralWidget(self.treeWidget)\n\n    def createTreeWidget(self):\n        treeWidget = QtGui.QTreeWidget(self)\n        #treeWidget.setColumnCount(5)\n        treeWidget.setHeaderLabels([\"名前\", \"値\"])\n        return treeWidget\n\n\nclass DataItem:\n    def __init__(self, name, value, *children):\n        self.columns=[name, str(value)]\n        self.children=children\n\n\ndef addTreeItem(parent, data):\n    item=QtGui.QTreeWidgetItem(data.columns)\n    if isinstance(parent, QtGui.QTreeWidget):\n        parent.addTopLevelItem(item)\n    else:\n        parent.addChild(item)\n    # Treeにaddした後でexpandする\n    item.setExpanded(True)\n\n    for child in data.children:\n        addTreeItem(item, child)\n\n\nif __name__ == '__main__':\n    from logging import DEBUG, basicConfig\n    basicConfig(\n           level=DEBUG\n           )\n\n    app = QtGui.QApplication(sys.argv)\n    window = TreeWindow()\n\n    addTreeItem(window.treeWidget, DataItem('name0', '500'\n        , DataItem('name0_0', '550')\n        , DataItem('name0_1', '560')\n        ))\n\n    addTreeItem(window.treeWidget, DataItem('name1', '600'\n        , DataItem('name1_0', '550'\n            , DataItem('name1_0_0', 555)\n            )\n        ))\n\n    window.show()\n    window.resize(640, 480)\n    sys.exit(app.exec_())\n")),"\n",a.createElement(n.p,null,"TreeWidget\nscrollToItem\nsetCurrentItem\nindexFromItem\nTreeWidgetItem\nsetText\nchildCount"))}var l=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?a.createElement(n,e,a.createElement(i,e)):i(e)};t(8678);function d(e){let{data:n,children:t}=e;return a.createElement(a.Fragment,null,a.createElement("h1",null,n.mdx.frontmatter.title),a.createElement(r.Zo,null,t))}function o(e){return a.createElement(d,e,a.createElement(l,e))}},8678:function(e,n,t){t(7294)},1151:function(e,n,t){t.d(n,{Zo:function(){return d},ah:function(){return i}});var r=t(7294);const a=r.createContext({});function i(e){const n=r.useContext(a);return r.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const l={};function d({components:e,children:n,disableParentContext:t}){let d;return d=t?"function"==typeof e?e({}):e||l:i(e),r.createElement(a.Provider,{value:d},n)}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2017-qtreewidget-md-1970b8bbc37b18c792e0.js.map