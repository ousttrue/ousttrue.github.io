{"version":3,"file":"component---content-posts-2019-nvim-cmake-md-2821f9de82f1915ea027.js","mappings":"yHAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,GAAI,KACJC,EAAG,IACHC,EAAG,IACHC,GAAI,KACJC,IAAK,MACLC,KAAM,OACNC,WAAY,eACXC,EAAAA,EAAAA,MAAsBZ,EAAMa,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,KAAMU,EAAAA,cAAoBb,EAAYI,GAAI,KAAMS,EAAAA,cAAoBb,EAAYK,EAAG,CAC5KS,KAAM,+BACL,2CAA4C,MAAO,KAAMD,EAAAA,cAAoBb,EAAYM,EAAG,KAAM,SAAU,KAAMO,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,KAAMU,EAAAA,cAAoBb,EAAYI,GAAI,KAAM,YAAa,KAAMS,EAAAA,cAAoBb,EAAYI,GAAI,KAAM,SAAU,KAAMS,EAAAA,cAAoBb,EAAYI,GAAI,KAAM,qBAAsB,MAAO,KAAMS,EAAAA,cAAoBb,EAAYM,EAAG,KAAM,qCAAsC,KAAMO,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,KAAMU,EAAAA,cAAoBb,EAAYI,GAAI,KAAM,mBAAoB,MAAO,KAAMS,EAAAA,cAAoBb,EAAYO,GAAI,KAAM,UAAW,KAAMM,EAAAA,cAAoBb,EAAYM,EAAG,KAAM,oBAAqB,KAAMO,EAAAA,cAAoBb,EAAYQ,IAAK,KAAMK,EAAAA,cAAoBb,EAAYS,KAAM,CACvwBM,UAAW,kBACV,mLAAoL,KAAMF,EAAAA,cAAoBb,EAAYQ,IAAK,KAAMK,EAAAA,cAAoBb,EAAYS,KAAM,CAC5QM,UAAW,gBACV,yHAA4H,KAAMF,EAAAA,cAAoBb,EAAYO,GAAI,KAAM,aAAc,KAAMM,EAAAA,cAAoBb,EAAYM,EAAG,KAAM,cAAeO,EAAAA,cAAoBb,EAAYS,KAAM,KAAM,UAAW,QAAS,KAAMI,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,KAAMU,EAAAA,cAAoBb,EAAYI,GAAI,KAAM,wCAAyC,MAAO,KAAMS,EAAAA,cAAoBb,EAAYU,WAAY,KAAM,KAAMG,EAAAA,cAAoBb,EAAYM,EAAG,KAAM,sCAAuC,MAAO,KAAMO,EAAAA,cAAoBb,EAAYM,EAAG,KAAM,iBAAkB,KAAMO,EAAAA,cAAoBb,EAAYO,GAAI,KAAM,qBAAsB,KAAMM,EAAAA,cAAoBb,EAAYG,GAAI,KAAM,KAAMU,EAAAA,cAAoBb,EAAYI,GAAI,KAAM,iDAAkD,MAC33B,CAKA,UAJA,SAAoBL,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOiB,QAASC,GAAahB,OAAOC,OAAO,CAAC,GAAGS,EAAAA,EAAAA,MAAsBZ,EAAMa,YAC3E,OAAOK,EAAYJ,EAAAA,cAAoBI,EAAWlB,EAAOc,EAAAA,cAAoBf,EAAmBC,IAAUD,EAAkBC,EAC9H,C,sECQO,MAAMmB,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBP,GAC/B,MAAMQ,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAfN,EACFA,EAAWQ,GAGb,IAAIA,KAAsBR,IAChC,CAACQ,EAAmBR,GACzB,C","sources":["webpack:///./content/posts/2019/nvim_cmake.md","webpack:///./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    p: \"p\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    blockquote: \"blockquote\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://hogehuga.net/c/289/\"\n  }, \"vim„Åã„ÇâC++„Éó„É≠„Ç∏„Çß„ÇØ„Éà„Å´ÂØæ„Åó„Å¶CMake„Åß„Éì„É´„Éâ„ÉÑ„É™„ÉºÁîüÊàêÔºã„Ç≥„É≥„Éë„Ç§„É´\")), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"„Å™„Çã„Åª„Å©„ÄÇ\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"„Éó„É≠„Ç∏„Çß„ÇØ„ÉàÁîüÊàê\"), \"\\n\", React.createElement(_components.li, null, \"Build\"), \"\\n\", React.createElement(_components.li, null, \"ÂÆüË°å(debbuger„ÅÆ„Ç¢„Çø„ÉÉ„ÉÅ)\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"„ÅÆ3„Çπ„ÉÜ„ÉÉ„Éó„ÇíËá™ÂàÜÂ•Ω„Åø„Å´„Çπ„ÇØ„É™„Éó„ÉàÂåñ„Åô„Çã„ÅÆ„Åå„Çà„Åï„Åù„ÅÜ„Å†„ÄÇ\\n„ÅÇ„Å®„ÄÅ\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"clang-formatter\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"sample\"), \"\\n\", React.createElement(_components.p, null, \"ÂÆüÈ®ìÁî®„Å´Â∞è„Åï„ÅÑ„Éó„É≠„Ç∏„Çß„ÇØ„Éà‰Ωú„Çã„ÄÇ\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-cmake\"\n  }, \"# CMakeLists.txt\\nCMAKE_MINIMUM_REQUIRED(VERSION 3.0.0)\\nPROJECT(hello VERSION 0.1.0)\\n\\nFILE(GLOB SRC\\n    *.cpp\\n    *.h\\n    ) \\n\\nADD_EXECUTABLE(${PROJECT_NAME} ${SRC})\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-cpp\"\n  }, \"#include <iosteram>\\n\\nint main(int argc, char **argv)\\n{\\n    std::cout << \\\"hello\\\" <<std::endl;\\n    return 0;\\n}\\n\")), \"\\n\", React.createElement(_components.h2, null, \"cmake.vim\"), \"\\n\", React.createElement(_components.p, null, \"Ëá™‰Ωú„Åô„ÇãÂâç„Å´„Çà„Åï„Åí„Å™ \", React.createElement(_components.code, null, \"plugin\"), \" „ÇíÊé¢Á¥¢\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/jalcine/cmake.vim\"), \"\\n\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"üî® CMake functionality within Vim.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"‰Ωø„ÅÑÊñπ„Åå„Çà„Åè„Çè„Åã„Çâ„Çì„Éª„Éª„Éª\"), \"\\n\", React.createElement(_components.h2, null, \"vim-cmake-project\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/sigidagi/vim-cmake-project\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it‚Äôs no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it‚Äôs no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","ul","li","a","p","h2","pre","code","blockquote","_provideComponents","components","React","href","className","wrapper","MDXLayout","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}