"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8393],{56:function(e,n,t){t.r(n),t.d(n,{default:function(){return i}});var r=t(1151),a=t(7294);function l(e){const n=Object.assign({span:"span"},(0,r.ah)(),e.components);return a.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">前から写経しながら読んでいる\n「シングルページWebアプリケーション」がようやく終盤に差し掛かってきた。\nSocket.IOで接続するところがあるのだけど、独自にgulpからbrowserSyncを使っていてWebSocketがupgradeできずにはまる。\nFirefoxのconsoleにエラーが出て気になる気になる。\ngulpfile.js\ngulp.task(\'server\', [\'nodemon\'], function () {\n    browser.init(null, {\n        proxy: \'http://localhost:7000\',\n        port: 3000,\n        ws: true // &lt;- これが無いとTransportがpollingからupgradeできない\n    });\n});\n\nなかなか気付けなかった。\nその前に、socket.ioのnamespaceの指定でもはまってたのだが・・・。\nしかし、この本は実にいい本だ。自分のWebの知識レベルにちょうどあっていて、昨今の技術をキャッチアップして行く足がかりに\nすごく役にたった。\nこの本が提唱する、\nmongodb -> node.js + express + socket.IO -> JQuery\nな構成をベースにgulpによる開発環境と、typescript、mithril、bootstrapなんかを盛って行く路線で\n寄り道しながら修行中。</code></pre></div>'}})}var c=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?a.createElement(n,e,a.createElement(l,e)):l(e)},o=t(8678),s=t(8838);const u={code:e=>{let{children:n,className:t}=e;return t?a.createElement(s.Z,{className:t},n):a.createElement("code",null,n)}};function p(e){let{data:n,children:t}=e;return a.createElement(o.Z,null,a.createElement("h1",null,n.mdx.frontmatter.title),a.createElement(r.Zo,{components:u},t))}function i(e){return a.createElement(p,e,a.createElement(c,e))}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2015-11-15-websocket-upgrade-md-6a57ec4450186100ac9f.js.map