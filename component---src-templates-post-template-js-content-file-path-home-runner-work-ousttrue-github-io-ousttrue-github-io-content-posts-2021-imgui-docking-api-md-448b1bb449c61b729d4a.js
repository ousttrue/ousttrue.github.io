"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[30],{1794:function(e,t,n){n.r(t),n.d(t,{default:function(){return g}});var l=n(1151),a=n(7294);function c(e){const t=Object.assign({p:"p",a:"a",span:"span",h1:"h1",ul:"ul",li:"li",h2:"h2",input:"input",img:"img"},(0,l.ah)(),e.components);return a.createElement(a.Fragment,null,a.createElement(t.p,null,a.createElement(t.a,{href:"https://github.com/ousttrue/limgui"},"https://github.com/ousttrue/limgui")),"\n",a.createElement(t.p,null,"ようやく ",a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">FFI</code>'}})," の整備ができたので、ImGui の API 調査に進む"),"\n",a.createElement(t.h1,null,"DockingBuilder"),"\n",a.createElement(t.p,null,a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">imgui_internal.h</code>'}})," に一連の ",a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">Docking</code>'}})," 向けの API がある。"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,a.createElement(t.a,{href:"https://github.com/ocornut/imgui/issues/2109"},"https://github.com/ocornut/imgui/issues/2109")),"\n"),"\n",a.createElement(t.h2,null,a.createElement(t.a,{href:"https://gist.github.com/PossiblyAShrub/0aea9511b84c34e191eaa90dd7225969"},"PossiblyAShrub/dock_builder_example.cpp")),"\n",a.createElement(t.p,null,"変数を流用していてわかりにくいのだが、おそらく下記のような感じだと思う。"),"\n",a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">+----+----+\n|    |    |\n|Left|----|\n|    |Down|\n+----+----+</code></pre></div>'}}),"\n",a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="c++"><pre class="language-c++"><code class="language-c++">auto root = ImGui::DockBuilderAddNode(dockspace_id, dockspace_flags | ImGuiDockNodeFlags_DockSpace);\n                                                                         // 返り値と同じ Left  // 反対側 Right\nImGuiID right;\nauto left = ImGui::DockBuilderSplitNode(root, ImGuiDir_Left, 0.2f, nullptr, &amp;right);\n                                                                         // 返り値と同じ Down  // 反対側 Up\nImGuiID up;\nauto down = ImGui::DockBuilderSplitNode(right, ImGuiDir_Down, 0.25f, nullptr, &amp;up);</code></pre></div>'}}),"\n",a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text"># .imgui.ini\n[Docking][Data]\nDockSpace     ID=0x7CF2A649 Window=0x9A404470 Pos=0,30 Size=1200,870 Split=X\n  DockNode    ID=0x00000001 Parent=0x7CF2A649 SizeRef=599,900 Selected=0xDA554856 => Left\n  DockNode    ID=0x00000002 Parent=0x7CF2A649 SizeRef=599,900 Split=Y\n    DockNode  ID=0x00000003 Parent=0x00000002 SizeRef=599,673 CentralNode=1\n    DockNode  ID=0x00000004 Parent=0x00000002 SizeRef=599,225 Selected=0xBCCD3F05 => Down</code></pre></div>'}}),"\n",a.createElement(t.ul,{className:"contains-task-list"},"\n",a.createElement(t.li,{className:"task-list-item"},a.createElement(t.input,{type:"checkbox",disabled:!0})," ","central node"),"\n"),"\n",a.createElement(t.h1,null,"Tree"),"\n",a.createElement(t.p,null,"libclang のパース結果の ",a.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">CXCursor</code>'}})," のツリー"),"\n",a.createElement(t.img,{src:"%22tree.jpg%22",alt:"image"}),"\n",a.createElement(t.ul,{className:"contains-task-list"},"\n",a.createElement(t.li,{className:"task-list-item"},a.createElement(t.input,{type:"checkbox",disabled:!0})," ","selection"),"\n"),"\n",a.createElement(t.h1,null,"Table"),"\n",a.createElement(t.p,null,"glTF を表示してみた。さくさく書けてよさそう。"),"\n",a.createElement(t.img,{src:"%22table.jpg%22",alt:"image"}))}var r=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,l.ah)(),e.components);return t?a.createElement(t,e,a.createElement(c,e)):c(e)},s=n(8678),i=n(1883),u=n(8838);const o={code:e=>{let{children:t,className:n}=e;return n?a.createElement(u.Z,{className:n},t):a.createElement("code",null,t)}};function m(e){let{data:t,children:n}=e;const c=t.mdx.frontmatter;return a.createElement(s.Z,null,a.createElement("h1",null,c.title),a.createElement("div",{className:"tags-index"},c.tags&&c.tags.length>0&&c.tags.map((e=>a.createElement(i.rU,{to:"/tags/"+e+"/",itemProp:"url"},a.createElement("button",null,e))))),a.createElement(l.Zo,{components:o},n))}function g(e){return a.createElement(m,e,a.createElement(r,e))}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2021-imgui-docking-api-md-448b1bb449c61b729d4a.js.map