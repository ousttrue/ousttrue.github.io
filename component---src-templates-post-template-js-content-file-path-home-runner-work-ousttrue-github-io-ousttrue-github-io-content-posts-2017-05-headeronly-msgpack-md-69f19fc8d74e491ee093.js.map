{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2017-05-headeronly-msgpack-md-69f19fc8d74e491ee093.js","mappings":"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","sources":["webpack:///./content/posts/2017/05/headeronly_msgpack.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"車輪の再発明的だけどmessagepackのc++実装をまた作った。\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/ousttrue/msgpackpp\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">refrange</code>\"\n    }\n  }), \" と \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">osaru</code>\"\n    }\n  }), \" の知見を基に実装というか、編集した。\\n実装のシンプルさと使いやすさを優先して、パフォーマンスと汎用性にあまり配慮していない。\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">refrange</code>\"\n    }\n  }), \" のAPIがダメダメなのを反省し、\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">osaru</code>\"\n    }\n  }), \" で \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">serializer/deserializer</code>\"\n    }\n  }), \" のレイヤーと \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">formatter/parser</code>\"\n    }\n  }), \" のレイヤーを分けた設計を踏襲。なかなかよいのではないか。で、本家の \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">messagepack</code>\"\n    }\n  }), \" を見たらバージョンが結構進んでいて、\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">c++11</code>\"\n    }\n  }), \" 版ならヘッダーオンリーあるよと書いてあった。あったのかー。知ってたような気もするが、カスタムのオレオレ車輪でいく。\\nあと、ついでに \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">msgpackpp-rpc-asio</code>\"\n    }\n  }), \" も更新した。githubで地味に★をいただくので、微妙に需要があるらしい。今回の更新で、この前発見した \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">asio standalone</code>\"\n    }\n  }), \" を組み込んで \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">boost::test</code>\"\n    }\n  }), \" を \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">catch</code>\"\n    }\n  }), \" で置き換えて、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">boost::thread</code>\"\n    }\n  }), \" を \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">std::thead</code>\"\n    }\n  }), \" に置き換えるなどして、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">boost</code>\"\n    }\n  }), \" への依存を取り除いた。ちょっとした機能ならばヘッダオンリーなのが最近の潮流ですな。もう少し手を入れて\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">msgpack</code>\"\n    }\n  }), \" 部分を \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">msgpackpp</code>\"\n    }\n  }), \" で置き換え\\n可変長テンプレート引数\\nメッセージを \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">std::cout</code>\"\n    }\n  }), \" じゃなくて \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">plog</code>\"\n    }\n  }), \" に出力\\nヘッダオンリー\"), \"\\n\", React.createElement(_components.p, null, \"という感じにしようか。\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">websocketpp</code>\"\n    }\n  }), \" と組み合わせて使うのに便利な形にしたい。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2017/05/headeronly_msgpack.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","span","_provideComponents","components","React","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","Layout","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}