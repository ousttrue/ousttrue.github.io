{"version":3,"file":"component---src-templates-post-template-js-content-file-path-content-posts-2014-05-17-cygwin-md-ae94e8b9f4c95ecf9cd9.js","mappings":"8JAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,8OAA+O,KAAMK,EAAAA,cAAoBR,EAAYI,GAAI,KAAM,KAAMI,EAAAA,cAAoBR,EAAYK,GAAI,KAAM,iBAAkB,KAAMG,EAAAA,cAAoBR,EAAYK,GAAI,KAAM,yCAA0C,KAAMG,EAAAA,cAAoBR,EAAYK,GAAI,KAAM,QAAS,MAAO,KAAMG,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,wTAAyT,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,sVAAuV,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,yLAA0L,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,iFAAkF,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,2HAA4H,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,wHAAyH,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,gUAAiU,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,oFACj6E,CAKA,MAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOU,QAASC,GAAaT,OAAOC,OAAO,CAAC,GAAGI,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWX,EAAOS,EAAAA,cAAoBV,EAAmBC,IAAUD,EAAkBC,EAC9H,E,8BCPA,MAAMQ,EAAa,CACjBI,KAAMC,IAA2B,IAA1B,SAACC,EAAQ,UAAEC,GAAUF,EAC1B,OAAOE,EAAYN,EAAAA,cAAoBO,EAAAA,EAAsB,CAC3DD,UAAWA,GACVD,GAAYL,EAAAA,cAAoB,OAAQ,KAAMK,EAAS,GAG9D,SAASG,EAAYC,GAAmB,IAAlB,KAACC,EAAI,SAAEL,GAASI,EACpC,MAAME,EAAcD,EAAKE,IAAID,YAC7B,OAAOX,EAAAA,cAAoBa,EAAAA,EAAQ,KAAMb,EAAAA,cAAoB,KAAM,KAAMW,EAAYG,OAAQd,EAAAA,cAAoB,MAAO,CACtHM,UAAW,cACVK,EAAYI,MAAQJ,EAAYI,KAAKC,OAAS,GAAKL,EAAYI,KAAKE,KAAIC,GAClElB,EAAAA,cAAoBmB,EAAAA,GAAM,CAC/BC,GAAI,SAASF,EAAG,IAChBG,SAAU,OACTrB,EAAAA,cAAoB,SAAU,KAAMkB,OACpClB,EAAAA,cAAoBsB,EAAAA,GAAa,CACpCvB,WAAYA,GACXM,GACL,CACe,SAASkB,EAAiBhC,GACvC,OAAOS,EAAAA,cAAoBQ,EAAcjB,EAAOS,EAAAA,cAAoBwB,EAAqBjC,GAC3F,C","sources":["webpack:///./content/posts/2014/05/17/cygwin.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"cygwinの導入とgit最新版のビルドまで\\nしばらくWindows上のメインのshellをmsysgitのbashにしていたのだが、\\n久しぶりにcygwinに回帰した。\\n知らない間に環境が良くなっているじゃないの、ということで初期導入手順メモ。\\n既存のcygwinを掃除\\n“C:/cygwin”にインストール済みだが、\\ndownload済みのパッケージくらいは置いておこうということで以下のファイル/ディレクトリ\\n以外を削除した。\\nc:/cygwin\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"setup-x86.exe\"), \"\\n\", React.createElement(_components.li, null, \"http%3a%2f%2f... (パッケージのダウンロードディレクトリ)\"), \"\\n\", React.createElement(_components.li, null, \"etc/\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"あとetc/setupも削除。 これでクリーンな状態になるっぽい。\\n以降、 http://tar.blogru.me/entry/2014/03/20/004156\\nの通りにgitのビルドまで遂行。\\ncygwinセットアップ\\nsetup-x86.exeを実行。wgetとgitを追加インストール。\\napt-cyg導入\\n$ mkdir -p /usr/local/src\\n$ cd /usr/local/src\\n$ git clone https://github.com/transcode-open/apt-cyg.git\\n$ cp apt-cyg/apt-cyg /usr/local/bin/\"), \"\\n\", React.createElement(_components.p, null, \"最新版gitのビルド\\nビルドに必要なもの\\ninstall.sh\\nset -x\\napt-cyg install gcc-core\\napt-cyg install make patch vim\\napt-cyg install libncurses-devel openssl-devel readline libsqlite3-devel libxml2-devel libxslt-devel\\napt-cyg install autoconf zlib zlib-devel libiconv python openssh tcl\\napt-cyg install gettext-devel\\napt-cyg install curl libcurl-devel\"), \"\\n\", React.createElement(_components.p, null, \"ビルド\\n$ cd /usr/local/src\\n$ git clone git://github.com/git/git.git\\n$ cd git\\n$ make configure\\n$ ./configure --prefix=/usr/local --with-curl --with-expat\\n$ make all & make install\"), \"\\n\", React.createElement(_components.p, null, \"トラブルシューティング\\n“make install”で\\nmake: execvp: install: Permission denied cygwin\"), \"\\n\", React.createElement(_components.p, null, \"というエラーが出てはまる。どうやらgitに含まれるINSTALLがmake\\ninstallのターゲットに 誤認されるという現象っぽい。\\nINSTALLを撤去したらうまく動いた。\\n$ rm INSTALL gitweb/INSTALL\"), \"\\n\", React.createElement(_components.p, null, \"別のマシンでは起きなかったのだがなんだこれは。\\nトラブルシューティング2\\nWindows8固有の問題のようだがmake中のforkに失敗する件について。\\n対策は、”rebaseall”ではなく\\n$ export LANG=C\"), \"\\n\", React.createElement(_components.p, null, \"とすることだった。\\nwindows8-上で-cygwin-版の-git-で-pullpushfetch-に失敗するhttp://kamiyn.wordpress.com/2012/10/18/windows8-%E4%B8%8A%E3%81%A7-cygwin-%E7%89%88%E3%81%AE-git-%E3%81%A7-pullpushfetch-%E3%81%AB%E5%A4%B1%E6%95%97%E3%81%99%E3%82%8B/\\nのコメントに書いてあった。\\nかくして、gitが最新版になった。\\n$ git --version\\ngit version 2.0.0.rc3.4.g6308767.dirty\"), \"\\n\", React.createElement(_components.p, null, \"思えば、cygwinをやめたのはgitがうまく動かなかったのを解決できなかったのが原因だった\\nような気がするので、最新版がさくっとビルドできるのはありがたい。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2014/05/17/cygwin.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  const frontmatter = data.mdx.frontmatter;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"div\", {\n    className: \"tags-index\"\n  }, frontmatter.tags && frontmatter.tags.length > 0 && frontmatter.tags.map(tag => {\n    return React.createElement(Link, {\n      to: `/tags/${tag}/`,\n      itemProp: \"url\"\n    }, React.createElement(\"button\", null, tag));\n  })), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        tags\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","ul","li","_provideComponents","components","React","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","frontmatter","mdx","Layout","title","tags","length","map","tag","Link","to","itemProp","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}