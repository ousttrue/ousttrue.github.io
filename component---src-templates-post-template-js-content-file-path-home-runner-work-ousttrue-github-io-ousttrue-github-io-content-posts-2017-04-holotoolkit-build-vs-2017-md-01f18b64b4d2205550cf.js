"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4294],{7095:function(n,s,a){a.r(s),a.d(s,{default:function(){return r}});var t=a(1151),e=a(7294);function p(n){const s=Object.assign({p:"p",span:"span"},(0,t.ah)(),n.components);return e.createElement(e.Fragment,null,e.createElement(s.p,null,"VS2017 からレジストリの構成が変わっている。"),"\n",e.createElement(s.p,null,"http://stackoverflow.com/questions/328017/path-to-msbuild"),"\n",e.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="csharp"><pre class="language-csharp"><code class="language-csharp"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> <span class="token function">CalcMSBuildPath</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> msBuildVersion<span class="token punctuation">)</span>\n<span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>msBuildVersion <span class="token operator">==</span> <span class="token string">"15.0"</span><span class="token punctuation">)</span>\n    <span class="token punctuation">{</span>\n        <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> key <span class="token operator">=</span> Microsoft<span class="token punctuation">.</span>Win32<span class="token punctuation">.</span>Registry<span class="token punctuation">.</span>LocalMachine<span class="token punctuation">.</span><span class="token function">OpenSubKey</span><span class="token punctuation">(</span>\n            <span class="token string">@"SOFTWARE\\WOW6432Node\\Microsoft\\VisualStudio\\SxS\\VS7"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n        <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span>\n            <span class="token punctuation">{</span>\n                <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span>\n            <span class="token class-name"><span class="token keyword">string</span></span> folder <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">GetValue</span><span class="token punctuation">(</span>msBuildVersion<span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token class-name"><span class="token keyword">string</span></span><span class="token punctuation">;</span>\n            <span class="token class-name"><span class="token keyword">string</span></span> msBuildPath <span class="token operator">=</span> Path<span class="token punctuation">.</span><span class="token function">Combine</span><span class="token punctuation">(</span>folder<span class="token punctuation">,</span> <span class="token string">"MSBuild\\\\15.0\\\\Bin\\\\msbuild.exe"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">return</span> msBuildPath<span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token comment">// 既存のコード</span>\n<span class="token punctuation">}</span></code></pre></div>'}}))}var o=function(n){void 0===n&&(n={});const{wrapper:s}=Object.assign({},(0,t.ah)(),n.components);return s?e.createElement(s,n,e.createElement(p,n)):p(n)},c=(a(8678),a(8838));const l={code:n=>{let{children:s,className:a}=n;return a?e.createElement(c.Z,{className:a},s):e.createElement("code",null,s)}};function u(n){let{data:s,children:a}=n;return e.createElement(e.Fragment,null,e.createElement("h1",null,s.mdx.frontmatter.title),e.createElement(t.Zo,{components:l},a))}function r(n){return e.createElement(u,n,e.createElement(o,n))}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2017-04-holotoolkit-build-vs-2017-md-01f18b64b4d2205550cf.js.map