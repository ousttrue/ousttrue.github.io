{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2013-06-26-oculus-fps-md-42c78f1afe91b826d9d9.js","mappings":"+JAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,KAAM,SACLC,EAAAA,EAAAA,MAAsBN,EAAMO,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,oLAAqL,KAAMI,EAAAA,cAAoBP,EAAYI,KAAM,CACzTI,wBAAyB,CACvBC,OAAQ,udAER,KAAMF,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,isBAAksB,KAAMI,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,gEACtyB,CAKA,MAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOW,QAASC,GAAaV,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOK,EAAYJ,EAAAA,cAAoBI,EAAWZ,EAAOQ,EAAAA,cAAoBT,EAAmBC,IAAUD,EAAkBC,EAC9H,E,oBCXA,MAAMO,EAAa,CACjBM,KAAMC,IAA2B,IAA1B,SAACC,EAAQ,UAAEC,GAAUF,EAC1B,OAAOE,EAAYR,EAAAA,cAAoBS,EAAAA,EAAsB,CAC3DD,UAAWA,GACVD,GAAYP,EAAAA,cAAoB,OAAQ,KAAMO,EAAS,GAG9D,SAASG,EAAYC,GAAmB,IAAlB,KAACC,EAAI,SAAEL,GAASI,EACpC,OAAOX,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoB,KAAM,KAAMY,EAAKC,IAAIC,YAAYC,OAAQf,EAAAA,cAAoBgB,EAAAA,GAAa,CAC7IjB,WAAYA,GACXQ,GACL,CACe,SAASU,EAAiBzB,GACvC,OAAOQ,EAAAA,cAAoBU,EAAclB,EAAOQ,EAAAA,cAAoBkB,EAAqB1B,GAC3F,C","sources":["webpack:///./content/posts/2013/06/26/oculus-fps.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"FPS カメラに Oculus 回転を仕込んだ\\nIrrlicht の CSceneNodeAnimatorCameraFPS に Oculus を合体した。\\nIrrlicht のカメラが思ったよりいろいろやっていたのと\\nビュー行列を直接扱っていないのに手間取ったがとりあえず当初の目的を達成。\\nどうにも都合が悪かったので本体をちょっと拡張した。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"cpp\\\"><pre class=\\\"language-cpp\\\"><code class=\\\"language-cpp\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">CSCameraSceneNode</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n    core<span class=\\\"token double-colon punctuation\\\">::</span>marix4 LeftAffector<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"レンダリング直前にビュー行列に乗算する行列をセットできるのだが\\nこれが右からの乗算なので、\\n左からの乗算を追加してこれに Oculus の回転を表す行列をセットできるようにした。\\nこれを踏まえて CSceneNodeAnimatorCameraFPS をコピーして CSceneNodeAnimatorCameraOculusOnFPS を作った。\\nこいつは FPS カメラのマウスの上下移動を無視するのと libOVR からの回転値取得と左行列を追加する機能をもつ。\\nコードはこれなのだけど\\nhttps://github.com/ousttrue/onibi/blob/master/irrlicht/examples/HMDIrrlicht/CSceneNodeAnimatorCameraOculusOnFPS.cpp\\n日記に全部書くには長いし、サンプルが改造版の Irrlicht に依存するので紹介し辛い感じだなぁ。\\nオフスクリーンレンダリングとシェーダーをサポートした今風の glut みたいなフレームワークがあるとよいのだけど。\\n今度は mmd 表示周りに着手して表示途中までできた。\\nしかし Irrlicht 界のスケーリングの基準がよくわからず。cm のような気もするがなんかもっと適当な値のような気もする。\\n画像右側の身切れているのは Irrlicht サイズの Dwarf である。\\nmmd 界はミクさんの身長 20 を基準とする統一単位なのだが何かしら基準を決めねばならぬ。\\n物理の挙動の都合上スケーリングしたくないなーという事情がありどうしたものか。\"), \"\\n\", React.createElement(_components.p, null, \"スカイボックスも Oculus で見ると見違えるものがあるなー。\\nテクスチャとライティングを解決する。 あと pmx。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2013/06/26/oculus-fps.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","span","_provideComponents","components","React","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}