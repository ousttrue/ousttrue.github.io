{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2021-zola-template-md-a10c88fbe092e085df43.js","mappings":"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","sources":["webpack:///./content/posts/2021/zola_template.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    h1: \"h1\",\n    input: \"input\",\n    span: \"span\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"サイト整備のメモ。共通化して部品を少なくした。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"zola 設定\"), \"\\n\", React.createElement(_components.li, null, \"template 構築\"), \"\\n\", React.createElement(_components.li, null, \"場合によっては zola の改造\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"共通\"), \"\\n\", React.createElement(_components.ul, {\n    className: \"contains-task-list\"\n  }, \"\\n\", React.createElement(_components.li, {\n    className: \"task-list-item\"\n  }, React.createElement(_components.input, {\n    type: \"checkbox\",\n    checked: true,\n    disabled: true\n  }), \" \", \"title\"), \"\\n\", React.createElement(_components.li, {\n    className: \"task-list-item\"\n  }, React.createElement(_components.input, {\n    type: \"checkbox\",\n    checked: true,\n    disabled: true\n  }), \" \", \"日付\"), \"\\n\", React.createElement(_components.li, {\n    className: \"task-list-item\"\n  }, React.createElement(_components.input, {\n    type: \"checkbox\",\n    checked: true,\n    disabled: true\n  }), \" \", \"見出しの見た目\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"Markdown\"), \"\\n\", React.createElement(_components.ul, {\n    className: \"contains-task-list\"\n  }, \"\\n\", React.createElement(_components.li, {\n    className: \"task-list-item\"\n  }, React.createElement(_components.input, {\n    type: \"checkbox\",\n    checked: true,\n    disabled: true\n  }), \" \", \"url 文字列を自動でリンクにしたい。markdownで \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">&lt;url></code>\"\n    }\n  }), \" と記述するべし\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"20210716: masonry 入れてみた\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://masonry.desandro.com/\"\n  }, \"https://masonry.desandro.com/\")), \"\\n\", React.createElement(_components.h1, null, \"20210717: TOC\"), \"\\n\", React.createElement(_components.ul, {\n    className: \"contains-task-list\"\n  }, \"\\n\", React.createElement(_components.li, {\n    className: \"task-list-item\"\n  }, React.createElement(_components.input, {\n    type: \"checkbox\",\n    checked: true,\n    disabled: true\n  }), \" \", \"目次\\nだいたいできた。\\ngithub が増えすぎてカオスなので不要なものを整理せねば・・・\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"20210725: 色\"), \"\\n\", React.createElement(_components.p, null, \"作業用に区域ごとに色分けしていたのをやめて、地味な色に変更。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"scss\\\"><pre class=\\\"language-scss\\\"><code class=\\\"language-scss\\\"><span class=\\\"token keyword\\\">@mixin</span> <span class=\\\"token selector\\\">MAIN_COLOR </span><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">color</span><span class=\\\"token punctuation\\\">:</span> black<span class=\\\"token punctuation\\\">;</span>\\n    background-color white<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"のような方法を試してみた。\"), \"\\n\", React.createElement(_components.h1, null, \"20210725: TOC 固定\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"css\\\"><pre class=\\\"language-css\\\"><code class=\\\"language-css\\\"><span class=\\\"token property\\\">position</span><span class=\\\"token punctuation\\\">:</span> fixed<span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h1, null, \"20210725: 画像を入れれるようにしてみた\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">page.assets</code>\"\n    }\n  }), \" や \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">section.assets</code>\"\n    }\n  }), \" に想定した形で入ってこないので、\\n無理やりパスを操作したのだが、さすがにこれはちょっと・・・\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"html\\\"><pre class=\\\"language-html\\\"><code class=\\\"language-html\\\">  {% if page.extra.image %}\\n  {% set s = page.relative_path | split(pat=\\\"/\\\") %}\\n  {% set len = s | length %}\\n  {% set sl = s | slice(start=0, end=len-1) %}\\n  {% set j = sl | join(sep=\\\"/\\\") %}\\n  {% set image_url = resize_image(path=j ~ \\\"/\\\" ~ page.extra.image, width=600, op=\\\"fit_width\\\") %}\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>img</span> <span class=\\\"token attr-name\\\">src</span><span class=\\\"token attr-value\\\"><span class=\\\"token punctuation attr-equals\\\">=</span><span class=\\\"token punctuation\\\">\\\"</span>{{ image_url }}<span class=\\\"token punctuation\\\">\\\"</span></span><span class=\\\"token attr-name\\\">\\\"</span><span class=\\\"token punctuation\\\">></span></span>\\n  {% endif %}</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"なんか、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">zola</code>\"\n    }\n  }), \" がわりと融通が利かないことが分かってきた。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">resize_image</code>\"\n    }\n  }), \" で明示的に画像を加工するという設計は理解。なるほど。\\n当方、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">md</code>\"\n    }\n  }), \" ファイルと同じフォルダに \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">png, jpg</code>\"\n    }\n  }), \" を放り込んでそれを記事内で使いたいのです。\\n画像を中央の \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">static</code>\"\n    }\n  }), \" フォルダにまとめて入れておくの嫌なので。\\n改造して page.assets に放り込んでしまおう。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">hugo</code>\"\n    }\n  }), \" ほど多機能複雑でなく、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">zola</code>\"\n    }\n  }), \" ほど strict でない、そんなほどほどなツールが望まれる。\"), \"\\n\", React.createElement(_components.h1, null, \"20210815: pagination\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://www.getzola.org/documentation/templates/pagination/\"\n  }, \"https://www.getzola.org/documentation/templates/pagination/\")), \"\\n\", React.createElement(_components.p, null, \"ドキュメントよりもソースを読もう w\\n5分もかからぬ。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"html\\\"><pre class=\\\"language-html\\\"><code class=\\\"language-html\\\">      {% if paginator.current_index == 1 %}</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h1, null, \"20210829: 内部リンク記法\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">.md</code>\"\n    }\n  }), \" の記法。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://www.getzola.org/documentation/content/linking/#internal-links\"\n  }, \"https://www.getzola.org/documentation/content/linking/#internal-links\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">[NvimTexture](@/posts/2021/summer/nvimtexture.md)</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">@</code>\"\n    }\n  }), \" と \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">.md</code>\"\n    }\n  }), \" が必要。\"), \"\\n\", React.createElement(_components.h1, null, \"20210831: search\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://www.getzola.org/documentation/content/search/\"\n  }, \"https://www.getzola.org/documentation/content/search/\")), \"\\n\", React.createElement(_components.p, null, \"設定は \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">build_search_index = true</code>\"\n    }\n  }), \" するだけなのだが、\\ntemplate 作るのは大変。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/aaranxu/adidoks\"\n  }, \"https://github.com/aaranxu/adidoks\"), \" から部品を頂いてきた。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2021/zola_template.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  const frontmatter = data.mdx.frontmatter;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"div\", {\n    className: \"tags-index\"\n  }, frontmatter.tags && frontmatter.tags.length > 0 && frontmatter.tags.map(tag => {\n    return React.createElement(Link, {\n      to: `/tags/${tag}/`,\n      itemProp: \"url\"\n    }, React.createElement(\"button\", null, tag));\n  })), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        tags\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","ul","li","h1","input","span","a","_provideComponents","components","React","className","type","checked","disabled","dangerouslySetInnerHTML","__html","href","wrapper","MDXLayout","code","_ref","children","PrismSyntaxHighlight","PostTempalte","_ref2","data","frontmatter","mdx","Layout","title","tags","length","map","tag","Link","to","itemProp","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}