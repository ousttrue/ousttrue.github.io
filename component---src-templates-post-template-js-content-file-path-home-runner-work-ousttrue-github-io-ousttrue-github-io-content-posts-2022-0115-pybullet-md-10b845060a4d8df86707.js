"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[465],{657:function(e,n,t){t.r(n),t.d(n,{default:function(){return o}});var l=t(1151),r=t(7294);function c(e){const n=Object.assign({h1:"h1",p:"p",pre:"pre",code:"code",h2:"h2"},(0,l.ah)(),e.components);return r.createElement(r.Fragment,null,r.createElement(n.h1,null,"ExampleBrowser を読んでいる"),"\n",r.createElement(n.p,null,"fork して改造しながら読んでいる。"),"\n",r.createElement(n.p,null,"https://github.com/ousttrue/bullet3"),"\n",r.createElement(n.p,null,"やっと構造がわかってきた。\nコードはディレクトリに別れているのだけど、\nCMake を整理しながら推進。"),"\n",r.createElement(n.p,null,"ざっくりとこんな感じか。"),"\n",r.createElement(n.pre,null,r.createElement(n.code,{className:"language-{digraph}"},'rankdir="BT"\n\nExampleBrowser -> SimpleOpenGL3App -> gwen -> "Select DEMO";\n\n')),"\n",r.createElement(n.p,null,"で、この SimpleOpenGL3App を glfw に、gwen を imgui に置き換えてコードを単純化している。\n",r.createElement(n.code,null,"bulletphysic")," の マルチクライアント システム ぽい ",r.createElement(n.code,null,"SharedMemory")," を解読したい。\n各 Demo は、 ",r.createElement(n.code,null,"CommonExampleInterface")," できれいに分離されている。\n",r.createElement(n.code,null,"SharedMemory")," と各クライアントの通信内容と ",r.createElement(n.code,null,"OpenGL")," の繋ぎの部分が知りたい。"),"\n",r.createElement(n.p,null,"この pybullet の下地の部分がシーン同期システムに使えないかと。\n",r.createElement(n.code,null,"Unity")," とかだとノードに剛体をくっつけるのだけど、\n",r.createElement(n.code,null,"bullet")," 的には、剛体に ",r.createElement(n.code,null,"Mesh")," をつける考えになるような。"),"\n",r.createElement(n.h2,null,"20220118"),"\n",r.createElement(n.p,null,r.createElement(n.code,null,"各デモ")," と ",r.createElement(n.code,null,"Physics")," と ",r.createElement(n.code,null,"Renderer")," を分離できればよいのだが。\nわりと規模が大きい。"),"\n",r.createElement(n.h2,null,"20220122"),"\n",r.createElement(n.p,null,"だいぶ読んだ。",r.createElement(n.code,null,"GLInstancingRenderer")," がレンダラー本体。\n",r.createElement(n.code,null,"btIDebugDraw")," とは別に普通の Renderer が実装されていてこっちを解読したい。\nbtIDebugDraw だと wireframe になるのかな。"))}var a=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,l.ah)(),e.components);return n?r.createElement(n,e,r.createElement(c,e)):c(e)};t(8678);function u(e){let{data:n,children:t}=e;return r.createElement(r.Fragment,null,r.createElement("h1",null,n.mdx.frontmatter.title),r.createElement(l.Zo,null,t))}function o(e){return r.createElement(u,e,r.createElement(a,e))}},8678:function(e,n,t){t(7294)},1151:function(e,n,t){t.d(n,{Zo:function(){return u},ah:function(){return c}});var l=t(7294);const r=l.createContext({});function c(e){const n=l.useContext(r);return l.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const a={};function u({components:e,children:n,disableParentContext:t}){let u;return u=t?"function"==typeof e?e({}):e||a:c(e),l.createElement(r.Provider,{value:u},n)}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2022-0115-pybullet-md-10b845060a4d8df86707.js.map