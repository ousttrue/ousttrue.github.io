"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[5673],{8974:function(e,t,n){n.r(t),n.d(t,{default:function(){return d}});var a=n(1151),l=n(7294);function r(e){const t=Object.assign({p:"p",span:"span",a:"a",h1:"h1",ul:"ul",li:"li"},(0,a.ah)(),e.components);return l.createElement(l.Fragment,null,l.createElement(t.p,null,"Gizmo を作る過程で GeometryShader からやりなおしていたら、記憶が飛んでいたので\n忘れてもいいように記録しておくことにした。"),"\n",l.createElement(t.p,null,"旧 ",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">MinTriangle</code>'}})," リポジトリを作り直し。"),"\n",l.createElement(t.p,null,l.createElement(t.a,{href:"http://ousttrue.github.io/d3d11_samples/"},"http://ousttrue.github.io/d3d11_samples/")),"\n",l.createElement(t.h1,null,"MyST なかなかよい"),"\n",l.createElement(t.p,null,l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">reStructuredText</code>'}})," わりと苦手なので ",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">sphinx</code>'}})," でも Markdown を使いたい派なのだが、\n",l.createElement(t.a,{href:"https://myst-parser.readthedocs.io/en/latest/index.html"},"MyST")," なる Sphinx 向け markdown 拡張ができていた。"),"\n",l.createElement(t.ul,null,"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"https://qiita.com/Tachy_Pochy/items/53866eea43d0ad93ea1d"},"Sphinx で使える Markdown 方言 'MyST'")),"\n"),"\n",l.createElement(t.p,null,"sphinx directive の指定の仕方がシンプルで下のような感じ。markdown のシンタックスハイライトやフォーマッターに乗れるのでよい。"),"\n",l.createElement("pre",null,l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">:width: 320px\n:height: 320px</code></pre></div>'}}),l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">basic/create_window\nbasic/create_device\nbasic/create_swapchain\nbasic/render_target\nbasic/compile_shader\nbasic/basic_pipeline</code></pre></div>'}})),"\n",l.createElement(t.p,null,l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">sphinx-autobuild</code>'}})," と github-actions による ",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">gh-pages</code>'}})," デプロイを仕込んだらかなりよくなった。"),"\n",l.createElement(t.h1,null,"memo"),"\n",l.createElement(t.ul,null,"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"https://github.com/wpilibsuite/sphinxext-remoteliteralinclude"},"https://github.com/wpilibsuite/sphinxext-remoteliteralinclude")),"\n"),"\n",l.createElement(t.p,null,"git の revision と path 指定して include できないかしら。\nサンプルコードにちょこちょこっと解説を書きたいのだが、サンプルコードが進化する場合に ",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">literalinclude</code>'}})," だと場所がずれるのだ。"))}var c=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,a.ah)(),e.components);return t?l.createElement(t,e,l.createElement(r,e)):r(e)},s=n(8678),i=n(1883),u=n(8838);const m={code:e=>{let{children:t,className:n}=e;return n?l.createElement(u.Z,{className:n},t):l.createElement("code",null,t)}};function o(e){let{data:t,children:n}=e;const r=t.mdx.frontmatter;return l.createElement(s.Z,null,l.createElement("h1",null,r.title),l.createElement("div",{className:"tags-index"},r.tags&&r.tags.length>0&&r.tags.map((e=>l.createElement(i.rU,{to:"/tags/"+e+"/",itemProp:"url"},l.createElement("button",null,e))))),l.createElement(a.Zo,{components:m},n))}function d(e){return l.createElement(o,e,l.createElement(c,e))}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2021-fall-sphinx-myst-md-e90184f9802638ea7786.js.map