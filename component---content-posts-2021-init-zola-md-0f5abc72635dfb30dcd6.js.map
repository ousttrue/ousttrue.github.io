{"version":3,"file":"component---content-posts-2021-init-zola-md-0f5abc72635dfb30dcd6.js","mappings":"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","sources":["webpack:///./content/posts/2021/init_zola.md","webpack:///./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    pre: \"pre\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"最近、 rust を再開したので、\\n\", React.createElement(_components.code, null, \"Static Site Generator\"), \" を go 製の hugo から rust 製の zola に変更してみた。\"), \"\\n\", React.createElement(_components.p, null, \"https://www.getzola.org/\"), \"\\n\", React.createElement(_components.h1, null, \"hugo のからの引っ越し\"), \"\\n\", React.createElement(_components.h2, null, \"zola インストール\"), \"\\n\", React.createElement(_components.h2, null, \"初期化\"), \"\\n\", React.createElement(_components.h2, null, \"config.toml を hugo 版から zola 版に書き換える。\"), \"\\n\", React.createElement(_components.p, null, \"最低限 base_url。\"), \"\\n\", React.createElement(_components.h2, null, \"プレビューしてみる\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"$ zola serve\\n\")), \"\\n\", React.createElement(_components.p, null, \"一部の記事でエラーが出る。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"Reason: There is a link that is missing a URL\\n\")), \"\\n\", React.createElement(_components.p, null, \"どの記事がまずいかはわかるが、何行目とか場所はわからないのかしら。\\n適当になおす。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"$ zola check\\n\")), \"\\n\", React.createElement(_components.p, null, \"の方がデバッグ向け。\\nいくつかなおしたら、エラーは出なくなった。\"), \"\\n\", React.createElement(_components.h1, null, \"テンプレートを用意する\"), \"\\n\", React.createElement(_components.p, null, \"https://www.getzola.org/documentation/getting-started/overview/\"), \"\\n\", React.createElement(_components.p, null, \"に従って基本的なテンプレートを作成。\\nindex.html, section.html, page.html の3種類のテンプレートがサーチされる。\\nsection.html と page.html は、section のフロントマター、 \", React.createElement(_components.code, null, \"template\"), \", \", React.createElement(_components.code, null, \"page_template\"), \" で変更できる。\"), \"\\n\", React.createElement(_components.h1, null, \"zola の content 構成\"), \"\\n\", React.createElement(_components.p, null, \"section(フォルダ) に page が所属するという構成みたい。\\nsection とうのは単なるフォルダではなくて、folder/index.md もしくは folder/_index.md をさす。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"root => index.html\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"section\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"_index.md (セクションになる) => section.html\"), \"\\n\", React.createElement(_components.li, null, \"page1.md => page.html\"), \"\\n\", React.createElement(_components.li, null, \"page2.md => page.html\"), \"\\n\", React.createElement(_components.li, null, \"subsection (_index.md が無いのでセクションでは無い) => レンダリングされない\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"page3.md (orphan page) => page.html\"), \"\\n\", React.createElement(_components.li, null, \"page4.md (orphan page) => page.html\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"セクションに所属しない page は orphan page となり、 \", React.createElement(_components.code, null, \"section.pages\"), \" のように列挙することができなくなる。\\nすべてのフォルダに \", React.createElement(_components.code, null, \"_index.md\"), \" を配置してセクション化するという設計思想のようだ。\"), \"\\n\", React.createElement(_components.p, null, \"セクションが木構造になっていて、page が leaf になる。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"section\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"subsections\"), \"\\n\", React.createElement(_components.li, null, \"pages\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"が再帰的に続く。\"), \"\\n\", React.createElement(_components.h2, null, \"zola を改造してみた。\"), \"\\n\", React.createElement(_components.p, null, \"orphan page が section.pages に入るようになる。\\nhttps://github.com/ousttrue/zola/commit/7842d0b2d05eb15400dbe20b20791b57af077de1\"), \"\\n\", React.createElement(_components.h1, null, \"zola 設定 config.toml\"), \"\\n\", React.createElement(_components.p, null, \"https://www.getzola.org/documentation/getting-started/configuration/\"), \"\\n\", React.createElement(_components.h1, null, \"Tera テンプレート\"), \"\\n\", React.createElement(_components.p, null, \"https://tera.netlify.app/docs\"), \"\\n\", React.createElement(_components.h2, null, \"extends\"), \"\\n\", React.createElement(_components.p, null, \"別ファイルを部分的に override する\\nhttps://tera.netlify.app/docs/#inheritance\"), \"\\n\", React.createElement(_components.h2, null, \"include\"), \"\\n\", React.createElement(_components.p, null, \"別ファイルの部品を読み込む\\nhttps://tera.netlify.app/docs/#include\"), \"\\n\", React.createElement(_components.h2, null, \"date format\"), \"\\n\", React.createElement(_components.p, null, \"https://tera.netlify.app/docs/#include\"), \"\\n\", React.createElement(_components.h1, null, \"とりあえずメンテナンス中・・・\"), \"\\n\", React.createElement(_components.p, null, \"hugo に比べて template の構成がシンプルでわかりやすいような気がする\\n(hugo に慣れているせいかもしれない)。\\nそもそも hugo の時点でちゃんと管理してなかったので、\\nぼちぼち続きをやる。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","code","h1","h2","pre","ul","li","_provideComponents","components","React","wrapper","MDXLayout","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}