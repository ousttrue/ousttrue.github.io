{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2017-08-media-foundation-md-4623e6243a046f21cec3.js","mappings":"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","sources":["webpack:///./content/posts/2017/08/media_foundation.md","webpack:///./src/templates/post-template.js","webpack:///./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"DirectShow後継の動画・音声フレームワーク。\"), \"\\n\", React.createElement(_components.p, null, \"sampleのありか\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/Microsoft/Windows-classic-samples/tree/master/Samples/Win7Samples/multimedia/mediafoundation\"), \"\\n\", React.createElement(_components.p, null, \"Win7Samplesに気付かず・・・\\nはじめの一歩\\nここから始めるのがよい。\"), \"\\n\", React.createElement(_components.p, null, \"Audio/Video Playback\"), \"\\n\", React.createElement(_components.p, null, \"How to Play Media Files with Media Foundation\"), \"\\n\", React.createElement(_components.p, null, \"Media Session Playback Example。ソースあり\"), \"\\n\", React.createElement(_components.p, null, \"MediaSessionPlaybackExampleで動画を開くとこんな感じのTopologyになる。\\n動画(MediaSource)--->video-> EVR(MediaSink)\\n|\\n+->audio-> SAR(MediaSink)\"), \"\\n\", React.createElement(_components.p, null, \"MediaSourceとMediaSinkを作ってつなぐのがMediaFoundationの基本概念。\\nCMakeでビルドできるように取りまとめた。\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/ousttrue/MediaFoundationSample/tree/master/MediaSessionPlaybackExample\"), \"\\n\", React.createElement(_components.p, null, \"構成\\nDirectShowとは違う感じのところがある。\"), \"\\n\", React.createElement(_components.p, null, \"IMFMediaSourceがストレージとDemuxerを内包している\\nなので途中で枝分かれするというよりも、IMFMediaStream -> IMFTransform -> IMFStreamSinkというラインが複数ある感じになる。\"), \"\\n\", React.createElement(_components.p, null, \"+---------------+\\n|IMFMediaSource |\\n+---------------+\\n|+-------------+|\\n||IMFByteStream||\\n|+-------------+|                                          VideoRenderer\\n|  |  |Read     |                                          +------------+\\n|  |  v         |     (compressed) decoder (uncompressed)  |IMFMediaSink|\\n|  | +--------------+ IMFSample +------------+ IMFSample +-------------+|\\n|  | |IMFMediaStream|---------->|IMFTransform|---------->|IMFStreamSink|+\\n|  v +--------------+           +------------+           +-------------+\\n| +--------------+              +------------+           +-------------+\\n| |IMFMediaStream|------------->|IMFTransform|---------->|IMFStreamSink|+\\n| +--------------+  IMFSample   +------------+ IMFSample +-------------+|\\n+---------------+   (compressed)           (uncompressed)  |IMFMediaSink|\\n+------------+\\nAudioRendrer\"), \"\\n\", React.createElement(_components.p, null, \"TopoEdit\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/Microsoft/Windows-classic-samples/tree/master/Samples/Win7Samples/multimedia/mediafoundation/topoedit\\nhttp://blogs.microsoft.co.il/pavely/2011/03/11/introduction-to-topoedit/\"), \"\\n\", React.createElement(_components.p, null, \"いろんなAPI\\nMediaSource(入力)とMediaSink(出力)を駆動する高レベルのAPIが複数ある。\\n[Obsolete]古のPlayer\"), \"\\n\", React.createElement(_components.p, null, \"IMFPMediaPlayer\"), \"\\n\", React.createElement(_components.p, null, \"Important  Deprecated. This API may be removed from future releases of Windows. Applications should use the Media Session for playback.\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/Microsoft/Windows-classic-samples/blob/master/Samples/Win7Samples/multimedia/mediafoundation/SimplePlay\\nhttps://github.com/Microsoft/Windows-classic-samples/tree/master/Samples/Win7Samples/multimedia/mediafoundation/MFPlayer2\"), \"\\n\", React.createElement(_components.p, null, \"[Desktop]再生向けのSession\\nPlayer向けのAPI。UWPには無い。\"), \"\\n\", React.createElement(_components.p, null, \"Media Session\\nhttp://blog.firefly-vj.net/2009/06/01/mediafoundation-play-with-mediasession.html\\nMedia Foundationの再生サンプルの状態管理をMSMで行う\"), \"\\n\", React.createElement(_components.p, null, \"Topology\"), \"\\n\", React.createElement(_components.p, null, \"Topologies\"), \"\\n\", React.createElement(_components.p, null, \"変換向けのReader\\nClockが必要ない用途に向いている。\\n各フレームを最速で処理したい場合や、MediaSourceがWebCamである場合など。\"), \"\\n\", React.createElement(_components.p, null, \"Source Reader\\nUsing the Source Reader to Process Media Data\\nThe Source Reader does not support reverse playback, even if the media source does.\\nMediaFoundationでID3D11Texture2Dに動画のフレームを読み込む 覚書β\\nMediaFoundation — 動画の読み込み\"), \"\\n\", React.createElement(_components.p, null, \"[Desktop][UWP]WinRTのEngine\\nWindows.Mediaのバックエンド？。UWPとDesktopの両方で使える。\"), \"\\n\", React.createElement(_components.p, null, \"Supported Microsoft Media Foundation APIs for Windows Phone 8\\nWalkthrough: Using Microsoft Media Foundation for Windows Phone 8\"), \"\\n\", React.createElement(_components.p, null, \"using a MediaElement control is a much quicker and easier way\\nYou also must use MF if you want to use video as a texture on 3-D geometry\"), \"\\n\", React.createElement(_components.p, null, \"DXVAが簡単にできる。むしろUWPではDXVAしかない様子。情報少ないけど。\"), \"\\n\", React.createElement(_components.p, null, \"Media engine native C++ video playback sample\"), \"\\n\", React.createElement(_components.p, null, \"MediaSource\"), \"\\n\", React.createElement(_components.p, null, \"Media Sources\"), \"\\n\", React.createElement(_components.p, null, \"Writing a Custom Media Source\\nCase Study: MPEG-1 Media Source\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/Microsoft/Windows-classic-samples/tree/master/Samples/Win7Samples/multimedia/mediafoundation/mpeg1source\\nhttps://github.com/Microsoft/Windows-classic-samples/tree/master/Samples/Win7Samples/multimedia/mediafoundation/wavsource\"), \"\\n\", React.createElement(_components.p, null, \"Source Resolver\"), \"\\n\", React.createElement(_components.p, null, \"Using the Source Resolver\"), \"\\n\", React.createElement(_components.p, null, \"URL\"), \"\\n\", React.createElement(_components.p, null, \"IMFSourceResolver::CreateObjectFromURL\"), \"\\n\", React.createElement(_components.p, null, \"ByteStream\"), \"\\n\", React.createElement(_components.p, null, \"IMFSourceResolver::CreateObjectFromByteStream\"), \"\\n\", React.createElement(_components.p, null, \"ByteStreamを自作する\\nMP3 File Source\"), \"\\n\", React.createElement(_components.p, null, \"https://msdn.microsoft.com/en-us/library/windows/desktop/ff685299(v=vs.85).aspx\"), \"\\n\", React.createElement(_components.p, null, \"MPEG-4 File Source\"), \"\\n\", React.createElement(_components.p, null, \"https://msdn.microsoft.com/en-us/library/windows/desktop/dd757766(v=vs.85).aspx\"), \"\\n\", React.createElement(_components.p, null, \"MediaSink\"), \"\\n\", React.createElement(_components.p, null, \"Media Sinks\"), \"\\n\", React.createElement(_components.p, null, \"EVR\"), \"\\n\", React.createElement(_components.p, null, \"Enhanced Video Renderer\\nMediaSink\\nHWNDを渡してWindowに描画させることが出来る。\\nPresenterを自作して描画をカスタマイズできる。\\nD3D9 ?\\nEVR カスタムプレゼンタを実装する\"), \"\\n\", React.createElement(_components.p, null, \"SAR\"), \"\\n\", React.createElement(_components.p, null, \"Streaming Audio Renderer\"), \"\\n\", React.createElement(_components.p, null, \"AudioSink自作\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/Microsoft/Windows-classic-samples/tree/master/Samples/Win7Samples/multimedia/mediafoundation/wavsink\"), \"\\n\", React.createElement(_components.p, null, \"VideoSink自作\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/Microsoft/Windows-classic-samples/tree/master/Samples/DX11VideoRenderer\"), \"\\n\", React.createElement(_components.p, null, \"Playbackに対応した自前描画を作るには。\"), \"\\n\", React.createElement(_components.p, null, \"MediaSinkを自作する\\nMediaSinkでDXVAを使う\"), \"\\n\", React.createElement(_components.p, null, \"SampleGrabberSink\"), \"\\n\", React.createElement(_components.p, null, \"MFCreateSampleGrabberSinkActivate\"), \"\\n\", React.createElement(_components.p, null, \"MediaTransform\"), \"\\n\", React.createElement(_components.p, null, \"Media Foundation Transforms\"), \"\\n\", React.createElement(_components.p, null, \"About MFTs\"), \"\\n\", React.createElement(_components.p, null, \"Comparison of MFTs and DMOs\"), \"\\n\", React.createElement(_components.p, null, \"H.264\"), \"\\n\", React.createElement(_components.p, null, \"H.264 Video Decoder\"), \"\\n\", React.createElement(_components.p, null, \"DXVA\\nDirectX Video Acceleration。\"), \"\\n\", React.createElement(_components.p, null, \"About DXVA 2.0\\nAdding a Decoder to a Topology\"), \"\\n\", React.createElement(_components.p, null, \"MR_VIDEO_ACCELERATION_SERVICE\\nD3d9\"), \"\\n\", React.createElement(_components.p, null, \"Supporting DXVA 2.0 in Media Foundation\\nDXVA Video Processing\\nIDirect3DDeviceManager9\"), \"\\n\", React.createElement(_components.p, null, \"D3D11\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/Microsoft/Windows-classic-samples/tree/master/Samples/DX11VideoRenderer\\nSupporting Direct3D 11 Video Decoding in Media Foundation\\nIMFDXGIDeviceManager\"), \"\\n\", React.createElement(_components.p, null, \"Sample & Buffer\\nSampleの中にBufferが入っている。\"), \"\\n\", React.createElement(_components.p, null, \"Media Samples\"), \"\\n\", React.createElement(_components.p, null, \"Video Samples\"), \"\\n\", React.createElement(_components.p, null, \"Media Buffers\\nhttps://github.com/loskutov/VideoCapture/blob/master/src/DesktopDuplicationSampleProvider.cpp\"), \"\\n\", React.createElement(_components.p, null, \"MediaType\"), \"\\n\", React.createElement(_components.p, null, \"Media Types\"), \"\\n\", React.createElement(_components.p, null, \"Presentation Clock\"), \"\\n\", React.createElement(_components.p, null, \"Presentation Clock\"), \"\\n\", React.createElement(_components.p, null, \"Media Event\"), \"\\n\", React.createElement(_components.p, null, \"Media Event Generators\"), \"\\n\", React.createElement(_components.p, null, \"linkするライブラリ\\n関数はドキュメントでわかるが定数はどれに入っているかわからない。\\nわりと総当たりで試すはめになる。\"), \"\\n\", React.createElement(_components.p, null, \"mf.lib\\nmfplat.lib\\nmfuuid.lib\\nstrmiids.lib\\nwmcodecdspuuid.lib\"), \"\\n\", React.createElement(_components.p, null, \"参考\"), \"\\n\", React.createElement(_components.p, null, \"Media Foundation Programming Guide\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2017/08/media_foundation.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nfunction PostTempalte({data, children}) {\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, null, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","_provideComponents","components","React","wrapper","MDXLayout","PostTempalte","_ref","data","children","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}