{"version":3,"file":"component---content-posts-2021-summer-blender-3-md-e3f12742b8ce4392a088.js","mappings":"yHAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,KAAM,OACNC,GAAI,KACJC,GAAI,KACJC,EAAG,IACHC,GAAI,KACJC,GAAI,OACHC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,yCAA0CS,EAAAA,cAAoBZ,EAAYI,KAAM,KAAM,mBAAoB,aAAc,KAAMQ,EAAAA,cAAoBZ,EAAYK,GAAI,KAAM,qBAAsB,KAAMO,EAAAA,cAAoBZ,EAAYM,GAAI,KAAM,SAAU,KAAMM,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,0CAA2C,KAAMS,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,iEAAkE,KAAMS,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,4CAA6C,KAAMS,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,kCAAmC,KAAMS,EAAAA,cAAoBZ,EAAYM,GAAI,KAAM,cAAe,KAAMM,EAAAA,cAAoBZ,EAAYG,EAAG,KAAMS,EAAAA,cAAoBZ,EAAYI,KAAM,KAAM,gBAAiB,iGAAkG,KAAMQ,EAAAA,cAAoBZ,EAAYM,GAAI,KAAM,iBAAkB,KAAMM,EAAAA,cAAoBZ,EAAYG,EAAG,KAAMS,EAAAA,cAAoBZ,EAAYO,EAAG,CAC1mCM,KAAM,oDACL,kDAAmD,KAAMD,EAAAA,cAAoBZ,EAAYM,GAAI,KAAM,gBAAiB,KAAMM,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,KAAMI,EAAAA,cAAoBZ,EAAYS,GAAI,KAAM,+CAAgD,MAAO,KAAMG,EAAAA,cAAoBZ,EAAYM,GAAI,KAAM,OAAQ,KAAMM,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,oEAAqE,KAAMS,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,KAAMI,EAAAA,cAAoBZ,EAAYS,GAAI,KAAMG,EAAAA,cAAoBZ,EAAYO,EAAG,CAC3jBM,KAAM,oDACL,gCAAiC,MAAO,KAAMD,EAAAA,cAAoBZ,EAAYK,GAAI,KAAM,SAAU,KAAMO,EAAAA,cAAoBZ,EAAYG,EAAG,KAAM,eAAgB,KAAMS,EAAAA,cAAoBZ,EAAYQ,GAAI,KAAM,KAAMI,EAAAA,cAAoBZ,EAAYS,GAAI,KAAM,4CAA6C,KAAMG,EAAAA,cAAoBZ,EAAYS,GAAI,KAAM,uCAAwC,MAC3Y,CAKA,UAJA,SAAoBV,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOe,QAASC,GAAad,OAAOC,OAAO,CAAC,GAAGQ,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWhB,EAAOa,EAAAA,cAAoBd,EAAmBC,IAAUD,EAAkBC,EAC9H,C,sECWO,MAAMiB,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBN,GAC/B,MAAMO,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAfL,EACFA,EAAWO,GAGb,IAAIA,KAAsBP,IAChC,CAACO,EAAmBP,GACzB,C","sources":["webpack:///./content/posts/2021/summer/blender3.md","webpack:///./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Blender-3.0 が面白そうだし bender 活動を再開しよう。\\n\", React.createElement(_components.code, null, \"Gingerbread Man\"), \" を作りなおそう。\"), \"\\n\", React.createElement(_components.h1, null, \"Blender-3.0 alpha\"), \"\\n\", React.createElement(_components.h2, null, \"build\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/ousttrue/bpy_module\"), \"\\n\", React.createElement(_components.p, null, \"build より subversion の更新が遥かに長い。\\nembree や llvm までいろんなもの入っているな。\"), \"\\n\", React.createElement(_components.p, null, \"luajit を仕込んだら ffi で色々な関数にアクセスできるかもしれないな。\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/scoder/lupa\"), \"\\n\", React.createElement(_components.h2, null, \"python-3.9\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"Blender-2.93\"), \" で既に python-3.9 になっていた。\\npython-3.9 の型ヒント付きで addon 書くで。\\nBlender に合わせて python のバージョンを上げるスタイル。\"), \"\\n\", React.createElement(_components.h2, null, \"asset browser\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://ameblo.jp/kay-nea/entry-12688563203.html\"\n  }, \"Blender 3.0 Alphaを触ってみた　【　Blender 3.0 Alpha　】\")), \"\\n\", React.createElement(_components.h2, null, \"pose library\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://www.youtube.com/watch?v=TNbdj6qbrAg\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"USD\"), \"\\n\", React.createElement(_components.p, null, \"オープンソースで簡単なオーサリングができるツールがあるといいのだけど、現状 Houdini の Solaris しか存在しない？\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://zenn.dev/remiria/articles/a4c8e4a80caec7\"\n  }, \"Blender 3.0 のUSD対応状況を調べる(1)\")), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"addon\"), \"\\n\", React.createElement(_components.p, null, \"作りかけで放置している\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/ousttrue/io_scene_yup\"), \"\\n\", React.createElement(_components.li, null, \"https://github.com/ousttrue/pyimpex\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","code","h1","h2","a","ul","li","_provideComponents","components","React","href","wrapper","MDXLayout","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}