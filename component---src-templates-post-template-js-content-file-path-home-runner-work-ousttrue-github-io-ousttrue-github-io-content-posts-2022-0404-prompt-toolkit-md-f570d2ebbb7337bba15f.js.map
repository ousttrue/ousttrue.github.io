{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2022-0404-prompt-toolkit-md-f570d2ebbb7337bba15f.js","mappings":"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","sources":["webpack:///./content/posts/2022/0404-prompt-toolkit.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    h2: \"h2\",\n    p: \"p\",\n    span: \"span\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"prompt-toolkit の fullscreen アプリケーション\"), \"\\n\", React.createElement(_components.h2, null, \"Buffer\"), \"\\n\", React.createElement(_components.p, null, \"しばらく試行錯誤していたのだがやっと使い方が分かってきた。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Window</code>\"\n    }\n  }), \" + \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">BufferControl</code>\"\n    }\n  }), \" が基本形で edit する場合向け。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Window</code>\"\n    }\n  }), \" + \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">FormatedTextControl</code>\"\n    }\n  }), \" が readonly の装飾済みのテキストに向いていそう。\"), \"\\n\", React.createElement(_components.p, null, \"Lexer で基本的な装飾を施して、Preprocess でフォーカスやホバーのUI的な装飾をするという使い分けがよさそう。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">FormattedTextControl</code>\"\n    }\n  }), \" の場合は初期化時にスタイル適用済みのテキストを渡してしまう。\"), \"\\n\", React.createElement(_components.h2, null, \"example\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/prompt-toolkit\"\n  }, \"https://github.com/prompt-toolkit\"), \" の、\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/prompt-toolkit/pyvim\"\n  }, \"https://github.com/prompt-toolkit/pyvim\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/prompt-toolkit/pymux\"\n  }, \"https://github.com/prompt-toolkit/pymux\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/prompt-toolkit/pyterm\"\n  }, \"https://github.com/prompt-toolkit/pyterm\")), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"が \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">prompt-toolkit2</code>\"\n    }\n  }), \" のままになっているのだが、\\nちょっと手直しすることで、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">prompt-toolkit3</code>\"\n    }\n  }), \" で動作させることができた。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">ptterm</code>\"\n    }\n  }), \" の \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">prompt-toolkit3</code>\"\n    }\n  }), \" 化に PR を送ってみた。\\n主に \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">pipe</code>\"\n    }\n  }), \" 周りの非同期入力を \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">asyncio</code>\"\n    }\n  }), \" に適合させてやることで動く。\\n\", React.createElement(_components.a, {\n    href: \"https://github.com/prompt-toolkit/ptterm/pull/9\"\n  }, \"https://github.com/prompt-toolkit/ptterm/pull/9\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">pymux</code>\"\n    }\n  }), \" も \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">fork</code>\"\n    }\n  }), \" しない \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">standalone</code>\"\n    }\n  }), \" 引き数付きならば \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Windows</code>\"\n    }\n  }), \" + \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">prompt-toolkit3</code>\"\n    }\n  }), \" でも動かすことができた。\"), \"\\n\", React.createElement(_components.p, null, \"prompt-toolkit3 では積極的に \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">asyncio</code>\"\n    }\n  }), \" を活用していくのがよさそう。\"), \"\\n\", React.createElement(_components.h2, null, \"prompt-toolkit で任意のエスケープシーケンスを入れる\"), \"\\n\", React.createElement(_components.p, null, \"prompt-toolkit で \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">sixel</code>\"\n    }\n  }), \" 画像を表示させたい。\\nUIControl が UIContent を生成していて、このとき styled text のデータ構造に対して特殊なスタイル \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">[ZeroWidthEscape]</code>\"\n    }\n  }), \" を指定することでエスケープシーケンスを直接出力できることがわかった。諸々の調整が必要になるが、ここに \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">sixel</code>\"\n    }\n  }), \" のシーケンスを入れることで表示できる。\\n処理順の癖に対応するために、\\n画像の高さ分の改行を \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">sixel</code>\"\n    }\n  }), \" のエスケープシーケンスに先行させる必要があった。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">prompt-toolkit</code>\"\n    }\n  }), \" + \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">wezterm</code>\"\n    }\n  }), \" 固有の問題かもしれない。\"), \"\\n\", React.createElement(_components.h2, null, \"Windows/Linux 共用で console アプリを動かす\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">prompt-toolkit3</code>\"\n    }\n  }), \" でかなりできそう。\\nフレームワークの構成を理解するまでとっつきが悪いのだが、\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">pypager</code>\"\n    }\n  }), \", \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">pyvim</code>\"\n    }\n  }), \", \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">ptterm</code>\"\n    }\n  }), \", \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">pymux</code>\"\n    }\n  }), \" を研究してやっとわかってきた。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">nerdfont</code>\"\n    }\n  }), \" で賑やかしを入れて、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">sixel</code>\"\n    }\n  }), \" で画像表示ができるおもちゃを企画している。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"vim ぽい lsp/dap の実験アプリ\"), \"\\n\", React.createElement(_components.li, null, \"w3m ぽい ブラウザ\"), \"\\n\", React.createElement(_components.li, null, \"tmux ぽいやつ\"), \"\\n\", React.createElement(_components.li, null, \"ranger ぽいやつ\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2022/0404-prompt-toolkit.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  const frontmatter = data.mdx.frontmatter;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"div\", {\n    className: \"tags-index\"\n  }, frontmatter.tags && frontmatter.tags.length > 0 && frontmatter.tags.map(tag => {\n    return React.createElement(Link, {\n      to: `/tags/${tag}/`,\n      itemProp: \"url\"\n    }, React.createElement(\"button\", null, tag));\n  })), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        tags\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","h2","p","span","a","ul","li","_provideComponents","components","React","dangerouslySetInnerHTML","__html","href","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","frontmatter","mdx","Layout","title","tags","length","map","tag","Link","to","itemProp","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}