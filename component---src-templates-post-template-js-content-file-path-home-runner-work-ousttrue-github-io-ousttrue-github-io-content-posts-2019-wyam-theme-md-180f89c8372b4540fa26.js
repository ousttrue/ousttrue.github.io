"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6104],{2122:function(e,t,n){n.r(t),n.d(t,{default:function(){return i}});var a=n(1151),l=n(7294);function s(e){const t=Object.assign({p:"p",h2:"h2",ul:"ul",li:"li",a:"a",span:"span",blockquote:"blockquote",strong:"strong",h3:"h3"},(0,a.ah)(),e.components);return l.createElement(l.Fragment,null,l.createElement(t.p,null,"cssとかの調整。"),"\n",l.createElement(t.h2,null,"調べる"),"\n",l.createElement(t.ul,null,"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"https://wyam.io/docs/"},"https://wyam.io/docs/"),"\n",l.createElement(t.ul,null,"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"https://wyam.io/recipes/blog/themes/"},"https://wyam.io/recipes/blog/themes/")),"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"https://wyam.io/docs/extensibility/creating-a-theme"},"https://wyam.io/docs/extensibility/creating-a-theme")),"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"https://wyam.io/docs/extensibility/customizing-themes"},"https://wyam.io/docs/extensibility/customizing-themes")),"\n"),"\n"),"\n"),"\n",l.createElement(t.p,null,"ローカルにファイルを配置することでテーマをオーバーライドできると書いてあるのだが、\nどのように配置するか正確なところがわからん。"),"\n",l.createElement(t.p,null,"試行錯誤したところ、"),"\n",l.createElement(t.p,null,l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">input</code>'}})," にテーマのファイルを直接コピーしたら反映された。"),"\n",l.createElement(t.p,null,l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">theme</code>'}})," フォルダでもよさそうなのだけど、 ",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">input</code>'}})," しか ",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">--watch</code>'}})," の対象にならないので、\n",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">input</code>'}})," に入れてしまうのがよさそう。"),"\n",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">input\n  + assets\n  + _Layout.cshtml</code></pre></div>'}}),"\n",l.createElement(t.h2,null,"レイアウトの構成"),"\n",l.createElement(t.p,null,"ASP.Net のtemplateエンジン、 ",l.createElement(t.a,{href:"https://docs.microsoft.com/en-us/aspnet/core/mvc/views/razor?view=aspnetcore-2.2"},"Razor")," で構成されていて拡張子は、 ",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">cshtml</code>'}})," 。"),"\n",l.createElement(t.p,null,"ファイル名は、",l.createElement(t.a,{href:"https://wyam.io/recipes/blog/overview"},"Blog Recipe"),"が規定している。"),"\n",l.createElement(t.p,null,"サイトのルート(index), 各記事(post), 記事一覧(archive, tag), タグ一覧(tags)などがある。単純な例はこれ。"),"\n",l.createElement(t.ul,null,"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"https://github.com/Wyamio/Wyam/tree/develop/themes/Blog/BlogTemplate"},"https://github.com/Wyamio/Wyam/tree/develop/themes/Blog/BlogTemplate")),"\n"),"\n",l.createElement(t.h2,null,"テーマを作ってみる"),"\n",l.createElement(t.ul,null,"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"https://github.com/Wyamio/Wyam.git"},"https://github.com/Wyamio/Wyam.git")),"\n"),"\n",l.createElement(t.p,null,"をクローンして、",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">themes/Blog/BlogTemplate/*</code>'}})," を ",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">input</code>'}})," にコピーする。\nconfig.yml も ",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">#theme BlogTemplate</code>'}})," とする。"),"\n",l.createElement(t.p,null,"共通のレイアウトが ",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">_Layout.cshtml</code>'}})," 。 その中の、 ",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">@RenderBody()</code>'}})," にルート(_Index.cshtml), 記事(_PostLayout.cshtml), 記事一覧(_Archive.cshtml, _Tag.cshtml), タグ一覧(_Tags.cshtml)がはめ込まれる様子。"),"\n",l.createElement(t.p,null,l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">_PostIndex.cshtml</code>'}})," は廃止されたので使われない。"),"\n",l.createElement(t.blockquote,null,"\n",l.createElement(t.ul,null,"\n",l.createElement(t.li,null,l.createElement(t.strong,null,"[Breaking Change]"),"[Refactoring] Moved Blog recipe theme file ",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">/_PostIndex.cshtml</code>'}})," to ",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">/_Archive.cshtml</code>'}}),", no other changes should be needed to this file in themes other than to move it - sorry for the rename (again), the first name was kind of dumb, this one is better"),"\n"),"\n"),"\n",l.createElement(t.p,null,"日本語が文字化けするので、 ",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">_Layout.cshtml</code>'}})," に ",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">&lt;meta charset="UTF-8"></code>'}})," だけ足す。\nあとは適当にやってみる。"),"\n",l.createElement(t.h2,null,"cshtml からアクセスできる変数"),"\n",l.createElement(t.ul,null,"\n",l.createElement(t.li,null,"Model"),"\n",l.createElement(t.li,null,"Context"),"\n"),"\n",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="cshtml"><pre class="language-cshtml"><code class="language-cshtml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value variable"><span class="token keyword">@</span><span class="token csharp language-csharp">Context<span class="token punctuation">.</span><span class="token function">GetLink</span><span class="token punctuation">(</span>Context<span class="token punctuation">.</span><span class="token function">String</span><span class="token punctuation">(</span>BlogKeys<span class="token punctuation">.</span>PostsPath<span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Back To posts<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre></div>'}}),"\n",l.createElement(t.h2,null,"作業メモ"),"\n",l.createElement(t.ul,null,"\n",l.createElement(t.li,null,"scss(wyamが対応している)"),"\n",l.createElement(t.li,null,"highlight.js (phantom themeからコピー)"),"\n",l.createElement(t.li,null,"旧記事を雑に復旧"),"\n",l.createElement(t.li,null,"locale ",l.createElement(t.a,{href:"https://wyam.io/docs/advanced/setting-the-culture"},"https://wyam.io/docs/advanced/setting-the-culture")),"\n"),"\n",l.createElement(t.h3,null,"ToDo"),"\n",l.createElement(t.ul,null,"\n",l.createElement(t.li,null,"404頁"),"\n",l.createElement(t.li,null,"一覧をpageで分割"),"\n",l.createElement(t.li,null,"記事内のTOC","\n",l.createElement(t.ul,null,"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"https://github.com/Wyamio/Wyam/issues/29"},"https://github.com/Wyamio/Wyam/issues/29")),"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"https://blog.kabrt.cz/posts/2018-11-wyam-blog"},"https://blog.kabrt.cz/posts/2018-11-wyam-blog")),"\n"),"\n"),"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"https://konpa.github.io/devicon/"},"https://konpa.github.io/devicon/")),"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"http://fizzed.com/oss/font-mfizz"},"http://fizzed.com/oss/font-mfizz")),"\n",l.createElement(t.li,null,l.createElement(t.a,{href:"https://www.digitaltapestry.net/posts/poshwyam"},"https://www.digitaltapestry.net/posts/poshwyam")),"\n"),"\n",l.createElement(t.h2,null,"動作"),"\n",l.createElement(t.p,null,"複数のパイプラインが登録してあって(Recipe)、ひとつずつ実行する"),"\n",l.createElement(t.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">public IReadOnlyList&lt;IDocument> Execute(ExecutionContext context, IEnumerable&lt;IModule> modules, ImmutableArray&lt;IDocument> inputDocuments\n\nforeach(var pipeline in pipelines)\n{\n  ExecutionPipeline.Execute\n}</code></pre></div>'}}))}var c=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,a.ah)(),e.components);return t?l.createElement(t,e,l.createElement(s,e)):s(e)},o=n(8678),r=n(1883),m=n(8838);const u={code:e=>{let{children:t,className:n}=e;return n?l.createElement(m.Z,{className:n},t):l.createElement("code",null,t)}};function p(e){let{data:t,children:n}=e;const s=t.mdx.frontmatter;return l.createElement(o.Z,null,l.createElement("h1",null,s.title),l.createElement("div",{className:"tags-index"},s.tags&&s.tags.length>0&&s.tags.map((e=>l.createElement(r.rU,{to:"/tags/"+e+"/",itemProp:"url"},l.createElement("button",null,e))))),l.createElement(a.Zo,{components:u},n))}function i(e){return l.createElement(p,e,l.createElement(c,e))}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2019-wyam-theme-md-180f89c8372b4540fa26.js.map