"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2244],{3217:function(e,n,t){t.r(n),t.d(n,{default:function(){return o}});var l=t(1151),a=t(7294);function r(e){const n=Object.assign({p:"p",h1:"h1",pre:"pre",code:"code",ul:"ul",li:"li",blockquote:"blockquote",a:"a"},(0,l.ah)(),e.components);return a.createElement(a.Fragment,null,a.createElement(n.p,null,"main loop がブロックするので luv を取り入れてみる。"),"\n",a.createElement(n.p,null,"https://github.com/luvit/luv"),"\n",a.createElement(n.h1,null,"cmake で build"),"\n",a.createElement(n.p,null,"luv に CMake が付属しており簡単。"),"\n",a.createElement(n.pre,null,a.createElement(n.code,null,"$ cmake -S {LUV_DIR} -B {BUILD_DIR}\n$ cmake --build {BUILD_DIR} --config Release\n")),"\n",a.createElement(n.h1,null,"main loop を idle へ"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-lua"},"-- Main loop\nwhile app:new_frame() do\n    gui:update()\n    app:render(gui.clear_color)\nend\n")),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-lua"},'local uv = require("luv")\n\n-- Main loop\nlocal idle = uv.new_idle()\nidle:start(function()\n    if not app:new_frame() then\n        idle:stop()\n    end\n    gui:update()\n    app:render(gui.clear_color)\nend)\n\nuv.run("default")\n')),"\n",a.createElement(n.h1,null,"重い処理を thread へ"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-lua"},"    local ctx = uv.new_work(\n        on_thread, --work,in threadpool\n        on_end --after work, in loop thread\n    )\n    uv.queue_work(ctx, mp.pack({ ... }))\n")),"\n",a.createElement(n.pre,null,a.createElement(n.code,null,"Error: thread arg not support type 'table' at 2Error: thread arg not support type table at 1Uncaught Error: attempt to call a nil value\n")),"\n",a.createElement(n.p,null,"あ"),"\n",a.createElement(n.h1,null,"thread 間で受け渡しのできる型"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"https://github.com/luvit/luv/blob/master/docs.md#pseudo-types"),"\n"),"\n",a.createElement(n.blockquote,null,"\n",a.createElement(n.p,null,"threadargs: variable arguments (...) of type nil, boolean, number, string, or userdata"),"\n"),"\n",a.createElement(n.p,null,"nvim ではそこで messagepack なわけか。"),"\n",a.createElement(n.p,null,a.createElement(n.a,{href:"https://tullio.hatenablog.com/entry/20121112/1352732239"},"Kyoto Tycoon+Lua-JIT拡張+MessagePack=無敵")," 経由で ",a.createElement(n.a,{href:"https://gist.github.com/catwell/2971290"},"The state of MessagePack in Lua")," をたどり着く。"),"\n",a.createElement(n.blockquote,null,"\n",a.createElement(n.p,null,"If you want pure LuaJIT -> luajit-msgpack-pure"),"\n"),"\n",a.createElement(n.p,null,"たしかに、これだ。"),"\n",a.createElement(n.p,null,"https://github.com/catwell/luajit-msgpack-pure"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"Windows なので ",a.createElement(n.code,null,"malloc"),", ",a.createElement(n.code,null,"free"),", ",a.createElement(n.code,null,"realloc")," が cdef できなかったのを修正"),"\n",a.createElement(n.li,null,a.createElement(n.code,null,"function")," と ",a.createElement(n.code,null,"cdata")," を nil にしてスキップする処理を追加してみた"),"\n"),"\n",a.createElement(n.p,null,"結果、巨大なテーブルの pack/unpack でブロックしてしまう。\nあとスレッド側のエラーハンドリングをしてないので、デバッガはアタッチできないし、何もわからない。\n",a.createElement(n.code,null,"pcall")," などでエラーメッセージを取得して、失敗した場合はエラーメッセージを投げるようにしてあげる必要がある。"),"\n",a.createElement(n.p,null,"なんとなく、使い方はわかった。\n後で、アニメーションシステムを実装するときのインフラにも使えるかもしれない。\nOpenGL のレンダースレッドと、シーン更新を分離する。"),"\n",a.createElement(n.h1,null,"関連"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,a.createElement(n.a,{href:"https://kimitok.hateblo.jp/entry/2014/04/16/223643"},'node.jsを支えるlibuvのチュートリアル"uvbook" :スレッド')),"\n",a.createElement(n.li,null,"https://nikhilm.github.io/uvbook/threads.html"),"\n"))}var c=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,l.ah)(),e.components);return n?a.createElement(n,e,a.createElement(r,e)):r(e)};t(8678);function u(e){let{data:n,children:t}=e;return a.createElement(a.Fragment,null,a.createElement("h1",null,n.mdx.frontmatter.title),a.createElement(l.Zo,null,t))}function o(e){return a.createElement(u,e,a.createElement(c,e))}},8678:function(e,n,t){t(7294)},1151:function(e,n,t){t.d(n,{Zo:function(){return u},ah:function(){return r}});var l=t(7294);const a=l.createContext({});function r(e){const n=l.useContext(a);return l.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const c={};function u({components:e,children:n,disableParentContext:t}){let u;return u=t?"function"==typeof e?e({}):e||c:r(e),l.createElement(a.Provider,{value:u},n)}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2021-luv-md-f7af9fd20e5f0c02a4fe.js.map