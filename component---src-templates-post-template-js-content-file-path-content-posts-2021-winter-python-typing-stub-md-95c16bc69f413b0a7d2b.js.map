{"version":3,"file":"component---src-templates-post-template-js-content-file-path-content-posts-2021-winter-python-typing-stub-md-95c16bc69f413b0a7d2b.js","mappings":"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","sources":["webpack:///./content/posts/2021/winter/python_typing_stub.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    ul: \"ul\",\n    li: \"li\",\n    h2: \"h2\",\n    p: \"p\",\n    code: \"code\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"python typing\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://docs.python.org/3/library/typing.html\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"生成する\"), \"\\n\", React.createElement(_components.p, null, \"既存のライブラリ、特に拡張ライブラリに型ヒントを付与したいことがある。\\nこれらは、元が \", React.createElement(_components.code, null, \"c/c++\"), \" なのでその型情報から \", React.createElement(_components.code, null, \"pyi\"), \" を生成してやる。\\n型情報は、 \", React.createElement(_components.code, null, \"clang.cindex\"), \" を使って \", React.createElement(_components.code, null, \"c/c++\"), \" のヘッダーから得るとよい。\"), \"\\n\", React.createElement(_components.h2, null, \"vscode + pylance(pyright)\"), \"\\n\", React.createElement(_components.p, null, \"プロジェクトローカルでいい場合は、 \", React.createElement(_components.code, null, \"${workspaceFolder}/typings\"), \" に配置すると処理してくれる。\\n\", React.createElement(_components.code, null, \"clang.cindex\"), \" に \", React.createElement(_components.code, null, \"enum\"), \" の情報を追加してみた。\"), \"\\n\", React.createElement(_components.h2, null, \"ctypes\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"clang.cindex\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"もとのモジュールと構造が同じ \", React.createElement(_components.code, null, \"pyi\"), \" を用意してやる。\\n\", React.createElement(_components.code, null, \"ctypes\"), \" の \", React.createElement(_components.code, null, \"Structure\"), \" や関数ポインタに直接型ヒントを付与うまい方法は無さそう？\"), \"\\n\", React.createElement(_components.h2, null, \"拡張モジュール\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"bpy\"), \"\\n\", React.createElement(_components.li, null, \"imgui のバインディング\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"拡張モジュールに型ヒントを埋め込む方法がまだ無いっぽい。\\n埋め込む方法ができれば、 \", React.createElement(_components.code, null, \"cython\"), \" や \", React.createElement(_components.code, null, \"pybind\"), \" で作った拡張モジュールには自動で型ヒントが付きそうな気がするのだが。\"), \"\\n\", React.createElement(_components.h2, null, \"imgui で作ってみた。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"https://github.com/ousttrue/cydeer\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://blog.ymyzk.com/2018/09/creating-packages-using-pep-561/\"\n  }, \"PEP 561 に準拠した型ヒントを含むパッケージの作り方\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"を参考に作ってみた。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2021/winter/python_typing_stub.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  const frontmatter = data.mdx.frontmatter;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"div\", {\n    className: \"tags-index\"\n  }, frontmatter.tags && frontmatter.tags.length > 0 && frontmatter.tags.map(tag => {\n    return React.createElement(Link, {\n      to: `/tags/${tag}/`,\n      itemProp: \"url\"\n    }, React.createElement(\"button\", null, tag));\n  })), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        tags\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","ul","li","h2","p","code","a","_provideComponents","components","React","href","wrapper","MDXLayout","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","frontmatter","mdx","Layout","title","tags","length","map","tag","Link","to","itemProp","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}