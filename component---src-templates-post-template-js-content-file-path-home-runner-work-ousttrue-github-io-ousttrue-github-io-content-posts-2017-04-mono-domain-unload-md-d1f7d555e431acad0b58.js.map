{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2017-04-mono-domain-unload-md-d1f7d555e431acad0b58.js","mappings":"+JAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,KAAM,OACNC,EAAG,MACFC,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,6BAA8B,KAAMK,EAAAA,cAAoBR,EAAYI,KAAM,CAClKK,wBAAyB,CACvBC,OAAQ,4sDAER,KAAMF,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,wLAAyL,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAMK,EAAAA,cAAoBR,EAAYK,EAAG,CAC5TM,KAAM,mEACL,oEAAqE,KAAMH,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,yDAA0D,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,2DAA4D,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,MAAO,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAMK,EAAAA,cAAoBR,EAAYK,EAAG,CAClaM,KAAM,2FACL,4FAA6F,KAAMH,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,yFAA0F,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,uCAAwC,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAMK,EAAAA,cAAoBR,EAAYK,EAAG,CAChZM,KAAM,+FACL,gGAAiG,KAAMH,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,wFAAyF,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAMK,EAAAA,cAAoBR,EAAYK,EAAG,CAC5TM,KAAM,2DACL,4DAA6D,KAAMH,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,2BACjH,CAKA,MAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOa,QAASC,GAAaZ,OAAOC,OAAO,CAAC,GAAGI,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC3E,OAAOM,EAAYL,EAAAA,cAAoBK,EAAWd,EAAOS,EAAAA,cAAoBV,EAAmBC,IAAUD,EAAkBC,EAC9H,E,8BCnBA,MAAMQ,EAAa,CACjBO,KAAMC,IAA2B,IAA1B,SAACC,EAAQ,UAAEC,GAAUF,EAC1B,OAAOE,EAAYT,EAAAA,cAAoBU,EAAAA,EAAsB,CAC3DD,UAAWA,GACVD,GAAYR,EAAAA,cAAoB,OAAQ,KAAMQ,EAAS,GAG9D,SAASG,EAAYC,GAAmB,IAAlB,KAACC,EAAI,SAAEL,GAASI,EACpC,MAAME,EAAcD,EAAKE,IAAID,YAC7B,OAAOd,EAAAA,cAAoBgB,EAAAA,EAAQ,KAAMhB,EAAAA,cAAoB,KAAM,KAAMc,EAAYG,OAAQjB,EAAAA,cAAoB,MAAO,CACtHS,UAAW,cACVK,EAAYI,MAAQJ,EAAYI,KAAKC,OAAS,GAAKL,EAAYI,KAAKE,KAAIC,GAClErB,EAAAA,cAAoBsB,EAAAA,GAAM,CAC/BC,GAAI,SAASF,EAAG,IAChBG,SAAU,OACTxB,EAAAA,cAAoB,SAAU,KAAMqB,OACpCrB,EAAAA,cAAoByB,EAAAA,GAAa,CACpC1B,WAAYA,GACXS,GACL,CACe,SAASkB,EAAiBnC,GACvC,OAAOS,EAAAA,cAAoBW,EAAcpB,EAAOS,EAAAA,cAAoB2B,EAAqBpC,GAC3F,C","sources":["webpack:///./content/posts/2017/04/mono_domain_unload.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    span: \"span\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"何のことか分かりにくいが以下のコードで再現できる。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"csharp\\\"><pre class=\\\"language-csharp\\\"><code class=\\\"language-csharp\\\"><span class=\\\"token keyword\\\">public</span> <span class=\\\"token class-name\\\"><span class=\\\"token keyword\\\">int</span></span> m_count<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token return-type class-name\\\"><span class=\\\"token keyword\\\">void</span></span> <span class=\\\"token function\\\">OnRender</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\"><span class=\\\"token keyword\\\">int</span></span> eventID<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n    m_count<span class=\\\"token operator\\\">++</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token return-type class-name\\\"><span class=\\\"token keyword\\\">void</span></span> <span class=\\\"token function\\\">Update</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token class-name\\\"><span class=\\\"token keyword\\\">var</span></span> p <span class=\\\"token operator\\\">=</span> Marshal<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">GetFunctionPointerForDelegate</span><span class=\\\"token punctuation\\\">(</span>OnRender<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    GL<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">IssuePluginEvent</span><span class=\\\"token punctuation\\\">(</span>p<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"SharpDX を Unity 上で使うべく GL.IssuePluginEvent に C#の Delegate を渡す実験をしていた。これをやると、Editor 終了時もしくは次回 play 時に UnityEditor が Freeze する(100%)。Unity5.5.3 と Unity2017.1.0beta1 で再現した。\\n調べてみたところ、\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://forum.unity3d.com/threads/problem-with-callbacks.87513/\"\n  }, \"https://forum.unity3d.com/threads/problem-with-callbacks.87513/\")), \"\\n\", React.createElement(_components.p, null, \"が該当しそうかと思ったがちょっと違う。新しいスレッドを起こしている訳では無いので。 ただ、条件は下記の通り\"), \"\\n\", React.createElement(_components.p, null, \"C#の delegate を関数ポインタとして C に渡す\\nその関数ポインタが異なるスレッドから呼び出される\"), \"\\n\", React.createElement(_components.p, null, \"次に\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://blog.tedd.no/2016/10/09/investigating-unity-hang-on-second-run-multi-threading/\"\n  }, \"https://blog.tedd.no/2016/10/09/investigating-unity-hang-on-second-run-multi-threading/\")), \"\\n\", React.createElement(_components.p, null, \"を当たった。ここで紹介している visualstudio の debug - window - 並列スタックで状況を確認する手法を使ってみたところ以下のようになっていた。\"), \"\\n\", React.createElement(_components.p, null, \"mono_domain_unload が固まっているような気がするぞ。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"http://stackoverflow.com/questions/10138015/unloading-mono-domains-in-multithreaded-context\"\n  }, \"http://stackoverflow.com/questions/10138015/unloading-mono-domains-in-multithreaded-context\")), \"\\n\", React.createElement(_components.p, null, \"mono が delegate から関数ポインタを作るのに使っているらしい invoke wrappers の周りの回収に失敗しているのではないかというような気がする。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"http://d.hatena.ne.jp/saiya_moebius/20090319/1237434037\"\n  }, \"http://d.hatena.ne.jp/saiya_moebius/20090319/1237434037\")), \"\\n\", React.createElement(_components.p, null, \"Unity 上で打つ手は見つからなかった・・・\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2017/04/mono_domain_unload.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  const frontmatter = data.mdx.frontmatter;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"div\", {\n    className: \"tags-index\"\n  }, frontmatter.tags && frontmatter.tags.length > 0 && frontmatter.tags.map(tag => {\n    return React.createElement(Link, {\n      to: `/tags/${tag}/`,\n      itemProp: \"url\"\n    }, React.createElement(\"button\", null, tag));\n  })), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        tags\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","span","a","_provideComponents","components","React","dangerouslySetInnerHTML","__html","href","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","frontmatter","mdx","Layout","title","tags","length","map","tag","Link","to","itemProp","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}