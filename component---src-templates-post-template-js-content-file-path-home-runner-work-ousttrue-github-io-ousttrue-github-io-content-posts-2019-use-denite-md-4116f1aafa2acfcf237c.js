"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1401],{8397:function(n,e,a){a.r(e),a.d(e,{default:function(){return i}});var t=a(1151),s=a(7294);function l(n){const e=Object.assign({p:"p",span:"span",h2:"h2",h3:"h3",a:"a"},(0,t.ah)(),n.components);return s.createElement(s.Fragment,null,s.createElement(e.p,null,"nvim 環境が軌道に乗ってきたので、 ",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">denite</code>'}})," やってみよう。"),"\n",s.createElement(e.h2,null,"source 作る"),"\n",s.createElement(e.h3,null,"リポジトリ"),"\n",s.createElement(e.p,null,s.createElement(e.a,{href:"https://github.com/ousttrue/deso"},"https://github.com/ousttrue/deso")),"\n",s.createElement(e.p,null,"作った"),"\n",s.createElement(e.p,null,"とりあえず ",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">dein.toml</code>'}})," に登録。"),"\n",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="toml"><pre class="language-toml"><code class="language-toml"><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token table class-name">plugins</span><span class="token punctuation">]</span><span class="token punctuation">]</span>\n<span class="token key property">repo</span> <span class="token punctuation">=</span>  <span class="token string">\'ousttrue/deso\'</span></code></pre></div>'}}),"\n",s.createElement(e.p,null,"nvim 再起動して ",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">~/.cache/dein/repose/github.com/ousttrue/deso</code>'}})),"\n",s.createElement(e.p,null,"にクローンされるところまで確認。"),"\n",s.createElement(e.h3,null,"deso.py"),"\n",s.createElement(e.p,null,s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">rplugin/python3/denite/source/deso.py</code>'}})," を作る"),"\n",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="py"><pre class="language-py"><code class="language-py"><span class="token keyword">from</span> <span class="token punctuation">.</span>base <span class="token keyword">import</span> Base\n\n\n<span class="token keyword">class</span> <span class="token class-name">Source</span><span class="token punctuation">(</span>Base<span class="token punctuation">)</span><span class="token punctuation">:</span>\n    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> vim<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        <span class="token builtin">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>__init__<span class="token punctuation">(</span>vim<span class="token punctuation">)</span>\n        self<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">\'deso\'</span>\n        self<span class="token punctuation">.</span>kind <span class="token operator">=</span> <span class="token string">\'word\'</span>\n\n    <span class="token keyword">def</span> <span class="token function">gather_candidates</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        candidates <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n        <span class="token keyword">return</span> candidates</code></pre></div>'}}),"\n",s.createElement(e.p,null,s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">:UpdateRemotePlugin</code>'}})),"\n",s.createElement(e.p,null,"して、",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">Denite deso</code>'}})," で空のリストが返るところまで確認した。"),"\n",s.createElement(e.h2,null,"中身作る"),"\n",s.createElement(e.p,null,s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">help denite-create_-source</code>'}})," を読む。"),"\n",s.createElement(e.p,null,s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">gather_candidates</code>'}})," は ",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">dictionary</code>'}})," の ",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">list</code>'}})," を返す。"),"\n",s.createElement(e.p,null,s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">dictionary</code>'}})," の様式は、 ",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">help denite-candidate-attributes</code>'}})," を読む。"),"\n",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="py"><pre class="language-py"><code class="language-py"><span class="token punctuation">{</span>\n    <span class="token string">"word"</span><span class="token punctuation">:</span> <span class="token string">"hogehoge"</span><span class="token punctuation">,</span>  <span class="token comment"># required</span>\n    <span class="token string">"abbr"</span><span class="token punctuation">:</span> <span class="token string">"hoge"</span><span class="token punctuation">,</span> <span class="token comment"># 表示用。無くてもよい</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",s.createElement(e.p,null,"なるほど。"),"\n",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="py"><pre class="language-py"><code class="language-py">    <span class="token keyword">def</span> <span class="token function">gather_candidates</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token punctuation">:</span>\n        <span class="token keyword">return</span> <span class="token punctuation">[</span>\n            <span class="token punctuation">{</span>\n                <span class="token string">"word"</span><span class="token punctuation">:</span>  date\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span></code></pre></div>'}}),"\n",s.createElement(e.p,null,"しかし、うまくいかず。どうも変更が反映されないなーと悩んでいたのだが、"),"\n",s.createElement(e.p,null,s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">~/.cache/dein/.cache/init.vim/.dein/rplugin/python3/denite/source/deso.py</code>'}})),"\n",s.createElement(e.p,null,"を見たら最初に作った空の候補を返す状態だった。"),"\n",s.createElement(e.p,null,s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">:UpdateRemotePlugin</code>'}}),"\nで元のファイルに更新があっても置き換えてくれないように見えた。"),"\n",s.createElement(e.p,null,"dein で ",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">denite</code>'}})," を入れなおしたら更新できた。\nもっと楽に更新する方法は無いのかしら。"),"\n",s.createElement(e.p,null,"シンボリックリンクにしてごまかした w"),"\n",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">ln -s ~/.cache/dein/repos/github.com/ousttrue/deso/rplugin/python3/denite/source/deso.py\n~/.cache/dein/.cache/init.vim/.dein/rplugin/python3/denite/source/deso.py</code></pre></div>'}}),"\n",s.createElement(e.p,null,"これで、 ",s.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">neovim</code>'}})," を再起動すればリロードできるようになった。\nそのうち正しいやり方がわかるだろう・・・"))}var c=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,t.ah)(),n.components);return e?s.createElement(e,n,s.createElement(l,n)):l(n)},p=a(8678),o=a(1883),u=a(8838);const r={code:n=>{let{children:e,className:a}=n;return a?s.createElement(u.Z,{className:a},e):s.createElement("code",null,e)}};function d(n){let{data:e,children:a}=n;const l=e.mdx.frontmatter;return s.createElement(p.Z,null,s.createElement("h1",null,l.title),s.createElement("div",{className:"tags-index"},l.tags&&l.tags.length>0&&l.tags.map((n=>s.createElement(o.rU,{to:"/tags/"+n+"/",itemProp:"url"},s.createElement("button",null,n))))),s.createElement(t.Zo,{components:r},a))}function i(n){return s.createElement(d,n,s.createElement(c,n))}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2019-use-denite-md-4116f1aafa2acfcf237c.js.map