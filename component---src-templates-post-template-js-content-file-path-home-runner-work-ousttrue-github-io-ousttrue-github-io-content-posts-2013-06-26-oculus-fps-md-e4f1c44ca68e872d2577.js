"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7837],{3109:function(e,n,t){t.r(n),t.d(n,{default:function(){return o}});var r=t(1151),c=t(7294);function l(e){const n=Object.assign({p:"p",pre:"pre",code:"code"},(0,r.ah)(),e.components);return c.createElement(c.Fragment,null,c.createElement(n.p,null,"FPS カメラに Oculus 回転を仕込んだ\nIrrlicht の CSceneNodeAnimatorCameraFPS に Oculus を合体した。\nIrrlicht のカメラが思ったよりいろいろやっていたのと\nビュー行列を直接扱っていないのに手間取ったがとりあえず当初の目的を達成。\nどうにも都合が悪かったので本体をちょっと拡張した。"),"\n",c.createElement(n.pre,null,c.createElement(n.code,{className:"language-cpp"},"class CSCameraSceneNode\n{\n    core::marix4 LeftAffector;\n};\n")),"\n",c.createElement(n.p,null,"レンダリング直前にビュー行列に乗算する行列をセットできるのだが\nこれが右からの乗算なので、\n左からの乗算を追加してこれに Oculus の回転を表す行列をセットできるようにした。\nこれを踏まえて CSceneNodeAnimatorCameraFPS をコピーして CSceneNodeAnimatorCameraOculusOnFPS を作った。\nこいつは FPS カメラのマウスの上下移動を無視するのと libOVR からの回転値取得と左行列を追加する機能をもつ。\nコードはこれなのだけど\nhttps://github.com/ousttrue/onibi/blob/master/irrlicht/examples/HMDIrrlicht/CSceneNodeAnimatorCameraOculusOnFPS.cpp\n日記に全部書くには長いし、サンプルが改造版の Irrlicht に依存するので紹介し辛い感じだなぁ。\nオフスクリーンレンダリングとシェーダーをサポートした今風の glut みたいなフレームワークがあるとよいのだけど。\n今度は mmd 表示周りに着手して表示途中までできた。\nしかし Irrlicht 界のスケーリングの基準がよくわからず。cm のような気もするがなんかもっと適当な値のような気もする。\n画像右側の身切れているのは Irrlicht サイズの Dwarf である。\nmmd 界はミクさんの身長 20 を基準とする統一単位なのだが何かしら基準を決めねばならぬ。\n物理の挙動の都合上スケーリングしたくないなーという事情がありどうしたものか。"),"\n",c.createElement(n.p,null,"スカイボックスも Oculus で見ると見違えるものがあるなー。\nテクスチャとライティングを解決する。 あと pmx。"))}var a=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?c.createElement(n,e,c.createElement(l,e)):l(e)};t(8678);function u(e){let{data:n,children:t}=e;return c.createElement(c.Fragment,null,c.createElement("h1",null,n.mdx.frontmatter.title),c.createElement(r.Zo,null,t))}function o(e){return c.createElement(u,e,c.createElement(a,e))}},8678:function(e,n,t){t(7294)},1151:function(e,n,t){t.d(n,{Zo:function(){return u},ah:function(){return l}});var r=t(7294);const c=r.createContext({});function l(e){const n=r.useContext(c);return r.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const a={};function u({components:e,children:n,disableParentContext:t}){let u;return u=t?"function"==typeof e?e({}):e||a:l(e),r.createElement(c.Provider,{value:u},n)}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2013-06-26-oculus-fps-md-e4f1c44ca68e872d2577.js.map