{"version":3,"file":"component---src-templates-tag-template-js-415e30dc4cb1d738208a.js","mappings":"kHAIA,MAAMA,EAASA,IACbC,EAAAA,cAAA,cACEA,EAAAA,cAACC,EAAAA,GAAI,CAACC,GAAG,KAAI,oBACbF,EAAAA,cAACC,EAAAA,GAAI,CAACC,GAAG,UAAS,SAIhBC,EAASA,IAAMH,EAAAA,cAAA,cAAQ,OAAI,IAAII,MAAOC,cAAc,aAc1D,IAZeC,IAAA,IAAC,SAAEC,GAAUD,EAAA,OAC1BN,EAAAA,cAAA,WACEA,EAAAA,cAACD,EAAM,MAEPC,EAAAA,cAAA,OAAKQ,UAAU,UACbR,EAAAA,cAAA,YAAOO,IAGTP,EAAAA,cAACG,EAAM,MACH,C,gECuCR,UAtDaG,IAA4B,IAA3B,YAAEG,EAAW,KAAEC,GAAMJ,EACjC,MAAM,IAAEK,GAAQF,GACV,MAAEG,EAAK,WAAEC,GAAeH,EAAKI,OAC7BC,EAAeF,EAAU,SAAuB,IAAfA,EAAmB,GAAK,KAAG,iBAC/CF,EAAG,IAEtB,OACEX,EAAAA,cAACgB,EAAAA,EAAM,KACLhB,EAAAA,cAAA,WACEA,EAAAA,cAAA,UAAKe,GACLf,EAAAA,cAAA,UACGY,EAAMK,KAAIC,IAAe,IAAd,KAAEC,GAAMD,EAClB,MAAM,KAAEE,GAASD,EAAKE,QAChB,MAAEC,GAAUH,EAAKI,YACvB,OACEvB,EAAAA,cAAA,MAAIwB,IAAKJ,GACPpB,EAAAA,cAACC,EAAAA,GAAI,CAACC,GAAIkB,GAAOE,GACd,KAQXtB,EAAAA,cAACC,EAAAA,GAAI,CAACC,GAAG,SAAQ,aAEZ,C","sources":["webpack:///./src/components/layout.js","webpack:///./src/templates/tag-template.js"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport \"../styles/layout.css\";\n\nconst Header = () => (\n  <header>\n    <Link to=\"/\">三次元日誌(gatsby v5)</Link>\n    <Link to=\"/tags/\">tags</Link>\n  </header>\n);\n\nconst Footer = () => <footer> © {new Date().getFullYear()} ousttrue</footer>;\n\nconst Layout = ({ children }) => (\n  <div>\n    <Header />\n\n    <div className=\"layout\">\n      <main>{children}</main>\n    </div>\n\n    <Footer />\n  </div>\n);\n\nexport default Layout;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Components\nimport { Link, graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\n\nconst Tags = ({ pageContext, data }) => {\n  const { tag } = pageContext;\n  const { edges, totalCount } = data.allMdx;\n  const tagHeader = `${totalCount} post${totalCount === 1 ? \"\" : \"s\"\n    } tagged with \"${tag}\"`;\n\n  return (\n    <Layout>\n      <div>\n        <h1>{tagHeader}</h1>\n        <ul>\n          {edges.map(({ node }) => {\n            const { slug } = node.fields;\n            const { title } = node.frontmatter;\n            return (\n              <li key={slug}>\n                <Link to={slug}>{title}</Link>\n              </li>\n            );\n          })}\n        </ul>\n        {/*\n              This links to a page that does not yet exist.\n              You'll come back to it!\n            */}\n        <Link to=\"/tags\">All tags</Link>\n      </div>\n    </Layout>\n  );\n};\n\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMdx: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired\n      ),\n    }),\n  }),\n};\n\nexport default Tags;\n\nexport const pageQuery = graphql`\n  query ($tag: String) {\n    allMdx(\n      limit: 2000\n      sort: { frontmatter: { date: DESC } }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["Header","React","Link","to","Footer","Date","getFullYear","_ref","children","className","pageContext","data","tag","edges","totalCount","allMdx","tagHeader","Layout","map","_ref2","node","slug","fields","title","frontmatter","key"],"sourceRoot":""}