"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9419],{7783:function(n,e,t){t.r(e);var r=t(1151),s=t(7294);function i(n){const e=Object.assign({p:"p",pre:"pre",code:"code"},(0,r.ah)(),n.components);return s.createElement(s.Fragment,null,s.createElement(e.p,null,"骨入りモデルとかやってみようかと思ったのだけど、その前に Three.js のソースを見やすい状態で作業したい。\n結合前の Three.js を自前ビルドしながら運用する方法を調べてみる。\nbuild.py, or how to generate a compressed three.js file\nと本家に書いてある。python 使うんか。gulp でやりてぇな。\n全部 concat して uglify したらいいんじゃないか。\nやってみよう。\nとりあえず bower で導入した three.js 関連を削除。\nthreejs.src フォルダを作って three.js ソースの src ディレクトリの中身を展開した。"),"\n",s.createElement(e.pre,null,s.createElement(e.code,null,"gulp.task('bowerjs', function () {\n\n    var files = [\n        './bower_components/jquery/dist/jquery.js',\n        './bower_components/highlightjs/highlight.pack.js',\n        './bower_components/stats.js/build/stats.min.js',\n        './lib/**/*.js', // <-- 中にthree.jsのsrcをコピーした\n    ];\n    gulp.src(files)\n        .pipe($.plumber({ errorHandler: $.notify.onError('<%= error.message %>') }))\n        .pipe($.debug({ title: 'bowerjs files:' }))\n        .pipe($.sourcemaps.init())\n        //.pipe($.uglify())\n        .pipe($.concat('all.min.js'))\n        .pipe($.sourcemaps.write('./', {\n            sourceMappingURL: function (file) {\n                return file.relative + '.map';\n            }\n        }))\n        .pipe(gulp.dest('build/js'))\n        .pipe(browser.reload({ stream: true }))\n    ;\n});\n\nこれで作ったall.min.jsではエラーが出てだめですね。\n単にsrcをconcatするだけではだめだ。本家のドキュメントを読み始める。\n/three.js/utils/build/\n\nでビルドできるよって書いてあります。python関係ないみたいだ。\n> npm install\n> node build.js --include common --include extras\n\nなるほどbuild.jsを見てみよう。\nincludeってなんだろうと調べてみると\n/three.js/utils/build/includes\n\nにjsonファイルがあり中にjsファイルがリストされている。\nなるほど。src下を全部concatするのではなくここに書いてあるものを、書いてある順でconcatすればいいんでないか。\n//\ngulp.task('threejs:build', function(){\n    var common=JSON.parse(fs.readFileSync('three.js/includes/common.json')).map(function(v, i){ return 'three.js/'+v; });\n    gulp.src(common)\n        .pipe($.concat('three.js'))\n        .pipe(gulp.dest('./lib'))\n        ;\n});\n\ngulp.task('bowerjs', ['threejs:build'], function () {\n    // 前と同じ\n}\n")),"\n",s.createElement(e.p,null,"これで実行するとそれっぽい three.js が出てくるが、まだエラーが出る。\nでエラー行に飛ぶと ifdef がある。なんだこれは。"),"\n",s.createElement(e.pre,null,s.createElement(e.code,{className:"language-glsl"},"#ifdef USE_ALPHAMAP\n\n    diffuseColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n\nglslだ・・・。\n確かに、build.js内で拡張子がglslのファイルだけ別処理になっている。\nif( file.indexOf( '.glsl') >= 0 ) {\n\n    contents = 'THREE.ShaderChunk[ \\'' +\n        path.basename( file, '.glsl' ) + '\\' ] =' +\n        JSON.stringify( contents ) + ';\\n';\n\n}\n\nちょっとgulpのフィルタを作りますか。\nthree.shaderchunk.js\nvar through = require('through2');\nvar gutil = require('gulp-util');\nvar fs = require('fs');\nvar path = require('path');\n\nmodule.exports = function () {\n\n    return through.obj(function (file, enc, cb) {\n\n        if (file.isStream()) {\n            cb(new gutil.PluginError('three.shadechunk', 'Streaming not supported'));\n            return;\n        }\n\n        if (path.extname(file.path).toLowerCase() == '.glsl') {\n            var contents = 'THREE.ShaderChunk[ \\'' +\n                path.basename(file.path, '.glsl') + '\\' ] =' +\n                JSON.stringify(file.contents.toString()) + ';\\n';\n            file.contents = new Buffer(contents);\n            file.path = file.path + \".js\";\n        }\n\n        this.push(file);\n\n        cb();\n    });\n}\n\ngulpファイルの呼び出しの方。これでthree.js/srcからthree.jsを作成できた。\nあとは、sourcemapが付くようにした。\ngulpfile.js\ngulp.task('threejs:build', function(){\n    var common=JSON.parse(fs.readFileSync('three.js/includes/common.json'))\n    .map(function(v, i){ return 'three.js/'+v; });\n    var extras=JSON.parse(fs.readFileSync('three.js/includes/extras.json'))\n    .map(function(v, i){ return 'three.js/'+v; });\n    gulp.src(common.concat(extras))\n        .pipe(threeShaderchunk())\n        .pipe($.concat('three.js'))\n        .pipe(gulp.dest('./lib'))\n        ;\n});\n\nFireFoxでブレイクポイントを仕掛けてステップ実行できた。\nこれで、Loaderの自作とかが捗るぞ。\n")))}e.default=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,r.ah)(),n.components);return e?s.createElement(e,n,s.createElement(i,n)):i(n)}},1151:function(n,e,t){t.d(e,{ah:function(){return i}});var r=t(7294);const s=r.createContext({});function i(n){const e=r.useContext(s);return r.useMemo((()=>"function"==typeof n?n(e):{...e,...n}),[e,n])}}}]);
//# sourceMappingURL=component---content-posts-2015-12-08-threejs-05-md-01df76a0b90e37ed9213.js.map