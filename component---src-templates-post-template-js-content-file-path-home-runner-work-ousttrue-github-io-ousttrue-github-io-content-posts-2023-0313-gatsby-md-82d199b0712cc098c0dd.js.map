{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2023-0313-gatsby-md-82d199b0712cc098c0dd.js","mappings":"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","sources":["webpack:///./content/posts/2023/0313-gatsby.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    ul: \"ul\",\n    li: \"li\",\n    span: \"span\",\n    p: \"p\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"なんとなく gatsby やってみる\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">mdx</code>\"\n    }\n  }), \" はおもしろそう。カスタマイズはの記法は \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">hugo</code>\"\n    }\n  }), \" や \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">jinja</code>\"\n    }\n  }), \" よりも素直で簡単そうに見えた\"), \"\\n\", React.createElement(_components.li, null, \"GraphQL もわりと素直で簡単そうに見える\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"が、既存の markdown がわりとエラーになる。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"frontmatter が yaml 必要。toml 食えない。\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">&lt;url> 記法</code>\"\n    }\n  }), \" とか。エラーがあると全部失敗になる。\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"ということで、 python のスクリプトで既存の markdown を改変して様式を合わせることにした。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"frontmatter の yaml 変換\"), \"\\n\", React.createElement(_components.li, null, \"正規表現で \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">&lt;url> 記法</code>\"\n    }\n  }), \" 除去\"), \"\\n\", React.createElement(_components.li, null, \"frontmatter.title が無い場合に先頭の見出しを title に付け替える(sphinx の myst 向けの記事？)\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"MDXRenderer 無くなっているぽい\"), \"\\n\", React.createElement(_components.p, null, \"breaking change w\"), \"\\n\", React.createElement(_components.p, null, \"gatsby-plugin-mdx が 3 から 4 になるときに変更があって、\\nMDXRenderer が無くなって\\nMDXprovider を使う方式に変わったぽい？\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://www.gatsbyjs.com/plugins/gatsby-plugin-mdx\"), \"\\n\", React.createElement(_components.li, null, \"https://www.gatsbyjs.com/docs/how-to/routing/mdx/\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"見よう見まねでセットアップしてなんとなく動いたのだが、\\nちょっと変えたら動かなくなって、\\n調べていくとどうも最近のバージョンで \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">MDXRenderer</code>\"\n    }\n  }), \" が無くなったぽい。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://stackoverflow.com/questions/74309351/how-to-render-mdx-with-gatsby-plugin-mdx-from-allmdx-query\"), \"\\n\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">Element type is invalid: expected a string</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"というエラーメッセージが出て全然意味がわからなかったのだが、\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">MDXRenderer</code>\"\n    }\n  }), \" が無くなっていて、import 失敗の結果出たエラーだったぽい。\\nわからねー。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"jsx\\\"><pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> MDXRenderer <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">\\\"gatsby-plugin-mdx\\\"</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"いまバージョンはどうも Rendering 済みの \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">children</code>\"\n    }\n  }), \" を引数で受ける作法になっているぽい。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"jsx\\\"><pre class=\\\"language-jsx\\\"><code class=\\\"language-jsx\\\"><span class=\\\"token comment\\\">// post template</span>\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">PostTemplate</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token literal-property property\\\">data</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span> mdx <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> children <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"chidren を受けるには \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">createPages</code>\"\n    }\n  }), \" を以下のようにする。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\"><span class=\\\"token comment\\\">// gatsby-node.js</span>\\ndata<span class=\\\"token punctuation\\\">.</span>allMdx<span class=\\\"token punctuation\\\">.</span>nodes<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">node</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  actions<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">createPage</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token literal-property property\\\">path</span><span class=\\\"token operator\\\">:</span> node<span class=\\\"token punctuation\\\">.</span>frontmatter<span class=\\\"token punctuation\\\">.</span>slug<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token comment\\\">// 👇 この記述により template に children を供給できるぽい</span>\\n    <span class=\\\"token literal-property property\\\">component</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>postTemplate<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">?__contentFilePath=</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>node<span class=\\\"token punctuation\\\">.</span>internal<span class=\\\"token punctuation\\\">.</span>contentFilePath<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token literal-property property\\\">context</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token literal-property property\\\">id</span><span class=\\\"token operator\\\">:</span> node<span class=\\\"token punctuation\\\">.</span>id<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"要するにドキュメントに書いてあるとおりにする必要があるのだが、\\n内容を理解していないのと、古い情報との混在で難航したのであった。\"), \"\\n\", React.createElement(_components.h1, null, \"gatsby-plugin-page-creator 無用\"), \"\\n\", React.createElement(_components.p, null, \"無くても動く。\\nというか \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">createPages</code>\"\n    }\n  }), \" を変わりにやってくれるものぽい。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"javascript\\\"><pre class=\\\"language-javascript\\\"><code class=\\\"language-javascript\\\">exports<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function-variable function\\\">createPages</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">async</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\"><span class=\\\"token punctuation\\\">{</span> graphql<span class=\\\"token punctuation\\\">,</span> actions <span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h1, null, \"かくして、白いサイトに戻った。\"), \"\\n\", React.createElement(_components.p, null, \"はまったおかげで gatsby のデータの流れがわかってきた。\\n適当に組み立てて行こう。\"), \"\\n\", React.createElement(_components.h1, null, \"prism-react-renderer (syntax highlight) 導入\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"https://paulie.dev/posts/2022/08/syntax-highlighting-with-gatsby-mdx-and-prism-react-renderer/#mdx-2-rc-version\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"install prism-react-renderer\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"MDXProvider.components\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"gatsby-browser.js\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"の３ステップ。\\nこれも難航したが、\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">MDX v2</code>\"\n    }\n  }), \" の情報を見分けることが重要。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">MDXProvider</code>\"\n    }\n  }), \" 探索するべし。\"), \"\\n\", React.createElement(_components.h1, null, \"layout\"), \"\\n\", React.createElement(_components.h2, null, \"list\"), \"\\n\", React.createElement(_components.h2, null, \"post\"), \"\\n\", React.createElement(_components.h1, null, \"tags\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://www.gatsbyjs.com/docs/adding-tags-and-categories-to-blog-posts/\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"tag できた。\\ngatsby の component システム、\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">jinja</code>\"\n    }\n  }), \" や \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">hugo</code>\"\n    }\n  }), \" の template と比べて\\nわかりやすくてパワーがあるね。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">nvim</code>\"\n    }\n  }), \" で作業しているのだけど、 LanguageServer の支援が受けられてすごい快適だ。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2023/0313-gatsby.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","ul","li","span","p","h2","_provideComponents","components","React","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","Layout","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}