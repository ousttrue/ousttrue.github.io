{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2017-08-distutils-msvccompiler-md-190035cda725e1eae8ef.js","mappings":"+JAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,IAAK,MACLC,KAAM,OACNC,GAAI,OACHC,EAAAA,EAAAA,MAAsBR,EAAMS,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,gFAAiF,KAAMM,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,0BAA2B,KAAMM,EAAAA,cAAoBT,EAAYI,IAAK,KAAMK,EAAAA,cAAoBT,EAAYK,KAAM,CAC1UK,UAAW,mBACV,2oBAA4oB,KAAMD,EAAAA,cAAoBT,EAAYI,IAAK,KAAMK,EAAAA,cAAoBT,EAAYK,KAAM,KAAM,8BAA+B,KAAMI,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,uEAAwE,KAAMM,EAAAA,cAAoBT,EAAYI,IAAK,KAAMK,EAAAA,cAAoBT,EAAYK,KAAM,KAAM,4OAA6O,KAAMI,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,0PAA2P,KAAMM,EAAAA,cAAoBT,EAAYI,IAAK,KAAMK,EAAAA,cAAoBT,EAAYK,KAAM,KAAM,63CAAo5C,KAAMI,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,qDAAsD,KAAMM,EAAAA,cAAoBT,EAAYI,IAAK,KAAMK,EAAAA,cAAoBT,EAAYK,KAAM,KAAM,2PAAgQ,KAAMI,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,uRAAyR,KAAMM,EAAAA,cAAoBT,EAAYM,GAAI,KAAM,kCAAmC,KAAMG,EAAAA,cAAoBT,EAAYI,IAAK,KAAMK,EAAAA,cAAoBT,EAAYK,KAAM,CACz5HK,UAAW,mBACV,4/CAA6/C,KAAMD,EAAAA,cAAoBT,EAAYG,EAAG,KAAMM,EAAAA,cAAoBT,EAAYK,KAAM,KAAM,0DAA2D,KAAMI,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,+BACvsD,CAKA,MAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,MAAsBR,EAAMS,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWb,EAAOU,EAAAA,cAAoBX,EAAmBC,IAAUD,EAAkBC,EAC9H,E,QCdA,SAASc,EAAYC,GAAmB,IAAlB,KAACC,EAAI,SAAEC,GAASF,EACpC,OAAOL,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoB,KAAM,KAAMM,EAAKE,IAAIC,YAAYC,OAAQV,EAAAA,cAAoBW,EAAAA,GAAa,KAAMJ,GACvJ,CACe,SAASK,EAAiBtB,GACvC,OAAOU,EAAAA,cAAoBI,EAAcd,EAAOU,EAAAA,cAAoBa,EAAqBvB,GAC3F,C,4HCuBO,MAAMwB,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBhB,GAC/B,MAAMiB,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAff,EACFA,EAAWiB,GAGb,IAAIA,KAAsBjB,IAChC,CAACiB,EAAmBjB,GACzB,CAGA,MAAMkB,EAAc,CAAC,EAQd,SAASN,GAAY,WAACZ,EAAU,SAAEQ,EAAQ,qBAAEW,IAEjD,IAAIC,EAWJ,OAREA,EADED,EAEsB,mBAAfnB,EACHA,EAAW,CAAC,GACZA,GAAckB,EAEJF,EAAiBhB,GAG5B,gBACLe,EAAWM,SACX,CAACC,MAAOF,GACRZ,EAEJ,C","sources":["webpack:///./content/posts/2017/08/distutils_msvccompiler.md","webpack:///./src/templates/post-template.js","webpack:///./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    h1: \"h1\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Python じゃなくて VisualStudio 側の問題のようなのだけど、setup.py でネイティブモジュールをビルドするときに顕在化したので。\"), \"\\n\", React.createElement(_components.p, null, \"こういう感じのネイティブモジュールを作った。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"from distutils.core import setup, Extension\\n\\n\\nimgui_module = Extension('_swig_imgui',\\n        sources=[\\n            #'imgui_wrap.cxx',\\n            'imgui.i',\\n            'imgui/imgui.cpp',\\n            'imgui/imgui_draw.cpp',\\n            'imgui/imgui_demo.cpp',\\n            ],\\n        swig_opts=[\\n            #'-modern',\\n            '-c++',\\n            '-py3',\\n            ]\\n        )\\n\\nsetup (name = 'swig_imgui',\\n        version = '0.1',\\n        author      = \\\"ousttrue\\\",\\n        description = \\\"\\\"\\\"imgui wrapper using swig\\\"\\\"\\\",\\n        ext_modules = [imgui_module],\\n        py_modules = [\\\"swig_imgui\\\"],\\n        )\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"> python setup.py build\\n\")), \"\\n\", React.createElement(_components.p, null, \"とするとエラーになる。\\nWindows10(64bit)上の vs2017 + vcbuildtools の組み合わせの環境である。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"cl.exe /c /nologo /Ox /W3 /GL /DNDEBUG /MD -ID:\\\\Anaconda3\\\\include -ID:\\\\Anaconda3\\\\include /EHsc /Tpimgui_wrap.cpp /Fobuild\\\\temp.win-amd64-3.6\\\\Release\\\\imgui_wrap.obj\\nerror: command 'cl.exe' failed: No such file or directory\\n\")), \"\\n\", React.createElement(_components.p, null, \"distutils が cl.exe を探すのに失敗しているようなのである。\\nlib/distutils 下を調べてみた。\\nどうやら lib/distutils/_msvccompiler.py で vcvarsall.bat から環境変数を得ることに失敗しているらしい。\\n実際、C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\Shared\\\\14.0\\\\VC\\\\vcvarsall.bat の呼び出しが失敗していることを突き止めた。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"Error in script usage. The correct usage is:\\n\\\"C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\Shared\\\\14.0\\\\VC\\\\vcvarsall.bat\\\" [option]\\nor\\n\\\"C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\Shared\\\\14.0\\\\VC\\\\vcvarsall.bat\\\" [option] store\\nor\\n\\\"C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\Shared\\\\14.0\\\\VC\\\\vcvarsall.bat\\\" [option] [version number]\\nor\\n\\\"C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\Shared\\\\14.0\\\\VC\\\\vcvarsall.bat\\\" [option] store [version number]\\nwhere [option] is: x86 | amd64 | arm | x86_amd64 | x86_arm | amd64_x86 | amd64_arm\\nwhere [version number] is either the full Windows 10 SDK version number or \\\"8.1\\\" to use the windows 8.1 SDK\\n:\\nThe store parameter sets environment variables to support\\nstore (rather than desktop) development.\\n:\\nFor example:\\n\\\"C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\Shared\\\\14.0\\\\VC\\\\vcvarsall.bat\\\" x86_amd64\\n\\\"C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\Shared\\\\14.0\\\\VC\\\\vcvarsall.bat\\\" x86_arm store\\n\\\"C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\Shared\\\\14.0\\\\VC\\\\vcvarsall.bat\\\" x86_amd64 10.0.10240.0\\n\\\"C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\Shared\\\\14.0\\\\VC\\\\vcvarsall.bat\\\" x86_arm store 10.0.10240.0\\n\\\"C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\Shared\\\\14.0\\\\VC\\\\vcvarsall.bat\\\" x64 8.1\\n\\\"C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\Shared\\\\14.0\\\\VC\\\\vcvarsall.bat\\\" x64 store 8.1\\n\")), \"\\n\", React.createElement(_components.p, null, \"コマンドラインから実行しても失敗していて、vcvarsall.bat に以下のコードがあるのだが、\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \":setup_buildsku\\nif not exist \\\"%~dp0..\\\\..\\\\..\\\\Microsoft Visual C++ Build Tools\\\\vcbuildtools.bat\\\" goto usage\\nset CurrentDir=%CD%\\ncall \\\"%~dp0..\\\\..\\\\..\\\\Microsoft Visual C++ Build Tools\\\\vcbuildtools.bat\\\" %1 %2\\ncd /d %CurrentDir%\\ngoto :eof\\n\")), \"\\n\", React.createElement(_components.p, null, \"C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\Shared\\\\14.0\\\\VC\\\\vcvarsall.bat\\nから\\nC:\\\\Program Files (x86)\\\\Microsoft Visual C++ Build Tools\\\\vcbuildtools.bat\\\"\\nへの相対パスだと一致しないよなーと。\\nこれが原因で cl.exe のパスが取れない。\\nsetup.py にモンキーパッチを当てて cl.exe を発見できるようにしてみた。\\n以下を setup.py の先頭に追加。\"), \"\\n\", React.createElement(_components.h1, null, \"monkey patch for _msvccompiler\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-python\"\n  }, \"import distutils.\\\\_msvccompiler\\nimport os\\nimport subprocess\\ndef \\\\_get_vc_env(plat_spec):\\nif os.getenv(\\\"DISTUTILS_USE_SDK\\\"):\\nreturn {\\nkey.lower(): value\\nfor key, value in os.environ.items()\\n}\\n\\n    vcvarsall, vcruntime = distutils._msvccompiler._find_vcvarsall(plat_spec)\\n    if not vcvarsall:\\n        raise DistutilsPlatformError(\\\"Unable to find vcvarsall.bat\\\")\\n\\n    try:\\n        out = subprocess.check_output(\\n            'cmd /u /c \\\"{}\\\" {} && set'.format(vcvarsall, plat_spec),\\n            stderr=subprocess.STDOUT,\\n        ).decode('utf-16le', errors='replace')\\n        #######################################################################\\n        if out.startswith(\\\"Error in script usage\\\"):\\n            out = subprocess.check_output(\\n                'cmd /u /c \\\"{}\\\" {} && set'.format(\\\"C:\\\\\\\\Program Files (x86)\\\\\\\\Microsoft Visual C++ Build Tools\\\\\\\\vcbuildtools.bat\\\", plat_spec),\\n                stderr=subprocess.STDOUT,\\n            ).decode('utf-16le', errors='replace')\\n        #######################################################################\\n    except subprocess.CalledProcessError as exc:\\n        log.error(exc.output)\\n        raise DistutilsPlatformError(\\\"Error executing {}\\\"\\n                .format(exc.cmd))\\n\\n    env = {\\n        key.lower(): value\\n        for key, _, value in\\n        (line.partition('=') for line in out.splitlines())\\n        if key and value\\n    }\\n\\n    if vcruntime:\\n        env['py_vcruntime_redist'] = vcruntime\\n    return env\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"distutils.\\\\_msvccompiler.\\\\_get_vc_env=\\\\_get_vc_env\")), \"\\n\", React.createElement(_components.p, null, \"以前にもこんなことやったことあるような気がする・・・。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2017/08/distutils_msvccompiler.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nfunction PostTempalte({data, children}) {\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, null, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","pre","code","h1","_provideComponents","components","React","className","wrapper","MDXLayout","PostTempalte","_ref","data","children","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}