"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2082],{6640:function(e,n,a){a.r(n),a.d(n,{default:function(){return i}});var t=a(1151),s=a(7294);function l(e){const n=Object.assign({h1:"h1",p:"p",h2:"h2",span:"span",a:"a",ul:"ul",li:"li",h3:"h3"},(0,t.ah)(),e.components);return s.createElement(s.Fragment,null,s.createElement(n.h1,null,"zig その2"),"\n",s.createElement(n.p,null,"再度使ってみるべく環境整備から。"),"\n",s.createElement(n.h2,null,"zls の master を使う"),"\n",s.createElement(n.p,null,"どうやら @import std 以外がうまく動かないらしく、 最新版を試してみたい。"),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">const glfw = @import("glfw");</code></pre></div>'}}),"\n",s.createElement(n.p,null,s.createElement(n.a,{href:"https://ziglang.org/download/"},"https://ziglang.org/download/")," からダウンロードするべし。"),"\n",s.createElement(n.h2,null,"いちおう build を 試みた"),"\n",s.createElement(n.p,null,"zls の最新判を試すには、 zig の最新版(0.9.1じゃなくてmaster)が必要。\nzig のビルドには static build の llvm-13 が必要。\nWindows では頓挫した。\nしかし、最近 gentoo を育成しているのでこっちでやってみる。"),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">cmake -B build -S .</code></pre></div>'}}),"\n",s.createElement(n.p,null,"してみたが、最後にリンクエラーが出る。"),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">undefined reference to clang::SourceManager::getFilename</code></pre></div>'}}),"\n",s.createElement(n.p,null,"しかし、 gentoo の emerge に ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">dev-lang/zig-9999</code>'}})," があった。\nこれを使って zls がビルドできた。\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">glfw</code>'}})," のインテリセンスも動作した。"),"\n",s.createElement(n.h2,null,"zig master(0.10) が変わっていて zls と gyro のビルドが通らない。"),"\n",s.createElement(n.ul,null,"\n",s.createElement(n.li,null,s.createElement(n.a,{href:"https://github.com/ziglang/zig/commit/a0a2ce92ca129d28e22c63f7bace1672c43776b5"},"https://github.com/ziglang/zig/commit/a0a2ce92ca129d28e22c63f7bace1672c43776b5")),"\n"),"\n",s.createElement(n.h3,null,"zls"),"\n",s.createElement(n.ul,null,"\n",s.createElement(n.li,null,s.createElement(n.a,{href:"https://github.com/zigtools/zls/pull/481"},"https://github.com/zigtools/zls/pull/481")),"\n"),"\n",s.createElement(n.h3,null,"gyro"),"\n",s.createElement(n.p,null,s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">std.ChildProcess.init</code>'}})," のところ。"),"\n",s.createElement(n.h2,null,"OpenGL やってく"),"\n",s.createElement(n.ul,null,"\n",s.createElement(n.li,null,s.createElement(n.a,{href:"https://github.com/hexops/mach-glfw"},"https://github.com/hexops/mach-glfw")),"\n"),"\n",s.createElement(n.p,null,"を起点にやってみる。\n前回は ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">@cImport</code>'}})," を使っているサンプルでインテリセンス効かなくて、続かなかった。\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">@import</code>'}})," + ",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">最新版zls</code>'}})," で進めていけば慣れるかな。"),"\n",s.createElement(n.h2,null,"gyro の使いかた"),"\n",s.createElement(n.p,null,s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">202204</code>'}})," 現在だと、 gyro で import すると zls が解決できないような気がする。"),"\n",s.createElement(n.h3,null,"add package"),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">gyro add --src github hexops/mach-glfw --root src/main.zig --alias glfw</code></pre></div>'}}),"\n",s.createElement(n.h3,null,"dep package"),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">gyro add --build-dep --src github hexops/mach-glfw --root build.zig --alias build-glfw</code></pre></div>'}}),"\n",s.createElement(n.h3,null,"use package"),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="zig"><pre class="language-zig"><code class="language-zig"><span class="token keyword">const</span> glfw <span class="token operator">=</span> <span class="token builtin">@import</span><span class="token punctuation">(</span><span class="token string">"glfw"</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></div>'}}),"\n",s.createElement(n.h3,null,"build.zig"),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="zig"><pre class="language-zig"><code class="language-zig"><span class="token keyword">const</span> pkgs <span class="token operator">=</span> <span class="token builtin">@import</span><span class="token punctuation">(</span><span class="token string">"deps.zig"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>pkgs<span class="token punctuation">;</span>\n<span class="token keyword">const</span> glfw <span class="token operator">=</span> <span class="token builtin">@import</span><span class="token punctuation">(</span><span class="token string">"build-glfw"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function">build</span><span class="token punctuation">(</span>b<span class="token punctuation">:</span> <span class="token class-name"><span class="token operator">*</span>Builder</span><span class="token punctuation">)</span> <span class="token class-name"><span class="token builtin-type keyword">void</span></span> <span class="token punctuation">{</span>\n    <span class="token operator">...</span>\n\n    exe<span class="token punctuation">.</span><span class="token function">addPackage</span><span class="token punctuation">(</span>pkgs<span class="token punctuation">.</span>glfw<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    glfw<span class="token punctuation">.</span><span class="token function">link</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> exe<span class="token punctuation">,</span> <span class="token punctuation">.</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",s.createElement(n.h3,null,"zgl"),"\n",s.createElement(n.p,null,"libepoxy"),"\n",s.createElement(n.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="text"><pre class="language-text"><code class="language-text">gyro add --src github ziglibs/zgl --root zgl.zig --alias gl</code></pre></div>'}}))}var c=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,t.ah)(),e.components);return n?s.createElement(n,e,s.createElement(l,e)):l(e)},p=a(8678),o=a(1883),u=a(8838);const g={code:e=>{let{children:n,className:a}=e;return a?s.createElement(u.Z,{className:a},n):s.createElement("code",null,n)}};function r(e){let{data:n,children:a}=e;const l=n.mdx.frontmatter;return s.createElement(p.Z,null,s.createElement("h1",null,l.title),s.createElement("div",{className:"tags-index"},l.tags&&l.tags.length>0&&l.tags.map((e=>s.createElement(o.rU,{to:"/tags/"+e+"/",itemProp:"url"},s.createElement("button",null,e))))),s.createElement(t.Zo,{components:g},a))}function i(e){return s.createElement(r,e,s.createElement(c,e))}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2022-0428-zig-2-md-93bc4ba201e1de758a14.js.map