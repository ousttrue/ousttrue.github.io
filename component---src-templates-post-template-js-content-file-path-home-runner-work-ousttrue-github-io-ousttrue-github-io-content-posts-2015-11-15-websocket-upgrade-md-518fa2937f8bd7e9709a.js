"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8393],{56:function(e,n,t){t.r(n),t.d(n,{default:function(){return a}});var r=t(1151),o=t(7294);function c(e){const n=Object.assign({pre:"pre",code:"code"},(0,r.ah)(),e.components);return o.createElement(n.pre,null,o.createElement(n.code,null,"前から写経しながら読んでいる\n「シングルページWebアプリケーション」がようやく終盤に差し掛かってきた。\nSocket.IOで接続するところがあるのだけど、独自にgulpからbrowserSyncを使っていてWebSocketがupgradeできずにはまる。\nFirefoxのconsoleにエラーが出て気になる気になる。\ngulpfile.js\ngulp.task('server', ['nodemon'], function () {\n    browser.init(null, {\n        proxy: 'http://localhost:7000',\n        port: 3000,\n        ws: true // <- これが無いとTransportがpollingからupgradeできない\n    });\n});\n\nなかなか気付けなかった。\nその前に、socket.ioのnamespaceの指定でもはまってたのだが・・・。\nしかし、この本は実にいい本だ。自分のWebの知識レベルにちょうどあっていて、昨今の技術をキャッチアップして行く足がかりに\nすごく役にたった。\nこの本が提唱する、\nmongodb -> node.js + express + socket.IO -> JQuery\nな構成をベースにgulpによる開発環境と、typescript、mithril、bootstrapなんかを盛って行く路線で\n寄り道しながら修行中。\n"))}var u=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?o.createElement(n,e,o.createElement(c,e)):c(e)};t(8678);function l(e){let{data:n,children:t}=e;return o.createElement(o.Fragment,null,o.createElement("h1",null,n.mdx.frontmatter.title),o.createElement(r.Zo,null,t))}function a(e){return o.createElement(l,e,o.createElement(u,e))}},8678:function(e,n,t){t(7294)},1151:function(e,n,t){t.d(n,{Zo:function(){return l},ah:function(){return c}});var r=t(7294);const o=r.createContext({});function c(e){const n=r.useContext(o);return r.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const u={};function l({components:e,children:n,disableParentContext:t}){let l;return l=t?"function"==typeof e?e({}):e||u:c(e),r.createElement(o.Provider,{value:l},n)}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2015-11-15-websocket-upgrade-md-518fa2937f8bd7e9709a.js.map