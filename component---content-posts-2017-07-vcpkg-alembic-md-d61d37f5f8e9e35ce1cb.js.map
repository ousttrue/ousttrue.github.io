{"version":3,"file":"component---content-posts-2017-07-vcpkg-alembic-md-d61d37f5f8e9e35ce1cb.js","mappings":"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","sources":["webpack:///./content/posts/2017/07/vcpkg_alembic.md","webpack:///./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"mmdbridgeのvcpkgを使ったビルド手順を作ったついでにAlembicのvcpkg向けパッケージを作ってみる。\"), \"\\n\", React.createElement(_components.p, null, \"情報収集\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/Microsoft/vcpkg/blob/master/docs/examples/packaging-zlib.md\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"読んだ。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"vcpkg create url\"), \" で雛形が作れる。\"), \"\\n\", React.createElement(_components.p, null, \"実験\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \".\\\\vcpkg.exe create alembic https://github.com/alembic/alembic/archive/1.7.1.tar.gz\\nCMake Error at scripts/ports.cmake:101 (message):\\n  Portfile already exists: 'D:\\\\vcpkg\\\\ports\\\\alembic\\\\portfile.cmake'\\n\")), \"\\n\", React.createElement(_components.p, null, \"すでにあるだと！？\\n最近できたらしい。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/Microsoft/vcpkg/tree/master/ports/alembic\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"しかし、hdf非対応みたいなので作ってみる。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \".\\\\vcpkg.exe create alembic-hdf https://github.com/alembic/alembic/archive/1.7.1.tar.gz\\n\\nVCPKG_DIR\\n    ports\\n        alembic-hdf\\n            CONTROL\\n            portfile.cmake\\n\")), \"\\n\", React.createElement(_components.p, null, \"ができた。\\n簡単なCONTROLから。\\nこっちはパッケージ情報を決めるだけなのでさくっと。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"Source: alembic-hdf\\nVersion: 1.7.1\\nDescription: alembic with hdf5\\nBuild-Depends: hdf5\\n\")), \"\\n\", React.createElement(_components.p, null, \"本題のportfile.cmake。\\nそのままだとエラーになるの。最低限以下が必要なようだ。\\nアーカイブを展開パスの指定。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-cmake\"\n  }, \"set(SOURCE_PATH ${CURRENT_BUILDTREES_DIR}/src/1.7.1)\\n\\n# ↓ 修正する\\n\\nset(SOURCE_PATH ${CURRENT_BUILDTREES_DIR}/src/alembic-1.7.1)\\n\")), \"\\n\", React.createElement(_components.p, null, \"実行してみる。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"> ./vcpkg install alembic-hdf:x64-windows\\nThe following packages will be built and installed:\\n    alembic-hdf:x64-windows\\nBuilding package alembic-hdf:x64-windows...\\n-- CURRENT_INSTALLED_DIR=D:/vcpkg/installed/x64-windows\\n-- DOWNLOADS=D:/vcpkg/downloads\\n-- CURRENT_PACKAGES_DIR=D:/vcpkg/packages/alembic-hdf_x64-windows\\n-- CURRENT_BUILDTREES_DIR=D:/vcpkg/buildtrees/alembic-hdf\\n-- CURRENT_PORT_DIR=D:/vcpkg/ports/alembic-hdf/.\\n-- Using cached D:/vcpkg/downloads/1.7.1.tar.gz\\n-- Testing integrity of cached file...\\n-- Testing integrity of cached file... OK\\n-- Extracting done\\n-- Configuring x64-windows-rel\\n-- Configuring x64-windows-rel done\\n-- Configuring x64-windows-dbg\\nPS D:\\\\vcpkg> .\\\\vcpkg.exe install alembic-hdf:x64-windows\\nThe following packages will be built and installed:\\n    alembic-hdf:x64-windows\\nBuilding package alembic-hdf:x64-windows...\\n-- CURRENT_INSTALLED_DIR=D:/vcpkg/installed/x64-windows\\n-- DOWNLOADS=D:/vcpkg/downloads\\n-- CURRENT_PACKAGES_DIR=D:/vcpkg/packages/alembic-hdf_x64-windows\\n-- CURRENT_BUILDTREES_DIR=D:/vcpkg/buildtrees/alembic-hdf\\n-- CURRENT_PORT_DIR=D:/vcpkg/ports/alembic-hdf/.\\n-- Using cached D:/vcpkg/downloads/1.7.1.tar.gz\\n-- Testing integrity of cached file...\\n-- Testing integrity of cached file... OK\\n-- Extracting done\\n-- Configuring x64-windows-rel\\n-- Configuring x64-windows-rel done\\n-- Configuring x64-windows-dbg\\n-- Configuring x64-windows-dbg done\\n-- Package x64-windows-rel\\n-- Package x64-windows-rel done\\n-- Package x64-windows-dbg\\n-- Package x64-windows-dbg done\\n-- Performing post-build validation\\nInclude files should not be duplicated into the /debug/include directory. If this cannot be disabled in the project cmake, use\\n    file(REMOVE_RECURSE ${CURRENT_PACKAGES_DIR}/debug/include)\\nThe /lib/cmake folder should be merged with /debug/lib/cmake and moved to /share/alembic-hdf/cmake.\\nThe following cmake files were found outside /share/alembic-hdf. Please place cmake files in /share/alembic-hdf.\\n\\n    D:/vcpkg/packages/alembic-hdf_x64-windows/lib/cmake/Alembic/AlembicConfig.cmake\\n    D:/vcpkg/packages/alembic-hdf_x64-windows/lib/cmake/Alembic/AlembicConfigVersion.cmake\\n    D:/vcpkg/packages/alembic-hdf_x64-windows/lib/cmake/Alembic/AlembicTargets-release.cmake\\n    D:/vcpkg/packages/alembic-hdf_x64-windows/lib/cmake/Alembic/AlembicTargets.cmake\\n    D:/vcpkg/packages/alembic-hdf_x64-windows/debug/lib/cmake/Alembic/AlembicConfig.cmake\\n    D:/vcpkg/packages/alembic-hdf_x64-windows/debug/lib/cmake/Alembic/AlembicConfigVersion.cmake\\n    D:/vcpkg/packages/alembic-hdf_x64-windows/debug/lib/cmake/Alembic/AlembicTargets-debug.cmake\\n    D:/vcpkg/packages/alembic-hdf_x64-windows/debug/lib/cmake/Alembic/AlembicTargets.cmake\\n\\nThe /debug/lib/cmake folder should be merged with /lib/cmake into /share/alembic-hdf\\n\\nThe following dlls were found in /lib or /debug/lib. Please move them to /bin or /debug/bin, respectively.\\n\\n    D:/vcpkg/packages/alembic-hdf_x64-windows/lib/Alembic.dll\\n\\n\\nThe following dlls were found in /lib or /debug/lib. Please move them to /bin or /debug/bin, respectively.\\n\\n    D:/vcpkg/packages/alembic-hdf_x64-windows/debug/lib/Alembic.dll\\n\\nThe software license must be available at ${CURRENT_PACKAGES_DIR}/share/alembic-hdf/copyright\\n\\n    file(COPY ${CURRENT_BUILDTREES_DIR}/src/alembic-1.7.1/LICENSE.txt DESTINATION ${CURRENT_PACKAGES_DIR}/share/alembic-hdf)\\n    file(RENAME ${CURRENT_PACKAGES_DIR}/share/alembic-hdf/LICENSE.txt ${CURRENT_PACKAGES_DIR}/share/alembic-hdf/copyright)\\nThe following EXEs were found in /bin or /debug/bin. EXEs are not valid distribution targets.\\n\\n    D:/vcpkg/packages/alembic-hdf_x64-windows/bin/abcdiff.exe\\n    D:/vcpkg/packages/alembic-hdf_x64-windows/bin/abcecho.exe\\n    D:/vcpkg/packages/alembic-hdf_x64-windows/bin/abcechobounds.exe\\n    D:/vcpkg/packages/alembic-hdf_x64-windows/bin/abcls.exe\\n    D:/vcpkg/packages/alembic-hdf_x64-windows/bin/abcstitcher.exe\\n    D:/vcpkg/packages/alembic-hdf_x64-windows/bin/abctree.exe\\n\\nThe following EXEs were found in /bin or /debug/bin. EXEs are not valid distribution targets.\\n\\n    D:/vcpkg/packages/alembic-hdf_x64-windows/debug/bin/abcdiff.exe\\n    D:/vcpkg/packages/alembic-hdf_x64-windows/debug/bin/abcecho.exe\\n    D:/vcpkg/packages/alembic-hdf_x64-windows/debug/bin/abcechobounds.exe\\n    D:/vcpkg/packages/alembic-hdf_x64-windows/debug/bin/abcls.exe\\n    D:/vcpkg/packages/alembic-hdf_x64-windows/debug/bin/abcstitcher.exe\\n    D:/vcpkg/packages/alembic-hdf_x64-windows/debug/bin/abctree.exe\\n\\nFound 9 error(s). Please correct the portfile:\\n    D:\\\\vcpkg\\\\ports\\\\alembic-hdf\\\\portfile.cmake\\n-- Performing post-build validation done\\nError: Building package alembic-hdf:x64-windows failed with: POST_BUILD_CHECKS_FAILED\\nPlease ensure you're using the latest portfiles with `.\\\\vcpkg update`, then\\nsubmit an issue at https://github.com/Microsoft/vcpkg/issues including:\\n  Package: alembic-hdf:x64-windows\\n  Vcpkg version: 0.0.81-144d3718c4197b101c7d61ee6a258200371fb1ab\\n\\nAdditionally, attach any relevant sections from the log files above.\\n\")), \"\\n\", React.createElement(_components.p, null, \"という感じになった。\\nエラーメッセージがすごく親切。\\nあと、NINJAビルド速い。\\nエラーにはなるがビルド結果は以下のように出力された。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"VCPKG_DIR/packages/alembic-hdf_x64-windows\\n│  BUILD_INFO\\n│\\n├─bin\\n│      abcdiff.exe\\n│      abcecho.exe\\n│      abcechobounds.exe\\n│      abcls.exe\\n│      abcstitcher.exe\\n│      abctree.exe\\n│\\n├─debug\\n│  ├─bin\\n│  │      abcdiff.exe\\n│  │      abcecho.exe\\n│  │      abcechobounds.exe\\n│  │      abcls.exe\\n│  │      abcstitcher.exe\\n│  │      abctree.exe\\n│  │\\n│  ├─include\\n│  │  └─Alembic\\n│  │      ├─Abc\\n│  │      │      *.h\\n│  │      │\\n│  │      ├─AbcCollection\\n│  │      │      *.h\\n│  │      │\\n│  │      ├─AbcCoreAbstract\\n│  │      │      *.h\\n│  │      │\\n│  │      ├─AbcCoreFactory\\n│  │      │      *.h\\n│  │      │\\n│  │      ├─AbcCoreLayer\\n│  │      │      *.h\\n│  │      │\\n│  │      ├─AbcCoreOgawa\\n│  │      │      *.h\\n│  │      │\\n│  │      ├─AbcGeom\\n│  │      │      *.h\\n│  │      │\\n│  │      ├─AbcMaterial\\n│  │      │      *.h\\n│  │      │\\n│  │      └─Util\\n│  │              *.h\\n│  │\\n│  └─lib\\n│      │  Alembic.dll\\n│      │  Alembic.lib\\n│      │\\n│      └─cmake\\n│          └─Alembic\\n│                  AlembicConfig.cmake\\n│                  AlembicConfigVersion.cmake\\n│                  AlembicTargets-debug.cmake\\n│                  AlembicTargets.cmake\\n│\\n├─include\\n│  └─Alembic\\n│      ├─Abc\\n│      │      *.h\\n│      │\\n│      ├─AbcCollection\\n│      │      *.h\\n│      │\\n│      ├─AbcCoreAbstract\\n│      │      *.h\\n│      │\\n│      ├─AbcCoreFactory\\n│      │      *.h\\n│      │\\n│      ├─AbcCoreLayer\\n│      │      *.h\\n│      │\\n│      ├─AbcCoreOgawa\\n│      │      *.h\\n│      │\\n│      ├─AbcGeom\\n│      │      *.h\\n│      │\\n│      ├─AbcMaterial\\n│      │      *.h\\n│      │\\n│      └─Util\\n│              *.h\\n│\\n└─lib\\n    │  Alembic.dll\\n    │  Alembic.lib\\n    │\\n    └─cmake\\n        └─Alembic\\n                AlembicConfig.cmake\\n                AlembicConfigVersion.cmake\\n                AlembicTargets-release.cmake\\n                AlembicTargets.cmake\\n\")), \"\\n\", React.createElement(_components.p, null, \"ここから不要なものを削除したり、場所の違うものを移動したりすることで完成できそう。\\nエラーメッセージに沿って修正してみる\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"debug/include\"), \" 不要\"), \"\\n\", React.createElement(_components.p, null, \"エラーメッセージに含まれるとおりに。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-cmake\"\n  }, \"file(REMOVE_RECURSE ${CURRENT_PACKAGES_DIR}/debug/include)\\n\\nlib/cmake/Alembic/*.cmakeをshare/alembic-hdfに移動するべし\\ndebug/lib/cmake/Alembicを統合するべし。\\nvcpkg_fixup_cmake_targets(CONFIG_PATH \\\"lib/cmake/Alembic\\\")\\n\")), \"\\n\", React.createElement(_components.p, null, \"ぽい。 \", React.createElement(_components.code, null, \"alembic/portfile.cmake\"), \" を参考にした\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-cmake\"\n  }, \"lib/Alembic.dllをbin/Alembic.dllに移動せよ\\ndebug/lib/Alembic.dllも。\\nfile(RENAME ${CURRENT_PACKAGES_DIR}/lib/Alembic.dll ${CURRENT_PACKAGES_DIR}/bin/Alembic.dll)\\nfile(RENAME ${CURRENT_PACKAGES_DIR}/debug/lib/Alembic.dll ${CURRENT_PACKAGES_DIR}/debug/bin/Alembic.dll)\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"alembic/portfile.cmake\"), \" を参考にした\"), \"\\n\", React.createElement(_components.p, null, \"ライセンスファイルをコピーせよ\\nエラーメッセージに含まれるとおりに。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-cmake\"\n  }, \"file(COPY ${CURRENT_BUILDTREES_DIR}/src/alembic-1.7.1/LICENSE.txt DESTINATION ${CURRENT_PACKAGES_DIR}/share/alembic-hdf)\\nfile(RENAME ${CURRENT_PACKAGES_DIR}/share/alembic-hdf/LICENSE.txt ${CURRENT_PACKAGES_DIR}/share/alembic-hdf/copyright)\\n\")), \"\\n\", React.createElement(_components.p, null, \"exeを削除せよ\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-cmake\"\n  }, \"file(GLOB EXE ${CURRENT_PACKAGES_DIR}/bin/*.exe)\\nfile(GLOB DEBUG_EXE ${CURRENT_PACKAGES_DIR}/debug/bin/*.exe)\\nfile(REMOVE ${EXE})\\nfile(REMOVE ${DEBUG_EXE})\\n\")), \"\\n\", React.createElement(_components.p, null, \"alembic/portfile.cmakeを参考にした\\nおまけ: debug用にpdbをコピー\\nalembic/portfile.cmakeを参考にした\\nvcpkg_copy_pdbs()\"), \"\\n\", React.createElement(_components.p, null, \"vcpkg_install_cmakeより下を抜粋。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-cmake\"\n  }, \"vcpkg_install_cmake()\\n\\n# Remove debug/include\\nfile(REMOVE_RECURSE ${CURRENT_PACKAGES_DIR}/debug/include)\\n# fix *.cmake\\nvcpkg_fixup_cmake_targets(CONFIG_PATH \\\"lib/cmake/Alembic\\\")\\n# Rename dll\\nfile(RENAME ${CURRENT_PACKAGES_DIR}/lib/Alembic.dll ${CURRENT_PACKAGES_DIR}/bin/Alembic.dll)\\nfile(RENAME ${CURRENT_PACKAGES_DIR}/debug/lib/Alembic.dll ${CURRENT_PACKAGES_DIR}/debug/bin/Alembic.dll)\\n# Handle copyright\\nfile(COPY ${CURRENT_BUILDTREES_DIR}/src/alembic-1.7.1/LICENSE.txt DESTINATION ${CURRENT_PACKAGES_DIR}/share/alembic-hdf)\\nfile(RENAME ${CURRENT_PACKAGES_DIR}/share/alembic-hdf/LICENSE.txt ${CURRENT_PACKAGES_DIR}/share/alembic-hdf/copyright)\\n# Remove exe files\\nfile(GLOB EXE ${CURRENT_PACKAGES_DIR}/bin/*.exe)\\nfile(GLOB DEBUG_EXE ${CURRENT_PACKAGES_DIR}/debug/bin/*.exe)\\nfile(REMOVE ${EXE})\\nfile(REMOVE ${DEBUG_EXE})\\n# Copy pdb\\nvcpkg_copy_pdbs()\\n\")), \"\\n\", React.createElement(_components.p, null, \"再度ビルド。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"> vcpkg install alembic-hdf:x64-windows\")), \"\\n\", React.createElement(_components.p, null, \"うまくいった。\\nUSE_HDF5を有効にする\\nportfileの修正\\nCONTROLに依存追加。\\nBuild-Depends: ilmbase, hdf5\"), \"\\n\", React.createElement(_components.p, null, \"USE_HDF5を有効に。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-cmake\"\n  }, \"vcpkg_configure_cmake(\\n    SOURCE_PATH ${SOURCE_PATH}\\n    PREFER_NINJA # Disable this option if project cannot be built with Ninja\\n    OPTIONS -DUSE_HDF5=ON\\n    # OPTIONS_RELEASE -DOPTIMIZE=1\\n    # OPTIONS_DEBUG -DDEBUGGABLE=1\\n)\\n\")), \"\\n\", React.createElement(_components.p, null, \"ビルドあんどエラー\\nビルドしてみるがエラーになる。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"VCPKG_DIR\\\\buildtrees\\\\alembic-hdf\\\\package-x64-windows-rel-out.log\"), \" を見て原因を探る。\"), \"\\n\", React.createElement(_components.p, null, \"hdf5に対するlinkが無くて、hdf5関連のシンボルが見つからん。\\nパッチ\\nalembic-1.7.1/lib/Alembic/CMakeLists.txtを修正したいのでやり方を調べる。\\nパッチの当て方\"), \"\\n\", React.createElement(_components.p, null, \"portfile.cmakeに記述する。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-cmake\"\n  }, \"vcpkg_extract_source_archiveよりあと、vcpkg_install_cmakeより前。\\nvcpkg_apply_patches(\\n    SOURCE_PATH ${SOURCE_PATH}\\n    PATCHES ${CMAKE_CURRENT_LIST_DIR}/fix-hdf5link.patch\\n)\\n\")), \"\\n\", React.createElement(_components.p, null, \"パッチの作り方\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/Microsoft/vcpkg/blob/master/docs/examples/patching-libpng.md#patching-the-code-to-improve-compatibility\"), \"\\n\", React.createElement(_components.p, null, \"なるほど。\\ngitを準備して・・・\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"vcpkg> cd ./buildtrees/alembic-hdf/src/alembic-1.7.1/\\nvcpkg/buildtrees/alembic-hdf/src/alembic-1.7.1> git init\\nvcpkg/buildtrees/alembic-hdf/src/alembic-1.7.1> git add .\\nvcpkg/buildtrees/alembic-hdf/src/alembic-1.7.1> git commit -m \\\"temp\\\"\\n\")), \"\\n\", React.createElement(_components.p, null, \"修正\\nalembic-1.7.1/lib/Alembic/CMakeLists.txtを修正。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-diff\"\n  }, \"> git diff\\n--git a/lib/Alembic/CMakeLists.txt b/lib/Alembic/CMakeLists.txt\\nindex 5028c91..1f81d50 100644\\n--- a/lib/Alembic/CMakeLists.txt\\n+++ b/lib/Alembic/CMakeLists.txt\\n@@ -49,6 +49,12 @@ ADD_SUBDIRECTORY(AbcMaterial)\\n ADD_SUBDIRECTORY(Ogawa)\\n\\n ADD_LIBRARY(Alembic ${LIB_TYPE} ${CXX_FILES})\\n+IF (USE_HDF5)\\n+    TARGET_LINK_LIBRARIES(Alembic\\n+        ${HDF5_LIBRARIES}\\n+        )\\n+    ADD_DEFINITIONS(-DH5_BUILT_AS_DYNAMIC_LIB)\\n+ENDIF()\\n\\n TARGET_INCLUDE_DIRECTORIES(Alembic\\n     PUBLIC\\n\")), \"\\n\", React.createElement(_components.p, null, \"gitでpatchを作成\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"> git diff | out-file -enc ascii ..\\\\..\\\\..\\\\..\\\\ports\\\\alembic-hdf\\\\fix-hdf5link.patch\")), \"\\n\", React.createElement(_components.p, null, \"ビルド\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"> .\\\\vcpkg.exe install alembic-hdf:x64-windows\\nInstalling package alembic-hdf:x64-windows... done\\n\")), \"\\n\", React.createElement(_components.p, null, \"VCPKG_DIR/installed/x64-windows/bin/Alembic.dllをdependencywalkerで見てみるとばっちりhdf5.dllへのリンクが含まれている。作業完了。\\nはじめてで調べながらでもわりとさくさく作業が進んだ。エラーメッセージの出し方とか、フォルダの構成とかvcpkgなかなかレベルが高いな。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-shell\"\n  }, \"ports\\nports/alembic-hdf/CONTROL\\nSource: alembic-hdf\\nVersion: 1.7.1\\nDescription: alembic with hdf5\\nBuild-Depends: ilmbase, hdf5\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-ports/alembic-hdf/portfile.cmake\"\n  }, \"# Common Ambient Variables:\\n#   CURRENT_BUILDTREES_DIR    = ${VCPKG_ROOT_DIR}\\\\buildtrees\\\\${PORT}\\n#   CURRENT_PACKAGES_DIR      = ${VCPKG_ROOT_DIR}\\\\packages\\\\${PORT}_${TARGET_TRIPLET}\\n#   CURRENT_PORT_DIR          = ${VCPKG_ROOT_DIR}\\\\ports\\\\${PORT}\\n#   PORT                      = current port name (zlib, etc)\\n#   TARGET_TRIPLET            = current triplet (x86-windows, x64-windows-static, etc)\\n#   VCPKG_CRT_LINKAGE         = C runtime linkage type (static, dynamic)\\n#   VCPKG_LIBRARY_LINKAGE     = target library linkage type (static, dynamic)\\n#   VCPKG_ROOT_DIR            = <C:\\\\path\\\\to\\\\current\\\\vcpkg>\\n#   VCPKG_TARGET_ARCHITECTURE = target architecture (x64, x86, arm)\\n#\\n\\ninclude(vcpkg_common_functions)\\nset(SOURCE_PATH ${CURRENT_BUILDTREES_DIR}/src/alembic-1.7.1)\\nvcpkg_download_distfile(ARCHIVE\\n    URLS \\\"https://github.com/alembic/alembic/archive/1.7.1.tar.gz\\\"\\n    FILENAME \\\"1.7.1.tar.gz\\\"\\n    SHA512 89e30b681a76eaf79b20ebeff62c495971b0eb64b28f249a14bbcf3bdb40df7eda93b0ede299dd5511bd4587a2cc2d4ebd851fb89bf999fdccc31fee3cffbba2\\n)\\nvcpkg_extract_source_archive(${ARCHIVE})\\n\\nvcpkg_apply_patches(\\n    SOURCE_PATH ${SOURCE_PATH}\\n    PATCHES ${CMAKE_CURRENT_LIST_DIR}/fix-hdf5link.patch\\n)\\n\\nvcpkg_configure_cmake(\\n    SOURCE_PATH ${SOURCE_PATH}\\n    PREFER_NINJA # Disable this option if project cannot be built with Ninja\\n    OPTIONS -DUSE_HDF5=ON\\n    # OPTIONS_RELEASE -DOPTIMIZE=1\\n    # OPTIONS_DEBUG -DDEBUGGABLE=1\\n)\\n\\nvcpkg_install_cmake()\\n\\n# Remove debug/include\\nfile(REMOVE_RECURSE ${CURRENT_PACKAGES_DIR}/debug/include)\\n# fix *.cmake\\nvcpkg_fixup_cmake_targets(CONFIG_PATH \\\"lib/cmake/Alembic\\\")\\n# Rename dll\\nfile(RENAME ${CURRENT_PACKAGES_DIR}/lib/Alembic.dll ${CURRENT_PACKAGES_DIR}/bin/Alembic.dll)\\nfile(RENAME ${CURRENT_PACKAGES_DIR}/debug/lib/Alembic.dll ${CURRENT_PACKAGES_DIR}/debug/bin/Alembic.dll)\\n# Handle copyright\\nfile(COPY ${CURRENT_BUILDTREES_DIR}/src/alembic-1.7.1/LICENSE.txt DESTINATION ${CURRENT_PACKAGES_DIR}/share/alembic-hdf)\\nfile(RENAME ${CURRENT_PACKAGES_DIR}/share/alembic-hdf/LICENSE.txt ${CURRENT_PACKAGES_DIR}/share/alembic-hdf/copyright)\\n# Remove exe files\\nfile(GLOB EXE ${CURRENT_PACKAGES_DIR}/bin/*.exe)\\nfile(GLOB DEBUG_EXE ${CURRENT_PACKAGES_DIR}/debug/bin/*.exe)\\nfile(REMOVE ${EXE})\\nfile(REMOVE ${DEBUG_EXE})\\n# Copy pdb\\nvcpkg_copy_pdbs()\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-ports/alembic-hdf/fix-hdf5link.patch\"\n  }, \"diff --git a/lib/Alembic/CMakeLists.txt b/lib/Alembic/CMakeLists.txt\\nindex 5028c91..1f81d50 100644\\n--- a/lib/Alembic/CMakeLists.txt\\n+++ b/lib/Alembic/CMakeLists.txt\\n@@ -49,6 +49,12 @@ ADD_SUBDIRECTORY(AbcMaterial)\\n ADD_SUBDIRECTORY(Ogawa)\\n \\n ADD_LIBRARY(Alembic ${LIB_TYPE} ${CXX_FILES})\\n+IF (USE_HDF5)\\n+    TARGET_LINK_LIBRARIES(Alembic \\n+        ${HDF5_LIBRARIES}\\n+        )\\n+    ADD_DEFINITIONS(-DH5_BUILT_AS_DYNAMIC_LIB)\\n+ENDIF()\\n \\n TARGET_INCLUDE_DIRECTORIES(Alembic\\n     PUBLIC\\n\")), \"\\n\", React.createElement(_components.p, null, \"vcpkgにPR送った\\n採用されたので上記の作業は必要なくなったのが、cmake-3.9.0の更新でFindHDF5が壊れるという事態が発生したので対応中…。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","ul","li","code","pre","_provideComponents","components","React","className","wrapper","MDXLayout","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}