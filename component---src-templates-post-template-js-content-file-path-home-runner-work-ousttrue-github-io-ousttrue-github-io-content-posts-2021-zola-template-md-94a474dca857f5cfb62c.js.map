{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2021-zola-template-md-94a474dca857f5cfb62c.js","mappings":"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","sources":["webpack:///./content/posts/2021/zola_template.md","webpack:///./src/templates/post-template.js","webpack:///./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    h1: \"h1\",\n    code: \"code\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"サイト整備のメモ。共通化して部品を少なくした。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"zola 設定\"), \"\\n\", React.createElement(_components.li, null, \"template 構築\"), \"\\n\", React.createElement(_components.li, null, \"場合によっては zola の改造\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"共通\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"[x] title\"), \"\\n\", React.createElement(_components.li, null, \"[x] 日付\"), \"\\n\", React.createElement(_components.li, null, \"[x] 見出しの見た目\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"Markdown\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"[x] url 文字列を自動でリンクにしたい。markdownで \", React.createElement(_components.code, null, \"<url>\"), \" と記述するべし\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"20210716: masonry 入れてみた\"), \"\\n\", React.createElement(_components.p, null, \"https://masonry.desandro.com/\"), \"\\n\", React.createElement(_components.h1, null, \"20210717: TOC\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"[x] 目次\\nだいたいできた。\\ngithub が増えすぎてカオスなので不要なものを整理せねば・・・\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"20210725: 色\"), \"\\n\", React.createElement(_components.p, null, \"作業用に区域ごとに色分けしていたのをやめて、地味な色に変更。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-scss\"\n  }, \"@mixin MAIN_COLOR {\\n    color: black;\\n    background-color white;\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"のような方法を試してみた。\"), \"\\n\", React.createElement(_components.h1, null, \"20210725: TOC 固定\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-css\"\n  }, \"position: fixed;\\n\")), \"\\n\", React.createElement(_components.h1, null, \"20210725: 画像を入れれるようにしてみた\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"page.assets\"), \" や \", React.createElement(_components.code, null, \"section.assets\"), \" に想定した形で入ってこないので、\\n無理やりパスを操作したのだが、さすがにこれはちょっと・・・\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-html\"\n  }, \"  {% if page.extra.image %}\\n  {% set s = page.relative_path | split(pat=\\\"/\\\") %}\\n  {% set len = s | length %}\\n  {% set sl = s | slice(start=0, end=len-1) %}\\n  {% set j = sl | join(sep=\\\"/\\\") %}\\n  {% set image_url = resize_image(path=j ~ \\\"/\\\" ~ page.extra.image, width=600, op=\\\"fit_width\\\") %}\\n  <img src=\\\"{{ image_url }}\\\"\\\">\\n  {% endif %}\\n\")), \"\\n\", React.createElement(_components.p, null, \"なんか、 \", React.createElement(_components.code, null, \"zola\"), \" がわりと融通が利かないことが分かってきた。\\n\", React.createElement(_components.code, null, \"resize_image\"), \" で明示的に画像を加工するという設計は理解。なるほど。\\n当方、 \", React.createElement(_components.code, null, \"md\"), \" ファイルと同じフォルダに \", React.createElement(_components.code, null, \"png, jpg\"), \" を放り込んでそれを記事内で使いたいのです。\\n画像を中央の \", React.createElement(_components.code, null, \"static\"), \" フォルダにまとめて入れておくの嫌なので。\\n改造して page.assets に放り込んでしまおう。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"hugo\"), \" ほど多機能複雑でなく、 \", React.createElement(_components.code, null, \"zola\"), \" ほど strict でない、そんなほどほどなツールが望まれる。\"), \"\\n\", React.createElement(_components.h1, null, \"20210815: pagination\"), \"\\n\", React.createElement(_components.p, null, \"https://www.getzola.org/documentation/templates/pagination/\"), \"\\n\", React.createElement(_components.p, null, \"ドキュメントよりもソースを読もう w\\n5分もかからぬ。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-html\"\n  }, \"      {% if paginator.current_index == 1 %}\\n\")), \"\\n\", React.createElement(_components.h1, null, \"20210829: 内部リンク記法\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \".md\"), \" の記法。\"), \"\\n\", React.createElement(_components.p, null, \"https://www.getzola.org/documentation/content/linking/#internal-links\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"[NvimTexture](@/posts/2021/summer/nvimtexture.md)\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"@\"), \" と \", React.createElement(_components.code, null, \".md\"), \" が必要。\"), \"\\n\", React.createElement(_components.h1, null, \"20210831: search\"), \"\\n\", React.createElement(_components.p, null, \"https://www.getzola.org/documentation/content/search/\"), \"\\n\", React.createElement(_components.p, null, \"設定は \", React.createElement(_components.code, null, \"build_search_index = true\"), \" するだけなのだが、\\ntemplate 作るのは大変。\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/aaranxu/adidoks から部品を頂いてきた。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2021/zola_template.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nfunction PostTempalte({data, children}) {\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, null, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","ul","li","h1","code","pre","_provideComponents","components","React","className","wrapper","MDXLayout","PostTempalte","_ref","data","children","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}