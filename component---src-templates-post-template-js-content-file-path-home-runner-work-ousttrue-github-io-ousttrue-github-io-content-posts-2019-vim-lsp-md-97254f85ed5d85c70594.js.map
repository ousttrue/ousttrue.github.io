{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2019-vim-lsp-md-97254f85ed5d85c70594.js","mappings":"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","sources":["webpack:///./content/posts/2019/vim_lsp.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    h4: \"h4\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"vim lsp client\"), \"\\n\", React.createElement(_components.p, null, \"vimのlspクライアント。\"), \"\\n\", React.createElement(_components.h3, null, \"vim-lsp\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/prabirshrestha/vim-lsp\"\n  }, \"https://github.com/prabirshrestha/vim-lsp\")), \"\\n\"), \"\\n\", React.createElement(_components.h4, null, \"vim-lsp解読\"), \"\\n\", React.createElement(_components.p, null, \"plugin/lsp.vim\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"vim\\\"><pre class=\\\"language-vim\\\"><code class=\\\"language-vim\\\"><span class=\\\"token keyword\\\">if</span> g<span class=\\\"token punctuation\\\">:</span>lsp_auto_enable\\n    augroup lsp_auto_enable\\n        <span class=\\\"token builtin\\\">autocmd</span><span class=\\\"token operator\\\">!</span>\\n        <span class=\\\"token builtin\\\">autocmd</span> VimEnter <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">call</span> <span class=\\\"token builtin\\\">lsp</span>#<span class=\\\"token function\\\">enable</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n    augroup END\\n<span class=\\\"token keyword\\\">endif</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"autoload/lsp.vim\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"vim\\\"><pre class=\\\"language-vim\\\"><code class=\\\"language-vim\\\"><span class=\\\"token keyword\\\">function</span><span class=\\\"token operator\\\">!</span> <span class=\\\"token builtin\\\">lsp</span>#<span class=\\\"token function\\\">enable</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> abort\\n    <span class=\\\"token keyword\\\">call</span> s<span class=\\\"token punctuation\\\">:</span><span class=\\\"token function\\\">register_events</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">endfunction</span>\\n\\n<span class=\\\"token keyword\\\">function</span><span class=\\\"token operator\\\">!</span> s<span class=\\\"token punctuation\\\">:</span><span class=\\\"token function\\\">register_events</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> abort\\n    <span class=\\\"token keyword\\\">call</span> s<span class=\\\"token punctuation\\\">:</span><span class=\\\"token function\\\">on_text_document_did_open</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">endfunction</span>\\n\\n<span class=\\\"token keyword\\\">function</span><span class=\\\"token operator\\\">!</span> s<span class=\\\"token punctuation\\\">:</span><span class=\\\"token function\\\">on_text_document_did_open</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> abort\\n<span class=\\\"token keyword\\\">endfunction</span>\\n\\n<span class=\\\"token comment\\\">\\\" lspサーバの初期化をするぽい</span>\\n<span class=\\\"token comment\\\">\\\" server_nameは </span><span class=\\\"token string\\\">'pyls'</span>など\\n<span class=\\\"token keyword\\\">function</span><span class=\\\"token operator\\\">!</span> s<span class=\\\"token punctuation\\\">:</span><span class=\\\"token function\\\">ensure_flush</span><span class=\\\"token punctuation\\\">(</span>buf<span class=\\\"token punctuation\\\">,</span> server_name<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">cb</span><span class=\\\"token punctuation\\\">)</span> abort\\n<span class=\\\"token keyword\\\">endfunction</span>\\n\\n<span class=\\\"token comment\\\">\\\" lspサーバープロセスを起動して、stdin, stdout, stderrを接続する</span>\\n<span class=\\\"token keyword\\\">function</span><span class=\\\"token operator\\\">!</span> s<span class=\\\"token punctuation\\\">:</span><span class=\\\"token function\\\">lsp_start</span><span class=\\\"token punctuation\\\">(</span>opts<span class=\\\"token punctuation\\\">)</span> abort\\n\\n    <span class=\\\"token keyword\\\">let</span> <span class=\\\"token keyword\\\">l</span><span class=\\\"token punctuation\\\">:</span>lsp_id <span class=\\\"token operator\\\">=</span> <span class=\\\"token builtin\\\">lsp</span>#client#<span class=\\\"token function\\\">start</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n        \\\\ <span class=\\\"token string\\\">'cmd'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token keyword\\\">l</span><span class=\\\"token punctuation\\\">:</span>cmd<span class=\\\"token punctuation\\\">,</span>\\n        \\\\ <span class=\\\"token string\\\">'on_stderr'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token function\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'s:on_stderr'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span>a<span class=\\\"token punctuation\\\">:</span>server_name<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n        \\\\ <span class=\\\"token string\\\">'on_exit'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token function\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'s:on_exit'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span>a<span class=\\\"token punctuation\\\">:</span>server_name<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n        \\\\ <span class=\\\"token string\\\">'on_notification'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token function\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'s:on_notification'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span>a<span class=\\\"token punctuation\\\">:</span>server_name<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n        \\\\ <span class=\\\"token string\\\">'on_request'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token function\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'s:on_request'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">[</span>a<span class=\\\"token punctuation\\\">:</span>server_name<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n        \\\\ <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token keyword\\\">endfunction</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">autoload/lsp/client.vim</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"vim\\\"><pre class=\\\"language-vim\\\"><code class=\\\"language-vim\\\"><span class=\\\"token keyword\\\">function</span><span class=\\\"token operator\\\">!</span> s<span class=\\\"token punctuation\\\">:</span><span class=\\\"token function\\\">lsp_start</span><span class=\\\"token punctuation\\\">(</span>opts<span class=\\\"token punctuation\\\">)</span> abort\\n    <span class=\\\"token comment\\\">\\\" async.vim ライブラリに移る</span>\\n    <span class=\\\"token keyword\\\">let</span> <span class=\\\"token keyword\\\">l</span><span class=\\\"token punctuation\\\">:</span>client_id <span class=\\\"token operator\\\">=</span> async#job#<span class=\\\"token function\\\">start</span><span class=\\\"token punctuation\\\">(</span>a<span class=\\\"token punctuation\\\">:</span>opts<span class=\\\"token operator\\\">.</span>cmd<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>\\n        \\\\ <span class=\\\"token string\\\">'on_stdout'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token function\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'s:on_stdout'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n        \\\\ <span class=\\\"token string\\\">'on_stderr'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token function\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'s:on_stderr'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n        \\\\ <span class=\\\"token string\\\">'on_exit'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token function\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'s:on_exit'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span>\\n        \\\\ <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token keyword\\\">endfunction</span>\\n\\n<span class=\\\"token comment\\\">\\\" stdout を on_notification と on_request に切り出す</span>\\n<span class=\\\"token keyword\\\">function</span><span class=\\\"token operator\\\">!</span> s<span class=\\\"token punctuation\\\">:</span><span class=\\\"token function\\\">on_stdout</span><span class=\\\"token punctuation\\\">(</span>id<span class=\\\"token punctuation\\\">,</span> data<span class=\\\"token punctuation\\\">,</span> event<span class=\\\"token punctuation\\\">)</span> abort\\n<span class=\\\"token keyword\\\">endfunction</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/prabirshrestha/async.vim\"\n  }, \"https://github.com/prabirshrestha/async.vim\")), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">autoload/async/job.vim</code>\"\n    }\n  }), \" ファイル一個だけだった。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">vim</code>\"\n    }\n  }), \" と \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">nvim</code>\"\n    }\n  }), \" の違いをラップしているぽい。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">vim</code>\"\n    }\n  }), \" の \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">job_start</code>\"\n    }\n  }), \" と \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">nvim</code>\"\n    }\n  }), \" の \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">jobstart</code>\"\n    }\n  }), \"。\\nなるほど。\"), \"\\n\", React.createElement(_components.h4, null, \"vim-lspの動きを追う(dls)\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/d-language-server/dls\"\n  }, \"dls\"), \" だと\"), \"\\n\", React.createElement(_components.p, null, \"ServerCapabilities\"), \"\\n\", React.createElement(_components.p, null, \"に\"), \"\\n\", React.createElement(_components.p, null, \"definitionProvider\"), \"\\n\", React.createElement(_components.p, null, \"が入ってないな・・・\"), \"\\n\", React.createElement(_components.p, null, \"Requestにそもそも入っていないのでは\"), \"\\n\", React.createElement(_components.p, null, \"入れてみた。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"vim\\\"><pre class=\\\"language-vim\\\"><code class=\\\"language-vim\\\">        <span class=\\\"token builtin\\\">autocmd</span> User lsp_setup <span class=\\\"token keyword\\\">call</span> <span class=\\\"token builtin\\\">lsp</span>#<span class=\\\"token function\\\">register_server</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>\\n                    \\\\ <span class=\\\"token string\\\">'name'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'d'</span><span class=\\\"token punctuation\\\">,</span>\\n                    \\\\ <span class=\\\"token string\\\">'cmd'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>server_info<span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'root_dls'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n                    <span class=\\\"token comment\\\">\\\"\\\\ </span><span class=\\\"token string\\\">'cmd'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>server_info<span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'dub'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'run'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'-q'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'serve-d'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n                    \\\\ <span class=\\\"token string\\\">'root_uri'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>server_info<span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span><span class=\\\"token builtin\\\">lsp</span>#utils#<span class=\\\"token function\\\">path_to_uri</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">lsp</span>#utils#<span class=\\\"token function\\\">find_nearest_parent_file_directory</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token builtin\\\">lsp</span>#utils#<span class=\\\"token function\\\">get_buffer_path</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">'dub.json'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n                    \\\\ <span class=\\\"token string\\\">'whitelist'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'d'</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n                    \\\\ <span class=\\\"token string\\\">'capabilities'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n                    \\\\   <span class=\\\"token string\\\">'workspace'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n                    \\\\       <span class=\\\"token string\\\">'applyEdit'</span><span class=\\\"token punctuation\\\">:</span> v<span class=\\\"token punctuation\\\">:</span>true\\n                    \\\\   <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n                    \\\\   <span class=\\\"token string\\\">'textDocument'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token comment\\\">\\\" これ</span>\\n                    \\\\       <span class=\\\"token string\\\">'definition'</span><span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n                    \\\\         <span class=\\\"token string\\\">'dynamicRegistration'</span><span class=\\\"token punctuation\\\">:</span> v<span class=\\\"token punctuation\\\">:</span>true\\n                    \\\\     <span class=\\\"token punctuation\\\">}</span>\\n                    \\\\   <span class=\\\"token punctuation\\\">}</span>\\n                    \\\\ <span class=\\\"token punctuation\\\">}</span>\\n                    \\\\ <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"実際に通信するようになた。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"json\\\"><pre class=\\\"language-json\\\"><code class=\\\"language-json\\\"><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"--->\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"d\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token property\\\">\\\"method\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"textDocument/definition\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token property\\\">\\\"on_notification\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"---funcref---\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token property\\\">\\\"params\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token property\\\">\\\"textDocument\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token property\\\">\\\"uri\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"file:///home/ousttrue/work/d_hello/source/app.d\\\"</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token property\\\">\\\"position\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token property\\\">\\\"character\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token property\\\">\\\"line\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">14</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">]</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"json\\\"><pre class=\\\"language-json\\\"><code class=\\\"language-json\\\"><span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">\\\"&lt;---\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"d\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token property\\\">\\\"response\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token property\\\">\\\"id\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">7</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token property\\\">\\\"jsonrpc\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"2.0\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token property\\\">\\\"result\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token property\\\">\\\"request\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token property\\\">\\\"id\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">7</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token property\\\">\\\"jsonrpc\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"2.0\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token property\\\">\\\"method\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"textDocument/definition\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token property\\\">\\\"params\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token property\\\">\\\"textDocument\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token property\\\">\\\"uri\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"file:///home/ousttrue/work/d_hello/source/app.d\\\"</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token property\\\">\\\"position\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span><span class=\\\"token property\\\">\\\"character\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token property\\\">\\\"line\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token number\\\">14</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">]</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"エラーが \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Definition not found</code>\"\n    }\n  }), \" に変わって\\n確かに、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">result</code>\"\n    }\n  }), \" の中身が空っぽなので \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">not found</code>\"\n    }\n  }), \" とサーバーが応答している。\"), \"\\n\", React.createElement(_components.p, null, \"問題が \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">vim-lsp</code>\"\n    }\n  }), \" から \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">dls</code>\"\n    }\n  }), \" に移った。\"), \"\\n\", React.createElement(_components.h3, null, \"ale\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/w0rp/ale\"\n  }, \"https://github.com/w0rp/ale\")), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"LanguageClient\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/autozimu/LanguageClient-neovim\"\n  }, \"https://github.com/autozimu/LanguageClient-neovim\")), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"一部が \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">rust</code>\"\n    }\n  }), \" で実装されているぽい。\"), \"\\n\", React.createElement(_components.h3, null, \"vim-lsp\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://www.kieranbamforth.me/blog/vim-lsp.html\"\n  }, \"https://www.kieranbamforth.me/blog/vim-lsp.html\")), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"built-in\"), \"\\n\", React.createElement(_components.p, null, \"まだ、実装中？\"), \"\\n\", React.createElement(_components.h2, null, \"Language Server Protocol\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://microsoft.github.io/language-server-protocol/specification\"\n  }, \"https://microsoft.github.io/language-server-protocol/specification\")), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">version 3.x</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/Microsoft/language-server-protocol/blob/master/versions/protocol-2-x.md\"\n  }, \"https://github.com/Microsoft/language-server-protocol/blob/master/versions/protocol-2-x.md\")), \"\\n\", React.createElement(_components.h3, null, \"通信シーケンス\"), \"\\n\", React.createElement(_components.h4, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">&lt;-- request1 initialize</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.h4, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">--> response1</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.h4, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">&lt;-- notify initialized</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.h4, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">&lt;-- notify textDocument/didOpen</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"vim\\\"><pre class=\\\"language-vim\\\"><code class=\\\"language-vim\\\"><span class=\\\"token builtin\\\">autocmd</span> FileType <span class=\\\"token operator\\\">*</span> <span class=\\\"token keyword\\\">call</span> wf#<span class=\\\"token builtin\\\">lsp</span>#<span class=\\\"token function\\\">setFileType</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h4, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">&lt;-- notify textDocument/didChange</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.h4, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">--> notify textDocument/publishDiagnostics</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.h4, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">&lt;-- request2 textDocument/documentHighlight</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.h4, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">--> response2</code>\"\n    }\n  })), \"\\n\", React.createElement(_components.h2, null, \"log viewer\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/Microsoft/language-server-protocol-inspector\"\n  }, \"https://github.com/Microsoft/language-server-protocol-inspector\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://microsoft.github.io/language-server-protocol/inspector/\"\n  }, \"https://microsoft.github.io/language-server-protocol/inspector/\")), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://qiita.com/Rockdoor/items/f5dca558bbc843d8f334\"\n  }, \"VSCode 用 SystemVerilogの拡張を作る（#7）\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"VSCodeでlsp を実行させて通信ログを出力\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"通信ログを見やすく表示\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"しかし、どうやってログを作るかよくわからん。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">vim-lsp</code>\"\n    }\n  }), \" のログを改造して作ってみる。\"), \"\\n\", React.createElement(_components.h2, null, \"各言語のサーバー\"), \"\\n\", React.createElement(_components.p, null, \"試してみたやつ。\"), \"\\n\", React.createElement(_components.h3, null, \"python\"), \"\\n\", React.createElement(_components.h4, null, \"pyls\"), \"\\n\", React.createElement(_components.p, null, \"Linux, Windows 共に動いた。\"), \"\\n\", React.createElement(_components.h3, null, \"dlang\"), \"\\n\", React.createElement(_components.h4, null, \"serve-d\"), \"\\n\", React.createElement(_components.p, null, \"うまくいかなかったので、調べている・・・\"), \"\\n\", React.createElement(_components.h4, null, \"dls\"), \"\\n\", React.createElement(_components.p, null, \"うまくいかなかったので、調べている・・・\"), \"\\n\", React.createElement(_components.h3, null, \"c++\"), \"\\n\", React.createElement(_components.p, null, \"Linuxで動いた。\"), \"\\n\", React.createElement(_components.h4, null, \"cquery\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2019/vim_lsp.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  const frontmatter = data.mdx.frontmatter;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"div\", {\n    className: \"tags-index\"\n  }, frontmatter.tags && frontmatter.tags.length > 0 && frontmatter.tags.map(tag => {\n    return React.createElement(Link, {\n      to: `/tags/${tag}/`,\n      itemProp: \"url\"\n    }, React.createElement(\"button\", null, tag));\n  })), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        tags\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","h3","ul","li","a","h4","span","_provideComponents","components","React","href","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","frontmatter","mdx","Layout","title","tags","length","map","tag","Link","to","itemProp","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}