{"version":3,"file":"component---src-templates-post-template-js-content-file-path-content-posts-2023-0318-imguizmo-md-2dba2916b75e76c9ce2b.js","mappings":"+JAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,KAAM,OACNC,GAAI,OACHC,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,+CAAgD,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,wBAAyBK,EAAAA,cAAoBR,EAAYI,KAAM,KAAM,YAAa,SAAU,KAAMI,EAAAA,cAAoBR,EAAYK,GAAI,KAAM,iCAAkC,KAAMG,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,2DAA4D,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,OAAQK,EAAAA,cAAoBR,EAAYI,KAAM,KAAM,QAAS,cAAeI,EAAAA,cAAoBR,EAAYI,KAAM,KAAM,SAAU,oCAAqCI,EAAAA,cAAoBR,EAAYI,KAAM,KAAM,cAAe,KAAM,KAAMI,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,wCAAyC,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAMK,EAAAA,cAAoBR,EAAYI,KAAM,KAAM,iBAAkB,sCAAuC,KAAMI,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,iBAAkBK,EAAAA,cAAoBR,EAAYI,KAAM,KAAM,+CAAgD,KAAMI,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,SAAU,KAAMK,EAAAA,cAAoBR,EAAYG,EAAG,KAAMK,EAAAA,cAAoBR,EAAYI,KAAM,KAAM,sEAAuE,wFAC/0C,CAKA,MAJA,SAAoBL,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOU,QAASC,GAAaT,OAAOC,OAAO,CAAC,GAAGI,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWX,EAAOS,EAAAA,cAAoBV,EAAmBC,IAAUD,EAAkBC,EAC9H,E,8BCPA,MAAMQ,EAAa,CACjBH,KAAMO,IAA2B,IAA1B,SAACC,EAAQ,UAAEC,GAAUF,EAC1B,OAAOE,EAAYL,EAAAA,cAAoBM,EAAAA,EAAsB,CAC3DD,UAAWA,GACVD,GAAYJ,EAAAA,cAAoB,OAAQ,KAAMI,EAAS,GAG9D,SAASG,EAAYC,GAAmB,IAAlB,KAACC,EAAI,SAAEL,GAASI,EACpC,MAAME,EAAcD,EAAKE,IAAID,YAC7B,OAAOV,EAAAA,cAAoBY,EAAAA,EAAQ,KAAMZ,EAAAA,cAAoB,KAAM,KAAMU,EAAYG,OAAQb,EAAAA,cAAoB,MAAO,CACtHK,UAAW,cACVK,EAAYI,MAAQJ,EAAYI,KAAKC,OAAS,GAAKL,EAAYI,KAAKE,KAAIC,GAClEjB,EAAAA,cAAoBkB,EAAAA,GAAM,CAC/BC,GAAI,SAASF,EAAG,IAChBG,SAAU,OACTpB,EAAAA,cAAoB,SAAU,KAAMiB,OACpCjB,EAAAA,cAAoBqB,EAAAA,GAAa,CACpCtB,WAAYA,GACXK,GACL,CACe,SAASkB,EAAiB/B,GACvC,OAAOS,EAAAA,cAAoBO,EAAchB,EAAOS,EAAAA,cAAoBuB,EAAqBhC,GAC3F,C","sources":["webpack:///./content/posts/2023/0318-imguizmo.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    code: \"code\",\n    h1: \"h1\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"https://github.com/CedricGuillemet/ImGuizmo\"), \"\\n\", React.createElement(_components.p, null, \"Gizmo ライブラリ選定。\\n今回は、 \", React.createElement(_components.code, null, \"ImGuizmo\"), \" を選択。\"), \"\\n\", React.createElement(_components.h1, null, \"ImApp => glfw + imgui backend\"), \"\\n\", React.createElement(_components.p, null, \"example は ImGui の backend を使わずに独自のバックエンド ImApp を使用している。\"), \"\\n\", React.createElement(_components.p, null, \"これを \", React.createElement(_components.code, null, \"glfw\"), \" に置き換ええつつ、 \", React.createElement(_components.code, null, \"imgui\"), \" を git の docking branch で置き換えてみた \", React.createElement(_components.code, null, \"1.89.5 WIP\"), \"。\"), \"\\n\", React.createElement(_components.p, null, \"Windows モードは問題ないが、フルスクリーンモードの描画がずれた。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"VIEWPORT_MODE\"), \" の ImDrawList の座標系に仕様変更があることが原因ぽい。\"), \"\\n\", React.createElement(_components.p, null, \"Window の描画範囲が \", React.createElement(_components.code, null, \"(0, 0, io.DisplaySize.x, io.DisplaySize.y)\")), \"\\n\", React.createElement(_components.p, null, \"だったのが\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"(viewport.Pos.x, viewport.Pos.y, viewport.Size.x, viewport.Size.y)\"), \"\\nに変わった。座標系は WindowLocal から Desktop 全体になった。\\n・・・マルチモニターだとどうなるんだろうと思ったが、使うときになおせばよいか。\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2023/0318-imguizmo.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  const frontmatter = data.mdx.frontmatter;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"div\", {\n    className: \"tags-index\"\n  }, frontmatter.tags && frontmatter.tags.length > 0 && frontmatter.tags.map(tag => {\n    return React.createElement(Link, {\n      to: `/tags/${tag}/`,\n      itemProp: \"url\"\n    }, React.createElement(\"button\", null, tag));\n  })), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        tags\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","code","h1","_provideComponents","components","React","wrapper","MDXLayout","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","frontmatter","mdx","Layout","title","tags","length","map","tag","Link","to","itemProp","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}