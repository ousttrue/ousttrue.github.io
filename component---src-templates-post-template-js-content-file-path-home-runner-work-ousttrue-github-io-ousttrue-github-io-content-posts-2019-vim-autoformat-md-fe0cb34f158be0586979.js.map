{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2019-vim-autoformat-md-fe0cb34f158be0586979.js","mappings":"+JAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,KAAM,OACNC,EAAG,IACHC,GAAI,OACHC,EAAAA,EAAAA,MAAsBR,EAAMS,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,MAAOM,EAAAA,cAAoBT,EAAYI,KAAM,CACrIM,wBAAyB,CACvBC,OAAQ,+CAER,QAASF,EAAAA,cAAoBT,EAAYI,KAAM,CACjDM,wBAAyB,CACvBC,OAAQ,6DAER,qBAAsBF,EAAAA,cAAoBT,EAAYI,KAAM,CAC9DM,wBAAyB,CACvBC,OAAQ,8DAER,aAAc,KAAMF,EAAAA,cAAoBT,EAAYG,EAAG,KAAMM,EAAAA,cAAoBT,EAAYK,EAAG,CAClGO,KAAM,6CACL,8CAA+C,KAAMH,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,8CAA+C,KAAMM,EAAAA,cAAoBT,EAAYG,EAAG,KAAMM,EAAAA,cAAoBT,EAAYI,KAAM,CACnOM,wBAAyB,CACvBC,OAAQ,6CAER,KAAMF,EAAAA,cAAoBT,EAAYI,KAAM,CAC9CM,wBAAyB,CACvBC,OAAQ,qDAER,aAAc,KAAMF,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,OAAQ,KAAMM,EAAAA,cAAoBT,EAAYM,GAAI,KAAM,yBAA0B,KAAMG,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,gCAAiC,KAAMM,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,yCAA0C,KAAMM,EAAAA,cAAoBT,EAAYI,KAAM,CACtWM,wBAAyB,CACvBC,OAAQ,sVAER,KAAMF,EAAAA,cAAoBT,EAAYM,GAAI,KAAM,eAAgB,KAAMG,EAAAA,cAAoBT,EAAYI,KAAM,CAC9GM,wBAAyB,CACvBC,OAAQ,+kBAGd,CAKA,MAJA,SAAoBZ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOc,QAASC,GAAab,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,MAAsBR,EAAMS,YAC3E,OAAOM,EAAYL,EAAAA,cAAoBK,EAAWf,EAAOU,EAAAA,cAAoBX,EAAmBC,IAAUD,EAAkBC,EAC9H,E,8BCtCA,MAAMS,EAAa,CACjBO,KAAMC,IAA2B,IAA1B,SAACC,EAAQ,UAAEC,GAAUF,EAC1B,OAAOE,EAAYT,EAAAA,cAAoBU,EAAAA,EAAsB,CAC3DD,UAAWA,GACVD,GAAYR,EAAAA,cAAoB,OAAQ,KAAMQ,EAAS,GAG9D,SAASG,EAAYC,GAAmB,IAAlB,KAACC,EAAI,SAAEL,GAASI,EACpC,MAAME,EAAcD,EAAKE,IAAID,YAC7B,OAAOd,EAAAA,cAAoBgB,EAAAA,EAAQ,KAAMhB,EAAAA,cAAoB,KAAM,KAAMc,EAAYG,OAAQjB,EAAAA,cAAoB,MAAO,CACtHS,UAAW,cACVK,EAAYI,MAAQJ,EAAYI,KAAKC,OAAS,GAAKL,EAAYI,KAAKE,KAAIC,GAClErB,EAAAA,cAAoBsB,EAAAA,GAAM,CAC/BC,GAAI,SAASF,EAAG,IAChBG,SAAU,OACTxB,EAAAA,cAAoB,SAAU,KAAMqB,OACpCrB,EAAAA,cAAoByB,EAAAA,GAAa,CACpC1B,WAAYA,GACXS,GACL,CACe,SAASkB,EAAiBpC,GACvC,OAAOU,EAAAA,cAAoBW,EAAcrB,EAAOU,EAAAA,cAAoB2B,EAAqBrC,GAC3F,C","sources":["webpack:///./content/posts/2019/vim-autoformat.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    span: \"span\",\n    a: \"a\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"ÂΩìÂàù \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">python</code>\"\n    }\n  }), \" Âêë„Åë„Å´ \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">mindriot101/vim-yapf</code>\"\n    }\n  }), \" „Çí‰Ωø„Å£„Å¶„ÅÑ„Åü„Åå„ÄÅ\\nÂÖ®ÈÉ®„Åæ„Å®„ÇÅ„Å¶ \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">hiel92/vim-autoformat</code>\"\n    }\n  }), \" „ÅßË®≠ÂÆö„Åó„Å¶„Åø„Çã„ÄÇ\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/Chiel92/vim-autoformat\"\n  }, \"https://github.com/Chiel92/vim-autoformat\")), \"\\n\", React.createElement(_components.p, null, \"„Éó„É©„Ç∞„Ç§„É≥„ÇíË®≠ÂÆö„Åó„Åü„ÇâÁâπ„Å´ÂÄãÂà•„Å´Ë®≠ÂÆö„Åô„Çã„Åì„Å®„Å™„Åè„ÄÅ\\n„Ç∑„Çπ„ÉÜ„É†„Å´„Ç§„É≥„Çπ„Éà„Éº„É´Ê∏à„Åø„ÅÆ„ÄÅ\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">yapf</code>\"\n    }\n  }), \", \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">clang-format</code>\"\n    }\n  }), \" „ÅåÊúâÂäπ„Å´„Å™„Å£„ÅüÔºü\"), \"\\n\", React.createElement(_components.p, null, \"‰æøÂà©„ÄÇ\"), \"\\n\", React.createElement(_components.h2, null, \"Toml„ÅÆ„Éï„Ç©„Éº„Éû„ÉÉ„Éà„Åå„Çà„Çç„Åó„Åè„Å™„Åã„Å£„Åü„Çä\"), \"\\n\", React.createElement(_components.p, null, \"dein.toml„ÅÆindent„ÅåÊÇ™„Åè„Å™„Å£„Å¶„Åó„Åæ„Å£„Åüüòë\"), \"\\n\", React.createElement(_components.p, null, \"Ëá™ÂãïÂÆüË°å„ÅØ„ÄÅÊôÇÊúüÂ∞öÊó©„ÄÇ\\nÂ§ß‰∏àÂ§´„Åù„ÅÜ„Å™„ÇÑ„Å§„Åã„ÇâÊã°ÂºµÂ≠êÊåáÂÆö„Åó„ÅüÊñπ„Åå„Çà„Åï„Åù„ÅÜ„ÄÇ\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"vim\\\"><pre class=\\\"language-vim\\\"><code class=\\\"language-vim\\\"><span class=\\\"token builtin\\\">autocmd</span> BufWrite <span class=\\\"token operator\\\">*</span><span class=\\\"token operator\\\">.</span><span class=\\\"token keyword\\\">py</span> <span class=\\\"token punctuation\\\">:</span>Autoformat</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"d„ÅÆ„Éï„Ç©„Éº„Éû„ÉÉ„Çø„Éº„Å®„Åã\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"vim\\\"><pre class=\\\"language-vim\\\"><code class=\\\"language-vim\\\"><span class=\\\"token keyword\\\">let</span> g<span class=\\\"token punctuation\\\">:</span>formatdef_my_custom_d <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'\\\"dub run -q dfmt -- -i\\\"'</span>\\n<span class=\\\"token keyword\\\">let</span> g<span class=\\\"token punctuation\\\">:</span>formatters_d <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token string\\\">'my_custom_d'</span><span class=\\\"token punctuation\\\">]</span></code></pre></div>\"\n    }\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2019/vim-autoformat.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  const frontmatter = data.mdx.frontmatter;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"div\", {\n    className: \"tags-index\"\n  }, frontmatter.tags && frontmatter.tags.length > 0 && frontmatter.tags.map(tag => {\n    return React.createElement(Link, {\n      to: `/tags/${tag}/`,\n      itemProp: \"url\"\n    }, React.createElement(\"button\", null, tag));\n  })), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        tags\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","span","a","h2","_provideComponents","components","React","dangerouslySetInnerHTML","__html","href","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","frontmatter","mdx","Layout","title","tags","length","map","tag","Link","to","itemProp","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}