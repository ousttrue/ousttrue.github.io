{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2015-12-19-node-ffi-md-bcd07c2fbdbd4a50c351.js","mappings":"+JAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,KAAM,SACLC,EAAAA,EAAAA,MAAsBN,EAAMO,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,gIAAiI,KAAMI,EAAAA,cAAoBP,EAAYI,KAAM,CACrQI,wBAAyB,CACvBC,OAAQ,wpHAGd,CAKA,MAJA,SAAoBV,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOW,QAASC,GAAaV,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOK,EAAYJ,EAAAA,cAAoBI,EAAWZ,EAAOQ,EAAAA,cAAoBT,EAAmBC,IAAUD,EAAkBC,EAC9H,E,8BCVA,MAAMO,EAAa,CACjBM,KAAMC,IAA2B,IAA1B,SAACC,EAAQ,UAAEC,GAAUF,EAC1B,OAAOE,EAAYR,EAAAA,cAAoBS,EAAAA,EAAsB,CAC3DD,UAAWA,GACVD,GAAYP,EAAAA,cAAoB,OAAQ,KAAMO,EAAS,GAG9D,SAASG,EAAYC,GAAmB,IAAlB,KAACC,EAAI,SAAEL,GAASI,EACpC,MAAME,EAAcD,EAAKE,IAAID,YAC7B,OAAOb,EAAAA,cAAoBe,EAAAA,EAAQ,KAAMf,EAAAA,cAAoB,KAAM,KAAMa,EAAYG,OAAQhB,EAAAA,cAAoB,MAAO,CACtHQ,UAAW,cACVK,EAAYI,MAAQJ,EAAYI,KAAKC,OAAS,GAAKL,EAAYI,KAAKE,KAAIC,GAClEpB,EAAAA,cAAoBqB,EAAAA,GAAM,CAC/BC,GAAI,SAASF,EAAG,IAChBG,SAAU,OACTvB,EAAAA,cAAoB,SAAU,KAAMoB,OACpCpB,EAAAA,cAAoBwB,EAAAA,GAAa,CACpCzB,WAAYA,GACXQ,GACL,CACe,SAASkB,EAAiBjC,GACvC,OAAOQ,EAAAA,cAAoBU,EAAclB,EAAOQ,EAAAA,cAAoB0B,EAAqBlC,GAC3F,C","sources":["webpack:///./content/posts/2015/12/19/node_ffi.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    span: \"span\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Windows 上で node-ffi で dll から関数を呼びだしていたのだが、\\ndll にコールバックを登録した呼び出しを繰り返していると死ぬという現象に遭遇。\\n調べ始めた。\\nnode-v5.3.0-x64.msi(Windows10)\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">node-ffiはstdcallに対応してない\\n2014/01/25\\n\\nhttp://stackoverflow.com/questions/21357502/calling-delphi-stdcall-function-with-panischar-from-node-js\\n\\nnode-ffiはstdcall対応してないで。\\nそうなのかー。\\ngithub見るとIssueがあるけど解決されなかったぽい。\\n2012/01/13\\n* https://github.com/node-ffi/node-ffi/issues/34\\n残念。\\nついで。node-ffiはffiにパッケージ名を改めたらしい。\\n\\nhttps://github.com/node-ffi/node-ffi/wiki/API-changes-from-v0.x-to-v1.x\\n\\nnode-ffiを改造できないか模索する\\nnode-ffiはlibffiのラッパーとわかる。\\nFFI_DEFAULT_ABI\\nというのがcdeclになる様子でnode-ffiはそれしか対応していないのが問題。\\nで、調べていくと\\nnode_modules/ffi/deps/libffi/src/x86/ffitarget.h\\ntypedef enum ffi_abi {\\n  FFI_FIRST_ABI = 0,\\n\\n  /* ---- Intel x86 Win32 ---------- */\\n#ifdef X86_WIN32\\n  FFI_SYSV,\\n  FFI_STDCALL,\\n  FFI_THISCALL,\\n  FFI_FASTCALL,\\n  FFI_MS_CDECL,\\n  FFI_LAST_ABI,\\n#ifdef _MSC_VER\\n  FFI_DEFAULT_ABI = FFI_MS_CDECL\\n#else\\n  FFI_DEFAULT_ABI = FFI_SYSV\\n#endif\\n\\n#elif defined(X86_WIN64)\\n  FFI_WIN64,\\n  FFI_LAST_ABI,\\n  FFI_DEFAULT_ABI = FFI_WIN64\\n\\n#else\\n  /* ---- Intel x86 and AMD x86-64 - */\\n  FFI_SYSV,\\n  FFI_UNIX64,   /* Unix variants all use the same ABI for x86-64  */\\n  FFI_LAST_ABI,\\n#if defined(__i386__) || defined(__i386)\\n  FFI_DEFAULT_ABI = FFI_SYSV\\n#else\\n  FFI_DEFAULT_ABI = FFI_UNIX64\\n#endif\\n#endif\\n} ffi_abi;\\n\\nSTDCALL発見・・・。しかし、この書き方だと64bitビルドで消滅するのではないか？\\nFFI_WIN64って何？\\nX86_WIN64って何だろう。何故、STD_CALLが無いのか。もしかして、IA64のことなのか。\\nどうやら、そのよう定義済みプリプロセッサー・シンボルの使用。\\nうちはamd64なのでnot IA64。\\nnode-ffiのどこでX86_WIN64が定義されているのか\\nnode_modules/ffi/deps/libffi/config/win/x64\\n/* Specify which architecture libffi is configured for. */\\n#ifndef X86_WIN64\\n#define X86_WIN64\\n#endif\\n\\nとりあえず書き換えて、\\n#ifndef X86_WIN32\\n#define X86_WI32\\n#endif\\n\\n> cd node_modules/ffi\\n> npm install\\n> node-gyp rebuild\\n\\nlibffi.lib(ffi.obj) : error LNK2001: 外部シンボル \\\"ffi_closure_raw_THISCALL\\\" は未解決です。 [D:\\\\dev\\\\_web\\\\neuron.\\njs\\\\node_modules\\\\ffi\\\\build\\\\ffi_bindings.vcxproj]\\nlibffi.lib(ffi.obj) : error LNK2001: 外部シンボル \\\"ffi_closure_SYSV\\\" は未解決です。 [D:\\\\dev\\\\_web\\\\neuron.js\\\\node_\\nmodules\\\\ffi\\\\build\\\\ffi_bindings.vcxproj]\\nlibffi.lib(ffi.obj) : error LNK2001: 外部シンボル \\\"ffi_closure_STDCALL\\\" は未解決です。 [D:\\\\dev\\\\_web\\\\neuron.js\\\\no\\nde_modules\\\\ffi\\\\build\\\\ffi_bindings.vcxproj]\\nlibffi.lib(ffi.obj) : error LNK2001: 外部シンボル \\\"ffi_closure_THISCALL\\\" は未解決です。 [D:\\\\dev\\\\_web\\\\neuron.js\\\\n\\node_modules\\\\ffi\\\\build\\\\ffi_bindings.vcxproj]\\nlibffi.lib(ffi.obj) : error LNK2001: 外部シンボル \\\"ffi_closure_raw_SYSV\\\" は未解決です。 [D:\\\\dev\\\\_web\\\\neuron.js\\\\n\\node_modules\\\\ffi\\\\build\\\\ffi_bindings.vcxproj]\\nlibffi.lib(ffi.obj) : error LNK2001: 外部シンボル \\\"ffi_call_win32\\\" は未解決です。 [D:\\\\dev\\\\_web\\\\neuron.js\\\\node_mo\\ndules\\\\ffi\\\\build\\\\ffi_bindings.vcxproj]\\n\\n頓挫・・・。\\n上記関数の実体がwin32.asmの中にあるが64bitでコンパイルすると失敗する・・・。\\nlibffiを64bitビルドしてstdcallするところから出直さねばならない。\\n32bit版のnode.jsに妥協\\nFFI_STDCALLで関数登録\\n// stdcallのabi番号。Windowsの32bit版Node.js専用\\nconst FFI_STDCALL=2;\\n// callbackをFFI_STDCALLに設定\\nconst CallbackType = FFI.Function(ref.types.void\\n    , [ref.refType(ref.types.void)], FFI_STDCALL);\\n\\n// 関数定義をFFI_STDCALLに設定\\nconst DllLib = FFI.Library(\\\"hoge.dll\\\", {\\n    RegisterCallback: [ref.types.void, [ref.refType(ref.types.void), CallbackType, {abi: FFI_STDCALL}],\\n}\\n\\n上記の記述でWindowsの32bit版Node.jsではFFI登録にSTDCALLを設定できたっぽい。\\nでも、プログラムが死ぬ。\\nどうやらJavascript層より下で死んでいるようでエラーを吐かずに突然死する。ううむ。\\nこりゃ、Cのデバッガをアタッチせねばなるまい。\\n0x016E0008 で例外がスローされました (node.exe 内): 0xC0000005: 場所 0x00000588 の読み取り中にアクセス違反が発生しました\\n\\nこの例外のハンドラーがある場合は、プログラムを安全に続行できます。\\n\\nuncaughtException\\nこんなの発見した。\\n東京Node学園#8 Let It Crash!?\\nさっそくやってみる\\nprocess.on('uncaughtException', function (err) {\\n  console.log('Caught exception: ' + err);\\n});\\n\\nひっかからないな・・・\\n自前ビルドしてどう死んでいるか確かめるか。</code></pre></div>\"\n    }\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2015/12/19/node_ffi.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  const frontmatter = data.mdx.frontmatter;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"div\", {\n    className: \"tags-index\"\n  }, frontmatter.tags && frontmatter.tags.length > 0 && frontmatter.tags.map(tag => {\n    return React.createElement(Link, {\n      to: `/tags/${tag}/`,\n      itemProp: \"url\"\n    }, React.createElement(\"button\", null, tag));\n  })), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        tags\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","span","_provideComponents","components","React","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","frontmatter","mdx","Layout","title","tags","length","map","tag","Link","to","itemProp","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}