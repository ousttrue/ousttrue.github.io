"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6893],{9377:function(e,n,l){l.r(n),l.d(n,{default:function(){return m}});var t=l(1151),a=l(7294);function r(e){const n=Object.assign({h1:"h1",p:"p",pre:"pre",code:"code",h2:"h2",ul:"ul",li:"li"},(0,t.ah)(),e.components);return a.createElement(a.Fragment,null,a.createElement(n.h1,null,"GentooでX11を設定する"),"\n",a.createElement(n.p,null,"デスクトップの構築メモ。"),"\n",a.createElement(n.p,null,"xorg-server"),"\n",a.createElement(n.p,null,"https://wiki.gentoo.org/wiki/Xorg/Guide"),"\n",a.createElement(n.pre,null,a.createElement(n.code,null,'/etc/portage/make.conf\nINPUT_DEVICE="libinput"\nVIDEO_CARDS="radeon"\n')),"\n",a.createElement(n.pre,null,a.createElement(n.code,null,"# emerge -av xorg-server\n")),"\n",a.createElement(n.h2,null,"xのアプリを入れる"),"\n",a.createElement(n.pre,null,a.createElement(n.code,{className:"language-shell"},"$ startx\n")),"\n",a.createElement(n.p,null,"とすると何もないのですぐに終わってしまう。\n古のアプリを入れてみる。"),"\n",a.createElement(n.pre,null,a.createElement(n.code,null,"# emerge -av twm xclock xterm \n")),"\n",a.createElement(n.p,null,"動作を確認できた。"),"\n",a.createElement(n.h2,null,"Plasma5"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"https://wiki.gentoo.org/wiki/KDE/Plasma_5_upgrade"),"\n",a.createElement(n.li,null,"https://wiki.gentoo.org/wiki/KDE#Plasma"),"\n"),"\n",a.createElement(n.h2,null,"eselect profile list"),"\n",a.createElement(n.pre,null,a.createElement(n.code,null,"Available profile symlink targets:\n  [1]   default/linux/amd64/13.0 *\n  [2]   default/linux/amd64/13.0/selinux\n  [3]   default/linux/amd64/13.0/desktop\n  [4]   default/linux/amd64/13.0/desktop/gnome\n  [5]   default/linux/amd64/13.0/desktop/gnome/systemd\n  [6]   default/linux/amd64/13.0/desktop/plasma\n  [7]   default/linux/amd64/13.0/desktop/plasma/systemd\n  [8]   default/linux/amd64/13.0/developer\n  [9]   default/linux/amd64/13.0/no-multilib\n  [10]  default/linux/amd64/13.0/systemd\n  [11]  default/linux/amd64/13.0/x32\n  [12]  hardened/linux/amd64\n  [13]  hardened/linux/amd64/selinux\n  [14]  hardened/linux/amd64/no-multilib\n  [15]  hardened/linux/amd64/no-multilib/selinux\n  [16]  hardened/linux/amd64/x32\n  [17]  hardened/linux/musl/amd64\n  [18]  hardened/linux/musl/amd64/x32\n  [19]  default/linux/uclibc/amd64\n  [20]  hardened/linux/uclibc/amd64\n")),"\n",a.createElement(n.p,null,a.createElement(n.code,null,"[6]   default/linux/amd64/13.0/desktop/plasma")," を採用する。"),"\n",a.createElement(n.pre,null,a.createElement(n.code,null,"# eselect profile set 6\n# emerge --ask --changed-use --newrepo --deep world\n# emerge --ask kde-plasma/plasma-meta\n")),"\n",a.createElement(n.h2,null,"Widgets"),"\n",a.createElement(n.pre,null,a.createElement(n.code,null,"# emerge --ask kde-plasma/kdeplasma-addons\n")),"\n",a.createElement(n.h2,null,"Apps"),"\n",a.createElement(n.pre,null,a.createElement(n.code,null,"# # 時間かかる\n# emerge -av kde-apps/kdecore-meta\n\n# emerge -av kde-apps/kdemultimedia-meta\n")),"\n",a.createElement(n.h2,null,"xdm設定"),"\n",a.createElement(n.p,null,"起動時に自動でXのログイン画面が起動するようにする"),"\n",a.createElement(n.pre,null,a.createElement(n.code,null,"# rc-update add xdm default\n# vim /etc/conf.d/xdm\nsddm\n\n# /etc/init.d/xdm restart\n")),"\n",a.createElement(n.h2,null,"Windows上にX-Server"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"https://sourceforge.net/projects/vcxsrv/"),"\n",a.createElement(n.li,null,"https://wiki.archlinuxjp.org/index.php/SDDM"),"\n"),"\n",a.createElement(n.p,null,"SDDMはXDMCPサポートは無い？"),"\n",a.createElement(n.ul,null,"\n",a.createElement(n.li,null,"https://wiki.gentoo.org/wiki/Display_manager"),"\n"),"\n",a.createElement(n.h2,null,"LightDMに乗り換え"),"\n",a.createElement(n.p,null,"VNC"),"\n",a.createElement(n.p,null,"https://wiki.gentoo.org/wiki/TigerVNC"),"\n",a.createElement(n.h2,null,"日本語フォント"),"\n",a.createElement(n.pre,null,a.createElement(n.code,null,"# emerge --ask noto\n# emerge --ask Ricty\n")),"\n",a.createElement(n.h2,null,"日本語入力"),"\n",a.createElement(n.pre,null,a.createElement(n.code,null,"# emerge -av fcitx-anthy\n# emerge -av kcm-fcitx\n")),"\n",a.createElement(n.p,null,".bash_profile"),"\n",a.createElement(n.pre,null,a.createElement(n.code,null,"export GTK_IM_MODULE=fcitx\nexport QT_IM_MODULE=fcitx\nexport XMODIFIERS=@im=fcitx\n")),"\n",a.createElement(n.h2,null,"alsa"),"\n",a.createElement(n.pre,null,a.createElement(n.code,null,"$ aplay -l\n**** List of PLAYBACK Hardware Devices ****\ncard 0: HDMI [HDA ATI HDMI], device 3: HDMI 0 [HDMI 0]\n  Subdevices: 1/1\n  Subdevice #0: subdevice #0\ncard 1: Generic [HD-Audio Generic], device 0: ALC887-VD Analog [ALC887-VD Analog]\n  Subdevices: 1/1\n  Subdevice #0: subdevice #0\ncard 1: Generic [HD-Audio Generic], device 1: ALC887-VD Digital [ALC887-VD Digital]\n  Subdevices: 1/1\n  Subdevice #0: subdevice #0\n")),"\n",a.createElement(n.p,null,"3番目のALC887-VD Digitalに出力するように設定"),"\n",a.createElement(n.p,null,"/etc/asound.conf"),"\n",a.createElement(n.pre,null,a.createElement(n.code,null,'defaluts.pcm.card 1\ndefaults.pcm.device 1\ndefaults.ctl.card 1\n\npcm.!default {\n    type plug\n    slave.pcm "hw:1,1"\n}\n')),"\n",a.createElement(n.pre,null,a.createElement(n.code,null,"# rc-update add alsasound boot\n")),"\n",a.createElement(n.h2,null,"browser"),"\n",a.createElement(n.p,null,"ビルド時間長いのでバイナリを入れとく"),"\n",a.createElement(n.pre,null,a.createElement(n.code,null,"# emerge -av google-chrome\n# emerge -av firefox-bin\n")))}var c=function(e){void 0===e&&(e={});const{wrapper:n}=Object.assign({},(0,t.ah)(),e.components);return n?a.createElement(n,e,a.createElement(r,e)):r(e)};l(8678);function u(e){let{data:n,children:l}=e;return a.createElement(a.Fragment,null,a.createElement("h1",null,n.mdx.frontmatter.title),a.createElement(t.Zo,null,l))}function m(e){return a.createElement(u,e,a.createElement(c,e))}},8678:function(e,n,l){l(7294)},1151:function(e,n,l){l.d(n,{Zo:function(){return u},ah:function(){return r}});var t=l(7294);const a=t.createContext({});function r(e){const n=t.useContext(a);return t.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const c={};function u({components:e,children:n,disableParentContext:l}){let u;return u=l?"function"==typeof e?e({}):e||c:r(e),t.createElement(a.Provider,{value:u},n)}}}]);
//# sourceMappingURL=component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2017-gentoo-xorg-md-57e9093ab84cec5e553e.js.map