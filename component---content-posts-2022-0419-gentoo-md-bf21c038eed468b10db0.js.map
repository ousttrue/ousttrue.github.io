{"version":3,"file":"component---content-posts-2022-0419-gentoo-md-bf21c038eed468b10db0.js","mappings":"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","sources":["webpack:///./content/posts/2022/0419-gentoo.md","webpack:///./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    code: \"code\",\n    h2: \"h2\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Gentoo 構築\"), \"\\n\", React.createElement(_components.p, null, \"久しぶりに gentoo の機運が高まったので入れてみた。\\n先に \", React.createElement(_components.code, null, \"Ubuntu-20.04\"), \" を入れておいて、後ろのパーティションに gentoo をインストールする作戦。\\nUbuntu と同じ \", React.createElement(_components.code, null, \"/home\"), \" をマウントしてみたら \", React.createElement(_components.code, null, \"dotfiles\"), \" に互換性が無かったのでやめた。\\nわりと順調にインストールできた。\\nゆくゆくは wsl も gentoo に換装したいところじゃ。\"), \"\\n\", React.createElement(_components.h2, null, \"2022-05-05\"), \"\\n\", React.createElement(_components.p, null, \"システムを壊してしもた。\\n作りなおし。ついでに \", React.createElement(_components.a, {\n    href: \"https://wiki.gentoo.org/wiki/Btrfs\"\n  }, \"btffs\"), \" やってみる。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://wiki.gentoo.org/wiki/Handbook:AMD64/Installation/Stage#Downloading_the_stage_tarball\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Stage3: \", React.createElement(_components.code, null, \"openrc | desktop profile\")), \"\\n\", React.createElement(_components.h2, null, \"btrfs\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"/etc/fstab\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"/dev/sdb                /srv            btrfs           compress=zstd:9,relatime,rw     0 0\\n\")), \"\\n\", React.createElement(_components.h2, null, \"python-3.10\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"PYTHON_SINGLE_TARGET\")), \"\\n\", React.createElement(_components.p, null, \"6月くらいにデフォルトになる予定みたいだ。先にやってみた。\"), \"\\n\", React.createElement(_components.p, null, \"間違い。去年の6月に、 \", React.createElement(_components.code, null, \"Python-3.9\"), \" がデフォルトになった。\\n\", React.createElement(_components.code, null, \"Python-3.10\"), \" は今のところ予定に無い。\\nいろいろインストールできなくなったので、元に戻した。\"), \"\\n\", React.createElement(_components.h2, null, \"make.conf\"), \"\\n\", React.createElement(_components.p, null, \"ここに貼っておこう。\\nこいつを育てているようなものだし。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"# These settings were set by the catalyst build script that automatically\\n# built this stage.\\n# Please consult /usr/share/portage/config/make.conf.example for a more\\n# detailed example.\\nCOMMON_FLAGS=\\\"-march=native -O2 -pipe\\\"\\nCFLAGS=\\\"${COMMON_FLAGS}\\\"\\nCXXFLAGS=\\\"${COMMON_FLAGS}\\\"\\nFCFLAGS=\\\"${COMMON_FLAGS}\\\"\\nFFLAGS=\\\"${COMMON_FLAGS}\\\"\\n\\n# NOTE: This stage was built with the bindist Use flag enabled\\nPORTDIR=\\\"/var/db/repos/gentoo\\\"\\nDISTDIR=\\\"/var/cache/distfiles\\\"\\nPKGDIR=\\\"/var/cache/binpkgs\\\"\\n\\nUSE=\\\"X sixel truetype vim-syntax jpeg png python fontforge cjk alsa \\\\\\n     pulseaudio mp3 dbus opengl ffmpeg mad mpd elogind gtk\\\"\\nINPUT_DEVICES=\\\"evdev libinput synaptics\\\"\\n#VIDEO_CARDS=\\\"nouveau\\\"\\nVIDEO_CARDS=\\\"nvidia\\\"\\nABI_X86=\\\"64\\\"\\n\\n# This sets the language of build output to English.\\n# Please keep this setting intact when reporting bugs.\\nLC_MESSAGES=\\\"C\\\"\\n\\nMAKEOPTS=\\\"-j6\\\"\\n\")), \"\\n\", React.createElement(_components.h2, null, \"passwd\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"/etc/security/passwdqc.conf\")), \"\\n\", React.createElement(_components.h2, null, \"boot\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"refind\"), \" を試してみた。\\n先に、Ubuntu の方でインストールして \", React.createElement(_components.code, null, \"gentoo\"), \" でエントリーだけ増やした。\\n\", React.createElement(_components.code, null, \"grub2\"), \" より設定が簡単だと思った。\\n情報は少なめ。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"/boot/efi/EFI/refind/refind.conf\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"# rootの指定が必要 \\nmenuentry Gentoo {\\n    icon EFI/refind/icons/os_gentoo.png\\n    loader /EFI/gentoo/vmlinuz-5.15.32-gentoo-r1-x86_64\\n    initrd /EFI/gentoo/initramfs-5.15.32-gentoo-r1-x86_64.img\\n    options \\\"root=/dev/sda4\\\"\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"起動時に自動検索と設定に記述したエントリが出てくるので、\", React.createElement(_components.code, null, \"-\"), \" キーで隠すと見ためがすっきりする。\"), \"\\n\", React.createElement(_components.h2, null, \"xorg\"), \"\\n\", React.createElement(_components.p, null, \"なんとなくできた。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"$ startx -- vt1\\n\")), \"\\n\", React.createElement(_components.p, null, \"としないとエラーになる。\\n\", React.createElement(_components.code, null, \"/etc/X11\"), \" は作らなくても動いた。\"), \"\\n\", React.createElement(_components.p, null, \"いつもどおりに \", React.createElement(_components.code, null, \"openbox\"), \", \", React.createElement(_components.code, null, \"tint2\"), \", \", React.createElement(_components.code, null, \"PCManFM\"), \", \", React.createElement(_components.code, null, \"conky\"), \" という感じだが、今回は新型の \", React.createElement(_components.code, null, \"wezterm\"), \" がある。\"), \"\\n\", React.createElement(_components.h2, null, \"yaft\"), \"\\n\", React.createElement(_components.p, null, \"nerdfonts 入りの bdffont を作りたいのだが未だ。\\nmlterm-fb や kmscon も試してみたのだがうまく動かなかった。\"), \"\\n\", React.createElement(_components.h2, null, \"wayland\"), \"\\n\", React.createElement(_components.p, null, \"TODO:\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","code","h2","a","ul","li","pre","_provideComponents","components","React","href","wrapper","MDXLayout","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}