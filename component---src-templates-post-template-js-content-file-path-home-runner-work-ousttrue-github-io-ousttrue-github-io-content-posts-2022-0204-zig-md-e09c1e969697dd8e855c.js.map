{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2022-0204-zig-md-e09c1e969697dd8e855c.js","mappings":"+JAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,EAAG,IACHC,KAAM,OACNC,GAAI,KACJC,WAAY,eACXC,EAAAA,EAAAA,MAAsBV,EAAMW,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBX,EAAYG,GAAI,KAAM,aAAc,KAAMQ,EAAAA,cAAoBX,EAAYI,EAAG,KAAM,WAAYO,EAAAA,cAAoBX,EAAYK,EAAG,CACrMO,KAAM,wBACL,OAAQ,YAAa,KAAMD,EAAAA,cAAoBX,EAAYI,EAAG,KAAM,uBAAwB,KAAMO,EAAAA,cAAoBX,EAAYI,EAAG,KAAM,mNAAoN,KAAMO,EAAAA,cAAoBX,EAAYI,EAAG,KAAMO,EAAAA,cAAoBX,EAAYM,KAAM,CACrbO,wBAAyB,CACvBC,OAAQ,2CAER,MAAOH,EAAAA,cAAoBX,EAAYM,KAAM,CAC/CO,wBAAyB,CACvBC,OAAQ,0CAER,qBAAsBH,EAAAA,cAAoBX,EAAYM,KAAM,CAC9DO,wBAAyB,CACvBC,OAAQ,4CAER,YAAaH,EAAAA,cAAoBX,EAAYM,KAAM,CACrDO,wBAAyB,CACvBC,OAAQ,6CAER,oBAAqBH,EAAAA,cAAoBX,EAAYM,KAAM,CAC7DO,wBAAyB,CACvBC,OAAQ,4CAER,YAAa,KAAMH,EAAAA,cAAoBX,EAAYI,EAAG,KAAM,8CAA+C,KAAMO,EAAAA,cAAoBX,EAAYO,GAAI,KAAM,OAAQ,KAAMI,EAAAA,cAAoBX,EAAYI,EAAG,KAAM,mCAAoC,KAAMO,EAAAA,cAAoBX,EAAYQ,WAAY,KAAM,KAAMG,EAAAA,cAAoBX,EAAYI,EAAG,KAAM,mIAAoI,MACve,CAKA,MAJA,SAAoBL,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOgB,QAASC,GAAaf,OAAOC,OAAO,CAAC,GAAGO,EAAAA,EAAAA,MAAsBV,EAAMW,YAC3E,OAAOM,EAAYL,EAAAA,cAAoBK,EAAWjB,EAAOY,EAAAA,cAAoBb,EAAmBC,IAAUD,EAAkBC,EAC9H,E,oBCjCA,MAAMW,EAAa,CACjBO,KAAMC,IAA2B,IAA1B,SAACC,EAAQ,UAAEC,GAAUF,EAC1B,OAAOE,EAAYT,EAAAA,cAAoBU,EAAAA,EAAsB,CAC3DD,UAAWA,GACVD,GAAYR,EAAAA,cAAoB,OAAQ,KAAMQ,EAAS,GAG9D,SAASG,EAAYC,GAAmB,IAAlB,KAACC,EAAI,SAAEL,GAASI,EACpC,OAAOZ,EAAAA,cAAoBc,EAAAA,EAAQ,KAAMd,EAAAA,cAAoB,KAAM,KAAMa,EAAKE,IAAIC,YAAYC,OAAQjB,EAAAA,cAAoBkB,EAAAA,GAAa,CACrInB,WAAYA,GACXS,GACL,CACe,SAASW,EAAiB/B,GACvC,OAAOY,EAAAA,cAAoBW,EAAcvB,EAAOY,EAAAA,cAAoBoB,EAAqBhC,GAC3F,C","sources":["webpack:///./content/posts/2022/0204-zig.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    a: \"a\",\n    span: \"span\",\n    h2: \"h2\",\n    blockquote: \"blockquote\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"zig やってみる\"), \"\\n\", React.createElement(_components.p, null, \"新しいめの言語 \", React.createElement(_components.a, {\n    href: \"https://ziglang.org/\"\n  }, \"zig\"), \" をやってみる。\"), \"\\n\", React.createElement(_components.p, null, \"少しさわってみたとろ以下のような感想。\"), \"\\n\", React.createElement(_components.p, null, \"|      | 言語仕様 | GC   |\\n|------|----------|------|\\n| zig  | 小       | no   |\\n| c    | 小       | no   |\\n| go   | 小       | 有り |\\n| rust | 大       | no   |\\n| d    | 大       | 有り |\\n| c++  | 特大     | no   |\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">go</code>\"\n    }\n  }), \" が \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">C</code>\"\n    }\n  }), \" の後継ポジションかと思っていたが \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">zig</code>\"\n    }\n  }), \" かもしれぬ。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">rust</code>\"\n    }\n  }), \" は身につかなかったので、今年は \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">zig</code>\"\n    }\n  }), \" やってみよう。\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/ousttrue/zig_note で実験中。\"), \"\\n\", React.createElement(_components.h2, null, \"zls\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/zigtools/zls\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Notable language features that are not currently implemented include @cImport as well as most forms of compile time evaluation.\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2022/0204-zig.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","a","span","h2","blockquote","_provideComponents","components","React","href","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","Layout","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}