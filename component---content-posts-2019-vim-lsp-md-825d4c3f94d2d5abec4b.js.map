{"version":3,"file":"component---content-posts-2019-vim-lsp-md-825d4c3f94d2d5abec4b.js","mappings":"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","sources":["webpack:///./content/posts/2019/vim_lsp.md","webpack:///./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    h3: \"h3\",\n    ul: \"ul\",\n    li: \"li\",\n    h4: \"h4\",\n    pre: \"pre\",\n    code: \"code\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"vim lsp client\"), \"\\n\", React.createElement(_components.p, null, \"vimのlspクライアント。\"), \"\\n\", React.createElement(_components.h3, null, \"vim-lsp\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/prabirshrestha/vim-lsp\"), \"\\n\"), \"\\n\", React.createElement(_components.h4, null, \"vim-lsp解読\"), \"\\n\", React.createElement(_components.p, null, \"plugin/lsp.vim\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-vim\"\n  }, \"if g:lsp_auto_enable\\n    augroup lsp_auto_enable\\n        autocmd!\\n        autocmd VimEnter * call lsp#enable()\\n    augroup END\\nendif\\n\")), \"\\n\", React.createElement(_components.p, null, \"autoload/lsp.vim\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-vim\"\n  }, \"function! lsp#enable() abort\\n    call s:register_events()\\nendfunction\\n\\nfunction! s:register_events() abort\\n    call s:on_text_document_did_open()\\nendfunction\\n\\nfunction! s:on_text_document_did_open() abort\\nendfunction\\n\\n\\\" lspサーバの初期化をするぽい\\n\\\" server_nameは 'pyls'など\\nfunction! s:ensure_flush(buf, server_name, cb) abort\\nendfunction\\n\\n\\\" lspサーバープロセスを起動して、stdin, stdout, stderrを接続する\\nfunction! s:lsp_start(opts) abort\\n\\n    let l:lsp_id = lsp#client#start({\\n        \\\\ 'cmd': l:cmd,\\n        \\\\ 'on_stderr': function('s:on_stderr', [a:server_name]),\\n        \\\\ 'on_exit': function('s:on_exit', [a:server_name]),\\n        \\\\ 'on_notification': function('s:on_notification', [a:server_name]),\\n        \\\\ 'on_request': function('s:on_request', [a:server_name]),\\n        \\\\ })\\n\\nendfunction\\n\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"autoload/lsp/client.vim\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-vim\"\n  }, \"function! s:lsp_start(opts) abort\\n    \\\" async.vim ライブラリに移る\\n    let l:client_id = async#job#start(a:opts.cmd, {\\n        \\\\ 'on_stdout': function('s:on_stdout'),\\n        \\\\ 'on_stderr': function('s:on_stderr'),\\n        \\\\ 'on_exit': function('s:on_exit'),\\n        \\\\ })\\nendfunction\\n\\n\\\" stdout を on_notification と on_request に切り出す\\nfunction! s:on_stdout(id, data, event) abort\\nendfunction\\n\")), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/prabirshrestha/async.vim\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"autoload/async/job.vim\"), \" ファイル一個だけだった。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"vim\"), \" と \", React.createElement(_components.code, null, \"nvim\"), \" の違いをラップしているぽい。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"vim\"), \" の \", React.createElement(_components.code, null, \"job_start\"), \" と \", React.createElement(_components.code, null, \"nvim\"), \" の \", React.createElement(_components.code, null, \"jobstart\"), \"。\\nなるほど。\"), \"\\n\", React.createElement(_components.h4, null, \"vim-lspの動きを追う(dls)\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://github.com/d-language-server/dls\"\n  }, \"dls\"), \" だと\"), \"\\n\", React.createElement(_components.p, null, \"ServerCapabilities\"), \"\\n\", React.createElement(_components.p, null, \"に\"), \"\\n\", React.createElement(_components.p, null, \"definitionProvider\"), \"\\n\", React.createElement(_components.p, null, \"が入ってないな・・・\"), \"\\n\", React.createElement(_components.p, null, \"Requestにそもそも入っていないのでは\"), \"\\n\", React.createElement(_components.p, null, \"入れてみた。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-vim\"\n  }, \"        autocmd User lsp_setup call lsp#register_server({\\n                    \\\\ 'name': 'd',\\n                    \\\\ 'cmd': {server_info->['root_dls']},\\n                    \\\"\\\\ 'cmd': {server_info->['dub', 'run', '-q', 'serve-d']},\\n                    \\\\ 'root_uri': {server_info->lsp#utils#path_to_uri(lsp#utils#find_nearest_parent_file_directory(lsp#utils#get_buffer_path(), 'dub.json'))},\\n                    \\\\ 'whitelist': ['d'],\\n                    \\\\ 'capabilities': {\\n                    \\\\   'workspace': {\\n                    \\\\       'applyEdit': v:true\\n                    \\\\   },\\n                    \\\\   'textDocument': { \\\" これ\\n                    \\\\       'definition': {\\n                    \\\\         'dynamicRegistration': v:true\\n                    \\\\     }\\n                    \\\\   }\\n                    \\\\ }\\n                    \\\\ })\\n\")), \"\\n\", React.createElement(_components.p, null, \"実際に通信するようになた。\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-json\"\n  }, \"[\\\"--->\\\", 3, \\\"d\\\", {\\\"method\\\": \\\"textDocument/definition\\\", \\\"on_notification\\\": \\\"---funcref---\\\", \\\"params\\\": {\\\"textDocument\\\": {\\\"uri\\\": \\\"file:///home/ousttrue/work/d_hello/source/app.d\\\"}, \\\"position\\\": {\\\"character\\\": 4, \\\"line\\\": 14}}}]\\n\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-json\"\n  }, \"[\\\"<---\\\", 3, \\\"d\\\", {\\\"response\\\": {\\\"id\\\": 7, \\\"jsonrpc\\\": \\\"2.0\\\", \\\"result\\\": []}, \\\"request\\\": {\\\"id\\\": 7, \\\"jsonrpc\\\": \\\"2.0\\\", \\\"method\\\": \\\"textDocument/definition\\\", \\\"params\\\": {\\\"textDocument\\\": {\\\"uri\\\": \\\"file:///home/ousttrue/work/d_hello/source/app.d\\\"}, \\\"position\\\": {\\\"character\\\": 4, \\\"line\\\": 14}}}}]\\n\")), \"\\n\", React.createElement(_components.p, null, \"エラーが \", React.createElement(_components.code, null, \"Definition not found\"), \" に変わって\\n確かに、 \", React.createElement(_components.code, null, \"result\"), \" の中身が空っぽなので \", React.createElement(_components.code, null, \"not found\"), \" とサーバーが応答している。\"), \"\\n\", React.createElement(_components.p, null, \"問題が \", React.createElement(_components.code, null, \"vim-lsp\"), \" から \", React.createElement(_components.code, null, \"dls\"), \" に移った。\"), \"\\n\", React.createElement(_components.h3, null, \"ale\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/w0rp/ale\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"LanguageClient\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/autozimu/LanguageClient-neovim\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"一部が \", React.createElement(_components.code, null, \"rust\"), \" で実装されているぽい。\"), \"\\n\", React.createElement(_components.h3, null, \"vim-lsp\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://www.kieranbamforth.me/blog/vim-lsp.html\"), \"\\n\"), \"\\n\", React.createElement(_components.h3, null, \"built-in\"), \"\\n\", React.createElement(_components.p, null, \"まだ、実装中？\"), \"\\n\", React.createElement(_components.h2, null, \"Language Server Protocol\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://microsoft.github.io/language-server-protocol/specification\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.code, null, \"version 3.x\")), \"\\n\", React.createElement(_components.p, null, \"https://github.com/Microsoft/language-server-protocol/blob/master/versions/protocol-2-x.md\"), \"\\n\", React.createElement(_components.h3, null, \"通信シーケンス\"), \"\\n\", React.createElement(_components.h4, null, React.createElement(_components.code, null, \"<-- request1 initialize\")), \"\\n\", React.createElement(_components.h4, null, React.createElement(_components.code, null, \"--> response1\")), \"\\n\", React.createElement(_components.h4, null, React.createElement(_components.code, null, \"<-- notify initialized\")), \"\\n\", React.createElement(_components.h4, null, React.createElement(_components.code, null, \"<-- notify textDocument/didOpen\")), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-vim\"\n  }, \"autocmd FileType * call wf#lsp#setFileType()\\n\")), \"\\n\", React.createElement(_components.h4, null, React.createElement(_components.code, null, \"<-- notify textDocument/didChange\")), \"\\n\", React.createElement(_components.h4, null, React.createElement(_components.code, null, \"--> notify textDocument/publishDiagnostics\")), \"\\n\", React.createElement(_components.h4, null, React.createElement(_components.code, null, \"<-- request2 textDocument/documentHighlight\")), \"\\n\", React.createElement(_components.h4, null, React.createElement(_components.code, null, \"--> response2\")), \"\\n\", React.createElement(_components.h2, null, \"log viewer\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"https://github.com/Microsoft/language-server-protocol-inspector\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://microsoft.github.io/language-server-protocol/inspector/\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://qiita.com/Rockdoor/items/f5dca558bbc843d8f334\"\n  }, \"VSCode 用 SystemVerilogの拡張を作る（#7）\")), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"VSCodeでlsp を実行させて通信ログを出力\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"通信ログを見やすく表示\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"しかし、どうやってログを作るかよくわからん。\\n\", React.createElement(_components.code, null, \"vim-lsp\"), \" のログを改造して作ってみる。\"), \"\\n\", React.createElement(_components.h2, null, \"各言語のサーバー\"), \"\\n\", React.createElement(_components.p, null, \"試してみたやつ。\"), \"\\n\", React.createElement(_components.h3, null, \"python\"), \"\\n\", React.createElement(_components.h4, null, \"pyls\"), \"\\n\", React.createElement(_components.p, null, \"Linux, Windows 共に動いた。\"), \"\\n\", React.createElement(_components.h3, null, \"dlang\"), \"\\n\", React.createElement(_components.h4, null, \"serve-d\"), \"\\n\", React.createElement(_components.p, null, \"うまくいかなかったので、調べている・・・\"), \"\\n\", React.createElement(_components.h4, null, \"dls\"), \"\\n\", React.createElement(_components.p, null, \"うまくいかなかったので、調べている・・・\"), \"\\n\", React.createElement(_components.h3, null, \"c++\"), \"\\n\", React.createElement(_components.p, null, \"Linuxで動いた。\"), \"\\n\", React.createElement(_components.h4, null, \"cquery\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","h3","ul","li","h4","pre","code","a","_provideComponents","components","React","className","href","wrapper","MDXLayout","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}