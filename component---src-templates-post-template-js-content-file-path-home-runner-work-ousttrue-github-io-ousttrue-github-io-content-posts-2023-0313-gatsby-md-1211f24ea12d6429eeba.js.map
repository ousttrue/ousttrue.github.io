{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2023-0313-gatsby-md-1211f24ea12d6429eeba.js","mappings":"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","sources":["webpack:///./content/posts/2023/0313-gatsby.md","webpack:///./src/templates/post-template.js","webpack:///./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    ul: \"ul\",\n    li: \"li\",\n    code: \"code\",\n    p: \"p\",\n    h2: \"h2\",\n    pre: \"pre\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"„Å™„Çì„Å®„Å™„Åè gatsby „ÇÑ„Å£„Å¶„Åø„Çã\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"mdx\"), \" „ÅØ„Åä„ÇÇ„Åó„Çç„Åù„ÅÜ„ÄÇ„Ç´„Çπ„Çø„Éû„Ç§„Ç∫„ÅØ„ÅÆË®òÊ≥ï„ÅØ \", React.createElement(_components.code, null, \"hugo\"), \" „ÇÑ \", React.createElement(_components.code, null, \"jinja\"), \" „Çà„Çä„ÇÇÁ¥†Áõ¥„ÅßÁ∞°Âçò„Åù„ÅÜ„Å´Ë¶ã„Åà„Åü\"), \"\\n\", React.createElement(_components.li, null, \"GraphQL „ÇÇ„Çè„Çä„Å®Á¥†Áõ¥„ÅßÁ∞°Âçò„Åù„ÅÜ„Å´Ë¶ã„Åà„Çã\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"„Åå„ÄÅÊó¢Â≠ò„ÅÆ markdown „Åå„Çè„Çä„Å®„Ç®„É©„Éº„Å´„Å™„Çã„ÄÇ\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"frontmatter „Åå yaml ÂøÖË¶Å„ÄÇtoml È£ü„Åà„Å™„ÅÑ„ÄÇ\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.code, null, \"<url> Ë®òÊ≥ï\"), \" „Å®„Åã„ÄÇ„Ç®„É©„Éº„Åå„ÅÇ„Çã„Å®ÂÖ®ÈÉ®Â§±Êïó„Å´„Å™„Çã„ÄÇ\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"„Å®„ÅÑ„ÅÜ„Åì„Å®„Åß„ÄÅ python „ÅÆ„Çπ„ÇØ„É™„Éó„Éà„ÅßÊó¢Â≠ò„ÅÆ markdown „ÇíÊîπÂ§â„Åó„Å¶ÊßòÂºè„ÇíÂêà„Çè„Åõ„Çã„Åì„Å®„Å´„Åó„Åü„ÄÇ\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"frontmatter „ÅÆ yaml Â§âÊèõ\"), \"\\n\", React.createElement(_components.li, null, \"Ê≠£Ë¶èË°®Áèæ„Åß \", React.createElement(_components.code, null, \"<url> Ë®òÊ≥ï\"), \" Èô§Âéª\"), \"\\n\", React.createElement(_components.li, null, \"frontmatter.title „ÅåÁÑ°„ÅÑÂ†¥Âêà„Å´ÂÖàÈ†≠„ÅÆË¶ãÂá∫„Åó„Çí title „Å´‰ªò„ÅëÊõø„Åà„Çã(sphinx „ÅÆ myst Âêë„Åë„ÅÆË®ò‰∫ãÔºü)\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"MDXRenderer ÁÑ°„Åè„Å™„Å£„Å¶„ÅÑ„Çã„ÅΩ„ÅÑ\"), \"\\n\", React.createElement(_components.p, null, \"breaking change w\"), \"\\n\", React.createElement(_components.p, null, \"gatsby-plugin-mdx „Åå 3 „Åã„Çâ 4 „Å´„Å™„Çã„Å®„Åç„Å´Â§âÊõ¥„Åå„ÅÇ„Å£„Å¶„ÄÅ\\nMDXRenderer „ÅåÁÑ°„Åè„Å™„Å£„Å¶\\nMDXprovider „Çí‰Ωø„ÅÜÊñπÂºè„Å´Â§â„Çè„Å£„Åü„ÅΩ„ÅÑÔºü\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://www.gatsbyjs.com/plugins/gatsby-plugin-mdx\"), \"\\n\", React.createElement(_components.li, null, \"https://www.gatsbyjs.com/docs/how-to/routing/mdx/\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Ë¶ã„Çà„ÅÜË¶ã„Åæ„Å≠„Åß„Çª„ÉÉ„Éà„Ç¢„ÉÉ„Éó„Åó„Å¶„Å™„Çì„Å®„Å™„ÅèÂãï„ÅÑ„Åü„ÅÆ„Å†„Åå„ÄÅ\\n„Å°„Çá„Å£„Å®Â§â„Åà„Åü„ÇâÂãï„Åã„Å™„Åè„Å™„Å£„Å¶„ÄÅ\\nË™ø„Åπ„Å¶„ÅÑ„Åè„Å®„Å©„ÅÜ„ÇÇÊúÄËøë„ÅÆ„Éê„Éº„Ç∏„Éß„É≥„Åß \", React.createElement(_components.code, null, \"MDXRenderer\"), \" „ÅåÁÑ°„Åè„Å™„Å£„Åü„ÅΩ„ÅÑ„ÄÇ\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://stackoverflow.com/questions/74309351/how-to-render-mdx-with-gatsby-plugin-mdx-from-allmdx-query\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, null, \"Element type is invalid: expected a string\\n\")), \"\\n\", React.createElement(_components.p, null, \"„Å®„ÅÑ„ÅÜ„Ç®„É©„Éº„É°„ÉÉ„Çª„Éº„Ç∏„ÅåÂá∫„Å¶ÂÖ®ÁÑ∂ÊÑèÂë≥„Åå„Çè„Åã„Çâ„Å™„Åã„Å£„Åü„ÅÆ„Å†„Åå„ÄÅ\\n\", React.createElement(_components.code, null, \"MDXRenderer\"), \" „ÅåÁÑ°„Åè„Å™„Å£„Å¶„ÅÑ„Å¶„ÄÅimport Â§±Êïó„ÅÆÁµêÊûúÂá∫„Åü„Ç®„É©„Éº„Å†„Å£„Åü„ÅΩ„ÅÑ„ÄÇ\\n„Çè„Åã„Çâ„Å≠„Éº„ÄÇ\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-jsx\"\n  }, \"import { MDXRenderer } from \\\"gatsby-plugin-mdx\\\";\\n\")), \"\\n\", React.createElement(_components.p, null, \"„ÅÑ„Åæ„Éê„Éº„Ç∏„Éß„É≥„ÅØ„Å©„ÅÜ„ÇÇ Rendering Ê∏à„Åø„ÅÆ \", React.createElement(_components.code, null, \"children\"), \" „ÇíÂºïÊï∞„ÅßÂèó„Åë„Çã‰ΩúÊ≥ï„Å´„Å™„Å£„Å¶„ÅÑ„Çã„ÅΩ„ÅÑ„ÄÇ\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-jsx\"\n  }, \"// post template\\nfunction PostTemplate({ data: { mdx }, children }) {}\\n\")), \"\\n\", React.createElement(_components.p, null, \"chidren „ÇíÂèó„Åë„Çã„Å´„ÅØ \", React.createElement(_components.code, null, \"createPages\"), \" „Çí‰ª•‰∏ã„ÅÆ„Çà„ÅÜ„Å´„Åô„Çã„ÄÇ\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-jsx\"\n  }, \"// gatsby-node.js\\ndata.allMdx.nodes.forEach((node) => {\\n  actions.createPage({\\n    path: node.frontmatter.slug,\\n    // üëá „Åì„ÅÆË®òËø∞„Å´„Çà„Çä template „Å´ children „Çí‰æõÁµ¶„Åß„Åç„Çã„ÅΩ„ÅÑ\\n    component: `${postTemplate}?__contentFilePath=${node.internal.contentFilePath}`,\\n    context: {\\n      id: node.id,\\n    },\\n  });\\n});\\n\")), \"\\n\", React.createElement(_components.p, null, \"Ë¶Å„Åô„Çã„Å´„Éâ„Ç≠„É•„É°„É≥„Éà„Å´Êõ∏„ÅÑ„Å¶„ÅÇ„Çã„Å®„Åä„Çä„Å´„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„Çã„ÅÆ„Å†„Åå„ÄÅ\\nÂÜÖÂÆπ„ÇíÁêÜËß£„Åó„Å¶„ÅÑ„Å™„ÅÑ„ÅÆ„Å®„ÄÅÂè§„ÅÑÊÉÖÂ†±„Å®„ÅÆÊ∑∑Âú®„ÅßÈõ£Ëà™„Åó„Åü„ÅÆ„Åß„ÅÇ„Å£„Åü„ÄÇ\"), \"\\n\", React.createElement(_components.h2, null, \"„Åã„Åè„Åó„Å¶„ÄÅÁôΩ„ÅÑ„Çµ„Ç§„Éà„Å´Êàª„Å£„Åü„ÄÇ\"), \"\\n\", React.createElement(_components.p, null, \"„ÅØ„Åæ„Å£„Åü„Åä„Åã„Åí„Åß gatsby „ÅÆ„Éá„Éº„Çø„ÅÆÊµÅ„Çå„Åå„Çè„Åã„Å£„Å¶„Åç„Åü„ÄÇ\\nÈÅ©ÂΩì„Å´ÁµÑ„ÅøÁ´ã„Å¶„Å¶Ë°å„Åì„ÅÜ„ÄÇ\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2023/0313-gatsby.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nfunction PostTempalte({data, children}) {\n  return React.createElement(React.Fragment, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, null, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it‚Äôs no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it‚Äôs no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","ul","li","code","p","h2","pre","_provideComponents","components","React","className","wrapper","MDXLayout","PostTempalte","_ref","data","children","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}