{"version":3,"file":"component---src-templates-post-template-js-content-file-path-content-posts-2017-python-logger-md-04e1ef54027d0e0bfe3e.js","mappings":"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","sources":["webpack:///./content/posts/2017/python_logger.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    span: \"span\",\n    code: \"code\",\n    h1: \"h1\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Pythonのロガーの設定をどうすればいいのか。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://qiita.com/amedama/items/b856b2f30c2f38665701\"\n  }, \"ログ出力のための print と import logging はやめてほしい\")), \"\\n\", React.createElement(_components.p, null, \"を元に模索してみた。\\n今使っている設定\\nすべてのファイルの先頭にはこれだけ書いておく。\\nいわばログ入力の設定。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"py\\\"><pre class=\\\"language-py\\\"><code class=\\\"language-py\\\"><span class=\\\"token keyword\\\">from</span> logging <span class=\\\"token keyword\\\">import</span> getLogger\\nlogger <span class=\\\"token operator\\\">=</span> getLogger<span class=\\\"token punctuation\\\">(</span>__name__<span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"これとは別に、ログ出力の設定を一か所だけ記述する。\\nメインの始まるところがいいんでないか。\\n他のライブラリをimportするより前に書きたいということもあるだろうからその辺はお好みで。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"py\\\"><pre class=\\\"language-py\\\"><code class=\\\"language-py\\\"><span class=\\\"token keyword\\\">if</span> __name__<span class=\\\"token operator\\\">==</span><span class=\\\"token string\\\">'__main__'</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token comment\\\"># defaultのlogレベルではdebug出ないよ</span>\\n    logger<span class=\\\"token punctuation\\\">.</span>debug<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'before'</span><span class=\\\"token punctuation\\\">)</span>\\n\\n    <span class=\\\"token keyword\\\">from</span> logging <span class=\\\"token keyword\\\">import</span> basicConfig<span class=\\\"token punctuation\\\">,</span> DEBUG\\n    basicConfig<span class=\\\"token punctuation\\\">(</span>\\n        level<span class=\\\"token operator\\\">=</span>DEBUG<span class=\\\"token punctuation\\\">,</span>\\n        datefmt<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">'%H:%M:%S'</span><span class=\\\"token punctuation\\\">,</span>\\n        <span class=\\\"token builtin\\\">format</span><span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">'%(asctime)s[%(levelname)s][%(name)s.%(funcName)s] %(message)s'</span>\\n    <span class=\\\"token punctuation\\\">)</span>\\n\\n    <span class=\\\"token comment\\\"># 以降出る</span>\\n    logger<span class=\\\"token punctuation\\\">.</span>debug<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'after'</span><span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"以上で、デフォルトのログ設定を使ってログが画面に出力される。\\nデフォルトのログ設定とは\\n上記のプログラムでは以下のようにログが流れる。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">logger.debug('message')\\n  |\\n  v            propagate(親にメッセージが伝搬する)\\nlogger(__name__) -> logger('')\\n  handlers[           handlers[\\n  ]                     Streamhandler -> コンソール画面\\n                      ]</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"pythonのロガーは木構造\\n\", React.createElement(_components.code, null, \"getLogger(__name__)\"), \" で得たロガーは \", React.createElement(_components.code, null, \"__name__\"), \" という名前になり、\", React.createElement(_components.code, null, \"''\"), \" という名のロガーが親になる。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"py\\\"><pre class=\\\"language-py\\\"><code class=\\\"language-py\\\"><span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span>getLogger<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token operator\\\">&lt;</span>RootLogger root <span class=\\\"token punctuation\\\">(</span>WARNING<span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">></span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"というように \", React.createElement(_components.code, null, \"''\"), \" ロガーはルートロガーである。\\nどういう基準で親子が決まるかというと名前ベースで \", React.createElement(_components.code, null, \"''\"), \" がすべての親、その子 \", React.createElement(_components.code, null, \"'hoge'\"), \" 、さらにその子 \", React.createElement(_components.code, null, \"'hoge.fuga'\"), \" というように \", React.createElement(_components.code, null, \".\"), \" をセパレータとしたパス名で決めているぽい。 \", React.createElement(_components.code, null, \"getLogger(__name__)\"), \" という風にロガーを得れば、とりあえず \", React.createElement(_components.code, null, \"getLogger('')\"), \" の子孫になる。\"), \"\\n\", React.createElement(_components.p, null, \"https://docs.python.org/2/library/logging.html#logger-objects\"), \"\\n\", React.createElement(_components.p, null, \"さらにログは木構造を親に向かって遡りながら、通り道にあったhandlerに出力される。\\nなのですべての親になるルートロガーにひとつだけhandlerをセットしておけばよい。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"py\\\"><pre class=\\\"language-py\\\"><code class=\\\"language-py\\\"><span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span>logger<span class=\\\"token punctuation\\\">.</span>handlers<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">[</span><span class=\\\"token punctuation\\\">]</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h1, null, \"ルートロガーにはデフォルトでStreamHandlerがセットされている\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"py\\\"><pre class=\\\"language-py\\\"><code class=\\\"language-py\\\"><span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span>getLogger<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>handlers<span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">[</span><span class=\\\"token operator\\\">&lt;</span>StreamHandler <span class=\\\"token operator\\\">&lt;</span>stderr<span class=\\\"token operator\\\">></span> <span class=\\\"token punctuation\\\">(</span>NOTSET<span class=\\\"token punctuation\\\">)</span><span class=\\\"token operator\\\">></span><span class=\\\"token punctuation\\\">]</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"親に向かって流すかどうかを設定するには以下のようにする。\"), \"\\n\", React.createElement(_components.h1, null, \"親に流さない\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"py\\\"><pre class=\\\"language-py\\\"><code class=\\\"language-py\\\">logger<span class=\\\"token punctuation\\\">.</span>propagate<span class=\\\"token operator\\\">=</span><span class=\\\"token boolean\\\">False</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"前知識としてこれくらいあればカスタマイズできる。\\n出力のカスタマイズ\\n基本的に、ルートロガーに好みのフォーマットやハンドラを設定することになると思う。\\nデフォルトのStreamHandlerを削除する\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"py\\\"><pre class=\\\"language-py\\\"><code class=\\\"language-py\\\">getLogger<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>handlers<span class=\\\"token punctuation\\\">.</span>clear<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"Formatを変えよう\"), \"\\n\", React.createElement(_components.p, null, \"サーバー風の時刻付きのフォーマットとか。\"), \"\\n\", React.createElement(_components.h2, null, \"デフォルトのハンドラを得る\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"py\\\"><pre class=\\\"language-py\\\"><code class=\\\"language-py\\\">handler<span class=\\\"token operator\\\">=</span>getLogger<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>handlers<span class=\\\"token punctuation\\\">[</span><span class=\\\"token number\\\">0</span><span class=\\\"token punctuation\\\">]</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"もしくは自前で作る\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"py\\\"><pre class=\\\"language-py\\\"><code class=\\\"language-py\\\"><span class=\\\"token keyword\\\">from</span> logging <span class=\\\"token keyword\\\">import</span> StreamHandler\\nhandler<span class=\\\"token operator\\\">=</span>StreamHandler<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\ngetLogger<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>addHandler<span class=\\\"token punctuation\\\">(</span>handler<span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token keyword\\\">from</span> logging <span class=\\\"token keyword\\\">import</span> Formatter\\nformatter<span class=\\\"token operator\\\">=</span>Formatter<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'%(name)s => %(asctime)s [%(levelname)s] %(message)s'</span><span class=\\\"token punctuation\\\">)</span>\\nhandler<span class=\\\"token punctuation\\\">.</span>setFormatter<span class=\\\"token punctuation\\\">(</span>formatter<span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"使える変数は、LogRecord attributesらしい。\"), \"\\n\", React.createElement(_components.p, null, \"https://docs.python.org/2/library/logging.html#logrecord-attributes\"), \"\\n\", React.createElement(_components.p, null, \"日付のカスタマイズは？\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"py\\\"><pre class=\\\"language-py\\\"><code class=\\\"language-py\\\">basicConfig<span class=\\\"token punctuation\\\">(</span>\\n       datefmt<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">'%H:%M:%S'</span><span class=\\\"token punctuation\\\">,</span>\\n       <span class=\\\"token builtin\\\">format</span><span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">'%(asctime)s[%(levelname)s] %(name)s.%(funcName)s => %(message)s'</span><span class=\\\"token punctuation\\\">)</span>\\n       <span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"色付きにしよう\"), \"\\n\", React.createElement(_components.p, null, \"おされなコンソール\"), \"\\n\", React.createElement(_components.p, null, \"Pythonで色つきログを - rainbow_logging_handler をPyPIにリリースしました\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"py\\\"><pre class=\\\"language-py\\\"><code class=\\\"language-py\\\"><span class=\\\"token keyword\\\">from</span> rainbow_logging_handler <span class=\\\"token keyword\\\">import</span> RainbowLoggingHandler\\nhandler <span class=\\\"token operator\\\">=</span> RainbowLoggingHandler<span class=\\\"token punctuation\\\">(</span>sys<span class=\\\"token punctuation\\\">.</span>stderr<span class=\\\"token punctuation\\\">)</span>\\ngetLogger<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>addHandler<span class=\\\"token punctuation\\\">(</span>handler<span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"QtのWidgetに出力する\\nStackOverflowとかで見つけた気がするがとりあえず。\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/buha/gpibcs/blob/master/qplaintexteditlogger.py\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"py\\\"><pre class=\\\"language-py\\\"><code class=\\\"language-py\\\"><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">QPlainTextEditLogger</span><span class=\\\"token punctuation\\\">(</span>logging<span class=\\\"token punctuation\\\">.</span>Handler<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n    <span class=\\\"token triple-quoted-string string\\\">'''\\n    Logger\\n    '''</span>\\n    <span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">__init__</span><span class=\\\"token punctuation\\\">(</span>self<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n        <span class=\\\"token builtin\\\">super</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>__init__<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\n        self<span class=\\\"token punctuation\\\">.</span>widget<span class=\\\"token operator\\\">=</span><span class=\\\"token boolean\\\">None</span>\\n\\n    <span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">set_widget</span><span class=\\\"token punctuation\\\">(</span>self<span class=\\\"token punctuation\\\">,</span> widget<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n        self<span class=\\\"token punctuation\\\">.</span>widget <span class=\\\"token operator\\\">=</span> widget\\n        self<span class=\\\"token punctuation\\\">.</span>widget<span class=\\\"token punctuation\\\">.</span>setReadOnly<span class=\\\"token punctuation\\\">(</span><span class=\\\"token boolean\\\">True</span><span class=\\\"token punctuation\\\">)</span>\\n\\n    <span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">emit</span><span class=\\\"token punctuation\\\">(</span>self<span class=\\\"token punctuation\\\">,</span> record<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n\\n        msg <span class=\\\"token operator\\\">=</span> self<span class=\\\"token punctuation\\\">.</span><span class=\\\"token builtin\\\">format</span><span class=\\\"token punctuation\\\">(</span>record<span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token keyword\\\">not</span> self<span class=\\\"token punctuation\\\">.</span>widget<span class=\\\"token punctuation\\\">:</span>\\n            <span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span>msg<span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token keyword\\\">return</span>\\n\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token keyword\\\">not</span> msg<span class=\\\"token punctuation\\\">.</span>endswith<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"\\\\n\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n            msg<span class=\\\"token operator\\\">+=</span><span class=\\\"token string\\\">\\\"\\\\n\\\"</span>\\n        self<span class=\\\"token punctuation\\\">.</span>widget<span class=\\\"token punctuation\\\">.</span>textCursor<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>movePosition<span class=\\\"token punctuation\\\">(</span>QtGui<span class=\\\"token punctuation\\\">.</span>QTextCursor<span class=\\\"token punctuation\\\">.</span>Start<span class=\\\"token punctuation\\\">)</span>\\n        self<span class=\\\"token punctuation\\\">.</span>widget<span class=\\\"token punctuation\\\">.</span>textCursor<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>insertText<span class=\\\"token punctuation\\\">(</span>msg<span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token comment\\\">#self.widget.insertPlainText(msg)</span>\\n\\n    <span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">write</span><span class=\\\"token punctuation\\\">(</span>self<span class=\\\"token punctuation\\\">,</span> m<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n        <span class=\\\"token keyword\\\">pass</span>\\n\\nhandler<span class=\\\"token operator\\\">=</span>QPlainTextEditLogger<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span>\\ngetLogger<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">''</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>addHandler<span class=\\\"token punctuation\\\">(</span>handler<span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"ログレベル別に色を付けてみる\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"py\\\"><pre class=\\\"language-py\\\"><code class=\\\"language-py\\\">    <span class=\\\"token keyword\\\">def</span> <span class=\\\"token function\\\">emit</span><span class=\\\"token punctuation\\\">(</span>self<span class=\\\"token punctuation\\\">,</span> record<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">:</span>\\n        msg <span class=\\\"token operator\\\">=</span> self<span class=\\\"token punctuation\\\">.</span><span class=\\\"token builtin\\\">format</span><span class=\\\"token punctuation\\\">(</span>record<span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token keyword\\\">not</span> self<span class=\\\"token punctuation\\\">.</span>widget<span class=\\\"token punctuation\\\">:</span>\\n            <span class=\\\"token keyword\\\">print</span><span class=\\\"token punctuation\\\">(</span>msg<span class=\\\"token punctuation\\\">)</span>\\n            <span class=\\\"token keyword\\\">return</span>\\n\\n        <span class=\\\"token keyword\\\">if</span> record<span class=\\\"token punctuation\\\">.</span>levelno <span class=\\\"token operator\\\">==</span> DEBUG<span class=\\\"token punctuation\\\">:</span>\\n            msg <span class=\\\"token operator\\\">=</span> <span class=\\\"token string-interpolation\\\"><span class=\\\"token string\\\">f'&lt;font color=\\\"gray\\\"></span><span class=\\\"token interpolation\\\"><span class=\\\"token punctuation\\\">{</span>msg<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token string\\\">&lt;/font>&lt;br>'</span></span>\\n        <span class=\\\"token keyword\\\">elif</span> record<span class=\\\"token punctuation\\\">.</span>levelno <span class=\\\"token operator\\\">==</span> WARNING<span class=\\\"token punctuation\\\">:</span>\\n            msg <span class=\\\"token operator\\\">=</span> <span class=\\\"token string-interpolation\\\"><span class=\\\"token string\\\">f'&lt;font color=\\\"orange\\\"></span><span class=\\\"token interpolation\\\"><span class=\\\"token punctuation\\\">{</span>msg<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token string\\\">&lt;/font>&lt;br>'</span></span>\\n        <span class=\\\"token keyword\\\">elif</span> record<span class=\\\"token punctuation\\\">.</span>levelno <span class=\\\"token operator\\\">==</span> ERROR<span class=\\\"token punctuation\\\">:</span>\\n            msg <span class=\\\"token operator\\\">=</span> <span class=\\\"token string-interpolation\\\"><span class=\\\"token string\\\">f'&lt;font color=\\\"red\\\"></span><span class=\\\"token interpolation\\\"><span class=\\\"token punctuation\\\">{</span>msg<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token string\\\">&lt;/font>&lt;br>'</span></span>\\n        <span class=\\\"token keyword\\\">else</span><span class=\\\"token punctuation\\\">:</span>\\n            msg <span class=\\\"token operator\\\">=</span> <span class=\\\"token string-interpolation\\\"><span class=\\\"token string\\\">f'</span><span class=\\\"token interpolation\\\"><span class=\\\"token punctuation\\\">{</span>msg<span class=\\\"token punctuation\\\">}</span></span><span class=\\\"token string\\\">&lt;br>'</span></span>\\n\\n        self<span class=\\\"token punctuation\\\">.</span>widget<span class=\\\"token punctuation\\\">.</span>textCursor<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>movePosition<span class=\\\"token punctuation\\\">(</span>QtGui<span class=\\\"token punctuation\\\">.</span>QTextCursor<span class=\\\"token punctuation\\\">.</span>Start<span class=\\\"token punctuation\\\">)</span>\\n        self<span class=\\\"token punctuation\\\">.</span>widget<span class=\\\"token punctuation\\\">.</span>textCursor<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>insertHtml<span class=\\\"token punctuation\\\">(</span>msg<span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2017/python_logger.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport {Link} from \"gatsby\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  const frontmatter = data.mdx.frontmatter;\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, frontmatter.title), React.createElement(\"div\", {\n    className: \"tags-index\"\n  }, frontmatter.tags && frontmatter.tags.length > 0 && frontmatter.tags.map(tag => {\n    return React.createElement(Link, {\n      to: `/tags/${tag}/`,\n      itemProp: \"url\"\n    }, React.createElement(\"button\", null, tag));\n  })), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        tags\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","span","code","h1","h2","_provideComponents","components","React","href","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","frontmatter","mdx","Layout","title","tags","length","map","tag","Link","to","itemProp","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}