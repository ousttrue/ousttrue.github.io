{"version":3,"file":"component---src-templates-post-template-js-content-file-path-home-runner-work-ousttrue-github-io-ousttrue-github-io-content-posts-2021-lua-imgui-plan-md-37e3bf3f9c55487573db.js","mappings":"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","sources":["webpack:///./content/posts/2021/lua_imgui_plan.md","webpack:///./src/templates/post-template.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    span: \"span\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    h3: \"h3\",\n    h4: \"h4\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"rust で D3D11 レンダラを進めてきたが・・・\"), \"\\n\", React.createElement(_components.p, null, \"当初 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">rust</code>\"\n    }\n  }), \" で \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">d3d11</code>\"\n    }\n  }), \" のレンダラーを作ろうとして作業を進めていた。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">imgui</code>\"\n    }\n  }), \" を組み込んで、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">glTF</code>\"\n    }\n  }), \" をロードして \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">unlit</code>\"\n    }\n  }), \" で描画するところまで作ったが、\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">GUI</code>\"\n    }\n  }), \" の作りこみが大変そうな感じだった。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">rust</code>\"\n    }\n  }), \" は関数オーバーロードが無いので　\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">imgui</code>\"\n    }\n  }), \" のラッパーの使い勝手が \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">c++</code>\"\n    }\n  }), \" より落ちるなど。\\nポインターを渡せるのは素敵なのだが。\"), \"\\n\", React.createElement(_components.h2, null, \"nvim-0.5 はおもしろい\"), \"\\n\", React.createElement(_components.p, null, \"ここで寄り道して、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">nvim</code>\"\n    }\n  }), \" をいじり始めた。\\nちょうどバージョン \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">0.5</code>\"\n    }\n  }), \" がリリースされるタイミングで、\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">0.5</code>\"\n    }\n  }), \" になると lua サポートが強化されて、設定が lua で書けるとのこと。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://zenn.dev/hituzi_no_sippo/articles/871c06cdbc45b53181e3\"\n  }, \"NeovimとLua\")), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"ということで Windows 向けのソースからのビルドシステムを作って \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">nvim</code>\"\n    }\n  }), \" 環境を整備してみた。\\nlua で記述された plugin をなるべく採用。\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/ousttrue/my_nvim\"), \"\\n\", React.createElement(_components.p, null, \"最近常用していた、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">vscode</code>\"\n    }\n  }), \" の便利さにどこまで追いつけるか。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Language Server Protocol。nvim-0.5 から nvim-lsp (luaで書いてある) がある。組み込み\"), \"\\n\", React.createElement(_components.li, null, \"Debug Adapter Protocol。nvim-0.5 から nvim-dap (lulで書いてある) がある。https://github.com/mfussenegger/nvim-dap\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"vscode から \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">lsp</code>\"\n    }\n  }), \" と \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">dap</code>\"\n    }\n  }), \" という重要な資産を持ってこれるので慣れればいけそうである。\\n調べたところ下記のようだった。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"codelldb(native debugger c++ や rust) は nvim-dap を改造すれば使えた https://github.com/ousttrue/nvim-dap\"), \"\\n\", React.createElement(_components.li, null, \"rust-analyzer 動いた\"), \"\\n\", React.createElement(_components.li, null, \"python: lsp, dap ともに動きそう\"), \"\\n\", React.createElement(_components.li, null, \"lua: lsp, dap ともに動きそう\"), \"\\n\", React.createElement(_components.li, null, \"csharp: lsp, dap ともに動きそう(Unityはうまくいかず)\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"nvim-lsp も nvim-dap も lua で簡単に記述されているので、コードを読めば、たぶんわかる。\\nあとは、タスクランナーを整備すれば開発環境に使えそう。\"), \"\\n\", React.createElement(_components.h2, null, \"luarocks の Windows 運用\"), \"\\n\", React.createElement(_components.p, null, \"lua で記述された nvim のパッケージマネージャー https://github.com/wbthomason/packer.nvim を採用したのだが、\\nWindows で luarocks 機能が動かなかった。https://luarocks.org/ は \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">lua</code>\"\n    }\n  }), \" のパッケージマネージャー。\\nちょっと、古め(vc2017より前)の vc でないとだめぽい。\\n改造した。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/ousttrue/packer.nvim\"), \"\\n\", React.createElement(_components.li, null, \"https://github.com/ousttrue/hererocks\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"hererocks は、luarocks のインストーラー。\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">LUA_PATH</code>\"\n    }\n  }), \" \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">package.path</code>\"\n    }\n  }), \" を理解した。\"), \"\\n\", React.createElement(_components.h2, null, \"スタンドアロンの lua インタプリタによるプロジェクト\"), \"\\n\", React.createElement(_components.p, null, \"luarocks が無事に Windows で運用できるようになったので、プロジェクトローカルに必要なライブラリをインストールして、\\nスタンドアロンの lua インタープリターを起点にしたアプリ開発ができないか探ってみた。\\nlua インタプリタがアプリ組み込みだと dap の運用がしづらい(port 開けて attach とかになる)のでスタンドアロンの lua インタープリターを推す。\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\"># フォルダ構成\\nproject_root\\n  + lua(.gitignore) # hererocks でローカルビルドする\\n  + main.lua</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"これで、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">lsp</code>\"\n    }\n  }), \" と \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">dap</code>\"\n    }\n  }), \" が利用できれば快適になるのではないか。\"), \"\\n\", React.createElement(_components.h3, null, \"lua の LanguageServer\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://marketplace.visualstudio.com/items?itemName=sumneko.lua\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/sumneko/lua-language-server\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"がしっかり動き、\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">EmmyLua</code>\"\n    }\n  }), \" の型ヒントを活用できることが分かった。\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/neovim/nvim-lspconfig/blob/a21a509417aa530fb7b54020f590fa5ccc67de77/CONFIG.md#sumneko_lua に例があって、\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"lua\\\"><pre class=\\\"language-lua\\\"><code class=\\\"language-lua\\\">require<span class=\\\"token string\\\">'lspconfig'</span><span class=\\\"token punctuation\\\">.</span>sumneko_lua<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setup</span> <span class=\\\"token punctuation\\\">{</span>\\n  settings <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    Lua <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n      workspace <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token comment\\\">-- Make the server aware of Neovim runtime files</span>\\n        library <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n          <span class=\\\"token punctuation\\\">[</span>vim<span class=\\\"token punctuation\\\">.</span>fn<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">expand</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'$VIMRUNTIME/lua'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">true</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">-- lua標準の型定義がある</span>\\n          <span class=\\\"token punctuation\\\">[</span>vim<span class=\\\"token punctuation\\\">.</span>fn<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">expand</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'$VIMRUNTIME/lua/vim/lsp'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">true</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token comment\\\">-- Vimの型定義がある</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"インテリセンスが効くし、組み込み関数の型ヒントも追加できる。\"), \"\\n\", React.createElement(_components.h3, null, \"lua の DebugAdapter\"), \"\\n\", React.createElement(_components.p, null, \"DebugAdapter も問題なく動いた。\\nluajit の場合は対応しているものを使うべし。\"), \"\\n\", React.createElement(_components.h4, null, \"Lua Debug\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://marketplace.visualstudio.com/items?itemName=actboy168.lua-debug\", \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/actboy168/lua-debug\"), \"\\n\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/actboy168/bee.lua の\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Add error hook (for debugger)\"), \"\\n\", React.createElement(_components.li, null, \"Add resume/yield hook (for debugger)\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"謎の機能で実装されているぽい。\"), \"\\n\", React.createElement(_components.h4, null, \"Local Lua Debugger\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"https://marketplace.visualstudio.com/items?itemName=tomblind.local-lua-debugger-vscode\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/tomblind/local-lua-debugger-vscode\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"luajit でも動く\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(_components.p, null, \"TypeScriptToLua で書かれている\"), \"\\n\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"lua で 3D\"), \"\\n\", React.createElement(_components.p, null, \"ちょっと試したところ、 luajit の \", React.createElement(_components.a, {\n    href: \"https://luajit.org/ext_ffi.html\"\n  }, \"FFI\"), \" を使うのが有望そうという感触を得た。\\nd3d は lua でやっている人があまりいなかった。\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"https://github.com/sonoro1234/LuaJIT-GLFW\"), \"\\n\", React.createElement(_components.li, null, \"https://github.com/sonoro1234/LuaJIT-ImGui\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"最新の luajit-2.1.0-beta3(lua-5.1仕様) でいく。\"), \"\\n\", React.createElement(_components.h2, null, \"imgui の ffi\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">cimgui</code>\"\n    }\n  }), \" ではなく 素の \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">imgui</code>\"\n    }\n  }), \" の luajit ffi できるか実験した。\"), \"\\n\", React.createElement(_components.p, null, \"https://stackoverflow.com/questions/6691651/is-it-possible-to-use-functions-from-c-namespaces-with-luajit-ffi\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"lua\\\"><pre class=\\\"language-lua\\\"><code class=\\\"language-lua\\\">ffi<span class=\\\"token punctuation\\\">.</span>cdef<span class=\\\"token string\\\">[[\\nvoid Test1_Method1(void) asm(\\\"_ZN5Test17Method1Ev\\\");\\n]]</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"のように mangling に対応すればできそう。\"), \"\\n\", React.createElement(_components.h2, null, \"libclang による コード生成\"), \"\\n\", React.createElement(_components.p, null, \"ということで、 \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">luajit</code>\"\n    }\n  }), \" + \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">FFI</code>\"\n    }\n  }), \" を中心に \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">imgui</code>\"\n    }\n  }), \" ラッパーを作ってレンダラーというか 3D ツールのインフラとなる、\\n簡単なレンダラーと \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Gizmo</code>\"\n    }\n  }), \" に対応したツールキットを作るという方向になってきた。\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">imgui</code>\"\n    }\n  }), \" の \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">luajit</code>\"\n    }\n  }), \" \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">FFI</code>\"\n    }\n  }), \" の使い勝手が重要。\"), \"\\n\", React.createElement(_components.p, null, \"https://github.com/ousttrue/limgui\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"[ ] libclang で \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">imgui.h</code>\"\n    }\n  }), \" をパースして、luajit FFI 生成と \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">lsp</code>\"\n    }\n  }), \" への EmmyLua アノテーション生成を同時にやるツール。\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/ousttrue.github.io/ousttrue.github.io/content/posts/2021/lua_imgui_plan.md\";\nimport React from \"react\";\nimport {graphql} from \"gatsby\";\nimport Layout from \"../components/layout.js\";\nimport {MDXProvider} from \"@mdx-js/react\";\nimport PrismSyntaxHighlight from \"../components/prism-syntax-highlight\";\nconst components = {\n  code: ({children, className}) => {\n    return className ? React.createElement(PrismSyntaxHighlight, {\n      className: className\n    }, children) : React.createElement(\"code\", null, children);\n  }\n};\nfunction PostTempalte({data, children}) {\n  return React.createElement(Layout, null, React.createElement(\"h1\", null, data.mdx.frontmatter.title), React.createElement(MDXProvider, {\n    components: components\n  }, children));\n}\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PostTempalte, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const query = graphql`\n  query ($id: String!) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","span","ul","li","a","h3","h4","_provideComponents","components","React","dangerouslySetInnerHTML","__html","href","wrapper","MDXLayout","code","_ref","children","className","PrismSyntaxHighlight","PostTempalte","_ref2","data","Layout","mdx","frontmatter","title","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}